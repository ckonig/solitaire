{"version":3,"sources":["View/Context.ts","View/Game/Dealer.js","View/UI/EndScreen.js","View/Game/BlinkingComponent.js","View/Game/Card.js","View/Game/MouseHand.js","View/Game/TouchHand.js","View/Game/Hand.js","View/Game/StackBase.js","View/Game/Foundation.js","View/UI/Header/Clock.js","View/UI/Header/EndGame.js","View/UI/Header/Hearts.js","View/UI/Header/Hint.js","View/UI/Header/Points.js","View/UI/RestartGame.js","View/UI/Header/ToggleMenu.js","View/UI/Header/Undo.js","View/UI/Header/Header.js","View/UI/Menu.js","View/Game/Stock.js","View/Game/Tableau.js","View/Game/Waste.js","View/Game/Board.js","Business/Dealer.ts","Business/Dispatcher.ts","Business/Blinker.ts","Business/Foundation.ts","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","Model/Game/Foundation.js","Model/Game/Rating.js","Model/Game/TimeMachine.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings/SuggestionModes.ts","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.ts","Model/Game/Waste.js","Model/Model.ts","Business/Stock.ts","Business/Tableau.ts","Business/Waste.ts","Business/Suggestions.ts","Business/BusinessModel.ts","View/Game/BoardWrap.tsx","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/Context.ts","View/UI/StartScreen/Difficulty.tsx","View/UI/StartScreen/QuickStart.tsx","View/UI/StartScreen/RatingOptions.ts","View/UI/StartScreen/Rating.tsx","View/UI/StartScreen/TouchDetector.js","View/UI/StartScreen/StartScreen.tsx","App.tsx","index.tsx"],"names":["defaultValue","state","replaceContext","updateContext","updateGameContext","restart","GlobalContext","React","createContext","Provider","Dealer","useContext","timeouts","settings","launchSettings","isTouch","dealer","isDealt","dealAll","deal","dealt","push","setTimeout","dealOne","useEffect","forEach","timeout","clearTimeout","EndScreen","game","isEnded","className","getElapsed","rating","points","getTimePenalty","started","end","Date","now","getBonusPoints","getTotal","onClick","BlinkingComponent","selector","this","context","blinkFor","unblink","Component","contextType","Card","props","e","ele","target","includes","offsetParent","rect","getBoundingClientRect","position","click","x","clientX","ownerDocument","defaultView","pageXOffset","y","clientY","pageYOffset","element","model","style","pointerEvents","zIndex","offsetTop","top","entropyStyle","offsetLeft","left","getCardStyle","hasSuggestion","isSuggested","suggestion","type","icon","isSelected","source","blink","getClassName","isHidden","face","MouseHand","onMouseMove","positionFixed","setState","updateDisplay","myRef","createRef","bind","onKeyDown","document","addEventListener","putBack","removeEventListener","node","current","hand","parent","window","event","keyCode","getOffsetTop","index","ref","stack","map","card","TouchHand","c","Hand","p","length","mouseMode","StackBase","classname","visible","suggested","children","Foundation","s","foundation","stacks","Stacks","i","Clock","useState","elapsed","setElapsed","interval","setInterval","clearInterval","EndGame","title","Hearts","recyclingMode","passes","createString","Array","from","keys","join","stock","getHearts","Hint","isVisible","suggestionMode","supportsHints","isTemporary","isDisabled","suggestOnce","enableHint","listenForH","disabled","Points","RestartGame","timemachine","previousStates","ToggleMenu","menu","showMenu","Undo","undo","_state","previous","popPreviousState","penalize","ctrlZ","evtobj","ctrlKey","Math","pow","multiplicator","Header","Menu","onChange","sm","value","setSuggestionMode","key","hintPenalty","suggestionModes","label","mm","mouseModes","lvl","setEntropy","baseEntropy","entropyLevels","entropyLevel","interactionEntropy","Stock","Tableau","tableau","getOffset","Waste","waste","drawMode","isHoldingCard","isFromWaste","additionalOffset","Board","dealingAt","callback","newCard","pop","isFirst","Dispatcher","clickHandler","getHandler","dispatchPutDown","dispatchPickup","Blinker","startBlink","registerBlink","stopBlink","wouldAccept","src","add","putDown","registerMove","tryDetectEnd","_card","getTop","getPreviousUsed","pickUp","remove","registerPickup","countCards","causeEntropy","level","random","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","DeckSize","Suits","heart","color","club","diamond","spade","Deck","Object","deckSize","flat","reverse","shuffleArray","array","j","floor","getCurrentAccepted","currentFoundation","acceptedCards","hasMoreThanOneCard","accepts","currentCard","currentAccepted","usedCards","f","parseInt","reduce","a","b","suit","slice","origStack","Rating","currentMove","rateMove","registerRecycle","console","debug","registerUncover","undoPenalty","penalty","registerHint","done","start","secondsToFinish","trunc","round","on","missPenalty","move","isTableau","obj","substr","isFoundation","TimeMachine","memorable","modified","pushPreviousState","modelEquals","id","isRequested","popPrevious","stackEquals","every","stacksEqual","Game","disableHint","padleft","msec","hh","ss","splice","isHoldingKing","isFromCurrentSource","isFromFoundation","isFromTableau","isFromAnyTableau","substring","getTableauIndex","SuggestionMode","next","SuggestionModes","NONE","SCORED","REGULAR","FULL","ONCE","TWICE","raw","get","all","allSuggestionModes","filter","mode","default","getHintMode","Settings","hintMode","recycle","setCardProperties","recyclings","isOnTop","popTop","result","getStack","canPutDown","range","indexOf","getCard","popWithFollowing","stackEntropy","uncover","entropy","concat","offset","tryPutDown","canAdd","addAll","_a","_b","_c","Model","getInitialState","deck","shuffle","_position","moveToWaste","recycleWaste","canRecycle","tryUncover","Suggestions","evaluateOptions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","isMoveOfKingBetweenEmptySlots","isMoveBetweenSimilarParentCards","isNotLoop","foundAny","wasteState","BusinessModel","cardIndex","tableauState","filtered","_stack","disableSuggestion","suggestor","withSuggestions","withHandlers","BoardWrap","modifier","render","DifficultyOptions","lines","StartScreenContext","difficultySettings","ratingPreset","ratingSettings","Difficulty","updateDifficulty","getButtonClass","option","line","QuickStart","RatingPresets","timedMode","matchPreset","filterd","preset","s1","s2","ctx","setContext","toggle","setToggle","customizeRating","r","String","href","rel","TouchDetector","prefixes","split","DocumentTouch","query","matchMedia","matches","error","StartScreen","App","appState","setAppState","initialized","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.56fe7700.chunk.js","sourcesContent":["import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\r\n\r\nimport BusinessModel from \"../Business/BusinessModel\";\r\nimport React from \"react\";\r\n\r\ninterface IGlobalContext {\r\n    state: BusinessModel | null;\r\n    replaceContext: StateReplaceFunction;\r\n    updateContext: StateUpdateFunction;\r\n    updateGameContext: StateUpdateFunction;\r\n    restart: () => void;\r\n}\r\n\r\nconst defaultValue = {\r\n    state: null,\r\n    replaceContext: () => {},\r\n    updateContext: () => {},\r\n    updateGameContext: () => {},\r\n    restart: () => {},\r\n};\r\n\r\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\r\n\r\nexport const Provider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Dealer = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const timeouts = [];\r\n    //@todo implement launch setting UI for quick dealing\r\n    if (state.settings.launchSettings.isTouch) {\r\n        if (state && state.dealer && !state.dealer.isDealt) {\r\n            replaceContext(state.dealer.dealAll(state));\r\n        }\r\n    } else {\r\n        const deal = (dealt) => {\r\n            timeouts.push(\r\n                setTimeout(() => {\r\n                    if (state && state.dealer && !state.dealer.isDealt) {\r\n                        replaceContext(state.dealer.dealOne(dealt, deal));\r\n                    }\r\n                }, 35)\r\n            );\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            deal(state.dealer.dealt);\r\n            return () => timeouts.forEach((timeout) => clearTimeout(timeout));\r\n        }, []);\r\n    }\r\n    return null;\r\n};\r\nexport default Dealer;\r\n","import \"../Style/Screens.scss\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndScreen = () => {\r\n    const { state, restart } = React.useContext(GlobalContext);\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    return !state.game.isEnded ? null : (\r\n        <div className=\"ui center endscreen\">\r\n            <div className=\"title\">🥳</div>\r\n            <div className=\"content\">\r\n                <div>Time: {state.game.getElapsed()}</div>\r\n                <div>Points: {state.game.rating.points}</div>\r\n                <div>Time Penalty: {state.game.rating.getTimePenalty(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Bonus Points: {state.game.rating.getBonusPoints(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Total Points: {state.game.rating.getTotal(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>\r\n                    <button onClick={restart}>\r\n                        🗑️<div>New Game</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndScreen;\r\n","import { Component } from \"react\";\r\nimport GlobalContext from \"../Context\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    constructor(selector) {\r\n        super();\r\n        this.timeout = null;\r\n        this.selector = selector;\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    componentDidUpdate() {\r\n        if (this.selector(this.context.state).blinkFor) {\r\n            this.timeout = setTimeout(\r\n                () =>\r\n                    this.context.updateGameContext((state) => {\r\n                        this.selector(state).unblink(state);\r\n                    }),\r\n                200\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const onClick = (e) => {\r\n        let ele = e.target;\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            click: {\r\n                x: e.clientX - ele.ownerDocument.defaultView.pageXOffset,\r\n                y: e.clientY - ele.ownerDocument.defaultView.pageYOffset,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n\r\n        props.onClick({ ...props.model }, position);\r\n    };\r\n\r\n    const getClassName = () => {\r\n        const hasSuggestion = props.isSuggested || props.model.suggestion;\r\n        let className = `card card-base suit-${props.model.type.icon}`;\r\n        className += !props.isSelected && !hasSuggestion ? ` card-stack-${props.model.source}` : \"\";\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack (preview what happens if picked up)\r\n        className += hasSuggestion ? \" card-suggested\" : \"\";\r\n\r\n        return className;\r\n    };\r\n\r\n    const getCardStyle = () => {\r\n        const style = {\r\n            zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };\r\n\r\n        //move to left on waste (triple draw)\r\n        if (props.offsetLeft) {\r\n            style.left = props.offsetLeft * 4 + \"vw\";\r\n        }\r\n\r\n        if (!props.onClick) {\r\n            style.pointerEvents = \"none\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    const getStackbaseStyle = () => {\r\n        if (!props.onClick) {\r\n            return { pointerEvents: \"none\" };\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    // @todo 3d flip https://3dtransforms.desandro.com/card-flip on unhide\r\n    // https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n\r\n    return (\r\n        <div style={getStackbaseStyle()} className=\"stack-base\">\r\n            <div style={getCardStyle()} className={getClassName()} onClick={onClick ? onClick : null}>\r\n                {props.model.isHidden ? (\r\n                    <div className=\"card-back\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        if (this.props.putBack) {\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card key={index} model={card} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends React.Component {\r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.props.hand &&\r\n                this.props.hand.stack &&\r\n                this.props.hand.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={this.props.offsetTop + index * 24}\r\n                        offsetLeft={this.props.offsetLeft}\r\n                        zIndex={1000 + index * 20}\r\n                        isSelected={true}\r\n                        onClick={(c) => this.props.onClick(c)}\r\n                    />\r\n                )),\r\n        ];\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    if (!state.hand || props.parent !== state.hand.source) {\r\n        return null;\r\n    }\r\n    const putBack = (c, p) => props.onClick(props.stack[props.stack.length - 1], p, props.stack.length - 1);\r\n    if (state.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parent} hand={state.hand} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (state.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <TouchHand\r\n                parent={props.parent}\r\n                hand={state.hand}\r\n                offsetTop={props.offsetTop}\r\n                offsetLeft={props.offsetLeft}\r\n                onClick={putBack}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base\";\r\n\r\n    if (props.visible) {\r\n        if (props.blink) {\r\n            classname += \" socket-blink\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n\r\n    if (props.suggested) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n\r\n    return (\r\n        <div className={classname} onClick={() => props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.foundation.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state, updateGameContext } = React.useContext(GlobalContext);\r\n        const onClick = (c, p, i) => updateGameContext(state.foundation.onClick(c, p, i));\r\n        return state.foundation.stacks.map((foundation, index) => (\r\n            <Foundation key={index} model={foundation} index={index} onClick={onClick} />\r\n        ));\r\n    };\r\n\r\n    render() {\r\n        const model = this.props.model;\r\n        return (\r\n            <div key={this.props.index}>\r\n                <StackBase\r\n                    suggested={model.suggestion && !model.stack.length}\r\n                    blink={model.blinkFor}\r\n                    onClick={() => this.props.onClick(null, null, this.props.index)}\r\n                    visible={!model.stack.length}\r\n                >\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                        onClick={(c, p) => this.props.onClick(c, p, this.props.index)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parent={\"foundation-\" + this.props.index}\r\n                    onClick={(c, p) => this.props.onClick(model.stack[model.stack.length - 1], p, this.props.index)}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Clock = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const [elapsed, setElapsed] = React.useState(0);\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (state.game.started) {\r\n                setElapsed(state.game.getElapsed());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return !state.game.started || !elapsed ? null : (\r\n        <div className=\"header-clock\">\r\n            <div className=\"icon-container\">🕒</div>\r\n            {elapsed}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndGame = () => {\r\n    const { restart } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"End Game\" onClick={restart}>\r\n                🗑️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default EndGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hearts = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const getHearts = () => {\r\n        if (state.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            return state.game.passes > 0 ? \"❤️\" : \"💔\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            const createString = (length, icon) =>\r\n                Array.from(new Array(length).keys())\r\n                    .map(() => icon)\r\n                    .join(\"\");\r\n\r\n            return createString(state.stock.passes, \"❤️\") + createString(3 - state.stock.passes, \"💔\");\r\n        }\r\n        return null;\r\n    };\r\n    return <div className=\"heart-container\">{getHearts()}</div>;\r\n};\r\nexport default Hearts;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hint = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    \r\n    //@todo update\r\n    \r\n    const isVisible = (state) => state.settings.suggestionMode.supportsHints || state.settings.suggestionMode.isTemporary;\r\n    const isDisabled = (state) => state.settings.suggestionMode.isTemporary;\r\n\r\n    const suggestOnce = () => {\r\n        updateContext((state) => {\r\n            if (isVisible(state) && !isDisabled(state)) {\r\n                state.settings.enableHint();\r\n            }\r\n        });\r\n    };\r\n\r\n    const listenForH = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 72) {\r\n            suggestOnce();\r\n        }\r\n    };\r\n\r\n    if (isVisible(state) && !isDisabled(state)) {\r\n        React.useEffect(() => {\r\n            document.addEventListener(\"keydown\", listenForH);\r\n            return () => document.removeEventListener(\"keydown\", listenForH);\r\n        }, []);\r\n    }\r\n\r\n    return !isVisible(state) ? null : (\r\n        <div>\r\n            <button title=\"Hint\" onClick={() => suggestOnce()} disabled={isDisabled(state)}>\r\n                💡\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Hint;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Points = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"icon-container\">🏆</div> {state.game.rating.points}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Points;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst RestartGame = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n\r\n    const reset = () =>\r\n        replaceContext((state) => (state.game.timemachine.previousStates ? state.game.timemachine.previousStates[0] : null));\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Restart\" disabled={!state.game.timemachine.previousStates.length} onClick={reset}>\r\n                ♻️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestartGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst ToggleMenu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Settings\" onClick={() => toggleMenu(state.settings.showMenu)}>\r\n                ⚙️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleMenu;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Undo = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const undo = () =>\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    const ctrlZ = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 90 && evtobj.ctrlKey) {\r\n            undo();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", ctrlZ);\r\n        return () => document.removeEventListener(\"keydown\", ctrlZ);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                disabled={!state.game.timemachine.previousStates.length}\r\n                title={\"Undo (Penalty:\" + Math.pow(2, state.game.rating.multiplicator) + \")\"}\r\n                onClick={undo}\r\n            >\r\n                ⏪\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Undo;\r\n","import \"../../Style/Header.css\";\r\n\r\nimport Clock from \"./Clock\";\r\nimport EndGame from \"./EndGame\";\r\nimport Hearts from \"./Hearts\";\r\nimport Hint from \"./Hint\";\r\nimport Points from \"./Points\";\r\nimport React from \"react\";\r\nimport RestartGame from \"../RestartGame\";\r\nimport ToggleMenu from \"./ToggleMenu\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <div className=\"header-title\">\r\n            <Hearts />\r\n            <Points />\r\n        </div>\r\n        <Clock />\r\n        <div className=\"header-buttons\">\r\n            <Hint />\r\n            <Undo />\r\n            <RestartGame />\r\n            <EndGame />\r\n            <ToggleMenu />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import \"../Style/Menu.css\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Menu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    //@todo persist game settings in local storage too and use for initialization\r\n    const setSuggestionMode = (sm) => updateContext((state) => state.settings.setSuggestionMode(sm));\r\n    const setBaseEntropy = (lvl) => updateContext((state) => state.setEntropy(lvl));\r\n    const setInteractionEntropy = (lvl) => updateContext((state) => (state.settings.interactionEntropy = lvl));\r\n    const setMouseMode = (mm) => updateContext((state) => (state.settings.mouseMode = mm));\r\n\r\n    //@todo review duplication with ToggleMenu Component from Header\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!state.settings.showMenu) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui right menu\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => toggleMenu(state.settings.showMenu)}>🗙</button>\r\n            </div>\r\n            <div className=\"title\">Settings</div>\r\n            <div className=\"content\">\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Suggestions</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much help - if any - should the game offer by displaying suggestions?</div>\r\n                        <select\r\n                            onChange={(e) => setSuggestionMode(e.target.value)}\r\n                            value={state.settings.suggestionMode.key}\r\n                            disabled={state.settings.launchSettings.hintPenalty}\r\n                        >\r\n                            {state.settings.suggestionModes.map((suggestionMode) => (\r\n                                <option key={suggestionMode.key} value={suggestionMode.key}>\r\n                                    {suggestionMode.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Active Card</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">Should the selected card follow the cursor or remain on the stack?</div>\r\n                        <select onChange={(e) => setMouseMode(e.target.value)} value={state.settings.mouseMode}>\r\n                            {state.settings.mouseModes.map((mouseMode) => (\r\n                                <option key={mouseMode} value={mouseMode}>\r\n                                    {mouseMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Base Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                        <select onChange={(e) => setBaseEntropy(e.target.value)} value={state.settings.baseEntropy}>\r\n                            {state.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Interaction Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will each interaction add to a stack on the board?</div>\r\n                        <select onChange={(e) => setInteractionEntropy(e.target.value)} value={state.settings.interactionEntropy}>\r\n                            {state.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Menu;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.stock);\r\n    }\r\n\r\n    render() {\r\n        const { state, updateGameContext } = this.context;\r\n        const onClick = (c, p, i) => updateGameContext(state.stock.onClick(c, p, i));\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={state.stock.blinkFor}\r\n                    onClick={onClick}\r\n                    suggested={state.stock.suggestion && !state.stock.stack.length}\r\n                    visible={!state.stock.stack.length}\r\n                />\r\n                {state.stock.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        blink={state.stock.blinkFor}\r\n                        isSuggested={state.stock.suggestion && index == state.stock.stack.length - 1}\r\n                        onClick={onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.tableau.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state, updateGameContext } = React.useContext(GlobalContext);\r\n        const onClick = (c, p, i) => updateGameContext(state.tableau.onClick(c, p, i));\r\n        return state.tableau.stacks.map((tableau, index) => <Tableau key={index} index={index} model={tableau} onClick={onClick} />);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, props.index)}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={(card, p) => props.onClick(card, p, props.index)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parent={\"tableau-\" + props.index}\r\n                    onClick={(card, p) => props.onClick(card, p, props.index)}\r\n                    stack={props.model.stack}\r\n                    offsetTop={getOffset(props.model.stack.length)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.waste);\r\n    }\r\n\r\n    render() {\r\n        const { state, updateGameContext } = this.context;\r\n        const onClick = (c, p, i) => updateGameContext(state.waste.onClick(c, p, i));\r\n        const getOffset = (index) => {\r\n            if (state.settings.launchSettings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length =\r\n                state.waste.settings.mouseMode == \"remain-on-stack\" && state.hand.isHoldingCard() && state.hand.isFromWaste()\r\n                    ? state.waste.stack.length + 1\r\n                    : state.waste.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={state.waste.blinkFor}\r\n                    onClick={() => onClick(null, null)}\r\n                    suggested={state.waste.suggestion && !state.waste.stack.length}\r\n                    visible={!state.waste.stack.length}\r\n                />\r\n                {state.waste.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        blink={state.waste.blinkFor}\r\n                        isSuggested={state.waste.suggestion && index == state.waste.stack.length - 1}\r\n                        onClick={(c, p) => onClick(c, p)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    offsetTop={(state.waste.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(state.waste.stack.length)}\r\n                    parent=\"waste\"\r\n                    onClick={onClick}\r\n                    stack={state.waste.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"../Style/Board.scss\";\r\n\r\nimport Dealer from \"./Dealer\";\r\nimport EndScreen from \"../UI/EndScreen\";\r\nimport Foundation from \"./Foundation\";\r\nimport Header from \"../UI/Header/Header\";\r\nimport Menu from \"../UI/Menu\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = () => (\r\n    <>\r\n        <div className=\"layout-grid-container\">\r\n            <Header />\r\n            <div className=\"board-grid-container\">\r\n                <Stock />\r\n                <Waste />\r\n                <div className=\"spacer\">&nbsp;</div>\r\n                <Foundation.Stacks />\r\n                <Tableau.Stacks />\r\n            </div>\r\n        </div>\r\n        <Menu />\r\n        <EndScreen />\r\n        <Dealer />\r\n    </>\r\n);\r\n\r\nexport default Board;\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Tableau from \"../Model/Game/Tableau\";\r\n\r\nexport default class Dealer {\r\n    dealt: number;\r\n    dealingAt: number;\r\n    isDealt: boolean;\r\n\r\n    constructor() {\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    dealOne = (dealt: number, callback: any) => (state: BusinessModel) => {\r\n        if (dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n\r\n        state.dealer.deal(state.stock, state.tableau);\r\n        if (state.dealer.isDealt) {\r\n            state.game.started = Date.now();\r\n        }\r\n\r\n        if (!state.dealer.isDealt) {\r\n            callback(state.dealer.dealt);\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    dealAll = () => (state: BusinessModel) => {\r\n        if (this.dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n        while (!state.dealer.isDealt) {\r\n            state.dealer.deal(state.stock, state.tableau);\r\n        }\r\n        state.game.started = Date.now();\r\n        return state;\r\n    };\r\n\r\n    deal = (stock: Stock, tableau: Tableau) => {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = stock.stack.pop();\r\n                newCard.source = \"tableau-\" + i;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                stack.push(newCard);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Hand from \"../Model/Game/Hand\";\r\n\r\nexport default class Dispatcher {\r\n    clickHandler: ClickHandler;\r\n\r\n    constructor(clickHandler: ClickHandler) {\r\n        this.clickHandler = clickHandler;\r\n    }\r\n\r\n    getHandler = (hand: Hand) => {\r\n        if (hand && hand.isHoldingCard()) {\r\n            return this.dispatchPutDown;\r\n        } else {\r\n            return this.dispatchPickup;\r\n        }\r\n    };\r\n\r\n    dispatchPutDown = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPutDown(card, position, state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPickup(card, position, state, index);\r\n        }\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Waste from \"../Model/Game/Waste\";\r\n\r\nexport type BlinkSelector = (state: BusinessModel) => Waste | Stock | any;\r\n\r\nexport interface IBlinker {\r\n    startBlink: (selector: BlinkSelector, state: BusinessModel) => void;\r\n}\r\n\r\nexport default class Blinker implements IBlinker {\r\n    startBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        if (selector(state).blinkFor < 10) {\r\n            selector(state).blinkFor = 10;\r\n            state.game.registerBlink(true);\r\n            selector(state).unblink = (s: BusinessModel) => this.stopBlink(selector, s);\r\n        }\r\n    };\r\n\r\n    stopBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        selector(state).blinkFor = 0;\r\n        state.game.registerBlink(false);\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Foundation implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.foundation.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.foundation.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (_card: Card, position: any, state: BusinessModel, index: number) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    //@todo move this to a generic place, also detect failure\r\n    tryDetectEnd(state: BusinessModel) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.source = \"\";\r\n        this.suggestion = false;\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\r\n            .flat()\r\n            .reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n            blinkFor: 0,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (a, b, c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => !hand.hasMoreThanOneCard() && this.accepts(index, hand.currentCard());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = \"foundation-\" + index;\r\n        card.suggestion = false;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => [...this.stacks[index].usedCards].pop();\r\n\r\n    countCards = () => this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n\r\n    getTop = (index) => this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation(orig.settings);\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","export default class Rating {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        this.points += this.rateMove(currentMove);\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        if (this.settings.launchSettings.drawMode == \"single\" && this.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n    };\r\n\r\n    registerBlink(on) {\r\n        if (on && this.settings.launchSettings.missPenalty) {\r\n            this.points -= 10;\r\n            console.debug(\"RATING: subtract 10 points for invalid action\");\r\n        }\r\n    }\r\n\r\n    penalize = (other) => {\r\n        if (this.settings.launchSettings.undoPenalty) {\r\n            const penalty = Math.pow(2, other.multiplicator);\r\n            console.debug(`RATING: applying penalty of ${penalty} points for UNDO`);\r\n            this.points = Math.min(this.points, other.points) - penalty;\r\n            this.multiplicator = other.multiplicator + 1;\r\n        }\r\n    };\r\n\r\n    registerHint = (done) => {\r\n        if (done && this.settings.launchSettings.hintPenalty) {\r\n            this.points -= 10;\r\n            console.debug(`RATING: applying penalty of 10 points for HINT`);\r\n        }\r\n    };\r\n\r\n    rateMove(move) {\r\n        const isTableau = (obj) => obj.substr(0, 7) == \"tableau\";\r\n        const isFoundation = (obj) => obj.substr(0, 10) == \"foundation\";\r\n        if (isTableau(move.source)) {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (isFoundation(move.source)) {\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getTimePenalty = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        return Math.trunc(secondsToFinish / 5) * -2;\r\n    };\r\n\r\n    getBonusPoints = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        if (secondsToFinish < 30) {\r\n            return 0;\r\n        }\r\n        return Math.round((20000 / secondsToFinish) * 35);\r\n    };\r\n\r\n    getTotal = (start, end) => {\r\n        return this.points + this.getBonusPoints(start, end) - this.getTimePenalty(start, end);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Rating(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.multiplicator = orig.multiplicator;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class TimeMachine {\r\n    constructor() {\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n    };\r\n\r\n    pushPreviousState = (state) => {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    };\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.timemachine.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        return true;\r\n    };\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    }\r\n\r\n    stackEquals = (a, b) => {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    };\r\n\r\n    stacksEqual = (a, b) => {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    };\r\n\r\n    modelEquals = (a, b) => {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new TimeMachine();\r\n        copy.previousStates = [...orig.previousStates];\r\n        copy.memorable = orig.memorable;\r\n        copy.modified = orig.modified;\r\n        return copy;\r\n    };\r\n}\r\n","import Rating from \"./Rating\";\r\nimport TimeMachine from \"./TimeMachine\";\r\n\r\nexport default class Game {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.rating = new Rating(settings);\r\n        this.timemachine = new TimeMachine();\r\n        this.started = 0;\r\n        this.isEnded = false;\r\n        this.end = 0;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerMove(target, source);\r\n        this.timemachine.registerMove(target, source);\r\n        return true;\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.timemachine.registerPickup();\r\n        return true;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerRecycle();\r\n        this.timemachine.registerRecycle();\r\n        return true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerUncover();\r\n        this.timemachine.registerUncover();\r\n        return true;\r\n    };\r\n\r\n    registerBlink(on) {\r\n        this.rating.registerBlink(on);\r\n        this.timemachine.registerBlink(on);\r\n        return true;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.started = orig.started;\r\n        copy.timemachine = TimeMachine.copy(orig.timemachine);\r\n        copy.rating = Rating.copy(orig.rating);\r\n        return copy;\r\n    };\r\n\r\n    getElapsed = () => {\r\n        const padleft = (i) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = (this.end || Date.now()) - this.started;\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp = (stack, source, position) => {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    };\r\n\r\n    putDown = () => {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    };\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    isHoldingKing = () => this.isHoldingCard() && this.currentCard().face == 'K';\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    isFromWaste = () => this.source && this.source == \"waste\";\r\n\r\n    isFromFoundation = (index) => this.source && this.source == `foundation-${index}`\r\n\r\n    isFromTableau = (index) => this.source && this.source == `tableau-${index}`\r\n\r\n    isFromAnyTableau = () => this.source && this.source.substring(0,8) == \"tableau-\";\r\n\r\n    getTableauIndex = () => this.source && this.source.substring(8);\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","class SuggestionMode {\r\n    key: string;\r\n    label: string;\r\n    isTemporary: boolean;\r\n    supportsHints: boolean;\r\n    next: string | undefined;\r\n    constructor(key: string, obj: ISuggestionMode) {\r\n        this.key = key;\r\n        this.label = obj.label;\r\n        this.isTemporary = !!obj.isTemporary;\r\n        this.supportsHints = !!obj.supportsHints;\r\n        this.next = obj.next;\r\n    }\r\n}\r\n\r\ntype ISuggestionMode = {\r\n    label: string;\r\n    isTemporary?: boolean;\r\n    supportsHints?: boolean;\r\n    next?: string;\r\n};\r\n\r\nexport default class SuggestionModes {\r\n    static NONE: string = \"NONE\";\r\n    static SCORED: string = \"SCORED\";\r\n    static REGULAR: string = \"REGULAR\";\r\n    static FULL: string = \"FULL\";\r\n    static ONCE: string = \"ONCE\";\r\n    static TWICE: string = \"TWICE\";\r\n    static raw: { [id: string]: ISuggestionMode } = {\r\n        NONE: {\r\n            label: \"None\",\r\n            supportsHints: true,\r\n        },\r\n        SCORED: {\r\n            label: \"Scored\",\r\n        },\r\n        REGULAR: {\r\n            label: \"Regular\",\r\n        },\r\n        FULL: {\r\n            label: \"Full\",\r\n        },\r\n        ONCE: {\r\n            label: \"Single Action\",\r\n            isTemporary: true,\r\n            next: \"NONE\",\r\n        },\r\n    };\r\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\r\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\r\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\r\n    static default = () => SuggestionModes.get(SuggestionModes.NONE);\r\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\r\n}\r\n","import SuggestionModes from \"./Settings/SuggestionModes\";\r\n\r\nexport default class Settings {\r\n    constructor(launchSettings) {\r\n        this.launchSettings = launchSettings;\r\n        const isTouch = launchSettings.isTouch;\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = isTouch ? \"remain-on-stack\" : \"follow-cursor\";\r\n\r\n        this.entropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\n        this.baseEntropy = isTouch ? 1 : 2;\r\n        this.interactionEntropy = isTouch ? 1 : 2;\r\n\r\n        this.suggestionModes = SuggestionModes.allSuggestionModes();\r\n        this.suggestionMode = SuggestionModes.default();\r\n    }\r\n\r\n    setSuggestionMode = (sm) => {\r\n        if (this.suggestionMode.key !== sm) {\r\n            this.suggestionMode = SuggestionModes.get(sm);\r\n        }\r\n    };\r\n\r\n    enableHint = () => {\r\n        this.suggestionMode = SuggestionModes.getHintMode();\r\n    };\r\n\r\n    disableHint = () => {\r\n        if (this.suggestionMode.isTemporary && this.suggestionMode.next) {\r\n            this.suggestionMode = SuggestionModes.get(this.suggestionMode.next);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings(orig.launchSettings);\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        copy.hintMode = orig.hintMode;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack, settings) {\r\n        this.settings = settings;\r\n        this.stack = stack.map(this.setCardProperties);\r\n        this.recyclings = 0;\r\n        this.passes = -1;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (a, b, c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n        if (this.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            this.passes = 1;\r\n        }\r\n        if (this.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            this.passes = 3;\r\n        }\r\n    }\r\n\r\n    canRecycle() {\r\n        return (\r\n            this.settings.launchSettings.recyclingMode == \"infinite\" ||\r\n            (this.settings.launchSettings.recyclingMode == \"3-pass\" && this.recyclings < 2)\r\n        );\r\n    }\r\n\r\n    recycle = (waste) => {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map(this.setCardProperties);\r\n            this.recyclings++;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setCardProperties = (card) => {\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        card.isHidden = true;\r\n        card.source = \"stock\";\r\n        return card;\r\n    };\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    popTop = () => {\r\n        let result = [];\r\n        if (this.settings.launchSettings.drawMode == \"single\") {\r\n            result = [this.stack.pop()];\r\n        }\r\n        if (this.settings.launchSettings.drawMode == \"triple\") {\r\n            result = this.stack.splice(this.stack.length - 3);\r\n        }\r\n        if (this.stack.length == 0) {\r\n            this.passes--;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        copy.passes = orig.passes;\r\n        copy.recyclings = orig.recyclings;\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Hand from \"./Hand\";\r\nimport Settings from \"./Settings\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    stacks: { stack: Card[]; id: number; suggestion?: boolean }[];\r\n    settings: Settings;\r\n    onClick: (a: any, b: any, c: any) => void;\r\n\r\n    constructor(settings: Settings) {\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => ({\r\n            stack: [],\r\n            blinkFor: 0,\r\n            id,\r\n        }));\r\n        this.settings = settings;\r\n        this.onClick = () => {};\r\n    }\r\n\r\n    getStack = (index: number) => this.stacks[index];\r\n\r\n    wouldAccept = (index: number, hand: Hand) => this.canPutDown(this.getTop(index), hand, index);\r\n\r\n    canPutDown = (card: Card, hand: Hand, index: number) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.isFromTableau(index));\r\n\r\n    accepts = (index: number, current: Card) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index: number, card: Card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card: Card, i: number) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index: number) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index: number, cards: Card[]) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card: Card, index: number) => {\r\n        card.source = \"tableau-\" + index;\r\n        return card;\r\n    };\r\n\r\n    getTop = (index: number, offset?: number) => this.stacks[index].stack[this.stacks[index].stack.length - 1 - (offset || 0)];\r\n\r\n    static copy = (orig: Tableau) => {\r\n        const copy = new Tableau(orig.settings);\r\n        copy.stacks = orig.stacks.map((stack, index) => ({ id: index, stack: Card.copyAll(stack.stack) }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.stack = [];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (_a, _b, _c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAccept = (hand) => hand.isFromWaste() && this.canAdd(hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste(orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Model {\r\n    stock: Stock;\r\n    waste: Waste;\r\n    foundation: Foundation;\r\n    tableau: Tableau;\r\n    hand: Hand;\r\n    game: Game;\r\n    settings: Settings;\r\n\r\n    constructor(obj: any) {\r\n        this.stock = obj.stock;\r\n        this.waste = obj.waste;\r\n        this.foundation = obj.foundation;\r\n        this.tableau = obj.tableau;\r\n        this.hand = obj.hand;\r\n        this.game = obj.game;\r\n        this.settings = obj.settings;\r\n    }\r\n\r\n    static getInitialState = (launchSettings: AppState) => {\r\n        const deck = new Deck().shuffle();\r\n        const settings = new Settings(launchSettings);\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings),\r\n            waste: new Waste(settings),\r\n            foundation: new Foundation(settings),\r\n            tableau: new Tableau(settings),\r\n            hand: new Hand(),\r\n            game: new Game(settings),\r\n            settings: settings,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n        };\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Stock implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.stock, state);\r\n\r\n    dispatchPutDown = (_card: Card, _position: any, state: BusinessModel) => this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, _position: any, state: BusinessModel) =>\r\n        card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state);\r\n\r\n    moveToWaste = (card: Card, state: BusinessModel) =>\r\n        state.stock.isOnTop(card) && state.waste.addAll(state.stock.popTop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    recycleWaste = (_card: Card, state: BusinessModel) => {\r\n        if (!state.stock.getTop()) {\r\n            return (\r\n                (!!state.waste.getTop() &&\r\n                    state.stock.canRecycle() &&\r\n                    state.stock.recycle(state.waste.recycle()) &&\r\n                    state.game.registerRecycle()) ||\r\n                this.blink(state, 0)\r\n            );\r\n        }\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Tableau implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.tableau.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.tableau.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card: Card, index: number, state: BusinessModel) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Waste implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.waste, state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel) =>\r\n        (state.waste.wouldAccept(state.hand) &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state, 0);\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport SuggestionModes from \"../Model/Game/Settings/SuggestionModes\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Suggestions {\r\n    tableau: Tableau;\r\n    waste: Waste;\r\n\r\n    constructor() {\r\n        this.tableau = new Tableau();\r\n        this.waste = new Waste();\r\n    }\r\n\r\n    evaluateOptions = (state: BusinessModel) => {\r\n        this.disableAllSuggestions(state);\r\n        if (\r\n            state.settings.suggestionMode.key !== SuggestionModes.NONE &&\r\n            !this.getUncoverOptions(state) &&\r\n            !this.getPutdownSuggestions(state) &&\r\n            !state.hand.isHoldingCard() &&\r\n            (!this.getPickupOptions(state) || state.settings.suggestionMode.key == SuggestionModes.FULL) &&\r\n            (state.stock.getTop() || state.stock.canRecycle()) &&\r\n            state.settings.suggestionMode.key !== SuggestionModes.SCORED\r\n        ) {\r\n            state.stock.suggestion = true;\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state: BusinessModel, onlyUseful?: boolean) => {\r\n        if (!state.hand.isHoldingCard() || state.settings.suggestionMode.key == SuggestionModes.NONE) {\r\n            return 0;\r\n        }\r\n\r\n        const accepted = [];\r\n        if (state.waste.wouldAccept(state.hand)) {\r\n            if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromWaste()) {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.foundation.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromFoundation(index)) {\r\n                    const move = { target: \"foundation-\" + index, source: state.hand.source };\r\n                    if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.tableau.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromTableau(index)) {\r\n                    const isMoveOfKingBetweenEmptySlots =\r\n                        state.hand.isHoldingKing() &&\r\n                        stack.stack.length == 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length == 0;\r\n\r\n                    const isMoveBetweenSimilarParentCards =\r\n                        stack.stack.length > 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length > 0 &&\r\n                        stack.stack[stack.stack.length - 1].face ==\r\n                            state.tableau.stacks[state.hand.getTableauIndex()].stack[\r\n                                state.tableau.stacks[state.hand.getTableauIndex()].stack.length - 1\r\n                            ].face &&\r\n                        !state.tableau.getTop(state.hand.getTableauIndex()).isHidden;\r\n\r\n                    const isNotLoop = !isMoveOfKingBetweenEmptySlots && !isMoveBetweenSimilarParentCards;\r\n\r\n                    if (!onlyUseful || state.settings.suggestionMode.key === SuggestionModes.FULL || isNotLoop) {\r\n                        const move = { target: \"tableau-\" + index, source: state.hand.source };\r\n                        if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state: BusinessModel) => {\r\n        let foundAny = false;\r\n        const wasteState = BusinessModel.copy(state);\r\n        this.waste.dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.timemachine.modified) {\r\n            if (this.getPutdownSuggestions(wasteState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) =>\r\n            tableau.stack\r\n                .map((card, cardIndex) => ({ cardIndex, card }))\r\n                .filter(({ card }) => !card.isHidden)\r\n                .forEach(({ card, cardIndex }) => {\r\n                    const tableauState = BusinessModel.copy(state);\r\n                    this.tableau.dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.timemachine.modified) {\r\n                        if (this.getPutdownSuggestions(tableauState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                })\r\n        );\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            const filtered = state.tableau.stacks\r\n                .map((_stack, index) => index)\r\n                .filter((index) => state.tableau.getTop(index) && state.tableau.getTop(index).isHidden);\r\n            filtered.forEach((index) => {\r\n                state.tableau.getTop(index).suggestion = true;\r\n            });\r\n            return filtered.length;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    disableAllSuggestions = (state: BusinessModel) => {\r\n        const disableSuggestion = (obj: any) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Dealer from \"./Dealer\";\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Foundation from \"./Foundation\";\r\nimport Model from \"../Model/Model\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class BusinessModel extends Model {\r\n    suggestor: Suggestions;\r\n    dealer: Dealer;\r\n\r\n    constructor(obj: any) {\r\n        super(obj);\r\n        this.suggestor = new Suggestions();\r\n        this.dealer = new Dealer();\r\n    }\r\n\r\n    withSuggestions = () => {\r\n        this.suggestor.evaluateOptions(this)\r\n        return this;\r\n    }\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.settings.baseEntropy = lvl;\r\n        this.stock.setEntropy(lvl);\r\n        this.waste.setEntropy(lvl);\r\n        this.foundation.setEntropy(lvl);\r\n        this.tableau.setEntropy(lvl);\r\n    };\r\n\r\n    withHandlers = () => {\r\n        const getHandler = (clickHandler: ClickHandler) => new Dispatcher(clickHandler).getHandler(this.hand);\r\n        this.stock.onClick = getHandler(new Stock());\r\n        this.waste.onClick = getHandler(new Waste());\r\n        this.foundation.onClick = getHandler(new Foundation());\r\n        this.tableau.onClick = getHandler(new Tableau());\r\n        return this;\r\n    };\r\n\r\n    static getInitialState = (launchSettings: AppState) => {\r\n        return new BusinessModel(Model.getInitialState(launchSettings));\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return new BusinessModel(Model.copy(state));\r\n    };\r\n}\r\n","import { AppState, StateReplacer, StateUpdater } from \"../../Common\";\r\n\r\nimport Board from \"./Board\";\r\nimport BusinessModel from \"../../Business/BusinessModel\";\r\nimport { Provider } from \"../Context\";\r\nimport React from \"react\";\r\n\r\ninterface BoardWrapProps {\r\n    settings: AppState;\r\n    restart: () => void;\r\n}\r\n\r\nexport default class BoardWrap extends React.Component<BoardWrapProps, BusinessModel> {\r\n    constructor(props: BoardWrapProps) {\r\n        super(props);\r\n        this.state = BusinessModel.getInitialState(props.settings);\r\n    }\r\n\r\n    replaceContext = (modifier: StateReplacer) => this.setState(modifier);\r\n\r\n    updateContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            modifier(state);\r\n            return state;\r\n        });\r\n\r\n    updateGameContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            state.game.timemachine.modified = false;\r\n            const previous = BusinessModel.copy(state);\r\n            modifier(state);\r\n            if (state.game.timemachine.modified) {\r\n                state.game.timemachine.pushPreviousState(previous);\r\n                return state;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    render = () => {\r\n        const context = {\r\n            state: this.state.withHandlers().withSuggestions(),\r\n            replaceContext: this.replaceContext,\r\n            updateContext: this.updateContext,\r\n            updateGameContext: this.updateGameContext,\r\n            restart: this.props.restart,\r\n        };\r\n        return (\r\n            <Provider value={context}>\r\n                <Board />\r\n            </Provider>\r\n        );\r\n    };\r\n}\r\n","const DifficultyOptions = [\r\n    {\r\n        id: 0,\r\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\r\n        icon: \"🐭\",\r\n        lines: [\"Turn 1 card at once.\", \"No limit on passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐹\",\r\n        lines: [\"Turn 1 card at once.\", \"Three passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐰\",\r\n        lines: [\"Turn 1 card at once.\", \"Only a single pass\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\r\n        icon: \"🐨\",\r\n        lines: [\"Turn 3 cards at once\", \"No limit on passes\", \"through the deck\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐼\",\r\n        lines: [\"Turn 3 cards at once.\", \"Three passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐻\",\r\n        lines: [\"Turn 3 cards at once.\", \"Only a single pass\", \"through the deck.\"],\r\n    },\r\n];\r\n\r\nexport default DifficultyOptions;\r\n","import React from \"react\";\r\nimport { StartScreenState } from \"../../../Common\";\r\n\r\nexport interface IStartScreenContext {\r\n    state: StartScreenState;\r\n    setState: (s: StartScreenState) => void;\r\n}\r\n\r\nconst StartScreenContext = React.createContext<IStartScreenContext>({\r\n    state: {\r\n        difficultySettings: 0,\r\n        ratingPreset: 0,\r\n        ratingSettings: {},\r\n        isTouch: false,\r\n    },\r\n    setState: () => {},\r\n});\r\n\r\nexport const Provider = StartScreenContext.Provider;\r\nexport default StartScreenContext;\r\n","import DifficultyOptions from \"./DifficultyOptions\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst Difficulty = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const updateDifficulty = (settings: number) => setState({ ...state, difficultySettings: settings });\r\n    const getButtonClass = (index: number) => (state.difficultySettings == index ? `active active-${index}` : \"\");\r\n    return (\r\n        <div className=\"ui center quickstart\">\r\n            <div className=\"title\">Difficulty</div>\r\n            <div className=\"content\">\r\n                <div className=\"left\">\r\n                    {DifficultyOptions.slice(0, 3).map((option) => (\r\n                        <button key={option.id} className={getButtonClass(option.id)} onClick={() => updateDifficulty(option.id)}>\r\n                            {option.icon}\r\n                            {option.lines.map((line, i) => (\r\n                                <div key={i}>{line}</div>\r\n                            ))}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {DifficultyOptions.slice(3).map((option) => (\r\n                        <button key={option.id} className={getButtonClass(option.id)} onClick={() => updateDifficulty(option.id)}>\r\n                            {option.icon}\r\n                            {option.lines.map((line, i) => (\r\n                                <div key={i}>{line}</div>\r\n                            ))}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Difficulty;\r\n","import React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst QuickStart = (props: { start: () => void }) => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    return (\r\n        <div className=\"ui right quickstart\">\r\n            <div className=\"title\">Quickstart</div>\r\n            <div className=\"content center\">\r\n                <div>\r\n                    <button disabled={!state.isTouch} className={!state.isTouch ? \"active active-0\" : \"\"} onClick={() => setState({...state, isTouch: false})}>\r\n                        🖥️\r\n                        <div>{!state.isTouch ? \"Optimized\": \"Optimize\"} for Desktop</div>\r\n                        <div>with Mouse Support</div>\r\n                    </button>\r\n                    <button disabled={state.isTouch} className={state.isTouch ? \"active active-0\" : \"\"} onClick={() => setState({...state, isTouch: true})}>\r\n                        📱\r\n                        <div>{state.isTouch ? \"Optimized\": \"Optimize\"} for Mobile</div>\r\n                        <div>with Touch Support</div>\r\n                    </button>\r\n                    <button className=\"blinking\" onClick={props.start}>\r\n                        🎲\r\n                        <div>Start a new Game</div>\r\n                        <div>using the settings</div>\r\n                        <div>shown on this screen.</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default QuickStart;\r\n","export default class RatingPresets {\r\n    static all = [\r\n        {\r\n            id: 0,\r\n            icon: \"🌴\",\r\n            label: \"Chill\",\r\n            settings: {\r\n                timedMode: false,\r\n                missPenalty: false,\r\n                undoPenalty: false,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 1,\r\n            icon: \"⚖️\",\r\n            label: \"Regular\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: false,\r\n                undoPenalty: true,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: \"🏆\",\r\n            label: \"Competitive\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: true,\r\n                undoPenalty: true,\r\n                hintPenalty: true,\r\n            },\r\n        },\r\n    ];\r\n    static matchPreset = (settings: any) => {\r\n        const filterd = RatingPresets.all.filter((preset) => RatingPresets.equals(preset.settings, settings));\r\n        if (filterd.length > 0) {\r\n            return filterd[0].id;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    static equals = (s1: any, s2: any) =>\r\n        s1.timedMode === s2.timedMode &&\r\n        s1.missPenalty === s2.missPenalty &&\r\n        s1.undoPenalty === s2.undoPenalty &&\r\n        s1.hintPenalty === s2.hintPenalty;\r\n}\r\n","import RatingPresets from \"./RatingOptions\";\r\nimport { RatingSettings } from \"../../../Common\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst Rating = () => {\r\n    const ctx = React.useContext(StartScreenContext);\r\n    const context = ctx.state;\r\n    const setContext = ctx.setState;\r\n    const [toggle, setToggle] = React.useState<boolean>(false);\r\n\r\n    const applyPreset = (id: number) => setContext({ ...context, ratingSettings: { ...RatingPresets.all[id].settings }, ratingPreset: id });\r\n    const getButtonClass = (index: number) => (context.ratingPreset == index ? `active active-${index}` : \"\");\r\n\r\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\r\n        const next = { ...context };\r\n        modifier(next.ratingSettings);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setContext(next);\r\n    };\r\n    const setMissPenalty = (value: string) => customizeRating((r) => (r.missPenalty = value == \"true\"));\r\n    const setTimeRating = (value: string) => customizeRating((r) => (r.timedMode = value == \"true\"));\r\n    const setUndoPenalty = (value: string) => customizeRating((r) => (r.undoPenalty = value == \"true\"));\r\n    const setHintPenalty = (value: string) => customizeRating((r) => (r.hintPenalty = value == \"true\"));\r\n\r\n    return (\r\n        <div className=\"ui left quickstart\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => setToggle(!toggle)}>{toggle ? \"🗙\" : \"☰\"}</button>\r\n            </div>\r\n            <div className=\"title\">{toggle ? \"Customize Rating\" : \"Rating\"}</div>\r\n            {toggle ? (\r\n                <div className=\"content\">\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Undo Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">\r\n                                Should there be a penalty for the UNDO operation? This penalty increases exponentially.\r\n                            </div>\r\n                            <select onChange={(e) => setUndoPenalty(e.target.value)} value={String(!!context.ratingSettings.undoPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Time Rating</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">\r\n                                Should the performance be part of the final rating, according to the rules described{\" \"}\r\n                                <a href=\"https://en.wikipedia.org/wiki/Klondike_(solitaire)#Scoring\" rel=\"noreferrer\" target=\"_blank\">\r\n                                    here\r\n                                </a>\r\n                                ?\r\n                            </div>\r\n                            <select onChange={(e) => setTimeRating(e.target.value)} value={String(!!context.ratingSettings.timedMode)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Hint Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should there be a penalty for the HINT operation? This penalty does not increase.</div>\r\n                            <select onChange={(e) => setHintPenalty(e.target.value)} value={String(!!context.ratingSettings.hintPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Miss Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should there be a penalty for attempting to perform invalid actions?</div>\r\n                            <select onChange={(e) => setMissPenalty(e.target.value)} value={String(!!context.ratingSettings.missPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"content center\">\r\n                    <div>\r\n                        {RatingPresets.all.map((preset) => (\r\n                            <button className={getButtonClass(preset.id)} key={preset.id} onClick={() => applyPreset(preset.id)}>\r\n                                {preset.icon}\r\n                                <div>{preset.label}</div>\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","const TouchDetector = ()  => {\r\n    try {\r\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n        const mq = (query) => window.matchMedia(query).matches;\r\n\r\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n            return true;\r\n        }\r\n\r\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n    } catch (e) {\r\n        console.error(\"(Touch detect failed)\", e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default TouchDetector;","import \"../../Style/Screens.scss\";\r\nimport \"../../Style/Menu.css\";\r\n\r\nimport { AppState, StartScreenState } from \"../../../Common\";\r\n\r\nimport Difficulty from \"./Difficulty\";\r\nimport DifficultyOptions from \"./DifficultyOptions\";\r\nimport { Provider } from \"./Context\";\r\nimport QuickStart from \"./QuickStart\";\r\nimport Rating from \"./Rating\";\r\nimport RatingPresets from \"./RatingOptions\";\r\nimport React from \"react\";\r\nimport TouchDetector from \"./TouchDetector\";\r\n\r\ninterface StartScreenProps {\r\n    start: (settings: AppState) => void;\r\n}\r\n\r\nconst StartScreen = (props: StartScreenProps) => {\r\n    const start = () => {\r\n        const settings = {\r\n            ...DifficultyOptions[state.difficultySettings].settings,\r\n            ...state.ratingSettings,\r\n            isTouch: state.isTouch,\r\n        };\r\n        props.start(settings);\r\n    };\r\n    const [state, setState] = React.useState<StartScreenState>({\r\n        ratingSettings: { ...RatingPresets.all[1].settings },\r\n        difficultySettings: 1,\r\n        ratingPreset: 1,\r\n        isTouch: TouchDetector(),\r\n    });\r\n    return !props || !props.start ? null : (\r\n        <Provider value={{ state, setState }}>\r\n            <div>\r\n                <Rating />\r\n                <Difficulty />\r\n                <QuickStart start={start} />\r\n            </div>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default StartScreen;\r\n","import \"./View/Style/App.css\";\r\nimport \"./View/Style/UI.css\";\r\n\r\nimport { AppState } from \"./Common\";\r\nimport BoardWrap from \"./View/Game/BoardWrap\";\r\nimport React from \"react\";\r\nimport StartScreen from \"./View/UI/StartScreen/StartScreen\";\r\n\r\nconst App = () => {\r\n    const [appState, setAppState] = React.useState<AppState>({});\r\n    const start = (settings: AppState) =>\r\n        setAppState({\r\n            ...settings,\r\n            initialized: true,\r\n        });\r\n    const restart = () => setAppState({});\r\n    return !appState.initialized ? <StartScreen start={start} /> : <BoardWrap settings={appState} restart={restart} />;\r\n};\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}