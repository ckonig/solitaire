{"version":3,"sources":["View/Clock.js","View/Footer.js","View/BlinkingComponent.js","View/Card.js","View/StackBase.js","View/TouchAwareComponent.js","View/TouchHand.js","View/Foundation.js","View/MouseHand.js","View/Stock.js","View/Tableau.js","View/Waste.js","Board.js","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","Model/Game/Foundation.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Stock.js","Model/Game/Tableau.js","Model/Game/Waste.js","Model/Facade.js","Service/BaseService.js","Service/Foundation.js","Service/Stock.js","Service/Tableau.js","Service/Waste.js","Service/Facade.js","App.js","index.js"],"names":["Clock","props","state","timeElapsed","setInterval","setState","msec","end","Date","now","started","hh","Math","floor","mm","ss","className","this","Component","Footer","model","points","isEnded","onClick","reset","undo","undoLabel","href","BlinkingComponent","blinkFor","unblink","Card","type","icon","isSelected","blink","style","zIndex","offsetTop","top","isHidden","face","StackBase","classname","children","TouchAwareComponent","isTouch","is_touch_device","prefixes","split","window","DocumentTouch","document","query","join","matchMedia","matches","e","console","error","source","hand","isHoldingCard","TouchHand","parent","stack","map","card","index","offset","c","Foundation","length","MouseHand","myRef","React","createRef","node","current","addEventListener","x","clientX","y","clientY","left","position","evtobj","event","keyCode","ctrlKey","ref","Stock","Tableau","getOffset","i","Waste","Board","render","handlers","stock","clickStock","waste","clickWaste","foundation","stacks","clickFoundation","tableau","clickTableau","game","equals","other","otherCard","copy","orig","copyAll","cards","DeckSize","Suits","heart","color","club","diamond","spade","Deck","keys","Object","deckSize","key","flat","shuffleArray","array","j","random","getCurrentAccepted","currentFoundation","acceptedCards","accepts","currentAccepted","add","push","usedCards","pop","remove","getTop","getPreviousUsed","countCards","f","parseInt","reduce","a","b","suit","slice","reverse","origStack","Game","popPreviousState","id","isRequested","previousStates","popPrevious","previous","memorable","modelEquals","min","pow","multiplicator","modified","target","currentMove","rateMove","every","stackEquals","stacksEqual","debug","move","sourceIsTableau","substr","targetIsTableau","sourceIsFoundation","targetIsFoundation","Hand","currentCard","hasMoreThanOneCard","isFromCurrentSource","splice","isOnTop","element","getStack","range","indexOf","popWithFollowing","uncover","concat","setCardProperties","TableauGenerator","generateStacks","deck","pointer","oldpointer","ids","template","forEach","generateStack","tryPutDown","canAdd","popTop","recycle","Facade","getInitialState","Service","stateholder","dispatchPutDown","_setState","_dispatchPutDown","dispatchPickup","_dispatchPickup","_blink","selector","startBlink","registerBlink","setTimeout","toggleBlink","Model","pushPreviousState","_card","src","putDown","registerMove","tryDetectEnd","pickUp","registerPickup","s","moveToWaste","recycleWaste","registerRecycle","canPutDown","tryUncover","registerUncover","currentState","handler","App","getHandlers","subscribe","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84999e70.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeElapsed: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            this.setState((state) => {\r\n                //@todo padleft or string format : 00:01\r\n                let msec = (this.props.end || Date.now()) - this.props.started;\r\n                const hh = Math.floor(msec / 1000 / 60 / 60);\r\n                msec -= hh * 1000 * 60 * 60;\r\n                const mm = Math.floor(msec / 1000 / 60);\r\n                msec -= mm * 1000 * 60;\r\n                const ss = Math.floor(msec / 1000);\r\n                msec -= ss * 1000;\r\n                state.timeElapsed = hh ? hh + \":\" + mm + \":\" + ss : mm + \":\" + ss;\r\n                return { ...state };\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return <span className={this.props.className}>Time Elapsed: {this.state.timeElapsed}</span>;\r\n    }\r\n}\r\n","import Clock from \"./Clock\";\r\nimport React from \"react\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-grid-container\">\r\n                <span>Points: {props.model.points}</span>\r\n                <Clock className=\"clock\" started={props.model.started} end={props.model.end} />\r\n                <span>Is Ended: {props.model.isEnded ? \"Y\" : \"N\"}</span>\r\n                <button onClick={props.reset}>reset</button>\r\n                <button onClick={props.undo}>undo (penalty:-{props.undoLabel()})</button>\r\n                <span className=\"report\">\r\n                    Report Issues <a href=\"https://github.com/ckonig/solitaire/issues\">here</a>.\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Footer;\r\n","import { Component } from \"react\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    componentDidUpdate() {\r\n        if (this.props.model.blinkFor) {\r\n            this.props.model.unblink();\r\n        }\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const model = props.model;\r\n    let className = \"card card-base suit-\" + model.type.icon;\r\n    className += props.isSelected ? \" card-selected\" : \"\";\r\n    className += props.blink ? \" blink\" : \"\";\r\n    const style = {\r\n        zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n        top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n    };\r\n    return (\r\n        <div className=\"stack-base\">\r\n            <div style={style} className={className} onClick={() => props.onClick({ ...model })}> \r\n                {model.isHidden ? (\r\n                    <div className=\"card-back quarot\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base socket-empty\";\r\n    if (props.blink) {\r\n        classname += \" blink\";\r\n    }\r\n    return (\r\n        <div className={classname} onClick={() => props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import { Component } from \"react\";\r\n\r\nexport default class TouchAwareComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isTouch = this.is_touch_device();\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = (query) => window.matchMedia(query).matches;\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    shouldShowHand(source) {\r\n        return this.isTouch && this.props.hand.isHoldingCard() && this.props.hand.source === source;\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport TouchAwareComponent from \"./TouchAwareComponent\";\r\n\r\nexport default class TouchHand extends TouchAwareComponent {\r\n    render() {\r\n        if (!this.isTouch || !this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card\r\n                            model={card}\r\n                            key={index}\r\n                            offsetTop={this.props.offset + index * 20}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                            onClick={(c) => this.props.onClick(c)}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick()}>\r\n                    <div className={\"align-center foundation-base suit-\" + props.model.icon}>{props.model.icon}</div>\r\n                </StackBase>\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} blink={props.model.blinkFor} onClick={props.onClick} />\r\n                ))}\r\n                <TouchHand\r\n                    parent={\"foundation-\" + props.index}\r\n                    hand={props.hand}\r\n                    onClick={() => props.onClick(props.model.stack[props.model.stack.length - 1])}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport TouchAwareComponent from \"./TouchAwareComponent\";\r\n\r\nexport default class MouseHand extends TouchAwareComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.isTouch) {\r\n            const node = this.myRef.current;\r\n            document.addEventListener(\"mousemove\", (e) => {\r\n                const x = e.clientX,\r\n                    y = e.clientY;\r\n                node.style.top = y + 25 + \"px\";\r\n                node.style.left = x + 25 + \"px\";\r\n                node.style.position = \"relative\";\r\n            });\r\n\r\n            document.addEventListener(\"keydown\", (e) => {\r\n                const evtobj = window.event ? event : e;\r\n                if (evtobj.keyCode == 90 && evtobj.ctrlKey) this.props.undo();\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.isTouch ? null : (\r\n            <div ref={this.myRef}>\r\n                {this.props.stack &&\r\n                    this.props.stack.map((card, index) => (\r\n                        <Card\r\n                            model={card}\r\n                            key={\"H\" + index}\r\n                            onClick={() => {\r\n                                console.error(\"clicked card in mouse hand\");\r\n                            }}\r\n                            offsetTop={index * 20}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} blink={props.model.blinkFor} source=\"main\" onClick={props.onClick} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            let i = 0;\r\n            while (i <= index) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n                i++;\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick(null, \"tableau-\" + props.index)} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} blink={props.model.blinkFor} offsetTop={getOffset(index)} onClick={props.onClick} />\r\n                ))}\r\n                <TouchHand\r\n                    parent={\"tableau-\" + props.index}\r\n                    hand={props.hand}\r\n                    offset={getOffset(props.model.stack.length)}\r\n                    onClick={() => props.onClick(props.model.stack[props.model.stack.length - 1])}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} blink={props.model.blinkFor} onClick={(c) => props.onClick(c)} />\r\n                ))}\r\n                <TouchHand parent=\"waste\" hand={props.hand} onClick={(c) => props.onClick(c, \"waste\")} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport { Component } from \"react\";\r\nimport Footer from \"./View/Footer\";\r\nimport Foundation from \"./View/Foundation\";\r\nimport Hand from \"./View/MouseHand\";\r\nimport React from \"react\";\r\nimport Stock from \"./View/Stock\";\r\nimport Tableau from \"./View/Tableau\";\r\nimport Waste from \"./View/Waste\";\r\n\r\nexport default class Board extends Component {\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <Hand stack={this.props.model.hand.stack} undo={this.props.handlers.undo} />\r\n                <div className=\"layout-grid-container\">\r\n                    <Stock model={this.props.model.stock} onClick={this.props.handlers.clickStock} />\r\n                    <Waste model={this.props.model.waste} hand={this.props.model.hand} onClick={this.props.handlers.clickWaste} />\r\n                    <div className=\"spacer\">&nbsp;</div>\r\n                    {this.props.model.foundation.stacks.map((foundation, index) => (\r\n                        <Foundation\r\n                            key={\"f\" + index}\r\n                            index={index}\r\n                            model={foundation}\r\n                            hand={this.props.model.hand}\r\n                            onClick={(c) => this.props.handlers.clickFoundation(c, index)}\r\n                        />\r\n                    ))}\r\n                    {this.props.model.tableau.stacks.map((stack, index) => (\r\n                        <Tableau\r\n                            key={\"t\" + index}\r\n                            index={index}\r\n                            model={stack}\r\n                            hand={this.props.model.hand}\r\n                            onClick={(card) => this.props.handlers.clickTableau(card, index)}\r\n                        />\r\n                    ))}\r\n                    <Footer reset={this.props.handlers.reset} undoLabel={this.props.handlers.undoLabel} undo={this.props.handlers.undo} model={this.props.model.game} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n    }\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))]).flat();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor() {\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    //@todo same (similar) in tableau\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0]\r\n        card.source = \"foundation-\" + index;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => {\r\n        return [...this.stacks[index].usedCards].pop();\r\n    };\r\n\r\n    countCards = () => {\r\n        this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation();\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Game {\r\n    constructor() {\r\n        this.points = 0;\r\n        this.started = Date.now();\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove(target, source) {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n\r\n        this.points += this.rateMove(currentMove);\r\n        return true;\r\n    }\r\n\r\n    stackEquals(a, b) {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    }\r\n\r\n    stacksEqual(a, b) {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    }\r\n\r\n    modelEquals(a, b) {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    }\r\n\r\n    pushPreviousState(state) {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    }\r\n\r\n    registerPickup() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        if (previous && previous.game) {\r\n            previous.game.points = Math.min(previous.game.points, this.points) - Math.pow(2, this.multiplicator);\r\n            previous.game.multiplicator = this.multiplicator + 1;\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        if (this.points > 0) {\r\n            if (this.points < 100) {\r\n                this.points = 0;\r\n            } else {\r\n                this.points -= 100;\r\n            }\r\n        }\r\n        console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n    }\r\n\r\n    registerUncover() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n        return true;\r\n    }\r\n\r\n    registerBlink() {\r\n        console.debug(\"BLINK INVALIDATES ALL MOVES\");\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    rateMove(move) {\r\n        const sourceIsTableau = move.source.substr(0, 7) == \"tableau\";\r\n        const targetIsTableau = move.target.substr(0, 7) == \"tableau\";\r\n        const sourceIsFoundation = move.source.substr(0, 10) == \"foundation\";\r\n        const targetIsFoundation = move.target.substr(0, 10) == \"foundation\";\r\n        if (sourceIsTableau) {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (sourceIsFoundation) {\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game();\r\n        copy.points = orig.points;\r\n        copy.started = orig.started;\r\n        copy.modified = orig.modified;\r\n        copy.multiplicator = orig.multiplicator;\r\n        copy.memorable = orig.memorable;\r\n        copy.previousStates = [...orig.previousStates];\r\n        return copy;\r\n    };\r\n}\r\n","export default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n    }\r\n\r\n    pickUp(stack, source) {\r\n        if (stack) {\r\n            this.stack = stack;\r\n            this.source = source;\r\n        }\r\n\r\n        return stack;\r\n    }\r\n\r\n    putDown() {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    }\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    static copy = () => {\r\n        const copy = new Hand();\r\n        return copy;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack) {\r\n        this.stack = [...stack];\r\n    }\r\n\r\n    recycle(waste) {\r\n        if (waste.length) {\r\n            this.stack = [...waste].reverse().map((element) => {\r\n                return { ...element, isHidden: true };\r\n            });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([]);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    constructor(cards) {\r\n        this.stacks = !cards ? [] : new TableauGenerator().generateStacks(cards);\r\n    }\r\n\r\n    getStack = (index) => {\r\n        return this.stacks[index];\r\n    };\r\n\r\n    accepts = (index, current) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face == \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color != top.type.color;\r\n    };\r\n\r\n    popWithFollowing = (card, i) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                return this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index, card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        //this.stacks[index].stack.push(cards.map((c) => this.setCardProperties(c, index))); //@todo investigate why this doesn't work\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card, index) => {\r\n        card.source = \"tableau-\" + index;\r\n        return card;\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Tableau([]);\r\n        copy.stacks = orig.stacks.map(stack => ({stack: Card.copyAll(stack.stack)}));\r\n        return copy;\r\n    }\r\n}\r\n\r\nclass TableauGenerator {\r\n    generateStacks = (deck) => {\r\n        this.deck = deck;\r\n        this.pointer = 0;\r\n        this.oldpointer = this.pointer;\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => this.template(id));\r\n        ids.reverse().forEach((id) => {\r\n            this.generateStack(id);\r\n        });\r\n        return this.stacks;\r\n    };\r\n\r\n    template = (id) => ({\r\n        stack: [],\r\n        id,\r\n    });\r\n\r\n    generateStack = (id) => {\r\n        this.pointer += 6 - id + 1;\r\n        this.stacks[id].stack = this.deck\r\n            .slice(this.oldpointer, this.pointer)\r\n            .map((c) => ({\r\n                ...c,\r\n                isHidden: true,\r\n                source: \"tableau-\" + id,\r\n            }))\r\n            .reverse();\r\n        if (this.stacks[id].stack[this.stacks[id].stack.length - 1]) {\r\n            this.stacks[id].stack[this.stacks[id].stack.length - 1].isHidden = false;\r\n        }\r\n        this.oldpointer = this.pointer;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor() {\r\n        this.stack = [];\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        return card;\r\n    };\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    }\r\n}\r\n","import Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Facade {\r\n    static getInitialState = (deck) => {\r\n        const state = {\r\n            stock: new Stock([...deck.cards.slice(28)]),\r\n            waste: new Waste(),\r\n            foundation: new Foundation(),\r\n            tableau: new Tableau([...deck.cards.slice(0, 28)]),\r\n            hand: new Hand(),\r\n            game: new Game(),\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n        };\r\n    };\r\n}\r\n","import Model from \"../Model/Facade\";\r\n\r\nexport default class Service {\r\n    constructor(stateholder) {\r\n        this._setState = (a, b) =>\r\n            stateholder.setState((state) => {\r\n                state.game.modified = false;\r\n                const previous = Model.copy(state);\r\n                a(state);\r\n                if (state.game.modified) {\r\n                    state.game.pushPreviousState(previous);\r\n                    return { ...state };\r\n                }\r\n\r\n                // @todo enable undoing via browser back gesture/button\r\n                return null;\r\n            }, b);\r\n    }\r\n\r\n    dispatchPutDown = (card, index) => {\r\n        this._setState(\r\n            (state) => {\r\n                if (state.hand.isHoldingCard()) {\r\n                    this._dispatchPutDown(card, state, index);\r\n                }\r\n            },\r\n            null,\r\n            true\r\n        );\r\n    };\r\n\r\n    dispatchPickup = (card, index) => {\r\n        this._setState((state) => {\r\n            if (!state.hand.isHoldingCard()) {\r\n                this._dispatchPickup(card, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    _blink = (selector, state) => this.startBlink(selector, 10, state);\r\n\r\n    startBlink = (selector, blinkFor, state) => {\r\n        selector(state).blinkFor = blinkFor;\r\n        state.game.registerBlink();\r\n        selector(state).unblink = () => setTimeout(() => this.toggleBlink(selector, 0), 100);\r\n    };\r\n\r\n    toggleBlink = (selector, blinkFor) =>\r\n        this._setState((state) => {\r\n            selector(state).blinkFor = blinkFor;\r\n            state.game.registerBlink();\r\n        });\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Foundation extends Service {\r\n    _dispatchPutDown = (_card, state, index) => {\r\n        if (!state.hand.hasMoreThanOneCard() && state.foundation.accepts(index, state.hand.currentCard())) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (_card, state, index) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryDetectEnd(state) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n\r\n    blink = (index, state) => this._blink((s) => s.foundation.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Stock extends Service {\r\n    _dispatchPutDown = (card, state) => this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, state) => (card ? this.moveToWaste(card, state) : this.recycleWaste(card, state));\r\n\r\n    moveToWaste = (card, state) =>\r\n        state.stock.isOnTop(card) && state.waste.add(state.stock.stack.pop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    recycleWaste = (_card, state) =>\r\n        !state.stock.getTop() && !!state.waste.getTop() && state.stock.recycle(state.waste.recycle()) && state.game.registerRecycle(state);\r\n\r\n    blink = (_card, state) => this._blink((s) => s.stock, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Tableau extends Service {\r\n    _dispatchPutDown = (card, state, index) => {\r\n        if (this.canPutDown(card, state, index)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    canPutDown = (card, state, index) =>\r\n        (card && card.isHidden && state.hand.isFromCurrentSource(card)) ||\r\n        state.tableau.accepts(index, state.hand.currentCard()) ||\r\n        (!card && state.hand.source == \"tableau-\" + index);\r\n\r\n    _dispatchPickup = (card, state, index) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card, index, state) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover(card, state);\r\n\r\n    blink = (index, state) => this._blink((s) => s.tableau.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Waste extends Service {\r\n    _dispatchPutDown = (card, state) =>\r\n        (state.hand.source == \"waste\" &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, state) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\") && state.game.registerPickup()) || this.blink(card, state);\r\n\r\n    blink = (card, state) => this._blink((s) => s.waste, state);\r\n}\r\n","import Deck from \"../Model/Deck/Deck\";\r\nimport Foundation from \"./Foundation\";\r\nimport Model from \"../Model/Facade\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Facade {\r\n    constructor() {\r\n        this.deck = new Deck();\r\n        //this.deck.shuffle();\r\n    }\r\n\r\n    getInitialState = () => Model.getInitialState(this.deck);\r\n\r\n    getHandlers(stateholder, state) {\r\n        let handler = \"dispatchPickup\";\r\n        if (state && state.hand && state.hand.isHoldingCard()) {\r\n            handler = \"dispatchPutDown\";\r\n        }\r\n\r\n        return {\r\n            clickTableau: new Tableau(stateholder)[handler],\r\n            clickFoundation: new Foundation(stateholder)[handler],\r\n            clickStock: new Stock(stateholder)[handler],\r\n            clickWaste: new Waste(stateholder)[handler],\r\n            undo: () => this.undo(state.game.previousStates.length - 1, stateholder, state),\r\n            reset: () => this.reset(stateholder),\r\n            undoLabel: () => Math.pow(2, stateholder.state.game.multiplicator),\r\n        };\r\n    }\r\n\r\n    reset = (stateholder) => {\r\n        stateholder.setState(() => ({ ...this.getInitialState() }));\r\n    };\r\n\r\n    undo = (id, stateholder, currentState) => {\r\n        stateholder.setState((state) => {\r\n            const previous = state.game.popPreviousState(id, currentState);\r\n            if (previous) {\r\n                return previous;\r\n            }\r\n\r\n            return null;\r\n        });\r\n    };\r\n}\r\n","import \"./App.css\";\r\n\r\nimport Board from \"./Board\";\r\nimport { Component } from \"react\";\r\nimport Game from \"./Service/Facade\";\r\nimport React from \"react\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.game = new Game();\r\n        this.state = this.game.getInitialState(this);\r\n    }\r\n\r\n    render() {\r\n        const handlers = this.game.getHandlers(this, this.state);\r\n        return <Board subscribe={this.subscribe} model={this.state} game={this.game} handlers={handlers} />;\r\n    }\r\n}\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}