{"version":3,"sources":["View/AspectRatio/AspectRatio.tsx","Model/Deck/Deck.js","GameModes.tsx","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/ControlsPresets.ts","View/UI/StartScreen/Screens/Context.ts","View/UI/StartScreen/Screens/CloseButton.tsx","View/UI/StorageManager.ts","View/UI/StartScreen/Screens/ScreenElement.ts","View/UI/StartScreen/Screens/CookieBanner.tsx","View/UI/StartScreen/Screens/Row.tsx","View/UI/StartScreen/Screens/ScreenNavigator.ts","View/UI/StartScreen/Screens/ScreenContent.tsx","View/UI/StartScreen/Screens/ScreenMainButton.tsx","View/UI/StartScreen/Screens/Controls.tsx","View/UI/StartScreen/Screens/Difficulty.tsx","View/UI/StartScreen/Screens/ScreenSelect.tsx","View/UI/StartScreen/Screens/ScreenToggle.tsx","View/UI/StartScreen/Screens/QuickStart.tsx","View/UI/StartScreen/Screens/Rating.tsx","View/UI/StartScreen/Screens/Suggestions.tsx","View/UI/StartScreen/Screens/Screen.tsx","View/UI/StartScreen/Menu/VerticalMenu.tsx","View/UI/StartScreen/Menu/StartMenu.tsx","View/UI/StartScreen/Home.tsx","View/AspectRatio/Ratios.ts","App.tsx","View/Context.ts","View/UI/StartScreen/TouchDetector.js","View/UI/StartScreen/Context.ts","Model/Deck/Card.js","Model/Game/Settings/SuggestionModes.ts","View/PauseContext.tsx","View/Game/KeyboardLayouts.ts","Model/Deck/DeckSize.ts","View/Game/GamePad.js","Common.ts","Model/Deck/Suits.ts","View/UI/StartScreen/RatingOptions.ts","View/UI/StartScreen/Screens/NavWrapper.tsx","View/Game/Keyboard.js","Model/Game/Settings/EntropyLevels.ts","View/UI/StartScreen/Menu/MenuButton.tsx","View/UI/StartScreen/Menu/MenuTitle.tsx","View/UI/StartScreen/Menu/TreeNavigator.ts","View/UI/StartScreen/Menu/MenuTree.tsx"],"names":["AspectRatio","props","state","width","height","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","suffix","ratio","multiplier","className","prefix","children","React","Component","Deck","keys","Object","Suits","cards","DeckSize","map","deckSize","key","Card","flat","reverse","shuffleArray","array","i","length","j","Math","floor","random","result","copyAll","GameModes","QUICK","title","boardMode","autoConfig","CUSTOM","VERSUS","NULL","DifficultyOptions","id","settings","drawMode","recyclingMode","icon","lines","ControlPresets","inputMethod","inputLayout","ScreenContext","createContext","closeScreen","CloseButton","useContext","onClick","StorageManager","hasConsent","consent","localStorage","getItem","parseInt","giveConsent","prompt","confirm","setItem","revokeConsent","clear","store","value","JSON","stringify","getPreviousState","parse","getScreenElementClassName","base","hasFocus","disabled","useFocusEffect","inputEl","useEffect","current","document","activeElement","focus","RenderCookieBanner","navigation","NavigationContext","y","x","screen","useRef","consented","ref","setConsented","CookieBanner","CookieContext","Row","navigator","addElement","child","index","skip","rows","buttons","cloneElement","Array","isArray","ScreenNavigator","getRows","getRow","goToRow","pos","row","moveUp","moveDown","moveLeft","moveRight","action","click","ScreenContent","_index","_i","addRow","NavWrapper","ScreenMainButton","setNavigation","autoFocus","onFocus","line","Controls","StartScreenContext","player","players","useState","found","buttonPressed","pads","setPads","connect","press","console","log","playerHasSettings","playerId","isActive","applyPreset","nextPlayer","getButtonClass","blockedByOtherPlayers","otherPlayers","filter","p","getLines","preset","name","slice","GamePad","gamepadIndex","onConnect","onUp","onDown","onRight","onLeft","onAction","Difficulty","difficultySettings","renderButton","button","_ScreenSelect","label","values","callBack","toString","description","ScreenSelect","_ScreenToggle","useInitialFocus","checked","onChange","val","ScreenToggle","optimizeOptions","entropy","quickDeal","QuickStart","getClassName","entropySettings","baseEntropy","interactionEntropy","EntropyLevels","Rating","ratingPreset","customizeRating","modifier","next","ratingSettings","RatingPresets","matchPreset","ALL","apply","undoPenalty","r","timedMode","hintPenalty","ratingModifier","customizeRating2","s","suggestionMode","SuggestionModes","NONE","REGULAR","missPenalty","Suggestions","suggestionModes","allSuggestionModes","isDisabled","mode","Screen","Provider","screeen","mainMenu","menu","VerticalMenu","StartMenu","switchToMenu","onfocus","toggleScreen","switchToScreen","toggleMainMenu","storage","MenuTitle","MenuTree","keyboardLayout","Universal","MenuButton","start","toggled","revoke","Home","previous","defaultStartScreenState","startPos","startScreenContext","navigationContext","cookieContext","initialized","inputMode","Ratios","_16to9","_4to3","App","started","setStarted","defaultState","defaultPlayerSettings","launchState","setLaunchState","restart","deck","shuffle","BoardWrap","lazy","board","copy","DelayedSuspense","Date","now","defaultValue","replaceContext","updateContext","updateGameContext","GlobalContext","CookieContextProvider","TouchDetector","prefixes","split","DocumentTouch","query","join","matchMedia","matches","e","error","NavigationProvider","face","type","isHidden","causeEntropy","lvl","level","randomInt","min","max","entropyStyle","equals","other","source","suggestion","canClick","_p","card","otherCard","orig","SuggestionMode","obj","isTemporary","supportsHints","SCORED","FULL","ONCE","TWICE","raw","get","all","default","getHintMode","defaultPauseState","end","paused","pauses","pauseStartedAt","allowed","pausedBy","showMenu","defaultPauseContext","togglePause","getElapsed","PauseContext","PauseContextProvider","PauseProvider","setPaused","context","isPaused","padleft","msec","reduce","a","b","getElapsedMs","hh","mm","ss","getKeyboardLayout","Wasd","Arrows","NumPad","up","keyCode","down","right","left","cancel","undo","ctrlKey","hint","pause","getFoundationOrder","getTableauOrder","onButtonDown","debug","onCancel","onHint","onUndo","onPause","onMenu","onDisconnect","0","1","heart","color","club","diamond","spade","after","CHILL","COMPETITIVE","filterd","s1","s2","assignState","layout","TreeNavWrapper","Keyboard","navListener","evtobj","event","preventDefault","_MenuButton","menuX","menuY","menuFocus","setClicking","active","isClicking","onMouseDown","TreeNavigator"],"mappings":"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","file":"static/js/2.e37d2c74.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./16to9.css\";\r\nimport \"./4to3.css\";\r\nimport \"./aspectratio.css\";\r\nimport { Ratio } from \"./Ratios\";\r\n\r\nexport default class AspectRatio extends React.Component<{ ratio: Ratio }, { width: number; height: number }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { width: 0, height: 0 };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    render() {\r\n        const suffix = this.state.width >= this.state.height * this.props.ratio.multiplier ? \"landscape\" : \"portrait\";\r\n        return (\r\n            <div className=\"appwrapper\">\r\n                <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix}>\r\n                    <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix + \"-inner\"}>\r\n                        <div className=\"appwrapper-jail\">{this.props.children}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\r\n            .flat()\r\n            .reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    copy() {\r\n        const result = new Deck();\r\n        result.cards = Card.copyAll(this.cards);\r\n        return result;\r\n    }\r\n}\r\n","//@todo deprecate\r\n\r\nexport interface GameMode {\r\n    key: string;\r\n    title: string;\r\n    boardMode: string;\r\n    autoConfig: boolean;\r\n}\r\n\r\nexport default class GameModes {\r\n    static QUICK: GameMode = {\r\n        key: \"QUICK\",\r\n        title: \"Quick Game\",\r\n        boardMode: \"singleplayer\",\r\n        autoConfig: true,\r\n    };\r\n    static CUSTOM: GameMode = {\r\n        key: \"CUSTOM\",\r\n        title: \"Custom Game\",\r\n        boardMode: \"singleplayer\",\r\n        autoConfig: false,\r\n    };\r\n    static VERSUS: GameMode = {\r\n        key: \"VERSUS\",\r\n        title: \"Versus\",\r\n        boardMode: \"splitscreen\",\r\n        autoConfig: false,\r\n    };\r\n    static NULL: GameMode = {\r\n        key: \"\",\r\n        title: \"\",\r\n        boardMode: \"\",\r\n        autoConfig: false,\r\n    };\r\n}\r\n","export interface DifficultyOption {\r\n    id: number;\r\n    settings: {\r\n        drawMode: string;\r\n        recyclingMode: string;\r\n    };\r\n    icon: string;\r\n    lines: string[];\r\n}\r\nconst DifficultyOptions: DifficultyOption[] = [\r\n    {\r\n        id: 0,\r\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\r\n        icon: \"🐭\",\r\n        lines: [\"Turn 1 card\", \"No Limit\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐹\",\r\n        lines: [\"Turn 1 card\", \"Three passes\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐰\",\r\n        lines: [\"Turn 1 card\", \"Only a single pass\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\r\n        icon: \"🐨\",\r\n        lines: [\"Turn 3 cards\", \"No limit\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐼\",\r\n        lines: [\"Turn 3 cards \", \"Three passes\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐻\",\r\n        lines: [\"Turn 3 cards \", \"Only a single pass\"],\r\n    },\r\n];\r\n\r\nexport default DifficultyOptions;\r\n","export interface IControlPreset {\r\n    id: number;\r\n    icon: string;\r\n    inputMethod: string;\r\n    inputLayout: number;\r\n    lines: string[],\r\n}\r\nexport const ControlPresets: IControlPreset[] = [\r\n    {\r\n        id: 0,\r\n        icon: \"🖱️\",\r\n        inputMethod: \"mouse\",\r\n        inputLayout: 0,\r\n        lines: [\"Mouse or\", \"Touchpad\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: \"🎮\",\r\n        inputMethod: \"gamepad\",\r\n        inputLayout: 0,\r\n        lines: [\"Gamepad 1\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        icon: \"🎮\",\r\n        inputMethod: \"gamepad\",\r\n        inputLayout: 1,\r\n        lines: [\"Gamepad 2\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        icon: \"⌨️\",\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 0,\r\n        lines: [\"Keyboard\", \"WASD\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        icon: \"⌨️\",\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 1,\r\n        lines: [\"Keyboard\", \"ARROWS\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        icon: \"⌨️\",\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 2,\r\n        lines: [\"Keyboard\", \"NUMPAD\"],\r\n    },\r\n];\r\n","import React from \"react\";\r\n\r\ninterface IScreenContext {\r\n    closeScreen: () => void;\r\n}\r\n\r\nconst ScreenContext = React.createContext<IScreenContext>({\r\n    closeScreen: () => {},\r\n});\r\n\r\nexport default ScreenContext;\r\n","import React from \"react\";\r\nimport ScreenContext from \"./Context\";\r\n\r\nconst CloseButton = () => {\r\n    const { closeScreen } = React.useContext(ScreenContext);\r\n    return (\r\n        <div className=\"closer\">\r\n            <button onClick={closeScreen}>🗙</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CloseButton;\r\n","import { StartScreenState } from \"./StartScreen/Context\";\r\n\r\nexport default class StorageManager {\r\n    hasConsent = () => {\r\n        const consent = localStorage.getItem(\"consent\");\r\n        return consent && !!parseInt(consent);\r\n    };\r\n\r\n    giveConsent = () => ({\r\n        prompt: \"Allow this game to store settings, so your changes will stay. No data leaves your computer.\",\r\n        confirm: () => {\r\n            localStorage.setItem(\"consent\", \"1\");\r\n        },\r\n    });\r\n    revokeConsent = () => ({\r\n        prompt: \"Delete all local stored data? All settings will be lost.\",\r\n        confirm: () => {\r\n            localStorage.clear();\r\n        },\r\n    });\r\n\r\n    store = (value: StartScreenState) => {\r\n        if (this.hasConsent()) {\r\n            localStorage.setItem(\"state\", JSON.stringify(value));\r\n        }\r\n    };\r\n\r\n    getPreviousState = () => {\r\n        if (this.hasConsent()) {\r\n            const state = localStorage.getItem(\"state\");\r\n            return state != null ? JSON.parse(state) : null;\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { XY } from \"../../XY\";\r\n\r\nexport interface Focusable {\r\n    hasFocus: boolean;\r\n    autoFocus?: boolean;\r\n}\r\n\r\nexport interface MenuInpputElementProps extends Focusable {\r\n    disabled?: boolean;\r\n}\r\n\r\nexport const getScreenElementClassName = (base: string, props: MenuInpputElementProps) => {\r\n    let className = base;\r\n    if (props.hasFocus) {\r\n        className += \" focused\";\r\n    }\r\n    if (props.disabled) {\r\n        className += \" disabled\";\r\n    }\r\n    return className;\r\n};\r\n\r\nexport const useFocusEffect = (props: Focusable, inputEl: React.RefObject<HTMLElement>) => {\r\n    React.useEffect(() => {\r\n        if (props.hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [props.hasFocus, inputEl]);\r\n};\r\nexport const useInitialFocus = (props: Focusable, inputEl: React.RefObject<HTMLElement>, pos: XY) => {\r\n    React.useEffect(() => {\r\n        if (\r\n            props.autoFocus &&\r\n            !props.hasFocus &&\r\n            inputEl &&\r\n            inputEl.current &&\r\n            inputEl.current !== document.activeElement &&\r\n            pos.x == -1 &&\r\n            pos.y == -1\r\n        ) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [inputEl]);\r\n};\r\n","import StorageManager from \"../../StorageManager\";\r\nimport React from \"react\";\r\nimport { CookieContext, ICookieContext } from \"../../../Context\";\r\nimport { useFocusEffect } from \"./ScreenElement\";\r\nimport { XY } from \"../../XY\";\r\nimport {NavigationContext} from \"../Context\";\r\n\r\ninterface RenderCookieBannerProps extends ICookieContext, XY {}\r\n\r\nconst RenderCookieBanner = (props: RenderCookieBannerProps) => {\r\n    const { navigation } = React.useContext(NavigationContext);\r\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    useFocusEffect({ hasFocus: hasFocus(props.y, props.x) }, inputEl);\r\n    let className = \"cookiebanner\";\r\n    if (hasFocus(props.y, props.x)) {\r\n        className += \" focused\";\r\n    }\r\n    return !props.consented ? (\r\n        <button\r\n            ref={inputEl}\r\n            className={className}\r\n            onClick={() => {\r\n                const storage = new StorageManager();\r\n                const consent = storage.giveConsent();\r\n                if (!props.consented && confirm(consent.prompt)) {\r\n                    consent.confirm();\r\n                    props.setConsented(true);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"icon\">🍪</div>\r\n            <div className=\"message\">\r\n                <b>Changes on this page will be lost after each game</b>, until you allow this app to store data on your machine. Click here\r\n                to give consent.\r\n            </div>\r\n        </button>\r\n    ) : null;\r\n};\r\n\r\nconst CookieBanner = (props: { x?: number; y?: number }) => {\r\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\r\n        return null;\r\n    }\r\n    const { consented, setConsented } = React.useContext(CookieContext);\r\n    return <RenderCookieBanner x={props.x} y={props.y} consented={consented} setConsented={setConsented} />;\r\n};\r\n\r\nexport default CookieBanner;\r\n","import React from \"react\";\r\nimport { ScreenNavigator } from \"./ScreenNavigator\";\r\n\r\nconst Row = (props: { skip?: boolean; y?: number; navigator?: ScreenNavigator; children?: any[] | any | undefined }) => {\r\n    if (typeof props.y == \"undefined\" || typeof props.navigator == \"undefined\") {\r\n        return null;\r\n    }\r\n    const addElement = (child: any, index: number) => {\r\n        if (!child) return null;\r\n        const assign = (n: any[]) => {\r\n            n[props.y || 0].buttons[index || 0] = { x: index, y: props.y };\r\n        };\r\n        if (!props.skip) {\r\n            assign(props.navigator?.rows || []);\r\n        }\r\n        return React.cloneElement(child, { key: index, x: index, y: props.y });\r\n    };\r\n    return !props.children ? null : (\r\n        <div className=\"row\">{Array.isArray(props.children) ? props.children.map(addElement) : addElement(props.children, 0)}</div>\r\n    );\r\n};\r\nexport default Row;\r\n","import { XY } from \"../../XY\";\r\nimport { NavHandler } from \"../../NavHandler\";\r\n\r\nexport class ScreenNavigator implements NavHandler {\r\n    rows: any[];\r\n    constructor() {\r\n        this.rows = [];\r\n    }\r\n    getRows = () => this.rows;\r\n    getRow = (x: number) => this.getRows()[x];\r\n    goToRow = (pos: XY) => {\r\n        const rows = this.getRows();\r\n        const row = rows[pos.y];\r\n        if (row.buttons.length - 1 < pos.x) {\r\n            return { ...pos, x: row.buttons.length - 1 };\r\n        }\r\n\r\n        return pos;\r\n    };\r\n    moveUp: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const rows = this.getRows();\r\n        if (y == 0) {\r\n            return this.goToRow({ x: x, y: rows.length - 1 });\r\n        }\r\n        return this.goToRow({ x: x, y: y - 1 });\r\n    };\r\n    moveDown: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const rows = this.getRows();\r\n        if (y == rows.length - 1) {\r\n            return this.goToRow({ x: x, y: 0 });\r\n        }\r\n        return this.goToRow({ x: x, y: y + 1 });\r\n    };\r\n    moveLeft: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const row = this.getRow(y);\r\n        if (x == 0) {\r\n            return { x: row.buttons.length - 1, y: y };\r\n        }\r\n        return { x: x - 1, y: y };\r\n    };\r\n    moveRight: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const row = this.getRow(y);\r\n        if (x == row.buttons.length - 1) {\r\n            return { x: 0, y: y };\r\n        }\r\n        return { x: x + 1, y: y };\r\n    };\r\n    action: (xy: XY) => void = () => {\r\n        const activeElement: any = document.activeElement;\r\n        activeElement && activeElement.click();\r\n    };\r\n}\r\n\r\n\r\n","import NavWrapper from \"./NavWrapper\";\r\nimport React from \"react\";\r\nimport { ScreenNavigator } from \"./ScreenNavigator\";\r\n\r\nconst ScreenContent = (props: { id: string; children: any[] }) => {\r\n    const navigator = new ScreenNavigator();\r\n    let _index = -1;\r\n    let _i = -1;\r\n    const addRow = (child: any) => {\r\n        _i++;\r\n        if (!child.props.skip) {\r\n            _index++;\r\n            navigator.rows[_index] = { buttons: [] };\r\n        }\r\n        return React.cloneElement(child, { key: _i, x: 0, y: _index, navigator: navigator });\r\n    };\r\n    return (\r\n        <div className=\"content\">\r\n            {props.children.map((child) => addRow(child))}\r\n            <NavWrapper navigator={navigator} screen=\"rating\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScreenContent;\r\n","import { NavigationContext } from \"../Context\";\r\nimport React from \"react\";\r\nimport { XY } from \"../../XY\";\r\n\r\ninterface ScreenMainButtonProps {\r\n    x?: number;\r\n    y?: number;\r\n    id: number;\r\n    icon: string;\r\n    className: (pos: XY) => string;\r\n    lines: string[];\r\n    onClick: () => void;\r\n    autoFocus: boolean;\r\n    disabled?: boolean;\r\n}\r\nconst ScreenMainButton = (props: ScreenMainButtonProps) => {\r\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\r\n        return null;\r\n    }\r\n\r\n    const pos = { x: props.x, y: props.y };\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n    const hasFocus = navigation.focus == \"screen\" && navigation.screen.x == props.x && navigation.screen.y == props.y;\r\n    React.useEffect(() => {\r\n        if (hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [inputEl, hasFocus]);\r\n\r\n    React.useEffect(() => {\r\n        if (\r\n            props.autoFocus &&\r\n            !hasFocus &&\r\n            inputEl &&\r\n            inputEl.current &&\r\n            inputEl.current !== document.activeElement &&\r\n            navigation.screen.x == -1 &&\r\n            navigation.screen.y == -1\r\n        ) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [inputEl]);\r\n    const focus = () => {\r\n        if (!hasFocus) {\r\n            setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\r\n        }\r\n    };\r\n    const click = () => {\r\n        props.onClick();\r\n        setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\r\n    };\r\n    return (\r\n        <button\r\n            onFocus={focus}\r\n            ref={inputEl}\r\n            key={props.id}\r\n            disabled={props.disabled}\r\n            className={props.className(pos)}\r\n            onClick={click}\r\n        >\r\n            {props.icon}\r\n            {props.lines.map((line: string, index: number) => (\r\n                <div key={index}>{line}</div>\r\n            ))}\r\n        </button>\r\n    );\r\n};\r\n\r\n\r\nexport default ScreenMainButton;\r\n","import { ControlPresets, IControlPreset } from \"../ControlsPresets\";\r\nimport StartScreenContext, { NavigationContext } from \"../Context\";\r\n\r\nimport CloseButton from \"./CloseButton\";\r\nimport CookieBanner from \"./CookieBanner\";\r\nimport { CookieContext } from \"../../../Context\";\r\nimport GamePad from \"../../../Game/GamePad\";\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport ScreenContent from \"./ScreenContent\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\nimport { XY } from \"../../XY\";\r\n\r\nconst Controls = (props: { player: number }) => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const { navigation } = React.useContext(NavigationContext);\r\n\r\n    const player = state.players[props.player];\r\n\r\n    if (!player) {\r\n        return null;\r\n    }\r\n\r\n    const [pads, setPads] = React.useState([\r\n        {\r\n            found: false,\r\n            buttonPressed: false,\r\n        },\r\n        {\r\n            found: false,\r\n            buttonPressed: false,\r\n        },\r\n    ]);\r\n\r\n    const connect = (i: number) => {\r\n        pads[i].found = true;\r\n        setPads({ ...pads });\r\n    };\r\n\r\n    const press = (i: number) => {\r\n        pads[i].found = true;\r\n        pads[i].buttonPressed = true;\r\n        setPads({ ...pads });\r\n        console.log(pads);\r\n    };\r\n\r\n    const { consented } = React.useContext(CookieContext);\r\n\r\n    const playerHasSettings = (id: number, playerId: number) =>\r\n        state.players[playerId].inputLayout == ControlPresets[id].inputLayout &&\r\n        state.players[playerId].inputMethod == ControlPresets[id].inputMethod;\r\n\r\n    const isActive = (id: number) => playerHasSettings(id, props.player);\r\n\r\n    const applyPreset = (id: number) => {\r\n        const nextPlayer = { ...state.players };\r\n        nextPlayer[props.player].inputMethod = ControlPresets[id].inputMethod;\r\n        nextPlayer[props.player].inputLayout = ControlPresets[id].inputLayout;\r\n        setState({ ...state, players: nextPlayer });\r\n    };\r\n\r\n    const getButtonClass = (id: number, x: number, y: number) => {\r\n        let className = x + \"\" + y + \" \" + navigation.screen.x + \"\" + navigation.screen.y + \" \";\r\n        className += navigation.screen.x == x && navigation.screen.y == y ? \" focused\" : \"\";\r\n        className += isActive(id) ? \" active-0\" : \" inactive-0\";\r\n        className += blockedByOtherPlayers(id) ? \" disabled\" : \"\";\r\n        return className;\r\n    };\r\n\r\n    const blockedByOtherPlayers = (id: number) => {\r\n        const otherPlayers = [0, 1].filter((p) => p !== props.player);\r\n        return playerHasSettings(id, otherPlayers[0]);\r\n    };\r\n\r\n    const getLines = (preset: IControlPreset) => {\r\n        if (preset.inputMethod == \"gamepad\") {\r\n            return [...preset.lines, pads[preset.inputLayout].found || pads[preset.inputLayout].buttonPressed ? \"Connected\" : \"Not Found\"];\r\n        }\r\n        return preset.lines;\r\n    };\r\n\r\n    return (\r\n        <div className=\"controls startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">{player.name}</div>\r\n            <ScreenContent id=\"settings\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    {ControlPresets.slice(0, 3).map((preset) => (\r\n                        <ScreenMainButton\r\n                            key={preset.id}\r\n                            icon={preset.icon}\r\n                            id={preset.id}\r\n                            disabled={blockedByOtherPlayers(preset.id)}\r\n                            autoFocus={isActive(preset.id)}\r\n                            className={(pos: XY) => getButtonClass(preset.id, pos.x, pos.y)}\r\n                            onClick={() => applyPreset(preset.id)}\r\n                            lines={getLines(preset)}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    {ControlPresets.slice(3).map((preset) => (\r\n                        <ScreenMainButton\r\n                            key={preset.id}\r\n                            icon={preset.icon}\r\n                            id={preset.id}\r\n                            disabled={blockedByOtherPlayers(preset.id)}\r\n                            autoFocus={isActive(preset.id)}\r\n                            className={(pos: XY) => getButtonClass(preset.id, pos.x, pos.y)}\r\n                            onClick={() => applyPreset(preset.id)}\r\n                            lines={preset.lines}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row skip={true}>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">@todo</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\r\n                    </div>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">@todo</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\r\n                    </div>\r\n                </Row>\r\n            </ScreenContent>\r\n            <GamePad\r\n                gamepadIndex={0}\r\n                onConnect={() => connect(0)}\r\n                onUp={() => press(0)}\r\n                onDown={() => press(0)}\r\n                onRight={() => press(0)}\r\n                onLeft={() => press(0)}\r\n                onAction={() => press(0)}\r\n            />\r\n            <GamePad\r\n                gamepadIndex={1}\r\n                onConnect={() => connect(1)}\r\n                onUp={() => press(1)}\r\n                onDown={() => press(1)}\r\n                onRight={() => press(1)}\r\n                onLeft={() => press(1)}\r\n                onAction={() => press(1)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Controls;\r\n","import DifficultyOptions, { DifficultyOption } from \"../DifficultyOptions\";\r\nimport StartScreenContext, { NavigationContext } from \"../Context\";\r\n\r\nimport CloseButton from \"./CloseButton\";\r\nimport CookieBanner from \"./CookieBanner\";\r\nimport { CookieContext } from \"../../../Context\";\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport ScreenContent from \"./ScreenContent\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\n\r\nconst Difficulty = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const { navigation } = React.useContext(NavigationContext);\r\n\r\n    const isActive = (id: number) => state.difficultySettings == id;\r\n    \r\n    const getButtonClass = (index: number, y: number, x: number) => {\r\n        const hasFocus = navigation.screen.x == x && navigation.screen.y == y;\r\n        let name = isActive(index) ? `active active-${index}` : `inactive-${index}`;\r\n        name += hasFocus ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    const renderButton = (button: DifficultyOption) => (\r\n        <ScreenMainButton\r\n            key={button.id}\r\n            icon={button.icon}\r\n            id={button.id}\r\n            autoFocus={isActive(button.id)}\r\n            className={(pos) => getButtonClass(button.id, pos.y, pos.x)}\r\n            onClick={() => setState({ ...state, difficultySettings: button.id })}\r\n            lines={button.lines}\r\n        />\r\n    );\r\n\r\n    const { consented } = React.useContext(CookieContext);\r\n\r\n    return (\r\n        <div className=\"difficulty startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Difficulty</div>\r\n            <ScreenContent id=\"difficulty\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>{DifficultyOptions.slice(0, 3).map(renderButton)}</Row>\r\n                <Row>{DifficultyOptions.slice(3).map(renderButton)}</Row>\r\n                <Row skip={true}>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">Draw Mode</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">\r\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode == \"triple\"\r\n                                ? \"Turn 3 cards at once from the Stock to the Waste.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode == \"single\"\r\n                                ? \"Turn 1 card after the other from the Stock to the Waste.\"\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">Pass Limit</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"1-pass\"\r\n                                ? \"One pass through the deck. Waste can not be recycled to the Stock.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"3-pass\"\r\n                                ? \"Three passes through the deck. Waste can be recycled to Stock two times.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"infinite\"\r\n                                ? \"No limit on passes through the deck. Waste can be recycled to Stock endlessly.\"\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Difficulty;\r\n","import React from \"react\";\r\nimport { NavigationContext } from \"../Context\";\r\nimport { getScreenElementClassName, useFocusEffect } from \"./ScreenElement\";\r\n\r\nexport type SelectItem = {\r\n    label: string;\r\n    id: string | number;\r\n};\r\n\r\ninterface StaticSelectProps {\r\n    disabled?: boolean;\r\n    value: number;\r\n    values: SelectItem[];\r\n    label: string;\r\n    description: string;\r\n    callBack: (s: string) => void;\r\n}\r\n\r\ninterface SelectProps extends StaticSelectProps {\r\n    x: number;\r\n    y: number;\r\n    hasFocus: boolean;\r\n}\r\n\r\ninterface _ScreenSelectProps extends StaticSelectProps {\r\n    x?: number;\r\n    y?: number;\r\n}\r\n\r\nconst _ScreenSelect = (props: SelectProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    useFocusEffect(props, inputEl);\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n\r\n    return (\r\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\r\n            <div className=\"title\">\r\n                {props.label}: {props.values[props.value].label}\r\n            </div>\r\n            <div className=\"button\">\r\n                <button\r\n                    ref={inputEl}\r\n                    onClick={() => {\r\n                        props.callBack((props.value + 1 < props.values.length ? props.value + 1 : 0).toString());\r\n                        setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\r\n                    }}\r\n                    disabled={!!props.disabled}\r\n                    onFocus={() => {\r\n                        if (!props.hasFocus) {\r\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\r\n                        }\r\n                    }}\r\n                >\r\n                    🔁\r\n                </button>\r\n            </div>\r\n            <div className=\"description\">{props.description}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ScreenSelect = (props: _ScreenSelectProps) => {\r\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\r\n        return null;\r\n    }\r\n    const { navigation } = React.useContext(NavigationContext);\r\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\r\n    const pos = { x: props.x || 0, y: props.y || 0 };\r\n    return (\r\n        <_ScreenSelect\r\n            x={pos.x}\r\n            y={pos.y}\r\n            disabled={!!props.disabled}\r\n            hasFocus={hasFocus(pos.y, pos.x)}\r\n            label={props.label}\r\n            description={props.description}\r\n            value={props.value}\r\n            values={props.values}\r\n            callBack={props.callBack}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ScreenSelect;\r\n","import \"../../../Style/react-toggle.css\";\r\n\r\nimport { getScreenElementClassName, useFocusEffect, useInitialFocus } from \"./ScreenElement\";\r\n\r\nimport { NavigationContext } from \"../Context\";\r\nimport React from \"react\";\r\nimport Toggle from \"react-toggle\";\r\nimport { XY } from \"../../XY\";\r\n\r\ninterface StaticScreenToggleProps {\r\n    value: boolean;\r\n    label: string;\r\n    description: string;\r\n    disabled?: boolean;\r\n    callBack: (s: boolean) => void;\r\n    autoFocus?: boolean;\r\n}\r\n\r\ninterface ToggleProps extends StaticScreenToggleProps {\r\n    x: number;\r\n    y: number;\r\n    hasFocus: boolean;\r\n}\r\n\r\ninterface _ScreenToggleProps extends StaticScreenToggleProps {\r\n    x?: number;\r\n    y?: number;\r\n}\r\n\r\nconst _ScreenToggle = (props: ToggleProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    useFocusEffect(props, inputEl);\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n    const change = (val: boolean, pos: XY) => {\r\n        setNavigation({ ...navigation, screen: pos });\r\n        props.callBack(val);\r\n    };\r\n    useInitialFocus(props, inputEl, navigation.screen);\r\n    return (\r\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\r\n            <div className=\"title\">{props.label}</div>\r\n            <div className=\"toggle\">\r\n                <Toggle\r\n                    ref={inputEl}\r\n                    disabled={!!props.disabled}\r\n                    autoFocus={props.hasFocus}\r\n                    onFocus={() => {\r\n                        if (!props.hasFocus) {\r\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\r\n                        }\r\n                    }}\r\n                    checked={props.value}\r\n                    onChange={() => change(!props.value, { x: props.x, y: props.y })}\r\n                />\r\n            </div>\r\n            <div className=\"description\">{props.description}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ScreenToggle = (props: _ScreenToggleProps) => {\r\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\r\n        return null;\r\n    }\r\n    const { navigation } = React.useContext(NavigationContext);\r\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\r\n    const pos = { x: props.x || 0, y: props.y || 0 };\r\n    return (\r\n        <_ScreenToggle\r\n            x={pos.x}\r\n            y={pos.y}\r\n            disabled={!!props.disabled}\r\n            hasFocus={hasFocus(pos.y, pos.x)}\r\n            label={props.label}\r\n            description={props.description}\r\n            value={props.value}\r\n            callBack={props.callBack}\r\n            autoFocus={props.autoFocus}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ScreenToggle;\r\n","import StartScreenContext, { NavigationContext, StartScreenState } from \"../Context\";\r\n\r\nimport CloseButton from \"./CloseButton\";\r\nimport CookieBanner from \"./CookieBanner\";\r\nimport { CookieContext } from \"../../../Context\";\r\nimport EntropyLevels from \"../../../../Model/Game/Settings/EntropyLevels\";\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport ScreenContent from \"./ScreenContent\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\nimport ScreenSelect from \"./ScreenSelect\";\r\nimport ScreenToggle from \"./ScreenToggle\";\r\n\r\ninterface OptimizeOption {\r\n    entropy: number;\r\n    quickDeal: boolean;\r\n    lines: string[];\r\n    icon: string;\r\n}\r\n\r\nconst optimizeOptions: (state: StartScreenState) => OptimizeOption[] = (state: StartScreenState) => [\r\n    {\r\n        entropy: 2,\r\n        quickDeal: false,\r\n        lines: [(!state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Desktop\"],\r\n        icon: \"🖥️\",\r\n    },\r\n    {\r\n        entropy: 1,\r\n        quickDeal: true,\r\n        lines: [(state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Mobile\"],\r\n        icon: \"📱\",\r\n    },\r\n];\r\n\r\nconst QuickStart = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const { navigation } = React.useContext(NavigationContext);\r\n    const { consented } = React.useContext(CookieContext);\r\n\r\n    const isActive = (val: boolean) => state.quickDeal == val;\r\n\r\n    const setBaseEntropy = (value: string) =>\r\n        setState({ ...state, entropySettings: { ...state.entropySettings, baseEntropy: parseInt(value) } });\r\n\r\n    const setInteractionEntropy = (value: string) =>\r\n        setState({ ...state, entropySettings: { ...state.entropySettings, interactionEntropy: parseInt(value) } });\r\n\r\n    const setQuickDeal = (value: boolean) => setState({ ...state, quickDeal: value });\r\n\r\n    const getClassName = (button: OptimizeOption, y: number, x: number) => {\r\n        const hasFocus = navigation.screen.x == x && navigation.screen.y == y;\r\n        let name = isActive(button.quickDeal) ? \"active active-0\" : \"inactive-0\";\r\n        name += hasFocus ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    return (\r\n        <div className=\"quickstart startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Various</div>\r\n            <ScreenContent id=\"settings\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    {optimizeOptions(state).map((button, i) => (\r\n                        <ScreenMainButton\r\n                            key={i}\r\n                            icon={button.icon}\r\n                            id={i}\r\n                            autoFocus={isActive(button.quickDeal)}\r\n                            className={(pos) => getClassName(button, pos.x, pos.y)}\r\n                            lines={button.lines}\r\n                            onClick={() =>\r\n                                setState({\r\n                                    ...state,\r\n                                    quickDeal: button.quickDeal,\r\n                                    entropySettings: {\r\n                                        baseEntropy: button.entropy,\r\n                                        interactionEntropy: button.entropy,\r\n                                    },\r\n                                })\r\n                            }\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    <ScreenSelect\r\n                        label=\"Base Entropy\"\r\n                        description=\"How much chaos will the stacks on the board contain by themselves?\"\r\n                        value={state.entropySettings.baseEntropy || 0}\r\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\r\n                        callBack={setBaseEntropy}\r\n                    />\r\n                    <ScreenSelect\r\n                        label=\"Interaction Entropy\"\r\n                        description=\"How much chaos will each interaction add to a stack on the board?\"\r\n                        value={state.entropySettings.interactionEntropy || 0}\r\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\r\n                        callBack={setInteractionEntropy}\r\n                    />\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                        label=\"Instant Deal\"\r\n                        description=\"Should the deal animation at the beginning of the game be skipped?\"\r\n                        value={state.quickDeal}\r\n                        callBack={setQuickDeal}\r\n                    />\r\n                    <ScreenToggle\r\n                        disabled={true}\r\n                        label=\"Auto Deal\"\r\n                        description=\"Should the game draw one card from the stock every 5 seconds?\"\r\n                        value={false}\r\n                        callBack={() => {}}\r\n                    />\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\nexport default QuickStart;\r\n","import StartScreenContext, { NavigationContext, StartScreenState } from \"../Context\";\r\n\r\nimport CloseButton from \"./CloseButton\";\r\nimport CookieBanner from \"./CookieBanner\";\r\nimport { CookieContext } from \"../../../Context\";\r\nimport RatingPresets from \"../RatingOptions\";\r\nimport { RatingSettings } from \"../../../../Common\";\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport ScreenContent from \"./ScreenContent\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\nimport ScreenToggle from \"./ScreenToggle\";\r\nimport SuggestionModes from \"../../../../Model/Game/Settings/SuggestionModes\";\r\nimport { XY } from \"../../XY\";\r\n\r\nconst Rating = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const { navigation } = React.useContext(NavigationContext);\r\n    const applyPreset = (id: number) => {\r\n        const next = { ...state };\r\n        RatingPresets.ALL[id].apply(next);\r\n        setState(next);\r\n    };\r\n\r\n    const isActive = (id: number) => state.ratingPreset == id;\r\n\r\n    const getButtonClass = (id: number, y: number, x: number) => {\r\n        let name = isActive(id) ? `active active-${id}` : `inactive-${id}`;\r\n        name += navigation.screen.x == x && navigation.screen.y == y ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\r\n        const next = { ...state };\r\n        modifier(next.ratingSettings);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setState(next);\r\n    };\r\n    const customizeRating2 = (ratingModifier: (context: RatingSettings) => void, modifier: (context: StartScreenState) => void) => {\r\n        const next = { ...state };\r\n        ratingModifier(next.ratingSettings);\r\n        modifier(next);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setState(next);\r\n    };\r\n\r\n    const setMissPenalty = (value: boolean) =>\r\n        customizeRating((r) => {\r\n            r.missPenalty = value;\r\n        });\r\n\r\n    const setTimeRating = (value: boolean) =>\r\n        customizeRating((r) => {\r\n            r.timedMode = value;\r\n        });\r\n\r\n    const setUndoPenalty = (value: boolean) =>\r\n        customizeRating((r) => {\r\n            r.undoPenalty = value;\r\n        });\r\n\r\n    const setHintPenalty = (value: boolean) => {\r\n        customizeRating2(\r\n            (r) => {\r\n                r.hintPenalty = value;\r\n            },\r\n            (s) => {\r\n                s.suggestionMode = value ? SuggestionModes.NONE : SuggestionModes.REGULAR;\r\n            }\r\n        );\r\n    };\r\n\r\n    const { consented } = React.useContext(CookieContext);\r\n\r\n    return (\r\n        <div className=\"rating startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Penalties</div>\r\n            <ScreenContent id=\"penalties\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    {RatingPresets.ALL.map((preset) => (\r\n                        <ScreenMainButton\r\n                            key={preset.id}\r\n                            icon={preset.icon}\r\n                            id={preset.id}\r\n                            autoFocus={isActive(preset.id) || (state.ratingPreset == -1 && preset.id == 0)}\r\n                            className={(pos: XY) => getButtonClass(preset.id, pos.y, pos.x)}\r\n                            onClick={() => applyPreset(preset.id)}\r\n                            lines={[preset.label]}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                        label=\"Undo Penalty\"\r\n                        description=\"Undo is enabled, but excessive use will be painful. This penalty starts with 2 and increases exponentially.\"\r\n                        value={!!state.ratingSettings.undoPenalty}\r\n                        callBack={setUndoPenalty}\r\n                    />\r\n                    <ScreenToggle\r\n                        label=\"Time Penalty\"\r\n                        description=\"Fast players are rewarded with a time bonus, slow players will be punished.\"\r\n                        value={!!state.ratingSettings.timedMode}\r\n                        callBack={setTimeRating}\r\n                    />\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                        label=\"Hint Penalty\"\r\n                        description=\"Each manual hint will reduce the number of points by 10. This setting disables automatic suggestions. \"\r\n                        value={!!state.ratingSettings.hintPenalty}\r\n                        callBack={setHintPenalty}\r\n                    />\r\n                    <ScreenToggle\r\n                        label=\"Miss Penalty\"\r\n                        description=\"Be careful where you click, as each invalid action will lead to a penalty of 10 points.\"\r\n                        value={!!state.ratingSettings.missPenalty}\r\n                        callBack={setMissPenalty}\r\n                    />\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","import CloseButton from \"./CloseButton\";\r\nimport CookieBanner from \"./CookieBanner\";\r\nimport { CookieContext } from \"../../../Context\";\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport ScreenContent from \"./ScreenContent\";\r\nimport ScreenToggle from \"./ScreenToggle\";\r\nimport StartScreenContext from \"../Context\";\r\nimport SuggestionModes from \"../../../../Model/Game/Settings/SuggestionModes\";\r\n\r\nconst Suggestions = () => {\r\n    const { consented } = React.useContext(CookieContext);\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n\r\n    const suggestionModes = SuggestionModes.allSuggestionModes();\r\n\r\n    const isActive = (id: string) => state.suggestionMode == id;\r\n\r\n    const isDisabled = (id: string) => id !== SuggestionModes.NONE && state.ratingSettings.hintPenalty;\r\n\r\n    return (\r\n        <div className=\"suggestions startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Suggestions</div>\r\n            <ScreenContent id=\"settings\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    {suggestionModes.slice(0, 2).map((mode, index) => (\r\n                        <ScreenToggle\r\n                            value={isActive(mode.key)}\r\n                            disabled={isDisabled(mode.key)}\r\n                            label={mode.icon + \" \" + mode.label}\r\n                            callBack={() => setState({ ...state, suggestionMode: mode.key })}\r\n                            description={mode.description}\r\n                            key={index}\r\n                            autoFocus={isActive(mode.key)}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    {suggestionModes.slice(2).map((mode, index) => (\r\n                        <ScreenToggle\r\n                            value={isActive(mode.key)}\r\n                            disabled={isDisabled(mode.key)}\r\n                            label={mode.icon + \" \" + mode.label}\r\n                            callBack={() => setState({ ...state, suggestionMode: mode.key })}\r\n                            description={mode.description}\r\n                            key={index}\r\n                            autoFocus={isActive(mode.key)}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Suggestions;\r\n","import Controls from \"./Controls\";\r\nimport Difficulty from \"./Difficulty\";\r\nimport { NavigationContext } from \"../Context\";\r\nimport QuickStart from \"./QuickStart\";\r\nimport Rating from \"./Rating\";\r\nimport React from \"react\";\r\nimport ScreenContext from \"./Context\";\r\nimport Suggestions from \"./Suggestions\";\r\n\r\nconst Screen = (props: { screen: string }) => {\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n    const closeScreen = () =>\r\n        setNavigation({\r\n            ...navigation,\r\n            focus: \"menu\",\r\n            screeen: \"\",\r\n            mainMenu: navigation.mainMenu,\r\n            menu: { ...navigation.menu },\r\n        });\r\n\r\n    return (\r\n        <ScreenContext.Provider value={{ closeScreen: () => closeScreen() }}>\r\n            <div className=\"startscreen-layout\">\r\n                <div className=\"startscreen-jail\">\r\n                    {props.screen == \"rating\" ? <Rating /> : null}\r\n                    {props.screen == \"difficulty\" ? <Difficulty /> : null}\r\n                    {props.screen == \"settings\" ? <QuickStart /> : null}\r\n                    {props.screen == \"suggestions\" ? <Suggestions /> : null}\r\n                    {props.screen == \"controls0\" ? <Controls player={0} /> : null}\r\n                    {props.screen == \"controls1\" ? <Controls player={1} /> : null}\r\n                </div>\r\n            </div>\r\n        </ScreenContext.Provider>\r\n    );\r\n};\r\n\r\nexport default Screen;\r\n","import React from \"react\";\r\n\r\nconst VerticalMenu = (props: any) => {\r\n    return (\r\n        <div className=\"ui menu\">\r\n            <div className=\"startscreen-jail\">\r\n                <div className=\"innermenu\">{props.children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default VerticalMenu;\r\n","import \"../../../Style/Menu.scss\";\r\n\r\nimport { CookieContext } from \"../../../Context\";\r\nimport GameModes from \"../../../../GameModes\";\r\nimport MenuButton from \"./MenuButton\";\r\nimport MenuTitle from \"./MenuTitle\";\r\nimport MenuTree from \"./MenuTree\";\r\nimport { NavigationContext } from \"../Context\";\r\nimport React from \"react\";\r\nimport StorageManager from \"../../StorageManager\";\r\nimport { Universal } from \"../../../Game/KeyboardLayouts\";\r\nimport VerticalMenu from \"./VerticalMenu\";\r\nimport { XY } from \"../../XY\";\r\n\r\nconst StartMenu = (props: { start: (boardMode: string) => void }) => {\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n    const { consented, setConsented } = React.useContext(CookieContext);\r\n\r\n    const switchToScreen = (s: string, pos: XY) =>\r\n        setNavigation({\r\n            ...navigation,\r\n            focus: \"screen\",\r\n            screeen: s,\r\n            screen: { x: -1, y: -1 },\r\n            menu: { ...pos },\r\n        });\r\n\r\n    const switchToMenu = (menu: string, pos: XY) =>\r\n        setNavigation({\r\n            ...navigation,\r\n            focus: \"menu\",\r\n            screeen: \"\",\r\n            mainMenu: menu,\r\n            menu: { ...pos },\r\n        });\r\n\r\n    //@todo move onfocus inside components\r\n    const onfocus = (pos: XY) => setNavigation({ ...navigation, menu: pos });\r\n\r\n    const toggleScreen = (s: string, pos: XY) => {\r\n        if (navigation.screeen !== s) {\r\n            switchToScreen(s, pos);\r\n        } else {\r\n            switchToMenu(navigation.mainMenu, pos);\r\n        }\r\n    };\r\n\r\n    const toggleMainMenu = (val: string, pos: XY) => switchToMenu(navigation.mainMenu !== val ? val : \"\", pos);\r\n\r\n    const storage = new StorageManager();\r\n\r\n    return (\r\n        <VerticalMenu>\r\n            <MenuTitle label=\"♦ Solitaire\" />\r\n\r\n            <MenuTree keyboardLayout={Universal}>\r\n                <MenuButton icon=\"🎲\" title=\"Single Player\" onClick={() => props.start(GameModes.CUSTOM.boardMode)} onFocus={onfocus} />\r\n                <MenuButton\r\n                    icon=\"⚔️\"\r\n                    title=\"Versus\"\r\n                    onClick={(pos: XY) => toggleMainMenu(\"versus\", pos)}\r\n                    onFocus={onfocus}\r\n                    toggled={navigation.mainMenu == \"versus\"}\r\n                >\r\n                    <MenuButton\r\n                        icon=\"🎮\"\r\n                        title=\"Player 1\"\r\n                        onClick={(pos: XY) => toggleScreen(\"controls0\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"controls0\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon=\"🎮\"\r\n                        title=\"Player 2\"\r\n                        onClick={(pos: XY) => toggleScreen(\"controls1\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"controls1\"}\r\n                    />\r\n                    <MenuButton icon=\"🎲\" title=\"Start\" onClick={() => props.start(GameModes.VERSUS.boardMode)} onFocus={onfocus} />\r\n                </MenuButton>\r\n                <MenuButton\r\n                    icon=\"⚙️\"\r\n                    title=\"Options\"\r\n                    onClick={(pos: XY) => toggleMainMenu(\"custom\", pos)}\r\n                    onFocus={onfocus}\r\n                    toggled={navigation.mainMenu == \"custom\"}\r\n                >\r\n                    <MenuButton\r\n                        icon=\"💪\"\r\n                        title=\"Difficulty\"\r\n                        onClick={(pos: XY) => toggleScreen(\"difficulty\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"difficulty\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon=\"⚖️\"\r\n                        title=\"Penalties\"\r\n                        onClick={(pos: XY) => toggleScreen(\"rating\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"rating\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon=\"💡\"\r\n                        title=\"Suggestions\"\r\n                        onClick={(pos: XY) => toggleScreen(\"suggestions\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"suggestions\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon=\"🧰\"\r\n                        title=\"Various\"\r\n                        onClick={(pos: XY) => toggleScreen(\"settings\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"settings\"}\r\n                    />\r\n                </MenuButton>\r\n                <MenuButton\r\n                    icon=\"🍪\"\r\n                    title={consented ? \"Delete Cookie\" : \"Allow Cookie\"}\r\n                    onClick={\r\n                        consented\r\n                            ? () => {\r\n                                  const revoke = storage.revokeConsent();\r\n                                  if (confirm(revoke.prompt)) {\r\n                                      revoke.confirm();\r\n                                      setConsented(false);\r\n                                  }\r\n                              }\r\n                            : () => {\r\n                                  const consent = storage.giveConsent();\r\n                                  if (confirm(consent.prompt)) {\r\n                                      consent.confirm();\r\n                                      setConsented(true);\r\n                                  }\r\n                              }\r\n                    }\r\n                    onFocus={onfocus}\r\n                    toggled={false}\r\n                />\r\n            </MenuTree>\r\n        </VerticalMenu>\r\n    );\r\n};\r\nexport default StartMenu;\r\n","import { NavigationProvider, NavigationState, Provider, StartScreenState, defaultStartScreenState } from \"./Context\";\r\n\r\nimport { CookieContextProvider } from \"../../Context\";\r\nimport DifficultyOptions from \"./DifficultyOptions\";\r\nimport { LaunchSettings } from \"../../../Common\";\r\nimport React from \"react\";\r\nimport Screen from \"./Screens/Screen\";\r\nimport StartMenu from \"./Menu/StartMenu\";\r\nimport StorageManager from \"../StorageManager\";\r\n\r\nconst Home = (props: { start: (settings: LaunchSettings) => void }) => {\r\n    const storage = new StorageManager();\r\n    const [consented, setConsented] = React.useState<boolean>(!!storage.hasConsent());\r\n    const previous = storage.getPreviousState();\r\n    const [state, setState] = React.useState<StartScreenState>(previous ? previous : defaultStartScreenState);\r\n    const startPos = { x: 0, y: 0 };\r\n    const [navigation, setNavigation] = React.useState<NavigationState>({\r\n        menu: { ...startPos },\r\n        screen: { ...startPos },\r\n        focus: \"menu\",\r\n        mainMenu: \"\",\r\n        screeen: \"\",\r\n    });\r\n    const startScreenContext = {\r\n        state,\r\n        setState: (s: StartScreenState) => {\r\n            setState(s);\r\n            storage.store(s);\r\n        },\r\n    };\r\n    const navigationContext = {\r\n        navigation,\r\n        setNavigation,\r\n    };\r\n    const cookieContext = {\r\n        consented,\r\n        setConsented,\r\n    };\r\n\r\n    const start = (boardMode: string) => {\r\n        const settings = {\r\n            ...DifficultyOptions[state.difficultySettings].settings,\r\n            ...state.ratingSettings,\r\n            baseEntropy: state.entropySettings.baseEntropy || 0,\r\n            interactionEntropy: state.entropySettings.interactionEntropy || 0,\r\n            players: { ...state.players },\r\n            quickDeal: state.quickDeal,\r\n            boardMode: boardMode,\r\n            initialized: true,\r\n            suggestionMode: state.suggestionMode,\r\n            inputMode: \"\",\r\n        };\r\n        props.start(settings);\r\n    };\r\n\r\n    return (\r\n        <Provider value={startScreenContext}>\r\n            <NavigationProvider value={navigationContext}>\r\n                <CookieContextProvider value={cookieContext}>\r\n                    <StartMenu start={start} />\r\n                    <Screen screen={navigation.screeen} />\r\n                </CookieContextProvider>\r\n            </NavigationProvider>\r\n        </Provider>\r\n    );\r\n};\r\nexport default Home;\r\n","export interface Ratio {\r\n    prefix: string;\r\n    multiplier: number;\r\n}\r\nexport default class Ratios {\r\n    static _16to9: Ratio = {\r\n        prefix: \"16-to-9\",\r\n        multiplier: 1.7778,\r\n    };\r\n    static _4to3: Ratio = {\r\n        prefix: \"4-to-3\",\r\n        multiplier: 1.3333,\r\n    };\r\n}\r\n","import \"./View/Style/App.css\";\r\nimport \"./View/Style/UI.css\";\r\n\r\nimport { LaunchSettings, defaultPlayerSettings } from \"./Common\";\r\n\r\nimport AspectRatio from \"./View/AspectRatio/AspectRatio\";\r\nimport Deck from \"./Model/Deck/Deck\";\r\nimport DelayedSuspense from \"./DelayedSuspense\";\r\nimport GameModes from \"./GameModes\";\r\nimport Home from \"./View/UI/StartScreen/Home\";\r\nimport { PauseProvider } from \"./View/PauseContext\";\r\nimport Ratios from \"./View/AspectRatio/Ratios\";\r\nimport React from \"react\";\r\nimport SuggestionModes from \"./Model/Game/Settings/SuggestionModes\";\r\n\r\nconst App = () => {\r\n    const [started, setStarted] = React.useState<number>(0);\r\n    const defaultState = {\r\n        boardMode: GameModes.CUSTOM.boardMode,\r\n        inputMode: \"mouse\",\r\n        initialized: false,\r\n        players: defaultPlayerSettings,\r\n        drawMode: \"\",\r\n        recyclingMode: \"\",\r\n        interactionEntropy: 0,\r\n        baseEntropy: 0,\r\n        suggestionMode: SuggestionModes.NONE,\r\n    };\r\n\r\n    const [launchState, setLaunchState] = React.useState<LaunchSettings>(defaultState);\r\n\r\n    const restart = () => {\r\n        setLaunchState(defaultState);\r\n    };\r\n\r\n    const deck = new Deck().shuffle();\r\n    const start = (settings: LaunchSettings) => {\r\n        deck.shuffle();\r\n        setLaunchState({ ...settings });\r\n        setStarted(Date.now());\r\n    };\r\n\r\n    if (launchState?.initialized) {\r\n        const BoardWrap = React.lazy(() => import(\"./View/Game/BoardWrap\"));\r\n        let board = null;\r\n        if (launchState.boardMode == \"singleplayer\") {\r\n            board = (\r\n                <AspectRatio ratio={Ratios._4to3}>\r\n                    <div className={\"layout-grid-container singleplayer\"}>\r\n                        <BoardWrap player={0} settings={launchState} restart={restart} deck={deck} />\r\n                    </div>\r\n                </AspectRatio>\r\n            );\r\n        }\r\n        if (launchState.boardMode == \"splitscreen\") {\r\n            board = (\r\n                <div className=\"game-layout-container splitscreen\">\r\n                    <div className={\"layout-grid-container \" + launchState.boardMode}>\r\n                        <BoardWrap\r\n                            player={0}\r\n                            settings={{ ...launchState, inputMode: launchState.players[0].inputMethod }}\r\n                            restart={restart}\r\n                            deck={deck.copy()}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={\"layout-grid-container \" + launchState.boardMode}>\r\n                        <BoardWrap\r\n                            player={1}\r\n                            settings={{ ...launchState, inputMode: launchState.players[1].inputMethod }}\r\n                            restart={restart}\r\n                            deck={deck.copy()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <PauseProvider started={started}>\r\n                <DelayedSuspense>{board}</DelayedSuspense>\r\n            </PauseProvider>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <AspectRatio ratio={Ratios._16to9}>\r\n            <Home start={start} />\r\n        </AspectRatio>\r\n    );\r\n};\r\nexport default App;\r\n","import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\r\n\r\nimport Model from \"../Model/Model\";\r\nimport React from \"react\";\r\n\r\ninterface IGlobalContext {\r\n    state: Model | null;\r\n    replaceContext: StateReplaceFunction;\r\n    updateContext: StateUpdateFunction;\r\n    updateGameContext: StateUpdateFunction;\r\n    restart: () => void;\r\n}\r\n\r\nconst defaultValue = {\r\n    state: null,\r\n    replaceContext: () => {},\r\n    updateContext: () => {},\r\n    updateGameContext: () => {},\r\n    restart: () => {},\r\n};\r\n\r\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\r\n\r\nexport const Provider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n\r\nexport interface ICookieContext {\r\n    consented: boolean;\r\n    setConsented: (c: boolean) => void;\r\n}\r\nexport const CookieContext = React.createContext<ICookieContext>({ consented: false, setConsented: () => {} });\r\nexport const CookieContextProvider = CookieContext.Provider;\r\n","const TouchDetector = ()  => {\r\n    try {\r\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n        const mq = (query) => window.matchMedia(query).matches;\r\n\r\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n            return true;\r\n        }\r\n\r\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n    } catch (e) {\r\n        console.error(\"(Touch detect failed)\", e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default TouchDetector;","import { EntropySettings, PlayerSettings, RatingSettings, defaultPlayerSettings } from \"../../../Common\";\r\n\r\nimport RatingPresets from \"./RatingOptions\";\r\nimport React from \"react\";\r\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\r\nimport TouchDetector from \"./TouchDetector\";\r\n\r\nexport interface IStartScreenContext {\r\n    state: StartScreenState;\r\n    setState: (s: StartScreenState) => void;\r\n}\r\n\r\nexport const defaultStartScreenState: StartScreenState = {\r\n    ratingSettings: { ...RatingPresets.REGULAR },\r\n    difficultySettings: 1,\r\n    ratingPreset: 1,\r\n    quickDeal: TouchDetector(),\r\n    entropySettings: {\r\n        baseEntropy: TouchDetector() ? 1 : 2,\r\n        interactionEntropy: TouchDetector() ? 1 : 2,\r\n    },\r\n    suggestionMode: SuggestionModes.REGULAR,\r\n    players: defaultPlayerSettings,\r\n};\r\n\r\nexport interface StartScreenState {\r\n    ratingSettings: RatingSettings;\r\n    difficultySettings: number;\r\n    ratingPreset: number;\r\n    quickDeal: boolean;\r\n    entropySettings: EntropySettings;\r\n    suggestionMode: string;\r\n    players: PlayerSettings;\r\n}\r\n\r\nexport interface NavigationState {\r\n    menu: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    screen: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    focus: string;\r\n    mainMenu: string;\r\n    screeen: string;\r\n}\r\ninterface INavigationContext {\r\n    navigation: NavigationState;\r\n    setNavigation: (n: NavigationState) => void;\r\n}\r\n\r\nexport const NavigationContext = React.createContext<INavigationContext>({\r\n    navigation: {\r\n        menu: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        screen: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        focus: \"menu\",\r\n        mainMenu: \"\",\r\n        screeen: \"\",\r\n    },\r\n    setNavigation: () => {},\r\n});\r\n\r\nconst StartScreenContext = React.createContext<IStartScreenContext>({\r\n    state: {\r\n        difficultySettings: 0,\r\n        ratingPreset: 0,\r\n        ratingSettings: {},\r\n        entropySettings: {},\r\n        quickDeal: false,\r\n        suggestionMode: SuggestionModes.REGULAR,\r\n        players: defaultPlayerSettings,\r\n    },\r\n    setState: () => {},\r\n});\r\n\r\nexport const Provider = StartScreenContext.Provider;\r\nexport const NavigationProvider = NavigationContext.Provider;\r\nexport default StartScreenContext;\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.source = \"\";\r\n        this.suggestion = false;\r\n        this.canClick = () => {};\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (_p) => {};\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        if (lvl == 0) {\r\n            this.entropyStyle = {};\r\n            return;\r\n        }\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 20) + \"vw\";\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 20) + \"vw\";\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        copy.canClick = orig.canClick;\r\n        copy.onClick = orig.onClick;\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export class SuggestionMode {\r\n    key: string;\r\n    label: string;\r\n    isTemporary: boolean;\r\n    supportsHints: boolean;\r\n    next: string | undefined;\r\n    icon: string;\r\n    description: string;\r\n    constructor(key: string, obj: ISuggestionMode) {\r\n        this.key = key;\r\n        this.label = obj.label;\r\n        this.icon = obj.icon;\r\n        this.description = obj.description;\r\n        this.isTemporary = !!obj.isTemporary;\r\n        this.supportsHints = !!obj.supportsHints;\r\n        this.next = obj.next;\r\n    }\r\n}\r\n\r\nexport type ISuggestionMode = {\r\n    label: string;\r\n    icon: string;\r\n    description: string;\r\n    isTemporary?: boolean;\r\n    supportsHints?: boolean;\r\n    next?: string;\r\n};\r\n\r\nexport default class SuggestionModes {\r\n    static NONE: string = \"NONE\";\r\n    static SCORED: string = \"SCORED\";\r\n    static REGULAR: string = \"REGULAR\";\r\n    static FULL: string = \"FULL\";\r\n    static ONCE: string = \"ONCE\";\r\n    static TWICE: string = \"TWICE\";\r\n    static raw: { [id: string]: ISuggestionMode } = {\r\n        NONE: {\r\n            label: \"None\",\r\n            description: 'No distractions. This enables one-time hints.',\r\n            supportsHints: true,\r\n            icon: \"❌\",\r\n        },\r\n        SCORED: {\r\n            label: \"Scored\",\r\n            description: 'Shows all actions that increase the score.',\r\n            icon: \"🏆\",\r\n        },\r\n        REGULAR: {\r\n            label: \"Regular\",\r\n            description: 'Shows all possible actions except circular',\r\n            icon: \"💡\",\r\n        },\r\n        FULL: {\r\n            label: \"Full\",\r\n            description: 'Shows all possible actions, even if they are circular',\r\n            icon: \"🎓\",\r\n        },\r\n        ONCE: {\r\n            label: \"Single Action\",\r\n            description: 'triggered by manual hint in game',\r\n            isTemporary: true,\r\n            next: \"NONE\",\r\n            icon: \"⏳\",\r\n        },\r\n    };\r\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\r\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\r\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\r\n    static default = () => SuggestionModes.get(SuggestionModes.REGULAR);\r\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\r\n    static next = (current: SuggestionMode) => {\r\n        const all = SuggestionModes.allSuggestionModes();\r\n        if (all[all.length - 1].key == current.key) {\r\n            return all[0];\r\n        }\r\n        for (let i = 0; i < all.length; i++) {\r\n            if (all[i].key == current.key) {\r\n                return all[i + 1];\r\n            }\r\n        }\r\n        return all[0];\r\n    };\r\n}\r\n","import React from \"react\";\r\n\r\nexport interface IPauseState {\r\n    started: number;\r\n    end: number;\r\n    paused: boolean;\r\n    pauses: number[];\r\n    pauseStartedAt: number;\r\n    allowed: number;\r\n    isSilent?: boolean;\r\n    pausedBy: number;\r\n    showMenu: boolean;\r\n}\r\nexport interface IPauseContext {\r\n    state: IPauseState;\r\n    togglePause: (isPaused: boolean, pausedBy: number) => void;\r\n    getElapsed: () => string,\r\n}\r\nexport const defaultPauseState = {\r\n    started: 0,\r\n    end: 0,\r\n    paused: false,\r\n    pauses: [],\r\n    pauseStartedAt: 0,\r\n    allowed: 5,\r\n    pausedBy: -1,\r\n    showMenu: false,\r\n};\r\nexport const defaultPauseContext = {\r\n    state: defaultPauseState,\r\n    togglePause: () => {},\r\n    getElapsed: () => \"\",\r\n};\r\n\r\nconst PauseContext = React.createContext<IPauseContext>(defaultPauseContext);\r\nconst PauseContextProvider = PauseContext.Provider;\r\n\r\nexport const PauseProvider = (props: any) => {\r\n    const [paused, setPaused] = React.useState<IPauseState>({ ...defaultPauseState });\r\n    const getElapsedMs = () => {\r\n        const pauses = paused.pauses.reduce((a, b) => a + b, 0);\r\n        return (paused.end || paused.pauseStartedAt || Date.now()) - props.started - pauses;\r\n    };\r\n\r\n    const getElapsed = () => {\r\n        const padleft = (i: number) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = getElapsedMs();\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n    const togglePause = (isPaused: boolean, pausedBy: number) => {\r\n        if (paused.showMenu) {\r\n            setPaused({\r\n                ...paused,\r\n                pausedBy: pausedBy,\r\n                pauses: [...paused.pauses, Date.now() - paused.pauseStartedAt],\r\n                pauseStartedAt: 0,\r\n                paused: false,\r\n                showMenu: false,\r\n            });\r\n        } else if (paused.pauses.length < paused.allowed) {\r\n            setPaused({\r\n                ...paused,\r\n                pausedBy: pausedBy,\r\n                pauseStartedAt: Date.now(),\r\n                paused: true,\r\n                showMenu: true,\r\n            });\r\n        } else {\r\n            setPaused({\r\n                ...paused,\r\n                pausedBy: pausedBy,\r\n                pauseStartedAt: 0,\r\n                paused: false,\r\n                showMenu: true,\r\n            });\r\n        }\r\n    };\r\n    const context = {\r\n        state: { ...paused, started: props.started },\r\n        togglePause,\r\n        getElapsed,\r\n    };\r\n\r\n    return <PauseContextProvider value={context}>{props.children}</PauseContextProvider>;\r\n};\r\n\r\nexport default PauseContext;\r\n","interface KeyboardLayout {\r\n    up: (e: KeyboardEvent) => boolean;\r\n    down: (e: KeyboardEvent) => boolean;\r\n    right: (e: KeyboardEvent) => boolean;\r\n    left: (e: KeyboardEvent) => boolean;\r\n    cancel: (e: KeyboardEvent) => boolean;\r\n    action: (e: KeyboardEvent) => boolean;\r\n    undo: (e: KeyboardEvent) => boolean;\r\n    hint: (e: KeyboardEvent) => boolean;\r\n    pause: (e: KeyboardEvent) => boolean;\r\n    menu: (e: KeyboardEvent) => boolean;\r\n}\r\n\r\nexport default KeyboardLayout;\r\n\r\nexport const getKeyboardLayout = (id: number) => {\r\n    if (id == 0) return Wasd;\r\n    if (id == 1) return Arrows;\r\n    if (id == 2) return NumPad;\r\n    throw \"Unknown keyboard layout ID\";\r\n};\r\n\r\nexport const Arrows: KeyboardLayout = {\r\n    up: (e) => e.keyCode == 38,\r\n    down: (e) => e.keyCode == 40,\r\n    right: (e) => e.keyCode == 39,\r\n    left: (e) => e.keyCode == 37,\r\n    cancel: (e) => e.keyCode == 27,\r\n    action: (e) => e.keyCode == 96,\r\n    undo: (e) => e.keyCode == 90 && e.ctrlKey,\r\n    hint: (e) => e.keyCode == 72,\r\n    pause: (e) => e.keyCode == 80,\r\n    menu: (e) => e.keyCode == 77,\r\n};\r\n\r\nexport const Wasd: KeyboardLayout = {\r\n    up: (e) => e.keyCode == 87,\r\n    down: (e) => e.keyCode == 83,\r\n    right: (e) => e.keyCode == 68,\r\n    left: (e) => e.keyCode == 65,\r\n    cancel: (e) => e.keyCode == 69,\r\n    action: (e) => e.keyCode == 81,\r\n    undo: (e) => e.keyCode == 88,\r\n    hint: (e) => e.keyCode == 90,\r\n    pause: (e) => e.keyCode == 999,\r\n    menu: (e) => e.keyCode == 27,\r\n};\r\n\r\nexport const NumPad: KeyboardLayout = {\r\n    up: (e) => e.keyCode == 104,\r\n    down: (e) => e.keyCode == 101,\r\n    right: (e) => e.keyCode == 102,\r\n    left: (e) => e.keyCode == 100,\r\n    cancel: (e) => e.keyCode == 105,\r\n    action: (e) => e.keyCode == 103,\r\n    undo: (e) => e.keyCode == 98,\r\n    hint: (e) => e.keyCode == 97,\r\n    pause: (e) => e.keyCode == 999,\r\n    menu: (e) => e.keyCode == 99,\r\n};\r\n\r\nexport const Universal: KeyboardLayout = {\r\n    up: (e) => NumPad.up(e) || Wasd.up(e) || Arrows.up(e),\r\n    down: (e) => NumPad.down(e) || Wasd.down(e) || Arrows.down(e),\r\n    right: (e) => NumPad.right(e) || Wasd.right(e) || Arrows.right(e),\r\n    left: (e) => NumPad.left(e) || Wasd.left(e) || Arrows.left(e),\r\n    cancel: (e) => NumPad.cancel(e) || Wasd.cancel(e) || Arrows.cancel(e),\r\n    action: (e) => NumPad.action(e) || Wasd.action(e) || Arrows.action(e),\r\n    undo: (e) => NumPad.undo(e) || Wasd.undo(e) || Arrows.undo(e),\r\n    hint: (e) => NumPad.hint(e) || Wasd.hint(e) || Arrows.hint(e),\r\n    pause: (e) => NumPad.pause(e) || Wasd.pause(e) || Arrows.pause(e),\r\n    menu: (e) => NumPad.menu(e) || Wasd.menu(e) || Arrows.menu(e),\r\n};\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","import React from \"react\";\r\nimport ReactGamePad from \"react-gamepad\";\r\n\r\nconst GamePad = (props) => {\r\n    const buttonHandler = (e) => {\r\n        //@todo use layout abstraction like in keyboard\r\n        //@todo make layouts configurable (for visuals allow switching PS4 and XBOX layouts)\r\n        console.debug(e);\r\n        if (e == \"DPadLeft\") {\r\n            props.onLeft && props.onLeft();\r\n        }\r\n        if (e == \"DPadRight\") {\r\n            props.onRight && props.onRight();\r\n        }\r\n        if (e == \"DPadUp\") {\r\n            props.onUp && props.onUp();\r\n        }\r\n        if (e == \"DPadDown\") {\r\n            props.onDown && props.onDown();\r\n        }\r\n        if (e == \"A\") {\r\n            props.onAction && props.onAction();\r\n        }\r\n        if (e == \"B\") {\r\n            props.onCancel && props.onCancel();\r\n        }\r\n        if (e == \"X\") {\r\n            props.onHint && props.onHint();\r\n        }\r\n        if (e == \"Y\") {\r\n            props.onUndo && props.onUndo();\r\n        }\r\n        if (e == \"Start\") {\r\n            props.onPause && props.onPause();\r\n        }\r\n        if (e == \"Back\") {\r\n            props.onPause && props.onMenu();\r\n        }\r\n    };\r\n\r\n    const connectHandler = (e) => {\r\n        console.debug(\"connected\", e);\r\n    };\r\n\r\n    const disconnectHandler = (e) => {\r\n        console.debug(\"disconnected\", e);\r\n    };\r\n\r\n    return (\r\n        <ReactGamePad\r\n            gamepadIndex={props.gamepadIndex}\r\n            onButtonDown={buttonHandler}\r\n            onConnect={connectHandler}\r\n            onDisconnect={disconnectHandler}\r\n        >\r\n            <span></span>\r\n        </ReactGamePad>\r\n    );\r\n};\r\n\r\nexport default GamePad;\r\n","import Card from \"./Model/Deck/Card\";\r\nimport Model from \"./Model/Model\";\r\n\r\nexport type StateReplacer = (state: Model) => Model | null;\r\nexport type StateUpdater = (state: Model) => void;\r\nexport type StateReplaceFunction = (modifier: StateReplacer) => void;\r\nexport type StateUpdateFunction = (modifier: StateUpdater) => void;\r\n\r\nexport const defaultPlayerSettings: PlayerSettings = {\r\n    0: {\r\n        id: 0,\r\n        name: \"Player 1\",\r\n        inputMethod: \"gamepad\",\r\n        inputLayout: 0,\r\n    },\r\n    1: {\r\n        id: 1,\r\n        name: \"Player 2\",\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 0,\r\n    },\r\n};\r\n\r\ninterface PlayerSetting {\r\n    id: number;\r\n    name: string;\r\n    inputMethod: string;\r\n    inputLayout: number;\r\n}\r\n\r\nexport interface PlayerSettings {\r\n    [id: number]: PlayerSetting;\r\n}\r\n\r\nexport interface LaunchSettings {\r\n    recyclingMode: string;\r\n    drawMode: string;\r\n    inputMode: string;\r\n    interactionEntropy: number;\r\n    baseEntropy: number;\r\n    suggestionMode: string;\r\n    players: PlayerSettings;\r\n    boardMode: string;\r\n    initialized?: boolean;\r\n}\r\n\r\nexport interface ClickHandler {\r\n    dispatchPutDown: (card: Card, position: any, state: Model, index: number) => void;\r\n    dispatchPickup: (card: Card, position: any, state: Model, index: number) => void;\r\n}\r\n\r\nexport type BlinkFunction = (state: Model, index: number) => void;\r\n\r\nexport interface RatingSettings {\r\n    undoPenalty?: boolean;\r\n    hintPenalty?: boolean;\r\n    timedMode?: boolean;\r\n    missPenalty?: boolean;\r\n}\r\n\r\nexport interface EntropySettings {\r\n    baseEntropy?: number;\r\n    interactionEntropy?: number;\r\n}\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import { RatingSettings } from \"../../../Common\";\r\nimport { StartScreenState } from \"./Context\";\r\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\r\n\r\nexport interface RatingPreset {\r\n    id: number;\r\n    icon: string;\r\n    label: string;\r\n    settings: RatingSettings;\r\n    apply: (s: StartScreenState) => void;\r\n}\r\n\r\nconst apply = (after: RatingSettings, s: StartScreenState, id: number) => {\r\n    if (!s.ratingSettings.hintPenalty && after.hintPenalty) {\r\n        s.suggestionMode = SuggestionModes.NONE;\r\n    }\r\n    //@todo remember which suggestion mode was there before, and reset to that on next change of hint penalty\r\n    s.ratingSettings = { ...after };\r\n    s.ratingPreset = id;\r\n};\r\n\r\nexport default class RatingPresets {\r\n    static CHILL = {\r\n        timedMode: false,\r\n        missPenalty: false,\r\n        undoPenalty: false,\r\n        hintPenalty: false,\r\n    };\r\n\r\n    static REGULAR = {\r\n        timedMode: true,\r\n        missPenalty: false,\r\n        undoPenalty: true,\r\n        hintPenalty: false,\r\n    };\r\n\r\n    static COMPETITIVE = {\r\n        timedMode: true,\r\n        missPenalty: true,\r\n        undoPenalty: true,\r\n        hintPenalty: true,\r\n    };\r\n\r\n    static ALL: RatingPreset[] = [\r\n        {\r\n            id: 0,\r\n            icon: \"🌴\",\r\n            label: \"Chill\",\r\n            settings: { ...RatingPresets.CHILL },\r\n            apply: (s) => apply(RatingPresets.CHILL, s, 0),\r\n        },\r\n        {\r\n            id: 1,\r\n            icon: \"⚖️\",\r\n            label: \"Regular\",\r\n            settings: { ...RatingPresets.REGULAR },\r\n            apply: (s) => apply(RatingPresets.REGULAR, s, 1),\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: \"🏆\",\r\n            label: \"Competitive\",\r\n            settings: { ...RatingPresets.COMPETITIVE },\r\n            apply: (s) => apply(RatingPresets.COMPETITIVE, s, 2),\r\n        },\r\n    ];\r\n\r\n    static matchPreset = (settings: any) => {\r\n        const filterd = RatingPresets.ALL.filter((preset) => RatingPresets.equals(preset.settings, settings));\r\n        if (filterd.length > 0) {\r\n            return filterd[0].id;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    static equals = (s1: any, s2: any) =>\r\n        s1.timedMode === s2.timedMode &&\r\n        s1.missPenalty === s2.missPenalty &&\r\n        s1.undoPenalty === s2.undoPenalty &&\r\n        s1.hintPenalty === s2.hintPenalty;\r\n}\r\n","import KeyboardLayout, { Universal } from \"../../../Game/KeyboardLayouts\";\r\n\r\nimport GamePad from \"../../../Game/GamePad\";\r\nimport Keyboard from \"../../../Game/Keyboard\";\r\nimport { NavigationContext } from \"../Context\";\r\nimport React from \"react\";\r\nimport { ScreenNavigator } from \"./ScreenNavigator\";\r\nimport { TreeNavigator } from \"../Menu/TreeNavigator\";\r\nimport { XY } from \"../../XY\";\r\n\r\nconst NavWrapper = (props: { navigator: ScreenNavigator; screen: string }) => {\r\n    const { navigator } = props;\r\n\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n\r\n    const assignState = (result: XY) => {\r\n        if (navigation.focus == \"screen\") {\r\n            setNavigation({ ...navigation, screen: result });\r\n        }\r\n        if (navigation.focus == \"menu\") {\r\n            throw \"Invalid navigation action\";\r\n        }\r\n    };\r\n\r\n    const onCancel = () =>\r\n        setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } });\r\n\r\n    const onUp = () => assignState(navigator.moveUp(navigation.screen.x, navigation.screen.y));\r\n\r\n    const onDown = () => assignState(navigator.moveDown(navigation.screen.x, navigation.screen.y));\r\n\r\n    const onLeft = () => assignState(navigator.moveLeft(navigation.screen.x, navigation.screen.y));\r\n\r\n    const onRight = () => assignState(navigator.moveRight(navigation.screen.x, navigation.screen.y));\r\n\r\n    const onAction = () => {\r\n        navigator.action(navigation.screen);\r\n    };\r\n\r\n    return navigation.focus == \"screen\" ? (\r\n        <>\r\n            <Keyboard\r\n                layout={Universal}\r\n                onUp={onUp}\r\n                onDown={onDown}\r\n                onRight={onRight}\r\n                onLeft={onLeft}\r\n                onAction={onAction}\r\n                onCancel={onCancel}\r\n            />\r\n            <GamePad onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} onCancel={onCancel} />\r\n        </>\r\n    ) : null;\r\n};\r\nexport default NavWrapper;\r\n\r\nexport const TreeNavWrapper = (props: { navigator: TreeNavigator; keyboardLayout: KeyboardLayout }) => {\r\n    const { navigator } = props;\r\n\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n\r\n    const assignState = (result: XY) => {\r\n        if (navigation.focus == \"menu\") {\r\n            setNavigation({ ...navigation, menu: result });\r\n        }\r\n        if (navigation.focus == \"screen\") {\r\n            throw \"Invalid navigation action\";\r\n        }\r\n    };\r\n\r\n    const onCancel = () =>\r\n        setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } });\r\n\r\n    const onUp = () => assignState(navigator.moveUp(navigation.menu.x, navigation.menu.y));\r\n\r\n    const onDown = () => assignState(navigator.moveDown(navigation.menu.x, navigation.menu.y));\r\n\r\n    const onLeft = () => assignState(navigator.moveLeft(navigation.menu.x, navigation.menu.y));\r\n\r\n    const onRight = () => assignState(navigator.moveRight(navigation.menu.x, navigation.menu.y));\r\n\r\n    const onAction = () => {\r\n        navigator.action(navigation.menu);\r\n    };\r\n\r\n    return navigation.focus == \"menu\" ? (\r\n        <>\r\n            <Keyboard\r\n                layout={props.keyboardLayout}\r\n                onUp={onUp}\r\n                onDown={onDown}\r\n                onRight={onRight}\r\n                onLeft={onLeft}\r\n                onAction={onAction}\r\n                onCancel={onCancel}\r\n            />\r\n            <GamePad onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} onCancel={onCancel} />\r\n        </>\r\n    ) : null;\r\n};\r\n","import React from \"react\";\r\n\r\nconst Keyboard = (props) => {\r\n    const navListener = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        const { layout } = props;\r\n        if (layout.cancel(evtobj)) {\r\n            props.onCancel && props.onCancel();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.left(evtobj)) {\r\n            props.onLeft && props.onLeft();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.right(evtobj)) {\r\n            props.onRight && props.onRight();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.up(evtobj)) {\r\n            props.onUp && props.onUp();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.down(evtobj)) {\r\n            props.onDown && props.onDown();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.action(evtobj)) {\r\n            props.onAction && props.onAction();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.undo(evtobj)) {\r\n            props.onUndo && props.onUndo();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.hint(evtobj)) {\r\n            props.onHint && props.onHint();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.pause(evtobj)) {\r\n            props.onPause && props.onPause();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.menu(evtobj)) {\r\n            props.onPause && props.onMenu();\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", navListener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", navListener);\r\n        };\r\n    }, [props]);\r\n    return null;\r\n};\r\nexport default Keyboard;\r\n","const EntropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\nexport default EntropyLevels;","import { NavigationContext } from \"../Context\";\r\nimport React from \"react\";\r\nimport { TreeNavigator } from \"./TreeNavigator\";\r\nimport { XY } from \"../../XY\";\r\n\r\ninterface _MenuButtonProps extends StaticMenuButtonProps {\r\n    //@todo keyboard navigation in a tree\r\n    x?: number;\r\n    y?: number;\r\n    navigator?: TreeNavigator;\r\n}\r\n\r\nexport interface StaticMenuButtonProps {\r\n    icon: string;\r\n    title: string;\r\n    onClick: (pos: XY) => void;\r\n    onFocus: (pos: XY) => void;\r\n    toggled?: boolean;\r\n    children?: any[];\r\n    disabled?: boolean;\r\n    skip?: boolean;\r\n}\r\ninterface MenuButtonProps extends StaticMenuButtonProps {\r\n    x: number;\r\n    y: number;\r\n    menuX: number;\r\n    menuY: number;\r\n    menuFocus: string;\r\n    active: boolean;\r\n    toggled: boolean;\r\n}\r\nconst MenuButton = (props: _MenuButtonProps) => {\r\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\r\n        return null;\r\n    }\r\n\r\n    const { navigation } = React.useContext(NavigationContext);\r\n\r\n    const addItem = (child: any, index: number) => {\r\n        const assign = (n: any[]) => {\r\n            n[props.x || 0].buttons[index + 1] = { ...props, x: props.x, y: index + 1 };\r\n        };\r\n        assign(props.navigator?.rows || []);\r\n\r\n        return React.cloneElement(child, { key: index, x: props.x, y: index + 1, navigator: props.navigator });\r\n    };\r\n\r\n    return (\r\n        <_MenuButton\r\n            title={props.title}\r\n            x={props.x || 0}\r\n            y={props.y || 0}\r\n            icon={props.icon}\r\n            menuX={navigation.menu.x}\r\n            menuY={navigation.menu.y}\r\n            menuFocus={navigation.focus}\r\n            disabled={props.disabled}\r\n            active={false}\r\n            onFocus={props.onFocus}\r\n            onClick={props.onClick}\r\n            toggled={!!props.toggled}\r\n            skip={props.skip}\r\n        >\r\n            {props.children?.map(addItem)}\r\n        </_MenuButton>\r\n    );\r\n};\r\nconst _MenuButton = (props: MenuButtonProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n\r\n    let className = \"\";\r\n\r\n    if (props.y > 0) {\r\n        className += \" indented\";\r\n    }\r\n\r\n    const shouldBeFocus = props.menuX == props.x && props.menuY == props.y && props.menuFocus == \"menu\";\r\n\r\n    if (shouldBeFocus && !props.skip) {\r\n        className += \" highlight\";\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (\r\n            props.menuX == props.x &&\r\n            props.menuY == props.y &&\r\n            props.menuFocus == \"menu\" &&\r\n            inputEl.current &&\r\n            inputEl.current !== document.activeElement\r\n        ) {\r\n            setClicking(true);\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    }, [props.menuFocus, props.menuX, props.menuY, props.x, props.y]);\r\n\r\n    if (props.active) {\r\n        className += \" active\";\r\n    }\r\n\r\n    //omg this is the worst but it works (5h lost)\r\n    const [isClicking, setClicking] = React.useState(false);\r\n\r\n    const focus = () => {\r\n        if (!isClicking && !(props.menuX == props.x && props.menuY == props.y) && props.menuFocus == \"menu\") {\r\n            props.onFocus({ x: props.x, y: props.y });\r\n            setClicking(false);\r\n        }\r\n    };\r\n\r\n    const click = () => {\r\n        setClicking(false);\r\n        props.onClick({ x: props.x, y: props.y });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                ref={inputEl}\r\n                className={className}\r\n                title={props.title}\r\n                onFocus={focus}\r\n                onClick={click}\r\n                disabled={props.skip}\r\n                onMouseDown={() => setClicking(true)}\r\n            >\r\n                <div className=\"icon\">{props.icon}</div>\r\n                <div className=\"label\">{props.title}</div>\r\n            </button>\r\n            <div>{!props.toggled ? null : props.children}</div>\r\n        </>\r\n    );\r\n};\r\nexport default MenuButton;\r\n","import React from \"react\";\r\n\r\nconst MenuTitle = (props: { label: string }) => {\r\n    return <div className=\"title maintitle\">{props.label}</div>;\r\n};\r\nexport default MenuTitle;\r\n","import { XY } from \"../../XY\";\r\nimport { NavHandler } from \"../../NavHandler\";\r\n\r\nexport class TreeNavigator implements NavHandler {\r\n    rows: any[];\r\n    constructor() {\r\n        this.rows = [];\r\n    }\r\n    getRows = () => this.rows;\r\n    getRow = (x: number) => this.getRows()[x];\r\n    goToRow = (pos: XY) => {\r\n        const rows = this.getRows();\r\n        const row = rows[pos.y];\r\n        if (row.buttons.length - 1 < pos.x) {\r\n            return { ...pos, x: row.buttons.length - 1 };\r\n        }\r\n\r\n        return pos;\r\n    };\r\n    moveUp: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        if (x == 0) {\r\n            return { x: this.rows.length - 1, y: 0 };\r\n        }\r\n        if (y > 0) {\r\n            return { x: x, y: y - 1 };\r\n        }\r\n\r\n        if (y == 0) {\r\n            const row = this.getRow(x - 1);\r\n            if (row.toggled) {\r\n                return { x: x - 1, y: row.buttons.length - 1 };\r\n            } else {\r\n                return { x: x - 1, y: y };\r\n            }\r\n        }\r\n\r\n        return { x: x - 1, y: y };\r\n    };\r\n    moveDown: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const row = this.getRow(x);\r\n        if (y == 0 && row.toggled) {\r\n            return { x: x, y: 1 };\r\n        }\r\n\r\n        if (y > 0 && y < row.buttons.length - 1) {\r\n            return { x: x, y: y + 1 };\r\n        }\r\n\r\n        if (y > 0) {\r\n            return { x: x + 1, y: 0 };\r\n        }\r\n\r\n        if (x < this.rows.length - 1) {\r\n            return { x: x + 1, y: y };\r\n        }\r\n\r\n        return { x: 0, y: 0 };\r\n    };\r\n    moveLeft: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        return { x: x, y: y };\r\n    };\r\n    moveRight: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        return { x: x, y: y };\r\n    };\r\n    action: (xy: XY) => void = () => {\r\n        const activeElement: any = document.activeElement;\r\n        activeElement && activeElement.click();\r\n    };\r\n}\r\n","import KeyboardLayout from \"../../../Game/KeyboardLayouts\";\r\nimport React from \"react\";\r\nimport { TreeNavWrapper } from \"../Screens/NavWrapper\";\r\nimport { TreeNavigator } from \"./TreeNavigator\";\r\n\r\nconst MenuTree = (props: { children: any[]; keyboardLayout: KeyboardLayout }) => {\r\n    const navigator = new TreeNavigator();\r\n    navigator.rows = [];\r\n    let index = -1;\r\n    let _i = -1;\r\n    const addItem = (child: any) => {\r\n        _i++;\r\n        if (!child.props.skip) {\r\n            index++;\r\n            navigator.rows[index] = { x: index, y: 0, ...child.props, buttons: [] };\r\n        }\r\n        return React.cloneElement(child, { key: _i, x: index, y: 0, navigator: navigator });\r\n    };\r\n    return (\r\n        <>\r\n            {props.children.map(addItem)}\r\n            <TreeNavWrapper navigator={navigator} keyboardLayout={props.keyboardLayout} />\r\n        </>\r\n    );\r\n};\r\nexport default MenuTree;\r\n"],"sourceRoot":""}