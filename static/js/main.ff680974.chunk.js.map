{"version":3,"sources":["Business/Blinker.js","Business/BaseService.js","Business/Foundation.js","Business/Stock.js","Business/Tableau.js","Business/Waste.js","Business/Business.js","View/Dealer.js","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","View/UI/EndScreen.js","View/BlinkingComponent.js","View/Card.js","View/MouseHand.js","View/TouchHand.js","View/Hand.js","View/StackBase.js","View/Foundation.js","Model/Game/Foundation.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.js","Model/Game/Waste.js","Model/Model.js","Business/GameState.js","View/UI/Clock.js","View/UI/HeartContainer.js","View/UI/Hint.js","View/UI/Undo.js","View/UI/Header.js","View/UI/Menu.js","Service/Settings.js","View/Stock.js","Service/Suggestions.js","View/Tableau.js","Service/Undo.js","View/Waste.js","View/Board.js","View/UI/StartScreen.js","App.js","index.js"],"names":["Blinker","gamestate","startBlink","selector","state","blinkFor","game","registerBlink","unblink","stopBlink","_setState","this","Service","dispatchPutDown","card","position","index","hand","isHoldingCard","_dispatchPutDown","dispatchPickup","_dispatchPickup","_blink","blinker","handler","Foundation","_card","foundation","wouldAccept","src","source","add","putDown","registerMove","tryDetectEnd","blink","getTop","getPreviousUsed","face","pickUp","remove","registerPickup","s","stacks","countCards","isEnded","end","Date","now","Stock","moveToWaste","recycleWaste","stock","isOnTop","waste","addAll","popTop","registerWasteMove","stack","length","canRecycle","recycle","registerRecycle","Tableau","tableau","tryUncover","isHidden","popWithFollowing","uncover","registerUncover","Waste","tryPutDown","currentCard","Business","clickTableau","getHandler","clickFoundation","clickStock","clickWaste","Dealer","props","timeouts","settings","launchSettings","quickDeal","isDealt","stateholder","setState","dealt","deal","started","evaluateOptions","push","setTimeout","suggestor","React","useEffect","forEach","timeout","clearTimeout","Card","type","causeEntropy","lvl","level","random","Math","randomInt","min","max","entropyStyle","equals","other","otherCard","icon","copy","orig","copyAll","cards","map","DeckSize","Suits","heart","color","club","diamond","spade","Deck","keys","Object","deckSize","key","flat","reverse","shuffleArray","array","i","j","floor","EndScreen","className","points","getElapsed","onClick","restart","BlinkingComponent","model","Component","e","ele","target","includes","offsetParent","rect","getBoundingClientRect","click","x","clientX","y","clientY","element","style","pointerEvents","zIndex","offsetTop","top","offsetLeft","left","getCardStyle","hasSuggestion","isSuggested","suggestion","isSelected","getClassName","MouseHand","onMouseMove","positionFixed","updateDisplay","myRef","createRef","bind","onKeyDown","document","addEventListener","putBack","removeEventListener","node","current","parent","window","event","keyCode","getOffsetTop","ref","TouchHand","c","Hand","p","mouseMode","StackBase","classname","visible","suggested","children","stackindex","Stacks","getStacks","getCurrentAccepted","currentFoundation","acceptedCards","hasMoreThanOneCard","accepts","currentAccepted","interactionEntropy","usedCards","pop","f","parseInt","reduce","a","b","setEntropy","suit","slice","origStack","Game","popPreviousState","id","isRequested","previousStates","popPrevious","previous","memorable","modelEquals","pow","multiplicator","padleft","msec","hh","mm","ss","modified","recyclings","passes","recyclingMode","currentMove","rateMove","every","stackEquals","stacksEqual","drawMode","console","debug","stockIsEmpty","move","isTableau","obj","substr","isFoundation","isFromCurrentSource","splice","Settings","isTouch","is_touch_device","mouseModes","entropyLevels","baseEntropy","suggestionModes","suggestionMode","prefixes","split","DocumentTouch","query","join","matchMedia","matches","error","setCardProperties","dealingAt","newCard","isFirst","getStack","canPutDown","range","indexOf","getCard","result","stackEntropy","entropy","next","concat","offset","canAdd","Model","getInitialState","deck","GameState","pushPreviousState","Clock","useState","elapsed","setElapsed","interval","setInterval","clearInterval","HeartContainer","createString","Array","from","getHearts","Hint","listenForH","suggestOnce","title","Undo","ctrlZ","evtobj","ctrlKey","undo","disabled","Header","handlers","reset","toggleMenu","showMenu","Menu","onChange","setSuggestionMode","value","setMouseMode","setBaseEntropy","entropyLevel","setInteractionEntropy","rel","href","sm","menu","Suggestions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","substring","foundAny","wasteState","cardIndex","tableauState","options","disableSuggestion","getOffset","currentState","additionalOffset","Board","render","getHandlers","shuffle","StartScreen","start","App","initialized","appState","setAppState","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ff680974.chunk.js","sourcesContent":["export default class Blinker {\r\n    constructor(gamestate) {\r\n        this.gamestate = gamestate;\r\n    }\r\n\r\n    startBlink = (selector, state) => {\r\n        selector(state).blinkFor = 10;\r\n        state.game.registerBlink();\r\n        selector(state).unblink = () => this.stopBlink(selector);\r\n    };\r\n\r\n    stopBlink = (selector) =>\r\n        this.gamestate._setState((state) => {\r\n            selector(state).blinkFor = 0;\r\n            state.game.registerBlink();\r\n        });\r\n}\r\n","import Blinker from \"./Blinker\";\r\n\r\nexport default class Service {\r\n    constructor(gamestate) {\r\n        this.gamestate = gamestate;\r\n        this.blinker = new Blinker(gamestate);\r\n    }\r\n\r\n    getHandler(hand) {\r\n        let handler = \"dispatchPickup\";\r\n        if (hand && hand.isHoldingCard()) {\r\n            handler = \"dispatchPutDown\";\r\n        }\r\n        return this[handler];\r\n    }\r\n\r\n    dispatchPutDown = (card, position, index) => {\r\n        this.gamestate._setState((state) => {\r\n            if (state.hand.isHoldingCard()) {\r\n                this._dispatchPutDown(card, position, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    dispatchPickup = (card, position, index) => {\r\n        this.gamestate._setState((state) => {\r\n            if (!state.hand.isHoldingCard()) {\r\n                this._dispatchPickup(card, position, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    _blink = (selector, state) => this.blinker.startBlink(selector, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Foundation extends Service {\r\n    _dispatchPutDown = (_card, position, state, index) => {\r\n        if (state.foundation.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (_card, position, state, index) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    //@todo move this to a generic place, also detect failure\r\n    tryDetectEnd(state) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n\r\n    blink = (index, state) => this._blink((s) => s.foundation.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Stock extends Service {\r\n    _dispatchPutDown = (card, position, state) => this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, position, state) => (card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state));\r\n\r\n    moveToWaste = (card, state) =>\r\n        state.stock.isOnTop(card) &&\r\n        state.waste.addAll(state.stock.popTop()) &&\r\n        state.game.registerMove(\"waste\", \"stock\") &&\r\n        state.game.registerWasteMove(state.stock.stack.length == 0);\r\n\r\n    recycleWaste = (_card, state) =>\r\n        !state.stock.getTop() &&\r\n        !!state.waste.getTop() &&\r\n        state.game.canRecycle() &&\r\n        state.stock.recycle(state.waste.recycle()) &&\r\n        state.game.registerRecycle(state);\r\n\r\n    blink = (_card, state) => this._blink((s) => s.stock, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Tableau extends Service {\r\n    _dispatchPutDown = (card, position, state, index) => {\r\n        if (state.tableau.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (card, position, state, index) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card, index, state) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n\r\n    blink = (index, state) => this._blink((s) => s.tableau.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Waste extends Service {\r\n    _dispatchPutDown = (card, position, state) =>\r\n        (state.waste.wouldAccept(state.hand) &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state);\r\n\r\n    _dispatchPickup = (card, position, state) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state);\r\n\r\n    blink = (state) => this._blink((s) => s.waste, state);\r\n}\r\n","import Foundation from \"./Foundation\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Business {\r\n    static getHandlers(gamestate, state) {\r\n        return {\r\n            clickTableau: new Tableau(gamestate).getHandler(state.hand),\r\n            clickFoundation: new Foundation(gamestate).getHandler(state.hand),\r\n            clickStock: new Stock(gamestate).getHandler(state.hand),\r\n            clickWaste: new Waste(gamestate).getHandler(state.hand),\r\n        };\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Dealer = (props) => {\r\n    const timeouts = [];\r\n    //@todo implement launch setting UI for quick dealing\r\n    if (props.state.settings.launchSettings.quickDeal) {\r\n        if (props.state && props.state.stock && !props.state.stock.isDealt) {\r\n            props.stateholder.setState((state) => {\r\n                if (props.state.stock.dealt != state.stock.dealt) {\r\n                    return null;\r\n                }\r\n                while (!state.stock.isDealt) {\r\n                    state.stock.deal(state.tableau);\r\n                }\r\n                state.game.started = Date.now();\r\n                state.evaluateOptions(state);\r\n                return state;\r\n            });\r\n        }\r\n    } else {\r\n        const deal = (dealt) => {\r\n            //@todo based on settings, deal all-in-one or with delays\r\n            timeouts.push(\r\n                setTimeout(() => {\r\n                    if (props.state && props.state.stock && !props.state.stock.isDealt) {\r\n                        props.stateholder.setState((state) => {\r\n                            if (dealt != state.stock.dealt) {\r\n                                return null;\r\n                            }\r\n\r\n                            state.stock.deal(state.tableau);\r\n                            if (state.stock.isDealt) {\r\n                                state.game.started = Date.now();\r\n                            }\r\n\r\n                            if (state.stock.isDealt) {\r\n                                props.suggestor.evaluateOptions(state);\r\n                            } else {\r\n                                deal(state.stock.dealt);\r\n                            }\r\n\r\n                            return state;\r\n                        });\r\n                    }\r\n                }, 35)\r\n            );\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            deal(props.state.stock.dealt);\r\n            return () => timeouts.forEach((timeout) => clearTimeout(timeout));\r\n        }, []);\r\n    }\r\n    return null;\r\n};\r\nexport default Dealer;\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.causeEntropy(1);\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))]).flat().reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import \"../../Style/Screens.css\";\r\n\r\nimport React from \"react\";\r\n\r\nconst EndScreen = (props) => {\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    return !props.game.isEnded ? null : (\r\n        <div className=\"endscreen\">\r\n            <div className=\"title\">🥳</div>\r\n            <div>Points: {props.game.points}</div>\r\n            <div>Time: {props.game.getElapsed()}</div>\r\n            <div>\r\n                <button onClick={props.restart}>\r\n                    ♻️<div>new game</div>\r\n                </button>\r\n            </div>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndScreen;\r\n","import { Component } from \"react\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.timeout = null;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.model.blinkFor) {\r\n            this.timeout = setTimeout(() => this.props.model.unblink(), 100);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const onClick = (e) => {\r\n        let ele = e.target;\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        //@todo use scroll difference instead\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            click: {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n\r\n        props.onClick({ ...props.model }, position);\r\n    };\r\n\r\n    const getClassName = () => {\r\n        const hasSuggestion = props.isSuggested || props.model.suggestion;\r\n        let className = `card card-base suit-${props.model.type.icon}`;\r\n        className += !props.isSelected && !hasSuggestion ? ` card-stack-${props.model.source}` : \"\";\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack (preview what happens if picked up)\r\n        className += hasSuggestion ? \" card-suggested\" : \"\";\r\n\r\n        return className;\r\n    };\r\n\r\n    const getCardStyle = () => {\r\n        const style = {\r\n            zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };\r\n\r\n        //move to left on waste (triple draw)\r\n        if (props.offsetLeft) {\r\n            style.left = props.offsetLeft * 4 + \"vw\";\r\n        }\r\n\r\n        if (!props.onClick) {\r\n            style.pointerEvents = \"none\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    const getStackbaseStyle = () => {\r\n        if (!props.onClick) {\r\n            return { pointerEvents: \"none\" };\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    // @todo 3d flip https://3dtransforms.desandro.com/card-flip on unhide\r\n    // https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n\r\n    return (\r\n        <div style={getStackbaseStyle()} className=\"stack-base\">\r\n            <div style={getCardStyle()} className={getClassName()} onClick={onClick ? onClick : null}>\r\n                {props.model.isHidden ? (\r\n                    <div className=\"card-back\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        if (this.props.putBack) {\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card key={index} model={card} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends Component {\r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.props.hand &&\r\n                this.props.hand.stack &&\r\n                this.props.hand.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={this.props.offsetTop + index * 24}\r\n                        offsetLeft={this.props.offsetLeft}\r\n                        zIndex={1000 + index * 20}\r\n                        isSelected={true}\r\n                        onClick={(c) => this.props.onClick(c)}\r\n                    />\r\n                )),\r\n        ];\r\n    }\r\n}\r\n","import MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    if (!props.model || props.parent !== props.model.source) {\r\n        return null;\r\n    }\r\n    const putBack = (c, p) => props.onClick(props.stack[props.stack.length - 1], p, props.stack.length - 1);\r\n    if (props.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parent} hand={props.model} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (props.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <TouchHand\r\n                parent={props.parent}\r\n                hand={props.model}\r\n                offsetTop={props.offsetTop}\r\n                offsetLeft={props.offsetLeft}\r\n                onClick={putBack}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base\";\r\n\r\n    if (props.visible) {\r\n        if (props.blink) {\r\n            classname += \" socket-blink\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n\r\n    if (props.suggested) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n\r\n    return (\r\n        <div className={classname} onClick={() => props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    static Stacks = (props) =>\r\n        props.model.stacks.map((foundation, index) => (\r\n            <Foundation\r\n                hand={props.hand}\r\n                key={index}\r\n                model={foundation}\r\n                stackindex={index}\r\n                settings={props.settings}\r\n                onClick={(c, p) => props.onClick(c, p, index)}\r\n            />\r\n        ));\r\n    render() {\r\n        const model = this.props.model;\r\n        const stackindex = this.props.stackindex;\r\n        return (\r\n            <div key={stackindex}>\r\n                <StackBase\r\n                    suggested={model.suggestion && !model.stack.length}\r\n                    blink={model.blinkFor}\r\n                    onClick={() => this.props.onClick(null, null, stackindex)}\r\n                    visible={!model.stack.length}\r\n                >\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                        onClick={(c, p) => this.props.onClick(c, p, stackindex)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={this.props.settings}\r\n                    parent={\"foundation-\" + stackindex}\r\n                    onClick={(c, p) => this.props.onClick(model.stack[model.stack.length - 1], p, stackindex)}\r\n                    model={this.props.hand}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n    }\r\n\r\n    getStacks = () => {\r\n        return this.stacks;\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => !hand.hasMoreThanOneCard() && this.accepts(index, hand.currentCard());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = \"foundation-\" + index;\r\n        card.suggestion = false;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => {\r\n        return [...this.stacks[index].usedCards].pop();\r\n    };\r\n\r\n    countCards = () => {\r\n        return this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation(orig.settings);\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Game {\r\n    constructor(settings) {\r\n        //@todo this class has too many responsibilities\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.started = false;\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n        this.multiplicator = 1;\r\n        this.recyclings = 0;\r\n        this.passes = -1;\r\n        if (this.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            this.passes = 1;\r\n        }\r\n        if (this.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            this.passes = 3;\r\n        }\r\n    }\r\n\r\n    //@todo can this be a property of stock instead?\r\n    canRecycle() {\r\n        return (\r\n            this.settings.launchSettings.recyclingMode == \"infinite\" ||\r\n            (this.settings.launchSettings.recyclingMode == \"3-pass\" && this.recyclings < 2)\r\n        );\r\n    }\r\n\r\n    registerMove(target, source) {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n\r\n        this.points += this.rateMove(currentMove);\r\n        return true;\r\n    }\r\n\r\n    stackEquals(a, b) {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    }\r\n\r\n    stacksEqual(a, b) {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    }\r\n\r\n    modelEquals(a, b) {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    }\r\n\r\n    pushPreviousState(state) {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    }\r\n\r\n    registerPickup() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        if (previous && previous.game) {\r\n            previous.game.points = Math.min(previous.game.points, this.points) - Math.pow(2, this.multiplicator);\r\n            previous.game.multiplicator = this.multiplicator + 1;\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        this.recyclings++;\r\n        //@todo move point calculation to rating class\r\n        if (this.settings.launchSettings.drawMode == \"single\" && this.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    }\r\n\r\n    registerWasteMove(stockIsEmpty) {\r\n        if (stockIsEmpty) {\r\n            this.passes--;\r\n        }\r\n    }\r\n\r\n    registerUncover() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        //@todo move point calculation to rating class\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n        return true;\r\n    }\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    rateMove(move) {\r\n        //@todo move point calculation to rating class\r\n        const isTableau = (obj) => obj.substr(0, 7) == \"tableau\";\r\n        const isFoundation = (obj) => obj.substr(0, 10) == \"foundation\";\r\n        if (isTableau(move.source)) {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (isFoundation(move.source)) {\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.started = orig.started;\r\n        copy.modified = orig.modified;\r\n        copy.multiplicator = orig.multiplicator;\r\n        copy.memorable = orig.memorable;\r\n        copy.previousStates = [...orig.previousStates];\r\n        copy.passes = orig.passes;\r\n        copy.recyclings = orig.recyclings;\r\n        return copy;\r\n    };\r\n\r\n    getElapsed = () => {\r\n        const padleft = (i) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = (this.end || Date.now()) - this.started;\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp(stack, source, position) {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    }\r\n\r\n    putDown() {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    }\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","export default class Settings {\r\n    constructor(launchSettings) {\r\n        this.launchSettings = launchSettings;\r\n        const isTouch = this.is_touch_device();\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = isTouch ? \"remain-on-stack\" : \"follow-cursor\";\r\n\r\n        this.entropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\n        this.baseEntropy = isTouch ? 1 : 2;\r\n        this.interactionEntropy = isTouch ? 1 : 2;\r\n\r\n        this.suggestionModes = [\"none\", \"scored\", \"regular\", \"full\"];\r\n        this.suggestionMode = \"regular\";\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = (query) => window.matchMedia(query).matches;\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings(orig.launchSettings);\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack, settings) {\r\n        this.settings = settings;\r\n        this.stack = stack.map(this.setCardProperties);\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    recycle(waste) {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map(this.setCardProperties);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    setCardProperties = (card) => {\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        card.isHidden = true;\r\n        card.source = \"stock\";\r\n        return card;\r\n    };\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    popTop = () => {\r\n        if (this.settings.launchSettings.drawMode == \"single\") {\r\n            return [this.stack.pop()];\r\n        }\r\n        if (this.settings.launchSettings.drawMode == \"triple\") {\r\n            return this.stack.splice(this.stack.length - 3);\r\n        }\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n\r\n    deal(tableau) {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = this.stack.pop();\r\n                newCard.source = \"tableau-\" + i;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                stack.push(newCard);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    constructor(settings) {\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => ({\r\n            stack: [],\r\n            id,\r\n        }));\r\n        this.settings = settings;\r\n    }\r\n\r\n    getStack = (index) => {\r\n        return this.stacks[index];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => this.canPutDown(this.getTop(index), hand, index);\r\n\r\n    canPutDown = (card, hand, index) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.source == \"tableau-\" + index);\r\n\r\n    accepts = (index, current) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index, card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card, i) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index, card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card, index) => {\r\n        card.source = \"tableau-\" + index;\r\n        return card;\r\n    };\r\n\r\n    getTop(index, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1 - offset];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Tableau([], orig.settings);\r\n        copy.stacks = orig.stacks.map((stack) => ({ stack: Card.copyAll(stack.stack) }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.stack = [];\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAccept = (hand) => hand.source == \"waste\" && this.canAdd(hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste(orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Model {\r\n    static getInitialState = (deck, launchSettings) => {\r\n        const settings = new Settings(launchSettings);\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings),\r\n            waste: new Waste(settings),\r\n            foundation: new Foundation(settings),\r\n            tableau: new Tableau(settings),\r\n            hand: new Hand(),\r\n            game: new Game(settings),\r\n            settings: settings,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n        };\r\n    };\r\n\r\n    static setEntropy = (state, lvl) => {\r\n        return {\r\n            stock: state.stock.setEntropy(lvl),\r\n            waste: state.waste.setEntropy(lvl),\r\n            foundation: state.foundation.setEntropy(lvl),\r\n            tableau: state.tableau.setEntropy(lvl),\r\n            hand: state.hand,\r\n            game: state.game,\r\n            settings: state.settings,\r\n        };\r\n    };\r\n}\r\n","import Model from \"../Model/Model\";\r\n\r\nexport default class GameState {\r\n    constructor(stateholder, suggestor) {\r\n        this.stateholder = stateholder;\r\n        this.suggestor = suggestor;\r\n    }\r\n\r\n    _setState = (a, b) =>\r\n        this.stateholder.setState((state) => {\r\n            state.game.modified = false;\r\n            const previous = Model.copy(state);\r\n            a(state);\r\n            if (state.game.modified && state.stock.isDealt) {\r\n                //@todo use localstorage for previous state, reduce react state for performance\r\n                state.game.pushPreviousState(previous);\r\n                //@todo there must be a better way for a pipeline-like thing like this\r\n                this.suggestor.evaluateOptions(state);\r\n                return { ...state };\r\n            }\r\n\r\n            return null;\r\n        }, b);\r\n}\r\n","import React from \"react\";\r\n\r\nconst Clock = (props) => {\r\n    const [elapsed, setElapsed] = React.useState(0);\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.game.started) {\r\n                setElapsed(props.game.getElapsed());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return !props.started || !elapsed ? null : (\r\n        <div className=\"header-clock\">\r\n            <div className=\"icon-container\">🕒</div>\r\n            {elapsed}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\n\r\nconst HeartContainer = (props) => {\r\n    const getHearts = () => {\r\n        if (props.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n\r\n        if (props.recyclingMode == \"1-pass\") {\r\n            return props.passes > 0 ? \"❤️\" : \"💔\";\r\n        }\r\n\r\n        if (props.recyclingMode == \"3-pass\") {\r\n            const createString = (length, icon) =>\r\n                Array.from(new Array(length).keys())\r\n                    .map(() => icon)\r\n                    .join(\"\");\r\n\r\n            return createString(props.passes, \"❤️\") + createString(3 - props.passes, \"💔\");\r\n        }\r\n        return null;\r\n    };\r\n    return <div className=\"heart-container\">{getHearts()}</div>;\r\n};\r\n\r\nexport default HeartContainer;\r\n","import React from \"react\";\r\n\r\nconst Hint = (props) => {\r\n    const listenForH = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 72) {\r\n            props.suggestOnce();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", listenForH);\r\n        return () => document.removeEventListener(\"keydown\", listenForH);\r\n    }, []);\r\n\r\n    return props.suggestionMode !== \"none\" ? null : (\r\n        <div>\r\n            <button title=\"Hint\" onClick={() => props.suggestOnce()}>\r\n                💡\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Hint;\r\n","import React from \"react\";\r\n\r\nconst Undo = (props) => {\r\n    const ctrlZ = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 90 && evtobj.ctrlKey) {\r\n            props.undo();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", ctrlZ);\r\n        return () => document.removeEventListener(\"keydown\", ctrlZ);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                disabled={!props.model.previousStates.length}\r\n                title={\"Undo (Penalty:\" + Math.pow(2, props.model.multiplicator) + \")\"}\r\n                onClick={props.undo}\r\n            >\r\n                ⏪\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Undo;\r\n","import \"../../Style/Header.css\";\r\n\r\nimport Clock from \"./Clock\";\r\nimport HeartContainer from \"./HeartContainer\";\r\nimport Hint from \"./Hint\";\r\nimport React from \"react\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-title\">\r\n                <HeartContainer recyclingMode={props.settings.launchSettings.recyclingMode} passes={props.model.passes} />\r\n                <div className=\"icon-container\">🏆</div> {props.model.points}\r\n            </div>\r\n            <Clock game={props.model} started={props.model.started} end={props.model.end} />\r\n            <div className=\"header-buttons\">\r\n                <Hint suggestOnce={props.handlers.suggestOnce} suggestionMode={props.settings.suggestionMode} />\r\n                <Undo undo={props.handlers.undo} model={props.model} />\r\n                <div>\r\n                    <button title=\"Restart\" disabled={!props.model.previousStates.length} onClick={props.handlers.reset}>\r\n                        ♻️\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button title=\"End Game\" onClick={props.handlers.restart}>\r\n                        🗑️\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button title=\"Settings\" onClick={() => props.handlers.toggleMenu(props.settings.showMenu)}>\r\n                        ⚙️\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import \"../../Style/Menu.css\";\r\n\r\nimport React from \"react\";\r\n\r\nconst Menu = (props) => {\r\n    //@todo if game not yet started, allow configuration of dealing behavior (preselect enable on desktop, disable on mobile)\r\n    if (!props.settings.showMenu) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"title\">Settings</div>\r\n            <div className=\"section\">\r\n                <div className=\"title\">Suggestions</div>\r\n                <div className=\"row\">\r\n                    <span className=\"label\">\r\n                        <div className=\"description\">How much help - if any - should the game offer by displaying suggestions?</div>\r\n                    </span>\r\n                    <select\r\n                        className=\"input\"\r\n                        onChange={(e) => props.handlers.setSuggestionMode(e.target.value)}\r\n                        value={props.settings.suggestionMode}\r\n                    >\r\n                        {props.settings.suggestionModes.map((suggestionMode) => (\r\n                            <option key={suggestionMode} value={suggestionMode}>\r\n                                {suggestionMode}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"section\">\r\n                <div className=\"title\">Active Card</div>\r\n                <div className=\"row\">\r\n                    <div className=\"label\">\r\n                        <div className=\"description\">Should the selected card follow the cursor or remain on the stack?</div>\r\n                    </div>\r\n\r\n                    <select\r\n                        className=\"input\"\r\n                        onChange={(e) => props.handlers.setMouseMode(e.target.value)}\r\n                        value={props.settings.mouseMode}\r\n                    >\r\n                        {props.settings.mouseModes.map((mouseMode) => (\r\n                            <option key={mouseMode} value={mouseMode}>\r\n                                {mouseMode}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"section\">\r\n                <div className=\"title\">Base Entropy</div>\r\n                <div className=\"row\">\r\n                    <div className=\"label\">\r\n                        <div className=\"description\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                    </div>\r\n                    <select\r\n                        className=\"input\"\r\n                        onChange={(e) => props.handlers.setBaseEntropy(e.target.value)}\r\n                        value={props.settings.baseEntropy}\r\n                    >\r\n                        {props.settings.entropyLevels.map((entropyLevel, index) => (\r\n                            <option key={entropyLevel} value={index}>\r\n                                {entropyLevel}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"section\">\r\n                <div className=\"title\">Interaction Entropy</div>\r\n                <div className=\"row\">\r\n                    <div className=\"label\">\r\n                        <div className=\"description\">How much chaos will each interaction add to a stack on the board?</div>\r\n                    </div>\r\n\r\n                    <select\r\n                        className=\"input\"\r\n                        onChange={(e) => props.handlers.setInteractionEntropy(e.target.value)}\r\n                        value={props.settings.interactionEntropy}\r\n                    >\r\n                        {props.settings.entropyLevels.map((entropyLevel, index) => (\r\n                            <option key={entropyLevel} value={index}>\r\n                                {entropyLevel}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/ckonig/solitaire/issues\">\r\n                Report Issues here\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\nexport default Menu;\r\n","import Model from \"../Model/Model\";\r\n\r\nexport default class Settings {\r\n    constructor(suggestor, stateholder) {\r\n        this.suggestor = suggestor;\r\n        this.stateholder = stateholder;\r\n    }\r\n\r\n    setBaseEntropy = (lvl) => {\r\n        this.stateholder.setState((state) => {\r\n            state.settings.baseEntropy = lvl;\r\n            return Model.setEntropy(state, state.settings.baseEntropy);\r\n        });\r\n    };\r\n\r\n    setInteractionEntropy = (lvl) => {\r\n        this.stateholder.setState((state) => {\r\n            state.settings.interactionEntropy = lvl;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setMouseMode = (mm) => {\r\n        this.stateholder.setState((state) => {\r\n            state.settings.mouseMode = mm;\r\n            this.suggestor.evaluateOptions(state);\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setSuggestionMode = (sm) => {\r\n        this.stateholder.setState((state) => {\r\n            if (state.settings.suggestionMode !== sm) {\r\n                state.settings.suggestionMode = sm;\r\n                this.suggestor.evaluateOptions(state);\r\n            }\r\n            return state;\r\n        });\r\n    };\r\n\r\n    suggestOnce = () => {\r\n        this.stateholder.setState((state) => {\r\n            const previous = state.settings.suggestionMode;\r\n            state.settings.suggestionMode = \"regular\";\r\n            this.suggestor.evaluateOptions(state);\r\n            state.settings.suggestionMode = previous;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    toggleMenu = (menu) => {\r\n        this.stateholder.setState((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n            return state;\r\n        });\r\n    };\r\n\r\n    static getHandlers(suggestor, stateholder) {\r\n        const settings = new Settings(suggestor, stateholder);\r\n        return {\r\n            setBaseEntropy: (lvl) => settings.setBaseEntropy(lvl),\r\n            setInteractionEntropy: (lvl) => settings.setInteractionEntropy(lvl),\r\n            setMouseMode: (mm) => settings.setMouseMode(mm),\r\n            setSuggestionMode: (sm) => settings.setSuggestionMode(sm),\r\n            suggestOnce: () => settings.suggestOnce(),\r\n            toggleMenu: (menu) => settings.toggleMenu(menu),\r\n        };\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={props.model.blinkFor}\r\n                    onClick={props.onClick}\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && index == props.model.stack.length - 1}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Model from \"../Model/Model\";\r\nimport Tableau from \"../Business/Tableau\";\r\nimport Waste from \"../Business/Waste\";\r\n\r\nexport default class Suggestions {\r\n    constructor() {\r\n        this.tableau = new Tableau();\r\n        this.waste = new Waste();\r\n    }\r\n\r\n    evaluateOptions = (state) => {\r\n        this.disableAllSuggestions(state);\r\n\r\n        if (state.settings.suggestionMode !== \"none\") {\r\n            const foundUncoverOptions = this.getUncoverOptions(state);\r\n\r\n            if (!foundUncoverOptions) {\r\n                const foundAcceptedPutdown = this.getPutdownSuggestions(state);\r\n\r\n                if (!foundAcceptedPutdown && !state.hand.isHoldingCard()) {\r\n                    const foundAny = this.getPickupOptions(state);\r\n\r\n                    if (!foundAny || state.settings.suggestionMode == \"full\") {\r\n                        // @todo only highlight if it's not empty or there are recyclings left\r\n                        state.stock.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state, onlyUseful) => {\r\n        const accepted = [];\r\n        if (state.settings.suggestionMode !== \"none\" && state.hand.isHoldingCard() && state.waste.wouldAccept(state.hand)) {\r\n            if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"waste\") {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.settings.suggestionMode !== \"none\" && state.hand.isHoldingCard() && state.foundation.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"foundation-\" + index) {\r\n                    const move = { target: \"foundation-\" + index, source: state.hand.source };\r\n                    if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.settings.suggestionMode != \"none\" && state.hand.isHoldingCard() && state.tableau.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"tableau-\" + index) {\r\n                    if (\r\n                        !onlyUseful ||\r\n                        state.settings.suggestionMode === \"full\" ||\r\n                        // filter out moves of King from empty slot to empty slot\r\n                        (!(\r\n                            state.hand.currentCard().face == \"K\" &&\r\n                            stack.stack.length == 0 &&\r\n                            state.hand.source.substring(0, 8) == \"tableau-\" &&\r\n                            state.tableau.stacks[state.hand.source.substring(8)].stack.length == 0\r\n                        ) &&\r\n                            // filter out moves between stacks if same (non-hidden) parent card\r\n                            !(\r\n                                stack.stack.length > 0 &&\r\n                                state.hand.source.substring(0, 8) == \"tableau-\" &&\r\n                                state.tableau.stacks[state.hand.source.substring(8)].stack.length > 0 &&\r\n                                stack.stack[stack.stack.length - 1].face ==\r\n                                    state.tableau.stacks[state.hand.source.substring(8)].stack[\r\n                                        state.tableau.stacks[state.hand.source.substring(8)].stack.length - 1\r\n                                    ].face &&\r\n                                !state.tableau.getTop(state.hand.source.substring(8)).isHidden\r\n                            ))\r\n                    ) {\r\n                        const move = { target: \"tableau-\" + index, source: state.hand.source };\r\n                        if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state) => {\r\n        let foundAny = false;\r\n        const wasteState = Model.copy(state);\r\n        this.waste._dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.modified) {\r\n            const foundWasteSuggestions = this.getPutdownSuggestions(wasteState, true);\r\n            if (foundWasteSuggestions > (state.settings.suggestionMode == \"full\" ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) => {\r\n            tableau.stack.forEach((card, cardIndex) => {\r\n                if (!card.isHidden) {\r\n                    const tableauState = Model.copy(state);\r\n                    this.tableau._dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.modified) {\r\n                        const foundTableauSuggestions = this.getPutdownSuggestions(tableauState, true);\r\n                        if (foundTableauSuggestions > (state.settings.suggestionMode == \"full\" ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state) => {\r\n        const options = [];\r\n        if (!state.hand.isHoldingCard()) {\r\n            state.tableau.stacks.forEach((stack, stackindex) => {\r\n                const top = state.tableau.getTop(stackindex);\r\n                if (top && top.isHidden) {\r\n                    top.suggestion = true;\r\n                    options.push(\"tableau-\" + stackindex);\r\n                }\r\n            });\r\n        }\r\n\r\n        return options.length;\r\n    };\r\n\r\n    disableAllSuggestions = (state) => {\r\n        const disableSuggestion = (obj) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    static Stacks = (props) =>\r\n        props.model.stacks.map((tableau, index) => (\r\n            <Tableau\r\n                settings={props.settings}\r\n                key={index}\r\n                index={index}\r\n                model={tableau}\r\n                hand={props.hand}\r\n                onClick={(card, p) => props.onClick(card, p, index)}\r\n            />\r\n        ));\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, \"tableau-\" + props.index)}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={props.settings}\r\n                    parent={\"tableau-\" + props.index}\r\n                    onClick={props.onClick}\r\n                    model={props.hand}\r\n                    stack={props.model.stack}\r\n                    offsetTop={getOffset(props.model.stack.length)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default class Undo {\r\n    constructor(suggestor, stateholder) {\r\n        this.suggestor = suggestor;\r\n        this.stateholder = stateholder;\r\n    }\r\n\r\n    //@todo ask for confirmation before resetting\r\n    reset = () => this.stateholder.setState((state) => (state.game.previousStates ? state.game.previousStates[0] : null));\r\n\r\n    // @todo enable undoing via browser back gesture/button\r\n    undo = (id, currentState) =>\r\n        this.stateholder.setState((state) => {\r\n            const previous = state.game.popPreviousState(id, currentState);\r\n            if (previous) {\r\n                this.suggestor.evaluateOptions(previous);\r\n                return previous;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    static getHandlers(suggestor, stateholder, state) {\r\n        const undo = new Undo(suggestor, stateholder);\r\n        return {\r\n            undo: () => undo.undo(state.game.previousStates.length - 1, state),\r\n            reset: () => undo.reset(),\r\n        };\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n\r\n        const getOffset = (index) => {\r\n            if (props.settings.launchSettings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length =\r\n                props.model.settings.mouseMode == \"remain-on-stack\" && props.hand.isHoldingCard() && props.hand.source == \"waste\"\r\n                    ? props.model.stack.length + 1\r\n                    : props.model.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null)}\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && index == props.model.stack.length - 1}\r\n                        onClick={(c, p) => props.onClick(c, p)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={props.model.settings}\r\n                    offsetTop={(props.model.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(props.model.stack.length)}\r\n                    parent=\"waste\"\r\n                    onClick={props.onClick}\r\n                    model={props.hand}\r\n                    stack={props.model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"../Style/Board.scss\";\r\n\r\nimport Business from \"../Business/Business\";\r\nimport Dealer from \"./Dealer\";\r\nimport Deck from \"../Model/Deck/Deck\";\r\nimport EndScreen from \"./UI/EndScreen\";\r\nimport Foundation from \"./Foundation\";\r\nimport GameState from \"../Business/GameState\";\r\nimport Header from \"./UI/Header\";\r\nimport Menu from \"./UI/Menu\";\r\nimport Model from \"../Model/Model\";\r\nimport React from \"react\";\r\nimport Settings from \"../Service/Settings\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"../Service/Suggestions\";\r\nimport Tableau from \"./Tableau\";\r\nimport Undo from \"../Service/Undo\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.suggestor = new Suggestions();\r\n        this.deck = new Deck();\r\n        this.deck.shuffle();\r\n        this.state = Model.getInitialState(this.deck, props.settings);\r\n    }\r\n\r\n    render = () => {\r\n        const handlers = {\r\n            ...Undo.getHandlers(this.suggestor, this, this.state),\r\n            ...Settings.getHandlers(this.suggestor, this, this.state),\r\n            ...Business.getHandlers(new GameState(this, this.suggestor), this.state),\r\n            restart: this.props.restart,\r\n        };\r\n        return (\r\n            <div>\r\n                <div className=\"layout-grid-container\">\r\n                    <Header model={this.state.game} settings={this.state.settings} handlers={handlers} />\r\n                    <div className=\"game-view\">\r\n                        <div className=\"board-grid-container\">\r\n                            <Stock model={this.state.stock} onClick={handlers.clickStock} />\r\n                            <Waste\r\n                                model={this.state.waste}\r\n                                hand={this.state.hand}\r\n                                onClick={handlers.clickWaste}\r\n                                settings={this.state.settings}\r\n                            />\r\n                            <div className=\"spacer\">&nbsp;</div>\r\n                            <Foundation.Stacks\r\n                                model={this.state.foundation}\r\n                                hand={this.state.hand}\r\n                                onClick={handlers.clickFoundation}\r\n                                settings={this.state.settings}\r\n                            />\r\n                            <Tableau.Stacks\r\n                                model={this.state.tableau}\r\n                                hand={this.state.hand}\r\n                                onClick={handlers.clickTableau}\r\n                                settings={this.state.settings}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <Menu model={this.state.game} settings={this.state.settings} handlers={handlers} />\r\n                    <EndScreen game={this.state.game} restart={handlers.restart} />\r\n                    <Dealer state={this.state} stateholder={this} suggestor={this.suggestor} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","import \"../../Style/Screens.css\";\r\n\r\nimport React from \"react\";\r\n\r\nconst StartScreen = (props) => {\r\n    //@todo add selector for timed game\r\n    //@todo add selectors for different rating strategies\r\n    //@todo add and implement custom start button + selectors for draw mode & recycling options\r\n    return !props || !props.start ? null : (\r\n        <div>\r\n            <div className=\"quickstart\">\r\n                <div>\r\n                    <div className=\"title\">Quickstart</div>\r\n                    <div className=\"left\">\r\n                        <button onClick={() => props.start({ drawMode: \"single\", recyclingMode: \"infinite\" })}>\r\n                            🐭\r\n                            <div>Turn 1 card at once.</div>\r\n                            <div>No limit on passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"single\", recyclingMode: \"3-pass\" })}>\r\n                            🐹\r\n                            <div>Turn 1 card at once.</div>\r\n                            <div>Three passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"single\", recyclingMode: \"1-pass\" })}>\r\n                            🐰\r\n                            <div>Turn 1 card at once.</div>\r\n                            <div>Only a single pass</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <button onClick={() => props.start({ drawMode: \"triple\", recyclingMode: \"infinite\" })}>\r\n                            🐨\r\n                            <div>Turn 3 cards at once.</div>\r\n                            <div>No limit on passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"triple\", recyclingMode: \"3-pass\" })}>\r\n                            🐼\r\n                            <div>Turn 3 cards at once.</div>\r\n                            <div>Three passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"triple\", recyclingMode: \"1-pass\" })}>\r\n                            🐻\r\n                            <div>Turn 3 cards at once.</div>\r\n                            <div>Only a single pass</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartScreen;\r\n","import \"./Style/App.css\";\r\n\r\nimport Board from \"./View/Board\";\r\nimport React from \"react\";\r\nimport StartScreen from \"./View/UI/StartScreen\";\r\n\r\nconst App = () => {\r\n    const [appState, setAppState] = React.useState({ initialized: false });\r\n    const start = (settings) =>\r\n        setAppState({\r\n            ...settings,\r\n            initialized: true,\r\n        });\r\n    const restart = () => setAppState({ initialized: false });\r\n    return !appState.initialized ? <StartScreen start={start} /> : <Board settings={appState} restart={restart} />;\r\n};\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}