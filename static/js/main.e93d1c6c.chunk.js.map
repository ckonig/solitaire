{"version":3,"sources":["View/BlinkingComponent.js","View/Card.js","View/MouseHand.js","View/TouchHand.js","View/Hand.js","View/StackBase.js","View/Foundation.js","View/Clock.js","View/Undo.js","View/Header.js","View/Menu.js","View/Stock.js","View/Tableau.js","View/Waste.js","View/Board.js","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","Service/Blinker.js","Service/BaseService.js","Service/Foundation.js","Service/Game.js","Model/Game/Foundation.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.js","Model/Game/Waste.js","Model/Facade.js","Service/Settings.js","Service/Stock.js","Service/Tableau.js","Service/Waste.js","Service/Suggestions.js","Service/Facade.js","Service/GameState.js","App.js","index.js"],"names":["BlinkingComponent","this","props","model","blinkFor","unblink","Component","Card","onClick","e","ele","target","className","includes","offsetParent","rect","getBoundingClientRect","position","click","x","clientX","y","clientY","element","type","icon","isSelected","blink","isSuggested","suggestion","style","zIndex","offsetTop","top","entropyStyle","shadowOffsetX","offsetY","shadowOffsetY","_style","_div","children","isHidden","face","MouseHand","onMouseMove","state","positionFixed","setState","updateDisplay","myRef","React","createRef","bind","onKeyDown","document","addEventListener","putBack","removeEventListener","node","current","hand","parent","source","left","window","event","keyCode","getOffsetTop","index","ref","stack","map","card","TouchHand","c","Hand","p","length","settings","mouseMode","StackBase","classname","visible","suggested","Foundation","stackindex","Stacks","stacks","foundation","Clock","timeElapsed","padleft","i","setInterval","msec","end","Date","now","started","hh","Math","floor","mm","ss","Undo","evtobj","ctrlKey","undo","title","undoLabel","Header","points","suggestOnce","beat","reset","toggleMenu","showMenu","Menu","isEnded","onChange","setBaseEntropy","value","baseEntropy","entropyLevels","entropyLevel","setInteractionEntropy","interactionEntropy","setMouseMode","mouseModes","setSuggestionMode","suggestionMode","suggestionModes","rel","href","Stock","Tableau","getOffset","tableau","Waste","Board","handlers","game","stock","clickStock","waste","clickWaste","clickFoundation","clickTableau","causeEntropy","lvl","level","random","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","DeckSize","Suits","heart","color","club","diamond","spade","Deck","keys","Object","deckSize","key","flat","shuffleArray","array","j","Blinker","gamestate","startBlink","selector","registerBlink","setTimeout","stopBlink","_setState","Service","dispatchPutDown","isHoldingCard","_dispatchPutDown","dispatchPickup","_dispatchPickup","_blink","blinker","handler","_card","wouldAccept","src","add","putDown","registerMove","tryDetectEnd","getTop","getPreviousUsed","pickUp","remove","registerPickup","s","countCards","Game","getInitialState","suggestor","stateholder","previousStates","id","currentState","previous","popPreviousState","evaluateOptions","pow","multiplicator","getStacks","getCurrentAccepted","currentFoundation","acceptedCards","hasMoreThanOneCard","accepts","currentCard","currentAccepted","push","usedCards","pop","f","parseInt","reduce","a","b","setEntropy","forEach","suit","slice","reverse","origStack","isRequested","popPrevious","memorable","modelEquals","modified","currentMove","rateMove","every","stackEquals","stacksEqual","console","debug","move","sourceIsTableau","substr","targetIsTableau","sourceIsFoundation","targetIsFoundation","isFromCurrentSource","splice","Settings","isTouch","is_touch_device","drawModes","drawMode","prefixes","split","DocumentTouch","query","join","matchMedia","matches","error","isOnTop","getStack","getUnhiddenCards","filter","canPutDown","range","indexOf","getCard","popWithFollowing","result","stackEntropy","uncover","entropy","next","concat","setCardProperties","TableauGenerator","generateStacks","offset","deck","pointer","oldpointer","ids","template","generateStack","tryPutDown","canAdd","popTop","recycle","Facade","sm","menu","moveToWaste","recycleWaste","registerRecycle","tryUncover","registerUncover","Suggestions","getPutdownSuggestions","onlyUseful","accepted","_stack","substring","getUncoverOptions","options","foundAny","wasteState","cardIndex","tableauState","Model","shuffle","getHandlers","getHandler","GameState","pushPreviousState","App","suggestMove","createSuggestions","subscribe","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e93d1c6c.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    componentDidUpdate() {\r\n        if (this.props.model.blinkFor) {\r\n            this.props.model.unblink();\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onClick = (e) => {\r\n        let ele = e.target;\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        //@todo use scroll difference instead\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            click: {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n\r\n        this.props.onClick({ ...this.props.model }, position);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        //@todo 3d flip https://3dtransforms.desandro.com/card-flip\r\n        //run css animation first like this:\r\n        //https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n        //then trigger re-render through state change in parent\r\n        const model = props.model;\r\n        let className = props.className + \" card card-base suit-\" + model.type.icon;\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack\r\n        className += (props.isSuggested || props.model.suggestion) ? \" card-suggested\": \"\";\r\n        const style = {\r\n            zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };        \r\n        if (!props.isSelected && !(props.isSuggested || props.model.suggestion) && !props.blink && (props.shadowOffsetX || (!props.shadowOffsetX && props.shadowOffsetX === 0))) {\r\n            const offsetY = props.shadowOffsetY || \"-1\";\r\n            style[\"boxShadow\"] = props.shadowOffsetX + \"px \" + offsetY + \"px 4px 4px rgba(0, 0, 0, 0.75)\";\r\n        }\r\n\r\n        const _style = {};\r\n\r\n        if (!this.props.onClick) {\r\n            style[\"pointerEvents\"] = \"none\";\r\n            _style[\"pointerEvents\"] = \"none\";\r\n        }\r\n\r\n        const _div = (props) => (\r\n            <div style={_style} className={props.className}>\r\n                {props.children}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <_div className=\"stack-base\">\r\n                <div style={style} className={className} onClick={this.onClick ? this.onClick : null}>\r\n                    {model.isHidden ? (\r\n                        <div className=\"card-back quarot\">&nbsp;</div>\r\n                    ) : (\r\n                        <div className=\"card-grid-container\">\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-left\">{model.face}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div className=\"mainface\">\r\n                                <div className=\"align-center\">{model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-right\">{model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </_div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        if (this.props.putBack) {\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card model={card} key={index} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends Component {\r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.props.hand &&\r\n                this.props.hand.stack &&\r\n                this.props.hand.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        shadowOffsetX={this.props.shadowOffsetX}\r\n                        shadowOffsetY={this.props.shadowOffsetY}\r\n                        offsetTop={this.props.offsetTop + index * 24}\r\n                        zIndex={1000 + index * 20}\r\n                        isSelected={true}\r\n                        onClick={(c) => this.props.onClick(c)}\r\n                    />\r\n                )),\r\n        ];\r\n    }\r\n}\r\n","import MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    if (!props.model || props.parent !== props.model.source) {\r\n        return null;\r\n    }\r\n    const putBack = (c, p) => props.onClick(props.stack[props.stack.length - 1], p, props.stack.length - 1);\r\n    if (props.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parent} hand={props.model} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (props.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <TouchHand\r\n                parent={props.parent}\r\n                hand={props.model}\r\n                shadowOffsetX={props.shadowOffsetX}\r\n                shadowOffsetY={props.shadowOffsetY}\r\n                offsetTop={props.offsetTop}\r\n                onClick={putBack}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base\";\r\n\r\n    if (props.visible) {\r\n        if (props.blink) {\r\n            classname += \" socket-blink\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n    if  (props.suggested) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n    return (\r\n        <div className={classname} onClick={()=> props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    static Stacks = (props) =>\r\n        props.model.stacks.map((foundation, index) => (\r\n            <Foundation\r\n                hand={props.hand}\r\n                key={index}\r\n                model={foundation}\r\n                stackindex={index}\r\n                settings={props.settings}\r\n                onClick={(c, p) => props.onClick(c, p, index)}\r\n            />\r\n        ));\r\n    render() {\r\n        const props = this.props;\r\n        const model = this.props.model;\r\n        const stackindex = this.props.stackindex;\r\n        const settings = this.props.settings;\r\n        return (\r\n            <div key={stackindex}>\r\n                <StackBase\r\n                    suggested={model.suggestion && !model.stack.length}\r\n                    blink={model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, stackindex)}\r\n                    visible={!model.stack.length}\r\n                >\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        shadowOffsetX={stackindex * 2}\r\n                        shadowOffsetY={-3}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                        onClick={(c, p) => props.onClick(c, p, stackindex)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={settings}\r\n                    parent={\"foundation-\" + stackindex}\r\n                    shadowOffsetX={stackindex * 2}\r\n                    shadowOffsetY={-3}\r\n                    onClick={(c, p) => props.onClick(model.stack[model.stack.length - 1], p, stackindex)}\r\n                    model={props.hand}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeElapsed: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const padleft = (i) => (i+\"\").length == 1? (\"0\"+i) : i;\r\n        setInterval(() => {\r\n            this.setState((state) => {\r\n                //@todo padleft or string format : 00:01\r\n                let msec = (this.props.end || Date.now()) - this.props.started;\r\n                const hh = Math.floor(msec / 1000 / 60 / 60);\r\n                msec -= hh * 1000 * 60 * 60;\r\n                const mm = Math.floor(msec / 1000 / 60);\r\n                msec -= mm * 1000 * 60;\r\n                const ss = Math.floor(msec / 1000);\r\n                msec -= ss * 1000;\r\n                state.timeElapsed = hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n                return { ...state };\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return <div className={this.props.className}><div className=\"icon-container\">🕒</div>{this.state.timeElapsed}</div>;\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Undo extends Component {\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            const evtobj = window.event ? event : e;\r\n            if (evtobj.keyCode == 90 && evtobj.ctrlKey) this.props.undo();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <button title={\"Undo (Penalty:\"+this.props.undoLabel()+\")\"} onClick={this.props.undo}>⏪</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Clock from \"./Clock\";\r\nimport React from \"react\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = (props) => (\r\n    <div className=\"header\">\r\n        <div className=\"header-title\"><div className=\"icon-container\">🏆</div> {props.model.points}</div>\r\n        <Clock className=\"header-clock\" started={props.model.started} end={props.model.end} />\r\n        <div className=\"header-buttons\">\r\n            <div>\r\n                <button title={\"Hint\"} onClick={() => props.suggestOnce()}>\r\n                    💡\r\n                </button>\r\n            </div>\r\n            <Undo undo={props.undo} undoLabel={props.undoLabel} />\r\n            <div>\r\n                <button title=\"Punch on table\" onClick={props.beat}>\r\n                    👊\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <button title=\"Reset\" onClick={props.reset}>\r\n                    🔄\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <button title=\"Settings\" onClick={() => props.toggleMenu(props.settings.showMenu)}>\r\n                ⚙️\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Menu extends Component {\r\n    render() {\r\n        const props = this.props;\r\n        if (!props.settings.showMenu) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"footer-grid-container\">\r\n                    <div className=\"stats\">\r\n                        <div>Is Ended: {props.model.isEnded ? \"Y\" : \"N\"}</div>\r\n                    </div>\r\n                    <div className=\"settings\">\r\n                        Settings\r\n                        <div>\r\n                            Base Entropy\r\n                            <select onChange={(e) => props.setBaseEntropy(e.target.value)} value={props.settings.baseEntropy}>\r\n                                {props.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                    <option key={entropyLevel} value={index}>\r\n                                        {entropyLevel}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            Interaction Entropy\r\n                            <select onChange={(e) => props.setInteractionEntropy(e.target.value)} value={props.settings.interactionEntropy}>\r\n                                {props.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                    <option key={entropyLevel} value={index}>\r\n                                        {entropyLevel}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            Card\r\n                            <select onChange={(e) => props.setMouseMode(e.target.value)} value={props.settings.mouseMode}>\r\n                                {props.settings.mouseModes.map((mouseMode) => (\r\n                                    <option key={mouseMode} value={mouseMode}>\r\n                                        {mouseMode}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            Suggestion mode\r\n                            <select onChange={(e) => props.setSuggestionMode(e.target.value)} value={props.settings.suggestionMode}>\r\n                                {props.settings.suggestionModes.map((suggestionMode) => (\r\n                                    <option key={suggestionMode} value={suggestionMode}>\r\n                                        {suggestionMode}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"report\">\r\n                        Report Issues\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/ckonig/solitaire/issues\">\r\n                            here\r\n                        </a>\r\n                        .\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} suggested={props.model.suggestion && !props.model.stack.length} visible={!props.model.stack.length}  />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        offsetTop={index/2*-1}\r\n                        blink={props.model.blinkFor}\r\n                        shadowOffsetX={-6}\r\n                        shadowOffsetY={-3}\r\n                        isSuggested={props.model.suggestion && index == props.model.stack.length-1}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    static Stacks = (props) =>\r\n        props.model.stacks.map((tableau, index) => (\r\n            <Tableau\r\n                settings={props.settings}\r\n                key={index}\r\n                index={index}\r\n                model={tableau}\r\n                hand={props.hand}\r\n                onClick={(card, p) => props.onClick(card, p, index)}\r\n            />\r\n        ));\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, \"tableau-\" + props.index)}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        shadowOffsetX={(4 - 7 + props.index) * 2}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={props.settings}\r\n                    parent={\"tableau-\" + props.index}\r\n                    onClick={props.onClick}\r\n                    model={props.hand}\r\n                    stack={props.model.stack}\r\n                    shadowOffsetX={(4 - 7 + props.index) * 2}\r\n                    offsetTop={getOffset(props.model.stack.length)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null)}\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        shadowOffsetX={-4}\r\n                        shadowOffsetY={-3}\r\n                        offsetTop={(index / 2) * -1}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && index == props.model.stack.length-1}\r\n                        onClick={(c, p) => props.onClick(c, p)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={props.model.settings}\r\n                    shadowOffsetX={-4}\r\n                    shadowOffsetY={-3}\r\n                    offsetTop={(props.model.stack.length / 2) * -1}\r\n                    parent=\"waste\"\r\n                    onClick={props.onClick}\r\n                    model={props.hand}\r\n                    stack={props.model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Foundation from \"./Foundation\";\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"layout-grid-container\">\r\n                <Header\r\n                    settings={props.model.settings}\r\n                    undoLabel={props.handlers.undoLabel}\r\n                    toggleMenu={props.handlers.toggleMenu}\r\n                    reset={props.handlers.reset}\r\n                    undo={props.handlers.undo}\r\n                    beat={props.handlers.beat}\r\n                    model={props.model.game}\r\n                    suggestOnce={props.handlers.suggestOnce}\r\n                />\r\n                <div className=\"game-view\">\r\n                    <div className=\"board-grid-container\">\r\n                        <Stock model={props.model.stock} onClick={props.handlers.clickStock} />\r\n                        <Waste model={props.model.waste} hand={props.model.hand} onClick={props.handlers.clickWaste} />\r\n                        <div className=\"spacer\">&nbsp;</div>\r\n                        <Foundation.Stacks\r\n                            settings={props.model.settings}\r\n                            model={props.model.foundation}\r\n                            hand={props.model.hand}\r\n                            onClick={props.handlers.clickFoundation}\r\n                        />\r\n                        <Tableau.Stacks\r\n                            settings={props.model.settings}\r\n                            model={props.model.tableau}\r\n                            hand={props.model.hand}\r\n                            onClick={props.handlers.clickTableau}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Menu\r\n                    settings={props.model.settings}\r\n                    undoLabel={props.handlers.undoLabel}\r\n                    setMouseMode={props.handlers.setMouseMode}\r\n                    setBaseEntropy={props.handlers.setBaseEntropy}\r\n                    setInteractionEntropy={props.handlers.setInteractionEntropy}\r\n                    setSuggestionMode={props.handlers.setSuggestionMode}\r\n                    model={props.model.game}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.offsetTop = 0;\r\n        this.causeEntropy(1);\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))]).flat();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","export default class Blinker {\r\n    constructor(gamestate) {\r\n        this.gamestate = gamestate;\r\n    }\r\n\r\n    startBlink = (selector, state) => {\r\n        selector(state).blinkFor = 10;\r\n        state.game.registerBlink();\r\n        selector(state).unblink = () => setTimeout(() => this.stopBlink(selector), 100);\r\n    };\r\n\r\n    stopBlink = (selector) =>\r\n        this.gamestate._setState((state) => {\r\n            selector(state).blinkFor = 0;\r\n            state.game.registerBlink();\r\n        });\r\n}\r\n","import Blinker from \"./Blinker\";\r\n\r\nexport default class Service {\r\n    constructor(gamestate) {\r\n        this.gamestate = gamestate;\r\n        this.blinker = new Blinker(gamestate);\r\n    }\r\n\r\n    getHandler(hand) {\r\n        let handler = \"dispatchPickup\";\r\n        if (hand && hand.isHoldingCard()) {\r\n            handler = \"dispatchPutDown\";\r\n        }\r\n        return this[handler];\r\n    }\r\n\r\n    dispatchPutDown = (card, position, index) => {\r\n        this.gamestate._setState((state) => {\r\n            if (state.hand.isHoldingCard()) {\r\n                this._dispatchPutDown(card, position, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    dispatchPickup = (card, position, index) => {\r\n        this.gamestate._setState((state) => {\r\n            if (!state.hand.isHoldingCard()) {\r\n                this._dispatchPickup(card, position, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    _blink = (selector, state) => this.blinker.startBlink(selector, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Foundation extends Service {\r\n    _dispatchPutDown = (_card, position, state, index) => {\r\n        if (state.foundation.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (_card, position, state, index) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryDetectEnd(state) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n\r\n    blink = (index, state) => this._blink((s) => s.foundation.stacks[index], state);\r\n}\r\n","export default class Game {\r\n    constructor(getInitialState, suggestor) {\r\n        this.getInitialState = getInitialState;\r\n        this.suggestor = suggestor;\r\n    }\r\n\r\n    //@todo ask for confirmation before resetting\r\n    reset = (stateholder) =>\r\n        stateholder.setState((state) => (state.game.previousStates ? state.game.previousStates[0] : { ...this.getInitialState() }));\r\n\r\n    // @todo enable undoing via browser back gesture/button\r\n    undo = (id, stateholder, currentState) =>\r\n        stateholder.setState((state) => {\r\n            const previous = state.game.popPreviousState(id, currentState);\r\n            if (previous) {\r\n                this.suggestor.evaluateOptions(previous);\r\n                return previous;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    getHandlers(stateholder, state) {\r\n        return {\r\n            undo: () => this.undo(state.game.previousStates.length - 1, stateholder, state),\r\n            reset: () => this.reset(stateholder),\r\n            undoLabel: () => Math.pow(2, state.game.multiplicator),\r\n        };\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n    }\r\n\r\n    getStacks = () => {\r\n        return this.stacks;\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => !hand.hasMoreThanOneCard() && this.accepts(index, hand.currentCard());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = \"foundation-\" + index;\r\n        card.suggestion = false;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => {\r\n        return [...this.stacks[index].usedCards].pop();\r\n    };\r\n\r\n    countCards = () => {\r\n        return this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation(orig.settings);\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Game {\r\n    constructor() {\r\n        this.points = 0;\r\n        this.started = Date.now();\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove(target, source) {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n\r\n        this.points += this.rateMove(currentMove);\r\n        return true;\r\n    }\r\n\r\n    stackEquals(a, b) {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    }\r\n\r\n    stacksEqual(a, b) {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    }\r\n\r\n    modelEquals(a, b) {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    }\r\n\r\n    pushPreviousState(state) {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    }\r\n\r\n    registerPickup() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        if (previous && previous.game) {\r\n            previous.game.points = Math.min(previous.game.points, this.points) - Math.pow(2, this.multiplicator);\r\n            previous.game.multiplicator = this.multiplicator + 1;\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        if (this.points > 0) {\r\n            if (this.points < 100) {\r\n                this.points = 0;\r\n            } else {\r\n                this.points -= 100;\r\n            }\r\n        }\r\n        console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n    }\r\n\r\n    registerUncover() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n        return true;\r\n    }\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    rateMove(move) {\r\n        const sourceIsTableau = move.source.substr(0, 7) == \"tableau\";\r\n        const targetIsTableau = move.target.substr(0, 7) == \"tableau\";\r\n        const sourceIsFoundation = move.source.substr(0, 10) == \"foundation\";\r\n        const targetIsFoundation = move.target.substr(0, 10) == \"foundation\";\r\n        if (sourceIsTableau) {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (sourceIsFoundation) {\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game();\r\n        copy.points = orig.points;\r\n        copy.started = orig.started;\r\n        copy.modified = orig.modified;\r\n        copy.multiplicator = orig.multiplicator;\r\n        copy.memorable = orig.memorable;\r\n        copy.previousStates = [...orig.previousStates];\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp(stack, source, position) {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    }\r\n\r\n    putDown() {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    }\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","export default class Settings {\r\n    constructor() {\r\n        const isTouch = this.is_touch_device();\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = isTouch ? \"remain-on-stack\" : \"follow-cursor\";\r\n\r\n        this.entropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\n        this.baseEntropy = isTouch ? 1 : 2;\r\n        this.interactionEntropy = isTouch ? 1 : 2;\r\n\r\n        this.drawModes = [\"single\"];\r\n        this.drawMode = \"single\"; //@todo implement triple draw\r\n\r\n        this.suggestionMode = 'regular';\r\n        this.suggestionModes = ['none', 'scored', 'regular', 'full'];\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = (query) => window.matchMedia(query).matches;\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings();\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        return copy;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack, settings) {\r\n        this.settings = settings;\r\n        this.stack = stack;\r\n    }\r\n\r\n    recycle(waste) {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map((element) => {\r\n                element.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n                element.isHidden = true;\r\n                return element;\r\n            });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    }\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach(element => element.causeEntropy(Math.min(lvl,1)));\r\n        return this;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    constructor(cards, settings) {\r\n        this.stacks = !cards ? [] : new TableauGenerator().generateStacks(cards);\r\n        this.settings = settings;\r\n    }\r\n\r\n    getStack = (index) => {\r\n        return this.stacks[index];\r\n    };\r\n\r\n    getUnhiddenCards = (index) => this.stacks[index].stack.filter(c => !c.isHidden);\r\n\r\n    wouldAccept = (index, hand) => this.canPutDown(this.getTop(index), hand, index);\r\n\r\n    canPutDown = (card, hand, index) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.source == \"tableau-\" + index);\r\n\r\n    accepts = (index, current) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== 'A';\r\n    };\r\n\r\n    getCard = (index, card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card, i) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index, card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card, index) => {\r\n        card.source = \"tableau-\" + index;\r\n        return card;\r\n    };\r\n\r\n    getTop(index, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1 - offset];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Tableau([], orig.settings);\r\n        copy.stacks = orig.stacks.map((stack) => ({ stack: Card.copyAll(stack.stack) }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n\r\nclass TableauGenerator {\r\n    generateStacks = (deck) => {\r\n        this.deck = deck;\r\n        this.pointer = 0;\r\n        this.oldpointer = this.pointer;\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => this.template(id));\r\n        ids.reverse().forEach((id) => {\r\n            this.generateStack(id);\r\n        });\r\n        return this.stacks;\r\n    };\r\n\r\n    template = (id) => ({\r\n        stack: [],\r\n        id,\r\n    });\r\n\r\n    generateStack = (id) => {\r\n        this.pointer += 6 - id + 1;\r\n        this.stacks[id].stack = this.deck\r\n            .slice(this.oldpointer, this.pointer)\r\n            .map((c) => ({\r\n                ...c,\r\n                isHidden: true,\r\n                source: \"tableau-\" + id,\r\n            }))\r\n            .reverse();\r\n        if (this.stacks[id].stack[this.stacks[id].stack.length - 1]) {\r\n            this.stacks[id].stack[this.stacks[id].stack.length - 1].isHidden = false;\r\n        }\r\n        this.oldpointer = this.pointer;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.stack = [];\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAccept = (hand) => hand.source == \"waste\" && this.canAdd(hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste(orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Facade {\r\n    static getInitialState = (deck) => {\r\n        const settings = new Settings();\r\n        const state = {\r\n            stock: new Stock([...deck.cards.slice(28)], settings),\r\n            waste: new Waste(settings),\r\n            foundation: new Foundation(settings),\r\n            tableau: new Tableau([...deck.cards.slice(0, 28)], settings),\r\n            hand: new Hand(),\r\n            game: new Game(),\r\n            settings: settings,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n        };\r\n    };\r\n\r\n    static setEntropy = (state, lvl) => {\r\n        return {\r\n            stock: state.stock.setEntropy(lvl),\r\n            waste: state.waste.setEntropy(lvl),\r\n            foundation: state.foundation.setEntropy(lvl),\r\n            tableau: state.tableau.setEntropy(lvl),\r\n            hand: state.hand,\r\n            game: state.game,\r\n            settings: state.settings,\r\n        };\r\n    };\r\n}\r\n","import Facade from \"../Model/Facade\";\r\n\r\nexport default class Settings {\r\n    constructor(suggestor) {\r\n        this.suggestor = suggestor;\r\n    }\r\n\r\n    beat = (stateholder) => {\r\n        this.setBaseEntropy(stateholder, 4);\r\n    };\r\n\r\n    setBaseEntropy = (stateholder, lvl) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.baseEntropy = lvl;\r\n            stateholder.setState((state) => Facade.setEntropy(state, state.settings.baseEntropy));\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setInteractionEntropy = (stateholder, lvl) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.interactionEntropy = lvl;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setMouseMode = (stateholder, mm) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.mouseMode = mm;\r\n            this.suggestor.evaluateOptions(state);\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setSuggestionMode = (stateholder, sm) => {\r\n        stateholder.setState((state) => {\r\n            if (state.settings.suggestionMode !== sm) {\r\n                state.settings.suggestionMode = sm;\r\n                this.suggestor.evaluateOptions(state);\r\n            }\r\n            return state;\r\n        });\r\n    };\r\n\r\n    suggestOnce = (stateholder) => {\r\n        stateholder.setState((state) => {\r\n            const previous = state.settings.suggestionMode;\r\n            state.settings.suggestionMode = \"regular\";\r\n            this.suggestor.evaluateOptions(state);\r\n            state.settings.suggestionMode = previous;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    toggleMenu = (gamestate, menu) => {\r\n        gamestate.setState((state) => {\r\n            console.debug('toggle')\r\n            if (state.settings.showMenu == menu) {\r\n                console.debug('inverting showmenu')\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n            return state;\r\n        });\r\n    };\r\n\r\n    getHandlers(gamestate) {\r\n        return {\r\n            beat: () => this.beat(gamestate),\r\n            setBaseEntropy: (lvl) => this.setBaseEntropy(gamestate, lvl),\r\n            setInteractionEntropy: (lvl) => this.setInteractionEntropy(gamestate, lvl),\r\n            setMouseMode: (mm) => this.setMouseMode(gamestate, mm),\r\n            setSuggestionMode: (sm) => this.setSuggestionMode(gamestate, sm),\r\n            suggestOnce: () => this.suggestOnce(gamestate),\r\n            toggleMenu: (menu) => this.toggleMenu(gamestate, menu),\r\n        };\r\n    }\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Stock extends Service {\r\n    _dispatchPutDown = (card, position, state) => this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, position, state) => (card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state));\r\n\r\n    moveToWaste = (card, state) =>\r\n        state.stock.isOnTop(card) && state.waste.add(state.stock.stack.pop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    //@todo if recycling three times, and no suggestions are found, abort game.\r\n    //@todo allow limiting the max number of recyclings\r\n    recycleWaste = (_card, state) =>\r\n        !state.stock.getTop() && !!state.waste.getTop() && state.stock.recycle(state.waste.recycle()) && state.game.registerRecycle(state);\r\n\r\n    blink = (_card, state) => this._blink((s) => s.stock, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Tableau extends Service {\r\n    _dispatchPutDown = (card, position, state, index) => {\r\n        if (state.tableau.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (card, position, state, index) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card, index, state) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n\r\n    blink = (index, state) => this._blink((s) => s.tableau.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Waste extends Service {\r\n    _dispatchPutDown = (card, position, state) =>\r\n        (state.waste.wouldAccept(state.hand) &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state);\r\n\r\n    _dispatchPickup = (card, position, state) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state);\r\n\r\n    blink = (state) => this._blink((s) => s.waste, state);\r\n}\r\n","import Facade from \"../Model/Facade\";\r\nimport Foundation from \"./Foundation\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\n//@todo this works nicely, but looks too verbose to comprehend\r\nexport default class Suggestions {\r\n    constructor(state) {\r\n        this.state = state;\r\n        this.foundation = new Foundation(null);\r\n        this.tableau = new Tableau(null);\r\n        this.waste = new Waste(null);\r\n        this.stock = new Stock(null);\r\n    }\r\n\r\n    getPutdownSuggestions = (state, onlyUseful) => {\r\n        const accepted = [];\r\n        if (state.settings.suggestionMode !== \"none\" && state.hand.isHoldingCard() && state.waste.wouldAccept(state.hand)) {\r\n            if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"waste\") {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n        state.foundation.stacks.forEach((_stack, index) => {\r\n            if (state.settings.suggestionMode !== \"none\" && state.hand.isHoldingCard() && state.foundation.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"foundation-\" + index) {\r\n                    const move = { target: \"foundation-\" + index, source: state.hand.source };\r\n                    if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        state.foundation.stacks[index].suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        state.tableau.stacks.forEach((_stack, index) => {\r\n            if (state.settings.suggestionMode != \"none\" && state.hand.isHoldingCard() && state.tableau.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"tableau-\" + index) {\r\n                    if (\r\n                        !onlyUseful ||\r\n                        state.settings.suggestionMode === \"full\" ||\r\n                        //filter out moves of King from empty slot to empty slot\r\n                        (!(\r\n                            state.hand.currentCard().face == \"K\" &&\r\n                            state.tableau.stacks[index].stack.length == 0 &&\r\n                            state.hand.source.substring(0, 8) == \"tableau-\" &&\r\n                            state.tableau.stacks[state.hand.source.substring(8)].stack.length == 0\r\n                        ) &&\r\n                            //// filter out moves between stacks if same (non-hidden) parent card\r\n                            !(\r\n                                state.tableau.stacks[index].stack.length > 0 &&\r\n                                state.hand.source.substring(0, 8) == \"tableau-\" &&\r\n                                state.tableau.stacks[state.hand.source.substring(8)].stack.length > 0 &&\r\n                                state.tableau.stacks[index].stack[state.tableau.stacks[index].stack.length - 1].face ==\r\n                                    state.tableau.stacks[state.hand.source.substring(8)].stack[\r\n                                        state.tableau.stacks[state.hand.source.substring(8)].stack.length - 1\r\n                                    ].face &&\r\n                                !state.tableau.getTop(state.hand.source.substring(8)).isHidden\r\n                            ))\r\n                    ) {\r\n                        const move = { target: \"tableau-\" + index, source: state.hand.source };\r\n                        if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            state.tableau.stacks[index].suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.map((a) => ({ ...a, points: state.game.rateMove(a) }));\r\n    };\r\n\r\n    getUncoverOptions = (state) => {\r\n        const options = [];\r\n        if (!state.hand.isHoldingCard()) {\r\n            state.tableau.stacks.forEach((stack, stackindex) => {\r\n                const top = state.tableau.getTop(stackindex);\r\n                if (top && top.isHidden) {\r\n                    top.suggestion = true;\r\n                    options.push(\"tableau-\" + stackindex);\r\n                }\r\n            });\r\n        }\r\n\r\n        return options;\r\n    };\r\n\r\n    evaluateOptions = (state) => {\r\n        state.waste.suggestion = false;\r\n        state.waste.stack.forEach((c) => {\r\n            c.suggestion = false;\r\n        });\r\n\r\n        state.stock.suggestion = false;\r\n        state.stock.stack.forEach((c) => {\r\n            c.suggestion = false;\r\n        });\r\n\r\n        state.tableau.stacks.forEach((s) => {\r\n            s.suggestion = false;\r\n            s.stack.forEach((c) => {\r\n                c.suggestion = false;\r\n            });\r\n        });\r\n\r\n        state.foundation.stacks.forEach((s) => {\r\n            s.suggestion = false;\r\n            s.stack.forEach((c) => {\r\n                c.suggestion = false;\r\n            });\r\n        });\r\n\r\n        if (state.settings.suggestionMode !== \"none\") {\r\n            const uncoverOptions = this.getUncoverOptions(state);\r\n\r\n            if (!uncoverOptions.length) {\r\n                const acceptedPutdown = this.getPutdownSuggestions(state);\r\n\r\n                if (!acceptedPutdown.length && !state.hand.isHoldingCard()) {\r\n                    let foundAny = false;\r\n                    const wasteState = Facade.copy(state);\r\n                    this.waste._dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n                    if (wasteState.game.modified) {\r\n                        const wasteSuggestions = this.getPutdownSuggestions(wasteState, true);\r\n                        if (wasteSuggestions.length > (state.settings.suggestionMode == \"full\" ? 1 : 0)) {\r\n                            state.waste.suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n\r\n                    state.tableau.stacks.forEach((tableau, index) => {\r\n                        state.tableau.getStack(index).stack.forEach((card, cardIndex) => {\r\n                            if (!card.isHidden) {\r\n                                const tableauState = Facade.copy(state);\r\n                                this.tableau._dispatchPickup(card, null, tableauState, index);\r\n                                if (tableauState.game.modified) {\r\n                                    const tableauSuggestions = this.getPutdownSuggestions(tableauState, true);\r\n                                    if (tableauSuggestions.length > (state.settings.suggestionMode == \"full\" ? 1 : 0)) {\r\n                                        state.tableau.stacks[index].stack[cardIndex].suggestion = true;\r\n                                        foundAny = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    if (!foundAny || state.settings.suggestionMode == \"full\") {\r\n                        state.stock.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n","import Deck from \"../Model/Deck/Deck\";\r\nimport Foundation from \"./Foundation\";\r\nimport Game from \"./Game\";\r\nimport Model from \"../Model/Facade\";\r\nimport Settings from \"./Settings\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Facade {\r\n    constructor() {\r\n        this.suggestor = new Suggestions();\r\n        this.deck = new Deck();\r\n        this.deck.shuffle();\r\n    }\r\n\r\n    getInitialState = () => {\r\n        const model = Model.getInitialState(this.deck);\r\n        this.suggestor.evaluateOptions(model);\r\n        return model;\r\n    };\r\n\r\n    getHandlers(gamestate, state) {\r\n        return {\r\n            ...new Game(this.getInitialState, this.suggestor).getHandlers(gamestate, state),\r\n            ...new Settings(this.suggestor).getHandlers(gamestate, state),\r\n            clickTableau: new Tableau(gamestate).getHandler(state.hand),\r\n            clickFoundation: new Foundation(gamestate).getHandler(state.hand),\r\n            clickStock: new Stock(gamestate).getHandler(state.hand),\r\n            clickWaste: new Waste(gamestate).getHandler(state.hand),\r\n        };\r\n    }\r\n}\r\n","import Model from \"../Model/Facade\";\r\n\r\nexport default class GameState {\r\n    constructor(stateholder, suggestor) {\r\n        this.stateholder = stateholder;\r\n        this.suggestor = suggestor;\r\n    }\r\n\r\n    //@todo deprecate uncontrolled usage here\r\n    setState = (a, b) => this.stateholder.setState(a, b);\r\n\r\n    _setState = (a, b) =>\r\n        this.stateholder.setState((state) => {\r\n            state.game.modified = false;\r\n            const previous = Model.copy(state);\r\n            a(state);\r\n            if (state.game.modified) {\r\n                //@todo  use localstorage for previous state, reduce react state for performance\r\n                state.game.pushPreviousState(previous);\r\n                this.suggestor.evaluateOptions(state);\r\n                return { ...state };\r\n            }\r\n\r\n            return null;\r\n        }, b);\r\n}\r\n","import \"./App.css\";\r\n\r\nimport Board from \"./View/Board\";\r\nimport { Component } from \"react\";\r\nimport Game from \"./Service/Facade\";\r\nimport GameState from \"./Service/GameState\";\r\nimport React from \"react\";\r\nimport Suggestions from \"./Service/Suggestions\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //@todo allow resuming earlier game.\r\n        this.gamestate = new GameState(this, new Suggestions());\r\n        this.game = new Game(this.gamestate);\r\n        this.state = this.game.getInitialState(this);\r\n    }\r\n\r\n    render() {\r\n        const handlers = this.game.getHandlers(this.gamestate, this.state);\r\n        return <Board subscribe={this.subscribe} model={this.state} game={this.game} handlers={handlers} />;\r\n    }\r\n\r\n    suggestMove = () => {\r\n        const handlers = this.game.getHandlers(this.gamestate, this.state);\r\n        handlers.createSuggestions();\r\n    };\r\n}\r\n","import \"./App.css\";\r\n\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}