{"version":3,"sources":["View/EndDisplay.js","View/BlinkingComponent.js","View/Card.js","View/MouseHand.js","View/TouchHand.js","View/Hand.js","View/StackBase.js","View/Foundation.js","View/Clock.js","View/Undo.js","View/Header.js","View/Menu.js","View/StartScreen.js","View/Stock.js","View/Tableau.js","View/Waste.js","View/Board.js","Model/Deck/Card.js","Model/Deck/Suits.js","Model/Deck/DeckSize.js","Model/Game/Foundation.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.js","Model/Game/Waste.js","Model/Facade.js","Service/Blinker.js","Service/BaseService.js","Service/Tableau.js","Service/Waste.js","Service/Suggestions.js","Service/Dealer.js","Model/Deck/Deck.js","Service/Foundation.js","Service/Game.js","Service/Settings.js","Service/Stock.js","Service/Facade.js","Service/GameState.js","App.js","index.js"],"names":["EndDisplay","props","game","isEnded","className","points","getElapsed","onClick","restart","BlinkingComponent","this","model","blinkFor","unblink","Component","Card","e","ele","target","includes","offsetParent","rect","getBoundingClientRect","position","click","x","clientX","y","clientY","element","type","icon","isSelected","blink","isSuggested","suggestion","style","zIndex","offsetTop","top","entropyStyle","shadowOffsetX","offsetY","shadowOffsetY","offsetLeft","_style","_div","children","isHidden","face","MouseHand","onMouseMove","state","positionFixed","setState","updateDisplay","myRef","React","createRef","bind","onKeyDown","document","addEventListener","putBack","removeEventListener","node","current","hand","parent","source","left","window","event","keyCode","getOffsetTop","index","ref","stack","map","card","TouchHand","c","Hand","p","length","settings","mouseMode","StackBase","classname","visible","suggested","Foundation","stackindex","Stacks","stacks","foundation","Clock","timeElapsed","setInterval","started","Undo","evtobj","ctrlKey","undo","disabled","previousStates","title","undoLabel","Header","recyclingMode","Array","from","recyclings","keys","join","end","suggestionMode","suggestOnce","reset","newGame","beat","toggleMenu","showMenu","Menu","onChange","setSuggestionMode","value","suggestionModes","setMouseMode","mouseModes","setBaseEntropy","baseEntropy","entropyLevels","entropyLevel","setInteractionEntropy","interactionEntropy","rel","href","StartScreen","shouldStart","start","Stock","Tableau","getOffset","i","tableau","Waste","drawMode","isHoldingCard","additionalOffset","console","debug","Board","componentDidMount","deal","componentDidUpdate","handlers","stock","clickStock","waste","clickWaste","clickFoundation","clickTableau","causeEntropy","lvl","level","random","Math","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","Suits","heart","color","club","diamond","spade","DeckSize","getStacks","getCurrentAccepted","currentFoundation","acceptedCards","wouldAccept","hasMoreThanOneCard","accepts","currentCard","currentAccepted","add","push","usedCards","pop","remove","getTop","getPreviousUsed","countCards","f","parseInt","reduce","a","b","setEntropy","forEach","Object","key","suit","slice","reverse","origStack","Game","popPreviousState","id","isRequested","popPrevious","previous","memorable","modelEquals","pow","multiplicator","padleft","msec","Date","now","hh","floor","mm","ss","modified","currentMove","rateMove","every","stackEquals","stacksEqual","move","sourceIsTableau","substr","targetIsTableau","sourceIsFoundation","targetIsFoundation","isFromCurrentSource","splice","Settings","isTouch","is_touch_device","drawModes","recyclingModes","prefixes","split","DocumentTouch","query","matchMedia","matches","error","isOnTop","popTop","dealt","dealingAt","isDealt","newCard","isFirst","getStack","canPutDown","range","indexOf","getCard","j","popWithFollowing","result","stackEntropy","uncover","entropy","log","next","concat","setCardProperties","offset","tryPutDown","canAdd","addAll","recycle","Facade","getInitialState","deck","Blinker","gamestate","startBlink","selector","registerBlink","setTimeout","stopBlink","_setState","Service","dispatchPutDown","_dispatchPutDown","dispatchPickup","_dispatchPickup","_blink","blinker","handler","src","putDown","registerMove","tryUncover","pickUp","registerPickup","registerUncover","s","Suggestions","evaluateOptions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","substring","foundAny","wasteState","cardIndex","tableauState","options","disableSuggestion","obj","Dealer","dealWithTimeouts","suggestor","Deck","deckSize","flat","shuffleArray","array","_card","tryDetectEnd","stateholder","currentState","sm","menu","moveToWaste","recycleWaste","canRecycle","registerRecycle","shuffle","Model","prepareStart","getDealer","getHandlers","getHandler","GameState","pushPreviousState","App","subscribe","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f64c008.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst EndDisplay = (props) => {\r\n    //@todo make this an optional part of the menu\r\n    return !props.game.isEnded ? null : (\r\n        <div className=\"endscreen align-center\">\r\n            <h1>🥳</h1>\r\n            <div>Points: {props.game.points}</div>\r\n            <div>Time: {props.game.getElapsed()}</div>\r\n            <button onClick={props.restart}>new game</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndDisplay;\r\n","import { Component } from \"react\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    componentDidUpdate() {\r\n        if (this.props.model.blinkFor) {\r\n            this.props.model.unblink();\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onClick = (e) => {\r\n        let ele = e.target;\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        //@todo use scroll difference instead\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            click: {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n\r\n        this.props.onClick({ ...this.props.model }, position);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        //@todo 3d flip https://3dtransforms.desandro.com/card-flip\r\n        //run css animation first like this:\r\n        //https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n        //then trigger re-render through state change in parent\r\n        const model = props.model;\r\n        let className = props.className + \" card card-base suit-\" + model.type.icon;\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack\r\n        className += (props.isSuggested || props.model.suggestion) ? \" card-suggested\": \"\";\r\n        const style = {\r\n            zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };        \r\n        if (!props.isSelected && !(props.isSuggested || props.model.suggestion) && !props.blink && (props.shadowOffsetX || (!props.shadowOffsetX && props.shadowOffsetX === 0))) {\r\n            const offsetY = props.shadowOffsetY || \"-1\";\r\n            style[\"boxShadow\"] = props.shadowOffsetX + \"px \" + offsetY + \"px 4px 4px rgba(0, 0, 0, 0.75)\";\r\n        }\r\n\r\n        if (props.offsetLeft) {\r\n          style[\"left\"] =  (props.offsetLeft * 4) + \"vw\";\r\n        }\r\n\r\n        const _style = {};\r\n\r\n        if (!this.props.onClick) {\r\n            style[\"pointerEvents\"] = \"none\";\r\n            _style[\"pointerEvents\"] = \"none\";\r\n        }\r\n\r\n        const _div = (props) => (\r\n            <div style={_style} className={props.className}>\r\n                {props.children}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <_div className=\"stack-base\">\r\n                <div style={style} className={className} onClick={this.onClick ? this.onClick : null}>\r\n                    {model.isHidden ? (\r\n                        <div className=\"card-back quarot\">&nbsp;</div>\r\n                    ) : (\r\n                        <div className=\"card-grid-container\">\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-left\">{model.face}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div className=\"mainface\">\r\n                                <div className=\"align-center\">{model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-right\">{model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </_div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        if (this.props.putBack) {\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card model={card} key={index} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends Component {\r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.props.hand &&\r\n                this.props.hand.stack &&\r\n                this.props.hand.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        shadowOffsetX={this.props.shadowOffsetX}\r\n                        shadowOffsetY={this.props.shadowOffsetY}\r\n                        offsetTop={this.props.offsetTop + index * 24}\r\n                        offsetLeft={this.props.offsetLeft}\r\n                        zIndex={1000 + index * 20}\r\n                        isSelected={true}\r\n                        onClick={(c) => this.props.onClick(c)}\r\n                    />\r\n                )),\r\n        ];\r\n    }\r\n}\r\n","import MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    if (!props.model || props.parent !== props.model.source) {\r\n        return null;\r\n    }\r\n    const putBack = (c, p) => props.onClick(props.stack[props.stack.length - 1], p, props.stack.length - 1);\r\n    if (props.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parent} hand={props.model} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (props.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <TouchHand\r\n                parent={props.parent}\r\n                hand={props.model}\r\n                shadowOffsetX={props.shadowOffsetX}\r\n                shadowOffsetY={props.shadowOffsetY}\r\n                offsetTop={props.offsetTop}\r\n                offsetLeft={props.offsetLeft}\r\n                onClick={putBack}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base\";\r\n\r\n    if (props.visible) {\r\n        if (props.blink) {\r\n            classname += \" socket-blink\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n    if  (props.suggested) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n    return (\r\n        <div className={classname} onClick={()=> props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    static Stacks = (props) =>\r\n        props.model.stacks.map((foundation, index) => (\r\n            <Foundation\r\n                hand={props.hand}\r\n                key={index}\r\n                model={foundation}\r\n                stackindex={index}\r\n                settings={props.settings}\r\n                onClick={(c, p) => props.onClick(c, p, index)}\r\n            />\r\n        ));\r\n    render() {\r\n        const props = this.props;\r\n        const model = this.props.model;\r\n        const stackindex = this.props.stackindex;\r\n        const settings = this.props.settings;\r\n        return (\r\n            <div key={stackindex}>\r\n                <StackBase\r\n                    suggested={model.suggestion && !model.stack.length}\r\n                    blink={model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, stackindex)}\r\n                    visible={!model.stack.length}\r\n                >\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        shadowOffsetX={stackindex * 2}\r\n                        shadowOffsetY={-3}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                        onClick={(c, p) => props.onClick(c, p, stackindex)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={settings}\r\n                    parent={\"foundation-\" + stackindex}\r\n                    shadowOffsetX={stackindex * 2}\r\n                    shadowOffsetY={-3}\r\n                    onClick={(c, p) => props.onClick(model.stack[model.stack.length - 1], p, stackindex)}\r\n                    model={props.hand}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeElapsed: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            if (this.props.started) {\r\n                this.setState((state) => {\r\n                    state.timeElapsed = this.props.game.getElapsed();\r\n                    return { ...state };\r\n                });\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.started &&\r\n            this.state.timeElapsed && (\r\n                <div className={this.props.className}>\r\n                    <div className=\"icon-container\">🕒</div>\r\n                    {this.state.timeElapsed}\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Undo extends Component {\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            const evtobj = window.event ? event : e;\r\n            if (evtobj.keyCode == 90 && evtobj.ctrlKey) this.props.undo();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <button disabled={!this.props.model.previousStates.length} title={\"Undo (Penalty:\"+this.props.undoLabel()+\")\"} onClick={this.props.undo}>⏪</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Clock from \"./Clock\";\r\nimport React from \"react\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = (props) => {\r\n    const getHearts = () => {\r\n        if (props.model.settings.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n        if (props.model.settings.recyclingMode == \"1-pass\") {\r\n            return \"💔\";\r\n        }\r\n\r\n        return Array.from(new Array(2 - props.model.recyclings).keys()).map(() => \"❤️\").join(\"\") + Array.from(new Array(props.model.recyclings).keys()).map(() => \"💔\").join(\"\");\r\n    };\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-title\">\r\n                <div className=\"heart-container\">{getHearts()}</div>\r\n                <div className=\"icon-container\">🏆</div> {props.model.points}\r\n            </div>\r\n            <Clock game={props.model} className=\"header-clock\" started={props.model.started} end={props.model.end} />\r\n            <div className=\"header-buttons\">\r\n                <div>\r\n                    <button disabled={props.settings.suggestionMode !== \"none\"} title={\"Hint\"} onClick={() => props.suggestOnce()}>\r\n                        💡\r\n                    </button>\r\n                </div>\r\n                <Undo undo={props.undo} undoLabel={props.undoLabel} model={props.model} />\r\n\r\n                <div>\r\n                    <button disabled={!props.model.previousStates.length} title=\"Reset\" onClick={props.reset}>\r\n                        ♻️\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button title=\"New Game\" onClick={props.newGame}>\r\n                        🚮\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button title=\"Punch on table\" onClick={props.beat}>\r\n                        👊\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button title=\"Settings\" onClick={() => props.toggleMenu(props.settings.showMenu)}>\r\n                        ⚙️\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Menu extends Component {\r\n    render() {\r\n        //@todo if game not yet started, allow configuration of dealing behavior (preselect enable on desktop, disable on mobile)\r\n        const props = this.props;\r\n        if (!props.settings.showMenu) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Suggestions</div>\r\n                    <div className=\"row\">\r\n                        <span className=\"label\">\r\n                            <div className=\"description\">How much help - if any - should the game offer by displaying suggestions?</div>\r\n                        </span>\r\n                        <select\r\n                            className=\"input\"\r\n                            onChange={(e) => props.setSuggestionMode(e.target.value)}\r\n                            value={props.settings.suggestionMode}\r\n                        >\r\n                            {props.settings.suggestionModes.map((suggestionMode) => (\r\n                                <option key={suggestionMode} value={suggestionMode}>\r\n                                    {suggestionMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Active Card</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">\r\n                            <div className=\"description\">Should the selected card follow the cursor or remain on the stack?</div>\r\n                        </div>\r\n\r\n                        <select className=\"input\" onChange={(e) => props.setMouseMode(e.target.value)} value={props.settings.mouseMode}>\r\n                            {props.settings.mouseModes.map((mouseMode) => (\r\n                                <option key={mouseMode} value={mouseMode}>\r\n                                    {mouseMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Base Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">\r\n                            <div className=\"description\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                        </div>\r\n                        <select className=\"input\" onChange={(e) => props.setBaseEntropy(e.target.value)} value={props.settings.baseEntropy}>\r\n                            {props.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Interaction Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">\r\n                            <div className=\"description\">How much chaos will each interaction add to a stack on the board?</div>\r\n                        </div>\r\n\r\n                        <select\r\n                            className=\"input\"\r\n                            onChange={(e) => props.setInteractionEntropy(e.target.value)}\r\n                            value={props.settings.interactionEntropy}\r\n                        >\r\n                            {props.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/ckonig/solitaire/issues\">\r\n                    Report Issues here\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst StartScreen = (props) => {\r\n    //@todo make this an optional part of the menu\r\n    //@todo add selectors for draw mode & recycling options\r\n    //@todo add selector for timed game\r\n    //@todo add and implement custom start button\r\n    //@todo implement quick-start buttons for different game modes\r\n    return props && props.game && (props.game.started || props.game.shouldStart) ? null : (\r\n        <div className=\"startScreen\">\r\n            <div>\r\n                <div className=\"title\">Quickstart</div>\r\n                <div className=\"left\">\r\n                    <button onClick={props.start}>\r\n                        🐭\r\n                        <div>Turn 1 card at once</div>\r\n                        <div>no limit on passes</div>\r\n                        <div> through the deck</div>\r\n                    </button>\r\n                    <button onClick={props.start}>\r\n                        🐹\r\n                        <div>Turn 1 card at once</div>\r\n                        <div>three passes</div>\r\n                        <div>through the deck</div>\r\n                    </button>\r\n                    <button onClick={props.start}>\r\n                        🐰\r\n                        <div>Turn 1 card at once</div>\r\n                        <div>only a single pass</div>\r\n                        <div>through the deck</div>\r\n                    </button>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <button onClick={props.start}>\r\n                        🐨\r\n                        <div>Turn 3 cards at once</div>\r\n                        <div>no limit on passes</div>\r\n                        <div> through the deck</div>\r\n                    </button>\r\n                    <button onClick={props.start}>\r\n                        🐼\r\n                        <div>Turn 3 cards at once</div>\r\n                        <div>three passes</div>\r\n                        <div>through the deck</div>\r\n                    </button>\r\n                    <button onClick={props.start}>\r\n                        🐻\r\n                        <div>Turn 3 cards at once</div>\r\n                        <div>only a single pass</div>\r\n                        <div>through the deck</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartScreen;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} suggested={props.model.suggestion && !props.model.stack.length} visible={!props.model.stack.length}  />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        offsetTop={index/2*-1}\r\n                        blink={props.model.blinkFor}\r\n                        shadowOffsetX={-6}\r\n                        shadowOffsetY={-3}\r\n                        isSuggested={props.model.suggestion && index == props.model.stack.length-1}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    static Stacks = (props) =>\r\n        props.model.stacks.map((tableau, index) => (\r\n            <Tableau\r\n                settings={props.settings}\r\n                key={index}\r\n                index={index}\r\n                model={tableau}\r\n                hand={props.hand}\r\n                onClick={(card, p) => props.onClick(card, p, index)}\r\n            />\r\n        ));\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, \"tableau-\" + props.index)}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        shadowOffsetX={(4 - 7 + props.index) * 2}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={props.settings}\r\n                    parent={\"tableau-\" + props.index}\r\n                    onClick={props.onClick}\r\n                    model={props.hand}\r\n                    stack={props.model.stack}\r\n                    shadowOffsetX={(4 - 7 + props.index) * 2}\r\n                    offsetTop={getOffset(props.model.stack.length)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n\r\n        const getOffset = (index) => {\r\n            if (props.settings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length =\r\n                props.model.settings.mouseMode == \"remain-on-stack\" && props.hand.isHoldingCard() && props.hand.source == \"waste\"\r\n                    ? props.model.stack.length + 1\r\n                    : props.model.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            console.debug(\"initial length\", length, props.model.stack.length, ((index - length - 2) % 3) + additionalOffset);\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null)}\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        shadowOffsetX={-4}\r\n                        shadowOffsetY={-3}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && index == props.model.stack.length - 1}\r\n                        onClick={(c, p) => props.onClick(c, p)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={props.model.settings}\r\n                    shadowOffsetX={-4}\r\n                    shadowOffsetY={-3}\r\n                    offsetTop={(props.model.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(props.model.stack.length)}\r\n                    parent=\"waste\"\r\n                    onClick={props.onClick}\r\n                    model={props.hand}\r\n                    stack={props.model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import EndDisplay from \"./EndDisplay\";\r\nimport Foundation from \"./Foundation\";\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport React from \"react\";\r\nimport StartScreen from \"./StartScreen\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Board extends React.Component {\r\n    componentDidMount = () => this.props.deal();\r\n    componentDidUpdate = () => this.props.deal();\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"layout-grid-container\">\r\n                    <Header\r\n                        settings={props.model.settings}\r\n                        undoLabel={props.handlers.undoLabel}\r\n                        toggleMenu={props.handlers.toggleMenu}\r\n                        reset={props.handlers.reset}\r\n                        newGame={props.handlers.restart}\r\n                        undo={props.handlers.undo}\r\n                        beat={props.handlers.beat}\r\n                        model={props.model.game}\r\n                        suggestOnce={props.handlers.suggestOnce}\r\n                    />\r\n                    <div className=\"game-view\">\r\n                        <div className=\"board-grid-container\">\r\n                            <Stock model={props.model.stock} onClick={props.handlers.clickStock} />\r\n                            <Waste\r\n                                model={props.model.waste}\r\n                                hand={props.model.hand}\r\n                                onClick={props.handlers.clickWaste}\r\n                                settings={props.model.settings}\r\n                            />\r\n                            <div className=\"spacer\">&nbsp;</div>\r\n                            <Foundation.Stacks\r\n                                settings={props.model.settings}\r\n                                model={props.model.foundation}\r\n                                hand={props.model.hand}\r\n                                onClick={props.handlers.clickFoundation}\r\n                            />\r\n                            <Tableau.Stacks\r\n                                settings={props.model.settings}\r\n                                model={props.model.tableau}\r\n                                hand={props.model.hand}\r\n                                onClick={props.handlers.clickTableau}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <Menu\r\n                        settings={props.model.settings}\r\n                        undoLabel={props.handlers.undoLabel}\r\n                        setMouseMode={props.handlers.setMouseMode}\r\n                        setBaseEntropy={props.handlers.setBaseEntropy}\r\n                        setInteractionEntropy={props.handlers.setInteractionEntropy}\r\n                        setSuggestionMode={props.handlers.setSuggestionMode}\r\n                        model={props.model.game}\r\n                    />\r\n                    <StartScreen start={props.start} game={props.model.game} />\r\n                    <EndDisplay game={props.model.game} restart={props.handlers.restart} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.offsetTop = 0;\r\n        this.causeEntropy(1);\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n    }\r\n\r\n    getStacks = () => {\r\n        return this.stacks;\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => !hand.hasMoreThanOneCard() && this.accepts(index, hand.currentCard());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = \"foundation-\" + index;\r\n        card.suggestion = false;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => {\r\n        return [...this.stacks[index].usedCards].pop();\r\n    };\r\n\r\n    countCards = () => {\r\n        return this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation(orig.settings);\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Game {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.started = false;\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n        this.multiplicator = 1;\r\n        this.shouldStart = false;\r\n        this.recyclings = 0;\r\n    }\r\n\r\n    canRecycle() {\r\n        return this.settings.recyclingMode == \"infinite\" || (this.settings.recyclingMode == \"3-pass\" && this.recyclings < 2);\r\n    }\r\n\r\n    registerMove(target, source) {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n\r\n        this.points += this.rateMove(currentMove);\r\n        return true;\r\n    }\r\n\r\n    stackEquals(a, b) {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    }\r\n\r\n    stacksEqual(a, b) {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    }\r\n\r\n    modelEquals(a, b) {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    }\r\n\r\n    pushPreviousState(state) {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    }\r\n\r\n    registerPickup() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        if (previous && previous.game) {\r\n            previous.game.points = Math.min(previous.game.points, this.points) - Math.pow(2, this.multiplicator);\r\n            previous.game.multiplicator = this.multiplicator + 1;\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        this.recyclings++;\r\n        if (this.settings.drawMode == \"single\" && this.settings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    }\r\n\r\n    registerUncover() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n        return true;\r\n    }\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    rateMove(move) {\r\n        const sourceIsTableau = move.source.substr(0, 7) == \"tableau\";\r\n        const targetIsTableau = move.target.substr(0, 7) == \"tableau\";\r\n        const sourceIsFoundation = move.source.substr(0, 10) == \"foundation\";\r\n        const targetIsFoundation = move.target.substr(0, 10) == \"foundation\";\r\n        if (sourceIsTableau) {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (sourceIsFoundation) {\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.started = orig.started;\r\n        copy.modified = orig.modified;\r\n        copy.multiplicator = orig.multiplicator;\r\n        copy.memorable = orig.memorable;\r\n        copy.previousStates = [...orig.previousStates];\r\n        return copy;\r\n    };\r\n\r\n    getElapsed = () => {\r\n        const padleft = (i) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = (this.end || Date.now()) - this.started;\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp(stack, source, position) {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    }\r\n\r\n    putDown() {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    }\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","export default class Settings {\r\n    constructor() {\r\n        const isTouch = this.is_touch_device();\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = isTouch ? \"remain-on-stack\" : \"follow-cursor\";\r\n\r\n        this.entropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\n        this.baseEntropy = isTouch ? 1 : 2;\r\n        this.interactionEntropy = isTouch ? 1 : 2;\r\n\r\n        this.drawModes = [\"single\", \"triple\"];\r\n        this.drawMode = \"single\";\r\n\r\n        this.suggestionModes = [\"none\", \"scored\", \"regular\", \"full\"];\r\n        this.suggestionMode = \"regular\";\r\n\r\n        this.recyclingModes = [\"infinite\", \"3-pass\", \"1-pass\"];\r\n        this.recyclingMode = \"3-pass\";\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = (query) => window.matchMedia(query).matches;\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings();\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.drawMode = orig.drawMode;\r\n        copy.recyclingMode = orig.recyclingMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack, settings) {\r\n        this.settings = settings;\r\n        this.stack = stack;\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    recycle(waste) {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map((element) => {\r\n                element.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n                element.isHidden = true;\r\n                return element;\r\n            });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    popTop = () => {\r\n        if (this.settings.drawMode == \"single\") {\r\n            return [this.stack.pop()];\r\n        }\r\n        if (this.settings.drawMode == \"triple\") {\r\n            return this.stack.splice(this.stack.length-3);\r\n        }\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        return copy;\r\n    }\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach(element => element.causeEntropy(Math.min(lvl,1)));\r\n        return this;\r\n    }\r\n\r\n    deal(tableau) {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = this.stack.pop();\r\n                newCard.source = \"tableau-\" + i;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                stack.push(newCard);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    constructor(settings) {\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => ({\r\n            stack: [],\r\n            id,\r\n        }));\r\n        this.settings = settings;\r\n    }\r\n\r\n    getStack = (index) => {\r\n        return this.stacks[index];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => this.canPutDown(this.getTop(index), hand, index);\r\n\r\n    canPutDown = (card, hand, index) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.source == \"tableau-\" + index);\r\n\r\n    accepts = (index, current) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index, card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card, i) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index, card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        console.log(\"generating stack entropy\", this.settings.interactionEntropy);\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card, index) => {\r\n        card.source = \"tableau-\" + index;\r\n        return card;\r\n    };\r\n\r\n    getTop(index, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1 - offset];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Tableau([], orig.settings);\r\n        copy.stacks = orig.stacks.map((stack) => ({ stack: Card.copyAll(stack.stack) }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.stack = [];\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAccept = (hand) => hand.source == \"waste\" && this.canAdd(hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste(orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Facade {\r\n    static getInitialState = (deck) => {\r\n        const settings = new Settings();\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings),\r\n            waste: new Waste(settings),\r\n            foundation: new Foundation(settings),\r\n            tableau: new Tableau(settings),\r\n            hand: new Hand(),\r\n            game: new Game(settings),\r\n            settings: settings,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n        };\r\n    };\r\n\r\n    static setEntropy = (state, lvl) => {\r\n        return {\r\n            stock: state.stock.setEntropy(lvl),\r\n            waste: state.waste.setEntropy(lvl),\r\n            foundation: state.foundation.setEntropy(lvl),\r\n            tableau: state.tableau.setEntropy(lvl),\r\n            hand: state.hand,\r\n            game: state.game,\r\n            settings: state.settings,\r\n        };\r\n    };\r\n}\r\n","export default class Blinker {\r\n    constructor(gamestate) {\r\n        this.gamestate = gamestate;\r\n    }\r\n\r\n    startBlink = (selector, state) => {\r\n        selector(state).blinkFor = 10;\r\n        state.game.registerBlink();\r\n        selector(state).unblink = () => setTimeout(() => this.stopBlink(selector), 100);\r\n    };\r\n\r\n    stopBlink = (selector) =>\r\n        this.gamestate._setState((state) => {\r\n            selector(state).blinkFor = 0;\r\n            state.game.registerBlink();\r\n        });\r\n}\r\n","import Blinker from \"./Blinker\";\r\n\r\nexport default class Service {\r\n    constructor(gamestate) {\r\n        this.gamestate = gamestate;\r\n        this.blinker = new Blinker(gamestate);\r\n    }\r\n\r\n    getHandler(hand) {\r\n        let handler = \"dispatchPickup\";\r\n        if (hand && hand.isHoldingCard()) {\r\n            handler = \"dispatchPutDown\";\r\n        }\r\n        return this[handler];\r\n    }\r\n\r\n    dispatchPutDown = (card, position, index) => {\r\n        this.gamestate._setState((state) => {\r\n            if (state.hand.isHoldingCard()) {\r\n                this._dispatchPutDown(card, position, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    dispatchPickup = (card, position, index) => {\r\n        this.gamestate._setState((state) => {\r\n            if (!state.hand.isHoldingCard()) {\r\n                this._dispatchPickup(card, position, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    _blink = (selector, state) => this.blinker.startBlink(selector, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Tableau extends Service {\r\n    _dispatchPutDown = (card, position, state, index) => {\r\n        if (state.tableau.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (card, position, state, index) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card, index, state) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n\r\n    blink = (index, state) => this._blink((s) => s.tableau.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Waste extends Service {\r\n    _dispatchPutDown = (card, position, state) =>\r\n        (state.waste.wouldAccept(state.hand) &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state);\r\n\r\n    _dispatchPickup = (card, position, state) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state);\r\n\r\n    blink = (state) => this._blink((s) => s.waste, state);\r\n}\r\n","import Facade from \"../Model/Facade\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Suggestions {\r\n    constructor() {\r\n        this.tableau = new Tableau(null);\r\n        this.waste = new Waste(null);\r\n    }\r\n\r\n    evaluateOptions = (state) => {\r\n        this.disableAllSuggestions(state);\r\n\r\n        if (state.settings.suggestionMode !== \"none\") {\r\n            const foundUncoverOptions = this.getUncoverOptions(state);\r\n\r\n            if (!foundUncoverOptions) {\r\n                const foundAcceptedPutdown = this.getPutdownSuggestions(state);\r\n\r\n                if (!foundAcceptedPutdown && !state.hand.isHoldingCard()) {\r\n                    const foundAny = this.getPickupOptions(state);\r\n\r\n                    if (!foundAny || state.settings.suggestionMode == \"full\") {\r\n                        //@todo only highlight if it's not empty or there are recyclings left\r\n                        state.stock.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state, onlyUseful) => {\r\n        const accepted = [];\r\n        if (state.settings.suggestionMode !== \"none\" && state.hand.isHoldingCard() && state.waste.wouldAccept(state.hand)) {\r\n            if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"waste\") {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.settings.suggestionMode !== \"none\" && state.hand.isHoldingCard() && state.foundation.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"foundation-\" + index) {\r\n                    const move = { target: \"foundation-\" + index, source: state.hand.source };\r\n                    if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.settings.suggestionMode != \"none\" && state.hand.isHoldingCard() && state.tableau.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"tableau-\" + index) {\r\n                    if (\r\n                        !onlyUseful ||\r\n                        state.settings.suggestionMode === \"full\" ||\r\n                        //filter out moves of King from empty slot to empty slot\r\n                        (!(\r\n                            state.hand.currentCard().face == \"K\" &&\r\n                            stack.stack.length == 0 &&\r\n                            state.hand.source.substring(0, 8) == \"tableau-\" &&\r\n                            state.tableau.stacks[state.hand.source.substring(8)].stack.length == 0\r\n                        ) &&\r\n                            //// filter out moves between stacks if same (non-hidden) parent card\r\n                            !(\r\n                                stack.stack.length > 0 &&\r\n                                state.hand.source.substring(0, 8) == \"tableau-\" &&\r\n                                state.tableau.stacks[state.hand.source.substring(8)].stack.length > 0 &&\r\n                                stack.stack[stack.stack.length - 1].face ==\r\n                                    state.tableau.stacks[state.hand.source.substring(8)].stack[\r\n                                        state.tableau.stacks[state.hand.source.substring(8)].stack.length - 1\r\n                                    ].face &&\r\n                                !state.tableau.getTop(state.hand.source.substring(8)).isHidden\r\n                            ))\r\n                    ) {\r\n                        const move = { target: \"tableau-\" + index, source: state.hand.source };\r\n                        if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state) => {\r\n        let foundAny = false;\r\n        const wasteState = Facade.copy(state);\r\n        this.waste._dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.modified) {\r\n            const foundWasteSuggestions = this.getPutdownSuggestions(wasteState, true);\r\n            if (foundWasteSuggestions > (state.settings.suggestionMode == \"full\" ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) => {\r\n            tableau.stack.forEach((card, cardIndex) => {\r\n                if (!card.isHidden) {\r\n                    const tableauState = Facade.copy(state);\r\n                    this.tableau._dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.modified) {\r\n                        const foundTableauSuggestions = this.getPutdownSuggestions(tableauState, true);\r\n                        if (foundTableauSuggestions > (state.settings.suggestionMode == \"full\" ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state) => {\r\n        const options = [];\r\n        if (!state.hand.isHoldingCard()) {\r\n            state.tableau.stacks.forEach((stack, stackindex) => {\r\n                const top = state.tableau.getTop(stackindex);\r\n                if (top && top.isHidden) {\r\n                    top.suggestion = true;\r\n                    options.push(\"tableau-\" + stackindex);\r\n                }\r\n            });\r\n        }\r\n\r\n        return options.length;\r\n    };\r\n\r\n    disableAllSuggestions = (state) => {\r\n        const disableSuggestion = (obj) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import Suggestions from \"./Suggestions\";\r\n\r\nexport default class Dealer {\r\n    constructor(gamestate, state) {\r\n        this.gamestate = gamestate;\r\n        this.state = state;\r\n        this.suggestor = new Suggestions();\r\n    }\r\n\r\n    deal = (dealt) => {\r\n        //@todo based on settings, deal all-in-one or with delays\r\n        this.dealWithTimeouts(dealt);\r\n    };\r\n\r\n    dealWithTimeouts = (dealt) => {\r\n        setTimeout(() => {\r\n            if (this.state && this.state.stock && !this.state.stock.isDealt && this.state.game.shouldStart) {\r\n                this.gamestate.setState((state) => {\r\n                    if (dealt != state.stock.dealt) {\r\n                        return null;\r\n                    }\r\n\r\n                    state.stock.deal(state.tableau);\r\n                    if (state.stock.isDealt) {\r\n                        //@todo move to game?\r\n                        state.game.started = Date.now();\r\n                    }\r\n\r\n                    if (state.stock.isDealt) {\r\n                        this.suggestor.evaluateOptions(state);\r\n                    } else {\r\n                        this.deal(state.stock.dealt);\r\n                    }\r\n\r\n                    return state;\r\n                });\r\n            }\r\n        }, 25);\r\n    };\r\n}\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))]).flat().reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Foundation extends Service {\r\n    _dispatchPutDown = (_card, position, state, index) => {\r\n        if (state.foundation.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (_card, position, state, index) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryDetectEnd(state) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n\r\n    blink = (index, state) => this._blink((s) => s.foundation.stacks[index], state);\r\n}\r\n","export default class Game {\r\n    constructor(getInitialState, suggestor) {\r\n        this.getInitialState = getInitialState;\r\n        this.suggestor = suggestor;\r\n    }\r\n\r\n    //@todo ask for confirmation before resetting\r\n    reset = (stateholder) =>\r\n        stateholder.setState((state) => (state.game.previousStates ? state.game.previousStates[0] : { ...this.getInitialState() }));\r\n\r\n    // @todo enable undoing via browser back gesture/button\r\n    undo = (id, stateholder, currentState) =>\r\n        stateholder.setState((state) => {\r\n            const previous = state.game.popPreviousState(id, currentState);\r\n            if (previous) {\r\n                this.suggestor.evaluateOptions(previous);\r\n                return previous;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    getHandlers(stateholder, state) {\r\n        return {\r\n            undo: () => this.undo(state.game.previousStates.length - 1, stateholder, state),\r\n            reset: () => this.reset(stateholder),\r\n            undoLabel: () => Math.pow(2, state.game.multiplicator),\r\n        };\r\n    }\r\n}\r\n","import Facade from \"../Model/Facade\";\r\n\r\nexport default class Settings {\r\n    constructor(suggestor) {\r\n        this.suggestor = suggestor;\r\n    }\r\n\r\n    beat = (stateholder) => {\r\n        this.setBaseEntropy(stateholder, 4);\r\n    };\r\n\r\n    setBaseEntropy = (stateholder, lvl) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.baseEntropy = lvl;\r\n            return Facade.setEntropy(state, state.settings.baseEntropy);\r\n        });\r\n    };\r\n\r\n    setInteractionEntropy = (stateholder, lvl) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.interactionEntropy = lvl;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setMouseMode = (stateholder, mm) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.mouseMode = mm;\r\n            this.suggestor.evaluateOptions(state);\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setSuggestionMode = (stateholder, sm) => {\r\n        stateholder.setState((state) => {\r\n            if (state.settings.suggestionMode !== sm) {\r\n                state.settings.suggestionMode = sm;\r\n                this.suggestor.evaluateOptions(state);\r\n            }\r\n            return state;\r\n        });\r\n    };\r\n\r\n    suggestOnce = (stateholder) => {\r\n        stateholder.setState((state) => {\r\n            const previous = state.settings.suggestionMode;\r\n            state.settings.suggestionMode = \"regular\";\r\n            this.suggestor.evaluateOptions(state);\r\n            state.settings.suggestionMode = previous;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    toggleMenu = (gamestate, menu) => {\r\n        gamestate.setState((state) => {\r\n            console.debug('toggle')\r\n            if (state.settings.showMenu == menu) {\r\n                console.debug('inverting showmenu')\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n            return state;\r\n        });\r\n    };\r\n\r\n    getHandlers(gamestate) {\r\n        return {\r\n            beat: () => this.beat(gamestate),\r\n            setBaseEntropy: (lvl) => this.setBaseEntropy(gamestate, lvl),\r\n            setInteractionEntropy: (lvl) => this.setInteractionEntropy(gamestate, lvl),\r\n            setMouseMode: (mm) => this.setMouseMode(gamestate, mm),\r\n            setSuggestionMode: (sm) => this.setSuggestionMode(gamestate, sm),\r\n            suggestOnce: () => this.suggestOnce(gamestate),\r\n            toggleMenu: (menu) => this.toggleMenu(gamestate, menu),\r\n        };\r\n    }\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Stock extends Service {\r\n    _dispatchPutDown = (card, position, state) => this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, position, state) => (card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state));\r\n\r\n    //@todo check if recycling heart got broken (when stock remains empty) - maintain passes instead of remaining recyclings\r\n    moveToWaste = (card, state) =>\r\n        state.stock.isOnTop(card) && state.waste.addAll(state.stock.popTop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    recycleWaste = (_card, state) =>\r\n        !state.stock.getTop() && !!state.waste.getTop() && state.game.canRecycle() && state.stock.recycle(state.waste.recycle()) && state.game.registerRecycle(state);\r\n\r\n    blink = (_card, state) => this._blink((s) => s.stock, state);\r\n}\r\n","import Dealer from \"./Dealer\";\r\nimport Deck from \"../Model/Deck/Deck\";\r\nimport Foundation from \"./Foundation\";\r\nimport Game from \"./Game\";\r\nimport Model from \"../Model/Facade\";\r\nimport Settings from \"./Settings\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Facade {\r\n    constructor() {\r\n        this.suggestor = new Suggestions();\r\n        this.deck = new Deck();\r\n        this.deck.shuffle();\r\n    }\r\n\r\n    restart = () => {\r\n        this.deck = new Deck();\r\n        this.deck.shuffle();\r\n        return Model.getInitialState(this.deck);\r\n    };\r\n\r\n    prepareStart = (gamestate) => {\r\n        gamestate.setState((state) => {\r\n            state.game.shouldStart = true;\r\n            return state;\r\n        })\r\n    }\r\n\r\n    getInitialState = () => Model.getInitialState(this.deck);\r\n\r\n    getDealer = (gamestate, state) => new Dealer(gamestate, state);\r\n\r\n    getHandlers(gamestate, state) {\r\n        return {\r\n            ...new Game(this.getInitialState, this.suggestor).getHandlers(gamestate, state),\r\n            ...new Settings(this.suggestor).getHandlers(gamestate, state),\r\n            clickTableau: new Tableau(gamestate).getHandler(state.hand),\r\n            clickFoundation: new Foundation(gamestate).getHandler(state.hand),\r\n            clickStock: new Stock(gamestate).getHandler(state.hand),\r\n            clickWaste: new Waste(gamestate).getHandler(state.hand),\r\n            restart: () => gamestate.setState(() => this.restart()),\r\n        };\r\n    }\r\n}\r\n","import Model from \"../Model/Facade\";\r\nimport Suggestions from \"./Suggestions\";\r\n\r\nexport default class GameState {\r\n    constructor(stateholder) {\r\n        this.stateholder = stateholder;\r\n        this.suggestor = new Suggestions();\r\n    }\r\n\r\n    //@todo deprecate uncontrolled usage here\r\n    setState = (a, b) => this.stateholder.setState(a, b);\r\n\r\n    _setState = (a, b) =>\r\n        this.stateholder.setState((state) => {\r\n            state.game.modified = false;\r\n            const previous = Model.copy(state);\r\n            a(state);\r\n            if (state.game.modified && state.stock.isDealt) {\r\n                //@todo  use localstorage for previous state, reduce react state for performance\r\n                state.game.pushPreviousState(previous);\r\n                this.suggestor.evaluateOptions(state);\r\n                return { ...state };\r\n            }\r\n\r\n            return null;\r\n        }, b);\r\n}\r\n","import \"./App.css\";\r\n\r\nimport Board from \"./View/Board\";\r\nimport { Component } from \"react\";\r\nimport Game from \"./Service/Facade\";\r\nimport GameState from \"./Service/GameState\";\r\nimport React from \"react\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //@todo allow resuming earlier game.\r\n        this.gamestate = new GameState(this);\r\n        this.game = new Game();\r\n        this.state = this.game.getInitialState();\r\n    }\r\n\r\n    deal = () => this.game.getDealer(this.gamestate, this.state).deal(this.state.stock.dealt);\r\n    start = () => this.game.prepareStart(this.gamestate);\r\n\r\n    render() {\r\n        const handlers = this.game.getHandlers(this.gamestate, this.state);\r\n        return (\r\n            <Board subscribe={this.subscribe} model={this.state} game={this.game} start={this.start} deal={this.deal} handlers={handlers} />\r\n        );\r\n    }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}