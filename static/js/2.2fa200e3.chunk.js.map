{"version":3,"sources":["View/AspectRatio/AspectRatio.tsx","Model/Deck/Deck.ts","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/ControlsPresets.ts","View/UI/StartScreen/Screens/Context.ts","View/UI/StartScreen/Screens/CloseButton.tsx","View/UI/StorageManager.ts","View/UI/StartScreen/Screens/ScreenElement.ts","View/UI/StartScreen/Screens/CookieBanner.tsx","View/UI/StartScreen/Screens/Row.tsx","View/UI/StartScreen/Screens/ScreenNavWrapper.tsx","View/UI/StartScreen/Screens/ScreenNavigator.ts","View/UI/StartScreen/Screens/ScreenContent.tsx","View/UI/StartScreen/Screens/ScreenMainButton.tsx","View/UI/StartScreen/Screens/Controls.tsx","View/UI/StartScreen/Screens/Difficulty.tsx","View/UI/StartScreen/Screens/ScreenSelect.tsx","View/UI/StartScreen/Screens/ScreenToggle.tsx","View/UI/StartScreen/Screens/QuickStart.tsx","View/UI/StartScreen/Screens/Rating.tsx","View/UI/StartScreen/Screens/Suggestions.tsx","View/UI/StartScreen/Screens/Screen.tsx","View/UI/StartScreen/Menu/VerticalMenu.tsx","View/UI/StartScreen/Menu/StartMenu.tsx","View/UI/StartScreen/Home.tsx","View/AspectRatio/Ratios.ts","App.tsx","View/Context.ts","View/UI/StartScreen/TouchDetector.js","View/UI/StartScreen/Context.ts","Model/Deck/Card.ts","Model/Game/Settings/SuggestionModes.ts","View/PauseContext.tsx","GameModes.tsx","View/Game/GamePad.js","View/Game/KeyboardLayouts.ts","Model/Deck/DeckSize.ts","View/Game/Keyboard.js","Common.ts","Model/Deck/Suits.ts","View/UI/StartScreen/RatingOptions.ts","View/UI/StartScreen/AbstractNavigator.ts","Model/Game/Settings/EntropyLevels.ts","View/UI/StartScreen/Menu/MenuButton.tsx","View/UI/StartScreen/Menu/MenuTitle.tsx","View/UI/StartScreen/Menu/TreeNavWrapper.tsx","View/UI/StartScreen/Menu/TreeNavigator.ts","View/UI/StartScreen/Menu/MenuTree.tsx"],"names":["AspectRatio","props","state","width","height","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","suffix","ratio","multiplier","className","prefix","children","React","Component","Deck","cards","keys","Object","Suits","DeckSize","map","deckSize","key","Card","flat","reverse","shuffleArray","array","i","length","j","Math","floor","random","result","copyAll","DifficultyOptions","id","settings","drawMode","recyclingMode","icon","lines","ControlPresets","inputMethod","inputLayout","ScreenContext","createContext","closeScreen","CloseButton","useContext","onClick","StorageManager","hasConsent","consent","localStorage","getItem","parseInt","giveConsent","prompt","confirm","setItem","revokeConsent","clear","store","value","JSON","stringify","getPreviousState","parse","getScreenElementClassName","base","hasFocus","disabled","useFocusEffect","inputEl","useEffect","current","document","activeElement","focus","RenderCookieBanner","navigation","NavigationContext","y","x","screen","useRef","consented","ref","setConsented","CookieBanner","CookieContext","Row","navigator","addElement","child","index","skip","rows","buttons","cloneElement","Array","isArray","ScreenNavWrapper","setNavigation","assignState","inputHandlers","onCancel","screeen","mainMenu","menu","onUp","moveUp","onDown","moveDown","onLeft","moveLeft","onRight","moveRight","onAction","action","Keyboard","layout","Universal","GamePad","ScreenNavigator","getRows","goToRow","row","getRow","click","AbstractNavigator","ScreenContent","_index","_i","addRow","ScreenMainButton","pos","autoFocus","onFocus","line","Controls","StartScreenContext","player","players","useState","found","buttonPressed","pads","setPads","connect","press","console","log","playerHasSettings","playerId","isActive","applyPreset","nextPlayer","getButtonClass","blockedByOtherPlayers","otherPlayers","filter","p","getLines","preset","name","slice","gamepadIndex","onConnect","Difficulty","difficultySettings","renderButton","button","_ScreenSelect","label","values","callBack","toString","description","ScreenSelect","_ScreenToggle","useInitialFocus","checked","onChange","val","ScreenToggle","optimizeOptions","entropy","quickDeal","QuickStart","getClassName","entropySettings","baseEntropy","interactionEntropy","EntropyLevels","Rating","ratingPreset","customizeRating","modifier","next","ratingSettings","RatingPresets","matchPreset","ALL","apply","undoPenalty","r","timedMode","hintPenalty","ratingModifier","customizeRating2","s","suggestionMode","SuggestionModes","NONE","REGULAR","missPenalty","Suggestions","suggestionModes","allSuggestionModes","renderToggle","mode","Screen","Provider","VerticalMenu","StartMenu","switchToMenu","toggleScreen","switchToScreen","toggleMainMenu","toggleConsent","revoke","storage","MenuTitle","MenuTree","keyboardLayout","MenuButton","title","start","GameModes","SINGLEPLAYER","toggled","VERSUS","Home","previous","defaultStartScreenState","startPos","startScreenContext","navigationContext","cookieContext","boardMode","initialized","inputMode","Ratios","_16to9","_4to3","App","started","setStarted","defaultState","defaultPlayerSettings","launchState","setLaunchState","restart","deck","shuffle","BoardWrap","lazy","board","copy","DelayedSuspense","delay","fallback","Date","now","defaultValue","replaceContext","updateContext","updateGameContext","GlobalContext","CookieContextProvider","TouchDetector","prefixes","split","DocumentTouch","query","join","matchMedia","matches","e","error","NavigationProvider","face","type","isHidden","entropyStyle","source","suggestion","canClick","causeEntropy","lvl","level","randomInt","min","max","equals","other","_p","card","otherCard","orig","SuggestionMode","obj","isTemporary","supportsHints","SCORED","FULL","ONCE","TWICE","raw","get","all","default","getHintMode","defaultPauseState","end","paused","pauses","pauseStartedAt","allowed","pausedBy","showMenu","defaultPauseContext","togglePause","getElapsed","PauseContext","PauseContextProvider","PauseProvider","setPaused","context","isPaused","padleft","msec","reduce","a","b","getElapsedMs","hh","mm","ss","onButtonDown","debug","onHint","onUndo","onPause","onMenu","onDisconnect","getKeyboardLayout","Wasd","Arrows","NumPad","up","keyCode","down","right","left","cancel","undo","ctrlKey","hint","pause","getFoundationOrder","getTableauOrder","navListener","evtobj","event","preventDefault","0","1","heart","color","club","diamond","spade","after","CHILL","COMPETITIVE","filterd","s1","s2","_MenuButton","menuX","menuY","menuFocus","setClicking","active","isClicking","onMouseDown","TreeNavWrapper","TreeNavigator"],"mappings":"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","file":"static/js/2.2fa200e3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./16to9.css\";\nimport \"./4to3.css\";\nimport \"./aspectratio.css\";\nimport { Ratio } from \"./Ratios\";\n\nexport default class AspectRatio extends React.Component<{ ratio: Ratio }, { width: number; height: number }> {\n    constructor(props: any) {\n        super(props);\n        this.state = { width: 0, height: 0 };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    render() {\n        const suffix = this.state.width >= this.state.height * this.props.ratio.multiplier ? \"landscape\" : \"portrait\";\n        return (\n            <div className=\"appwrapper\">\n                <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix}>\n                    <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix + \"-inner\"}>\n                        <div className=\"appwrapper-jail\">{this.props.children}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import Card from \"./Card\";\nimport { DeckSize } from \"./DeckSize\";\nimport Suits from \"./Suits\";\n\nexport default class Deck {\n    cards: Card[];\n    constructor() {\n        const keys = Object.keys(Suits);\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\n            .flat()\n            .reverse();\n    }\n\n    shuffle() {\n        this.shuffleArray(this.cards);\n        return this;\n    }\n\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n    shuffleArray(array: any[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    copy() {\n        const result = new Deck();\n        result.cards = Card.copyAll(this.cards);\n        return result;\n    }\n}\n","export interface DifficultyOption {\n    id: number;\n    settings: {\n        drawMode: string;\n        recyclingMode: string;\n    };\n    icon: string;\n    lines: string[];\n}\nconst DifficultyOptions: DifficultyOption[] = [\n    {\n        id: 0,\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\n        icon: \"🐭\",\n        lines: [\"Turn 1 card\", \"No Limit\"],\n    },\n    {\n        id: 1,\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\n        icon: \"🐹\",\n        lines: [\"Turn 1 card\", \"Three passes\"],\n    },\n    {\n        id: 2,\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\n        icon: \"🐰\",\n        lines: [\"Turn 1 card\", \"Only a single pass\"],\n    },\n    {\n        id: 3,\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\n        icon: \"🐨\",\n        lines: [\"Turn 3 cards\", \"No limit\"],\n    },\n    {\n        id: 4,\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\n        icon: \"🐼\",\n        lines: [\"Turn 3 cards \", \"Three passes\"],\n    },\n    {\n        id: 5,\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\n        icon: \"🐻\",\n        lines: [\"Turn 3 cards \", \"Only a single pass\"],\n    },\n];\n\nexport default DifficultyOptions;\n","export interface IControlPreset {\n    id: number;\n    icon: string;\n    inputMethod: string;\n    inputLayout: number;\n    lines: string[],\n}\nexport const ControlPresets: IControlPreset[] = [\n    {\n        id: 0,\n        icon: \"🖱️\",\n        inputMethod: \"mouse\",\n        inputLayout: 0,\n        lines: [\"Mouse or\", \"Touchpad\"],\n    },\n    {\n        id: 1,\n        icon: \"🎮\",\n        inputMethod: \"gamepad\",\n        inputLayout: 0,\n        lines: [\"Gamepad 1\"],\n    },\n    {\n        id: 2,\n        icon: \"🎮\",\n        inputMethod: \"gamepad\",\n        inputLayout: 1,\n        lines: [\"Gamepad 2\"],\n    },\n    {\n        id: 3,\n        icon: \"⌨️\",\n        inputMethod: \"keyboard\",\n        inputLayout: 0,\n        lines: [\"Keyboard\", \"WASD\"],\n    },\n    {\n        id: 4,\n        icon: \"⌨️\",\n        inputMethod: \"keyboard\",\n        inputLayout: 1,\n        lines: [\"Keyboard\", \"ARROWS\"],\n    },\n    {\n        id: 5,\n        icon: \"⌨️\",\n        inputMethod: \"keyboard\",\n        inputLayout: 2,\n        lines: [\"Keyboard\", \"NUMPAD\"],\n    },\n];\n","import React from \"react\";\n\ninterface IScreenContext {\n    closeScreen: () => void;\n}\n\nconst ScreenContext = React.createContext<IScreenContext>({\n    closeScreen: () => {},\n});\n\nexport default ScreenContext;\n","import React from \"react\";\nimport ScreenContext from \"./Context\";\n\nconst CloseButton = () => {\n    const { closeScreen } = React.useContext(ScreenContext);\n    return (\n        <div className=\"closer\">\n            <button onClick={closeScreen}>🗙</button>\n        </div>\n    );\n};\n\nexport default CloseButton;\n","import { StartScreenState } from \"./StartScreen/Context\";\n\nexport default class StorageManager {\n    hasConsent = () => {\n        const consent = localStorage.getItem(\"consent\");\n        return consent && !!parseInt(consent);\n    };\n\n    giveConsent = () => ({\n        prompt: \"Allow this game to store settings, so your changes will stay. No data leaves your computer.\",\n        confirm: () => {\n            localStorage.setItem(\"consent\", \"1\");\n        },\n    });\n    revokeConsent = () => ({\n        prompt: \"Delete all local stored data? All settings will be lost.\",\n        confirm: () => {\n            localStorage.clear();\n        },\n    });\n\n    store = (value: StartScreenState) => {\n        if (this.hasConsent()) {\n            localStorage.setItem(\"state\", JSON.stringify(value));\n        }\n    };\n\n    getPreviousState = () => {\n        if (this.hasConsent()) {\n            const state = localStorage.getItem(\"state\");\n            return state != null ? JSON.parse(state) : null;\n        }\n        return null;\n    };\n}\n","import React from \"react\";\nimport { XY } from \"../../XY\";\n\nexport interface Focusable {\n    hasFocus: boolean;\n    autoFocus?: boolean;\n}\n\nexport interface MenuInpputElementProps extends Focusable {\n    disabled?: boolean;\n}\n\nexport const getScreenElementClassName = (base: string, props: MenuInpputElementProps) => {\n    let className = base;\n    if (props.hasFocus) {\n        className += \" focused\";\n    }\n    if (props.disabled) {\n        className += \" disabled\";\n    }\n    return className;\n};\n\nexport const useFocusEffect = (props: Focusable, inputEl: React.RefObject<HTMLElement>) => {\n    React.useEffect(() => {\n        if (props.hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\n            inputEl.current.focus();\n        }\n    }, [props.hasFocus, inputEl]);\n};\nexport const useInitialFocus = (props: Focusable, inputEl: React.RefObject<HTMLElement>, pos: XY) => {\n    React.useEffect(() => {\n        if (\n            props.autoFocus &&\n            !props.hasFocus &&\n            inputEl &&\n            inputEl.current &&\n            inputEl.current !== document.activeElement &&\n            pos.x == -1 &&\n            pos.y == -1\n        ) {\n            inputEl.current.focus();\n        }\n    }, [inputEl]);\n};\n","import StorageManager from \"../../StorageManager\";\nimport React from \"react\";\nimport { CookieContext, ICookieContext } from \"../../../Context\";\nimport { useFocusEffect } from \"./ScreenElement\";\nimport { XY } from \"../../XY\";\nimport {NavigationContext} from \"../Context\";\n\ninterface RenderCookieBannerProps extends ICookieContext, XY {}\n\nconst RenderCookieBanner = (props: RenderCookieBannerProps) => {\n    const { navigation } = React.useContext(NavigationContext);\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    useFocusEffect({ hasFocus: hasFocus(props.y, props.x) }, inputEl);\n    let className = \"cookiebanner\";\n    if (hasFocus(props.y, props.x)) {\n        className += \" focused\";\n    }\n    return !props.consented ? (\n        <button\n            ref={inputEl}\n            className={className}\n            onClick={() => {\n                const storage = new StorageManager();\n                const consent = storage.giveConsent();\n                if (!props.consented && confirm(consent.prompt)) {\n                    consent.confirm();\n                    props.setConsented(true);\n                }\n            }}\n        >\n            <div className=\"icon\">🍪</div>\n            <div className=\"message\">\n                <b>Changes on this page will be lost after each game</b>, until you allow this app to store data on your machine. Click here\n                to give consent.\n            </div>\n        </button>\n    ) : null;\n};\n\nconst CookieBanner = (props: { x?: number; y?: number }) => {\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\n        return null;\n    }\n    const { consented, setConsented } = React.useContext(CookieContext);\n    return <RenderCookieBanner x={props.x} y={props.y} consented={consented} setConsented={setConsented} />;\n};\n\nexport default CookieBanner;\n","import React from \"react\";\nimport { ScreenNavigator } from \"./ScreenNavigator\";\n\nconst Row = (props: { skip?: boolean; y?: number; navigator?: ScreenNavigator; children?: any[] | any | undefined }) => {\n    if (typeof props.y == \"undefined\" || typeof props.navigator == \"undefined\") {\n        return null;\n    }\n    const addElement = (child: any, index: number) => {\n        if (!child) return null;\n        const assign = (n: any[]) => {\n            n[props.y || 0].buttons[index || 0] = { x: index, y: props.y };\n        };\n        if (!props.skip) {\n            assign(props.navigator?.rows || []);\n        }\n        return React.cloneElement(child, { key: index, x: index, y: props.y });\n    };\n    return !props.children ? null : (\n        <div className=\"row\">{Array.isArray(props.children) ? props.children.map(addElement) : addElement(props.children, 0)}</div>\n    );\n};\nexport default Row;\n","import GamePad from \"../../../Game/GamePad\";\nimport Keyboard from \"../../../Game/Keyboard\";\nimport { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport { ScreenNavigator } from \"./ScreenNavigator\";\nimport { Universal } from \"../../../Game/KeyboardLayouts\";\nimport { XY } from \"../../XY\";\n\nconst ScreenNavWrapper = (props: { navigator: ScreenNavigator; screen: string }) => {\n    const { navigator } = props;\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n\n    const assignState = (result: XY) => {\n        if (navigation.focus == \"screen\") {\n            setNavigation({ ...navigation, screen: result });\n        }\n        if (navigation.focus == \"menu\") {\n            throw \"Invalid navigation action\";\n        }\n    };\n\n    const inputHandlers = {\n        onCancel: () =>\n            setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } }),\n        onUp: () => assignState(navigator.moveUp(navigation.screen.x, navigation.screen.y)),\n        onDown: () => assignState(navigator.moveDown(navigation.screen.x, navigation.screen.y)),\n        onLeft: () => assignState(navigator.moveLeft(navigation.screen.x, navigation.screen.y)),\n        onRight: () => assignState(navigator.moveRight(navigation.screen.x, navigation.screen.y)),\n        onAction: () => navigator.action(navigation.screen),\n    };\n\n    return navigation.focus == \"screen\" ? (\n        <>\n            <Keyboard layout={Universal} {...inputHandlers} />\n            <GamePad {...inputHandlers} />\n        </>\n    ) : null;\n};\nexport default ScreenNavWrapper;\n","import AbstractNavigator from \"../AbstractNavigator\";\nimport { NavHandler } from \"../../NavHandler\";\nimport { XY } from \"../../XY\";\n\nexport class ScreenNavigator extends AbstractNavigator implements NavHandler {\n    moveUp: (x: number, y: number) => XY = (x, y) => {\n        const rows = this.getRows();\n        if (y == 0) {\n            return this.goToRow({ x: x, y: rows.length - 1 });\n        }\n        return this.goToRow({ x: x, y: y - 1 });\n    };\n\n    moveDown: (x: number, y: number) => XY = (x, y) => {\n        const rows = this.getRows();\n        if (y == rows.length - 1) {\n            return this.goToRow({ x: x, y: 0 });\n        }\n        return this.goToRow({ x: x, y: y + 1 });\n    };\n\n    moveLeft: (x: number, y: number) => XY = (x, y) => {\n        const row = this.getRow(y);\n        if (x == 0) {\n            return { x: row.buttons.length - 1, y: y };\n        }\n        return { x: x - 1, y: y };\n    };\n\n    moveRight: (x: number, y: number) => XY = (x, y) => {\n        const row = this.getRow(y);\n        if (x == row.buttons.length - 1) {\n            return { x: 0, y: y };\n        }\n        return { x: x + 1, y: y };\n    };\n\n    action: (xy: XY) => void = () => {\n        const activeElement: any = document.activeElement;\n        activeElement && activeElement.click();\n    };\n}\n","import React from \"react\";\nimport ScreenNavWrapper from \"./ScreenNavWrapper\";\nimport { ScreenNavigator } from \"./ScreenNavigator\";\n\nconst ScreenContent = (props: { id: string; children: any[] }) => {\n    const navigator = new ScreenNavigator();\n    let _index = -1;\n    let _i = -1;\n    const addRow = (child: any) => {\n        _i++;\n        if (!child.props.skip) {\n            _index++;\n            navigator.rows[_index] = { buttons: [] };\n        }\n        return React.cloneElement(child, { key: _i, x: 0, y: _index, navigator: navigator });\n    };\n    return (\n        <div className=\"content\">\n            {props.children.map((child) => addRow(child))}\n            <ScreenNavWrapper navigator={navigator} screen=\"rating\" />\n        </div>\n    );\n};\n\nexport default ScreenContent;\n","import { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport { XY } from \"../../XY\";\n\ninterface ScreenMainButtonProps {\n    x?: number;\n    y?: number;\n    id: number;\n    icon: string;\n    className: (pos: XY) => string;\n    lines: string[];\n    onClick: () => void;\n    autoFocus: boolean;\n    disabled?: boolean;\n}\nconst ScreenMainButton = (props: ScreenMainButtonProps) => {\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\n        return null;\n    }\n\n    const pos = { x: props.x, y: props.y };\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n    const hasFocus = navigation.focus == \"screen\" && navigation.screen.x == props.x && navigation.screen.y == props.y;\n    React.useEffect(() => {\n        if (hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\n            inputEl.current.focus();\n        }\n    }, [inputEl, hasFocus]);\n\n    React.useEffect(() => {\n        if (\n            props.autoFocus &&\n            !hasFocus &&\n            inputEl &&\n            inputEl.current &&\n            inputEl.current !== document.activeElement &&\n            navigation.screen.x == -1 &&\n            navigation.screen.y == -1\n        ) {\n            inputEl.current.focus();\n        }\n    }, [inputEl]);\n    const focus = () => {\n        if (!hasFocus) {\n            setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\n        }\n    };\n    const click = () => {\n        props.onClick();\n        setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\n    };\n    return (\n        <button\n            onFocus={focus}\n            ref={inputEl}\n            key={props.id}\n            disabled={props.disabled}\n            className={props.className(pos)}\n            onClick={click}\n        >\n            {props.icon}\n            {props.lines.map((line: string, index: number) => (\n                <div key={index}>{line}</div>\n            ))}\n        </button>\n    );\n};\n\n\nexport default ScreenMainButton;\n","import { ControlPresets, IControlPreset } from \"../ControlsPresets\";\nimport StartScreenContext, { NavigationContext } from \"../Context\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport { CookieContext } from \"../../../Context\";\nimport GamePad from \"../../../Game/GamePad\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\nimport { XY } from \"../../XY\";\n\nconst Controls = (props: { player: number }) => {\n    const { state, setState } = React.useContext(StartScreenContext);\n    const { navigation } = React.useContext(NavigationContext);\n\n    const player = state.players[props.player];\n\n    if (!player) {\n        return null;\n    }\n\n    const [pads, setPads] = React.useState([\n        {\n            found: false,\n            buttonPressed: false,\n        },\n        {\n            found: false,\n            buttonPressed: false,\n        },\n    ]);\n\n    const connect = (i: number) => {\n        pads[i].found = true;\n        setPads({ ...pads });\n    };\n\n    const press = (i: number) => {\n        pads[i].found = true;\n        pads[i].buttonPressed = true;\n        setPads({ ...pads });\n        console.log(pads);\n    };\n\n    const { consented } = React.useContext(CookieContext);\n\n    const playerHasSettings = (id: number, playerId: number) =>\n        state.players[playerId].inputLayout == ControlPresets[id].inputLayout &&\n        state.players[playerId].inputMethod == ControlPresets[id].inputMethod;\n\n    const isActive = (id: number) => playerHasSettings(id, props.player);\n\n    const applyPreset = (id: number) => {\n        const nextPlayer = { ...state.players };\n        nextPlayer[props.player].inputMethod = ControlPresets[id].inputMethod;\n        nextPlayer[props.player].inputLayout = ControlPresets[id].inputLayout;\n        setState({ ...state, players: nextPlayer });\n    };\n\n    const getButtonClass = (id: number, pos: XY) => {\n        let className = pos.x + \"\" + pos.y + \" \" + navigation.screen.x + \"\" + navigation.screen.y + \" \";\n        className += navigation.screen.x == pos.x && navigation.screen.y == pos.y ? \" focused\" : \"\";\n        className += isActive(id) ? \" active-0\" : \" inactive-0\";\n        className += blockedByOtherPlayers(id) ? \" disabled\" : \"\";\n        return className;\n    };\n\n    const blockedByOtherPlayers = (id: number) => {\n        const otherPlayers = [0, 1].filter((p) => p !== props.player);\n        return playerHasSettings(id, otherPlayers[0]);\n    };\n\n    const getLines = (preset: IControlPreset) => {\n        if (preset.inputMethod == \"gamepad\") {\n            return [...preset.lines, pads[preset.inputLayout].found || pads[preset.inputLayout].buttonPressed ? \"Connected\" : \"Not Found\"];\n        }\n        return preset.lines;\n    };\n\n    return (\n        <div className=\"controls startdetails\">\n            <CloseButton />\n            <div className=\"title\">{player.name}</div>\n            <ScreenContent id=\"settings\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>\n                    {ControlPresets.slice(0, 3).map((preset) => (\n                        <ScreenMainButton\n                            key={preset.id}\n                            icon={preset.icon}\n                            id={preset.id}\n                            disabled={blockedByOtherPlayers(preset.id)}\n                            autoFocus={isActive(preset.id)}\n                            className={(pos: XY) => getButtonClass(preset.id, pos)}\n                            onClick={() => applyPreset(preset.id)}\n                            lines={getLines(preset)}\n                        />\n                    ))}\n                </Row>\n                <Row>\n                    {ControlPresets.slice(3).map((preset) => (\n                        <ScreenMainButton\n                            key={preset.id}\n                            icon={preset.icon}\n                            id={preset.id}\n                            disabled={blockedByOtherPlayers(preset.id)}\n                            autoFocus={isActive(preset.id)}\n                            className={(pos: XY) => getButtonClass(preset.id, pos)}\n                            onClick={() => applyPreset(preset.id)}\n                            lines={preset.lines}\n                        />\n                    ))}\n                </Row>\n                <Row skip={true}>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">@todo</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\n                    </div>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">@todo</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\n                    </div>\n                </Row>\n            </ScreenContent>\n            <GamePad\n                gamepadIndex={0}\n                onConnect={() => connect(0)}\n                onUp={() => press(0)}\n                onDown={() => press(0)}\n                onRight={() => press(0)}\n                onLeft={() => press(0)}\n                onAction={() => press(0)}\n            />\n            <GamePad\n                gamepadIndex={1}\n                onConnect={() => connect(1)}\n                onUp={() => press(1)}\n                onDown={() => press(1)}\n                onRight={() => press(1)}\n                onLeft={() => press(1)}\n                onAction={() => press(1)}\n            />\n        </div>\n    );\n};\n\nexport default Controls;\n","import DifficultyOptions, { DifficultyOption } from \"../DifficultyOptions\";\nimport StartScreenContext, { NavigationContext } from \"../Context\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport { CookieContext } from \"../../../Context\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\nimport { XY } from \"../../XY\";\n\nconst Difficulty = () => {\n    const { state, setState } = React.useContext(StartScreenContext);\n    const { navigation } = React.useContext(NavigationContext);\n\n    const isActive = (id: number) => state.difficultySettings == id;\n\n    const getButtonClass = (index: number, pos: XY) => {\n        const hasFocus = navigation.screen.x == pos.x && navigation.screen.y == pos.y;\n        let name = isActive(index) ? `active active-${index}` : `inactive-${index}`;\n        name += hasFocus ? \" focused\" : \"\";\n        return name;\n    };\n\n    const renderButton = (button: DifficultyOption) => (\n        <ScreenMainButton\n            key={button.id}\n            icon={button.icon}\n            id={button.id}\n            autoFocus={isActive(button.id)}\n            className={(pos) => getButtonClass(button.id, pos)}\n            onClick={() => setState({ ...state, difficultySettings: button.id })}\n            lines={button.lines}\n        />\n    );\n\n    const { consented } = React.useContext(CookieContext);\n\n    return (\n        <div className=\"difficulty startdetails\">\n            <CloseButton />\n            <div className=\"title\">Difficulty</div>\n            <ScreenContent id=\"difficulty\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>{DifficultyOptions.slice(0, 3).map(renderButton)}</Row>\n                <Row>{DifficultyOptions.slice(3).map(renderButton)}</Row>\n                <Row skip={true}>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">Draw Mode</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode == \"triple\"\n                                ? \"Turn 3 cards at once from the Stock to the Waste.\"\n                                : null}\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode == \"single\"\n                                ? \"Turn 1 card after the other from the Stock to the Waste.\"\n                                : null}\n                        </div>\n                    </div>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">Pass Limit</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"1-pass\"\n                                ? \"One pass through the deck. Waste can not be recycled to the Stock.\"\n                                : null}\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"3-pass\"\n                                ? \"Three passes through the deck. Waste can be recycled to Stock two times.\"\n                                : null}\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"infinite\"\n                                ? \"No limit on passes through the deck. Waste can be recycled to Stock endlessly.\"\n                                : null}\n                        </div>\n                    </div>\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\n\nexport default Difficulty;\n","import React from \"react\";\nimport { NavigationContext } from \"../Context\";\nimport { getScreenElementClassName, useFocusEffect } from \"./ScreenElement\";\n\nexport type SelectItem = {\n    label: string;\n    id: string | number;\n};\n\ninterface StaticSelectProps {\n    disabled?: boolean;\n    value: number;\n    values: SelectItem[];\n    label: string;\n    description: string;\n    callBack: (s: string) => void;\n}\n\ninterface SelectProps extends StaticSelectProps {\n    x: number;\n    y: number;\n    hasFocus: boolean;\n}\n\ninterface _ScreenSelectProps extends StaticSelectProps {\n    x?: number;\n    y?: number;\n}\n\nconst _ScreenSelect = (props: SelectProps) => {\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    useFocusEffect(props, inputEl);\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n\n    return (\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\n            <div className=\"title\">\n                {props.label}: {props.values[props.value].label}\n            </div>\n            <div className=\"button\">\n                <button\n                    ref={inputEl}\n                    onClick={() => {\n                        props.callBack((props.value + 1 < props.values.length ? props.value + 1 : 0).toString());\n                        setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\n                    }}\n                    disabled={!!props.disabled}\n                    onFocus={() => {\n                        if (!props.hasFocus) {\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\n                        }\n                    }}\n                >\n                    🔁\n                </button>\n            </div>\n            <div className=\"description\">{props.description}</div>\n        </div>\n    );\n};\n\nconst ScreenSelect = (props: _ScreenSelectProps) => {\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\n        return null;\n    }\n    const { navigation } = React.useContext(NavigationContext);\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\n    const pos = { x: props.x || 0, y: props.y || 0 };\n    return (\n        <_ScreenSelect\n            x={pos.x}\n            y={pos.y}\n            disabled={!!props.disabled}\n            hasFocus={hasFocus(pos.y, pos.x)}\n            label={props.label}\n            description={props.description}\n            value={props.value}\n            values={props.values}\n            callBack={props.callBack}\n        />\n    );\n};\n\nexport default ScreenSelect;\n","import \"../../../Style/react-toggle.css\";\n\nimport { getScreenElementClassName, useFocusEffect, useInitialFocus } from \"./ScreenElement\";\n\nimport { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport Toggle from \"react-toggle\";\nimport { XY } from \"../../XY\";\n\ninterface StaticScreenToggleProps {\n    value: boolean;\n    label: string;\n    description: string;\n    disabled?: boolean;\n    callBack: (s: boolean) => void;\n    autoFocus?: boolean;\n}\n\ninterface ToggleProps extends StaticScreenToggleProps {\n    x: number;\n    y: number;\n    hasFocus: boolean;\n}\n\ninterface _ScreenToggleProps extends StaticScreenToggleProps {\n    x?: number;\n    y?: number;\n}\n\nconst _ScreenToggle = (props: ToggleProps) => {\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    useFocusEffect(props, inputEl);\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n    const change = (val: boolean, pos: XY) => {\n        setNavigation({ ...navigation, screen: pos });\n        props.callBack(val);\n    };\n    useInitialFocus(props, inputEl, navigation.screen);\n    return (\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\n            <div className=\"title\">{props.label}</div>\n            <div className=\"toggle\">\n                <Toggle\n                    ref={inputEl}\n                    disabled={!!props.disabled}\n                    autoFocus={props.hasFocus}\n                    onFocus={() => {\n                        if (!props.hasFocus) {\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\n                        }\n                    }}\n                    checked={props.value}\n                    onChange={() => change(!props.value, { x: props.x, y: props.y })}\n                />\n            </div>\n            <div className=\"description\">{props.description}</div>\n        </div>\n    );\n};\n\nconst ScreenToggle = (props: _ScreenToggleProps) => {\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\n        return null;\n    }\n    const { navigation } = React.useContext(NavigationContext);\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\n    const pos = { x: props.x || 0, y: props.y || 0 };\n    return (\n        <_ScreenToggle\n            x={pos.x}\n            y={pos.y}\n            disabled={!!props.disabled}\n            hasFocus={hasFocus(pos.y, pos.x)}\n            label={props.label}\n            description={props.description}\n            value={props.value}\n            callBack={props.callBack}\n            autoFocus={props.autoFocus}\n        />\n    );\n};\n\nexport default ScreenToggle;\n","import StartScreenContext, { NavigationContext, StartScreenState } from \"../Context\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport { CookieContext } from \"../../../Context\";\nimport EntropyLevels from \"../../../../Model/Game/Settings/EntropyLevels\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\nimport ScreenSelect from \"./ScreenSelect\";\nimport ScreenToggle from \"./ScreenToggle\";\nimport { XY } from \"../../XY\";\n\ninterface OptimizeOption {\n    entropy: number;\n    quickDeal: boolean;\n    lines: string[];\n    icon: string;\n}\n\nconst optimizeOptions: (state: StartScreenState) => OptimizeOption[] = (state: StartScreenState) => [\n    {\n        entropy: 2,\n        quickDeal: false,\n        lines: [(!state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Desktop\"],\n        icon: \"🖥️\",\n    },\n    {\n        entropy: 1,\n        quickDeal: true,\n        lines: [(state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Mobile\"],\n        icon: \"📱\",\n    },\n];\n\nconst QuickStart = () => {\n    const { state, setState } = React.useContext(StartScreenContext);\n    const { navigation } = React.useContext(NavigationContext);\n    const { consented } = React.useContext(CookieContext);\n\n    const isActive = (val: boolean) => state.quickDeal == val;\n\n    const setBaseEntropy = (value: string) =>\n        setState({ ...state, entropySettings: { ...state.entropySettings, baseEntropy: parseInt(value) } });\n\n    const setInteractionEntropy = (value: string) =>\n        setState({ ...state, entropySettings: { ...state.entropySettings, interactionEntropy: parseInt(value) } });\n\n    const setQuickDeal = (value: boolean) => setState({ ...state, quickDeal: value });\n\n    const getClassName = (button: OptimizeOption, pos: XY) => {\n        const hasFocus = navigation.screen.x == pos.x && navigation.screen.y == pos.y;\n        let name = isActive(button.quickDeal) ? \"active active-0\" : \"inactive-0\";\n        name += hasFocus ? \" focused\" : \"\";\n        return name;\n    };\n\n    return (\n        <div className=\"quickstart startdetails\">\n            <CloseButton />\n            <div className=\"title\">Various</div>\n            <ScreenContent id=\"settings\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>\n                    {optimizeOptions(state).map((button, i) => (\n                        <ScreenMainButton\n                            key={i}\n                            icon={button.icon}\n                            id={i}\n                            autoFocus={isActive(button.quickDeal)}\n                            className={(pos) => getClassName(button, pos)}\n                            lines={button.lines}\n                            onClick={() =>\n                                setState({\n                                    ...state,\n                                    quickDeal: button.quickDeal,\n                                    entropySettings: {\n                                        baseEntropy: button.entropy,\n                                        interactionEntropy: button.entropy,\n                                    },\n                                })\n                            }\n                        />\n                    ))}\n                </Row>\n                <Row>\n                    <ScreenSelect\n                        label=\"Base Entropy\"\n                        description=\"How much chaos will the stacks on the board contain by themselves?\"\n                        value={state.entropySettings.baseEntropy || 0}\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\n                        callBack={setBaseEntropy}\n                    />\n                    <ScreenSelect\n                        label=\"Interaction Entropy\"\n                        description=\"How much chaos will each interaction add to a stack on the board?\"\n                        value={state.entropySettings.interactionEntropy || 0}\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\n                        callBack={setInteractionEntropy}\n                    />\n                </Row>\n                <Row>\n                    <ScreenToggle\n                        label=\"Instant Deal\"\n                        description=\"Should the deal animation at the beginning of the game be skipped?\"\n                        value={state.quickDeal}\n                        callBack={setQuickDeal}\n                    />\n                    <ScreenToggle\n                        disabled={true}\n                        label=\"Auto Deal\"\n                        description=\"Should the game draw one card from the stock every 5 seconds?\"\n                        value={false}\n                        callBack={() => {}}\n                    />\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\nexport default QuickStart;\n","import StartScreenContext, { NavigationContext, StartScreenState } from \"../Context\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport { CookieContext } from \"../../../Context\";\nimport RatingPresets from \"../RatingOptions\";\nimport { RatingSettings } from \"../../../../Common\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\nimport ScreenToggle from \"./ScreenToggle\";\nimport SuggestionModes from \"../../../../Model/Game/Settings/SuggestionModes\";\nimport { XY } from \"../../XY\";\n\nconst Rating = () => {\n    const { state, setState } = React.useContext(StartScreenContext);\n    const { navigation } = React.useContext(NavigationContext);\n    const applyPreset = (id: number) => {\n        const next = { ...state };\n        RatingPresets.ALL[id].apply(next);\n        setState(next);\n    };\n\n    const isActive = (id: number) => state.ratingPreset == id;\n\n    const getButtonClass = (id: number, pos: XY) => {\n        let name = isActive(id) ? `active active-${id}` : `inactive-${id}`;\n        name += navigation.screen.x == pos.x && navigation.screen.y == pos.y ? \" focused\" : \"\";\n        return name;\n    };\n\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\n        const next = { ...state };\n        modifier(next.ratingSettings);\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\n        setState(next);\n    };\n    const customizeRating2 = (ratingModifier: (context: RatingSettings) => void, modifier: (context: StartScreenState) => void) => {\n        const next = { ...state };\n        ratingModifier(next.ratingSettings);\n        modifier(next);\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\n        setState(next);\n    };\n\n    const setMissPenalty = (value: boolean) =>\n        customizeRating((r) => {\n            r.missPenalty = value;\n        });\n\n    const setTimeRating = (value: boolean) =>\n        customizeRating((r) => {\n            r.timedMode = value;\n        });\n\n    const setUndoPenalty = (value: boolean) =>\n        customizeRating((r) => {\n            r.undoPenalty = value;\n        });\n\n    const setHintPenalty = (value: boolean) => {\n        customizeRating2(\n            (r) => {\n                r.hintPenalty = value;\n            },\n            (s) => {\n                s.suggestionMode = value ? SuggestionModes.NONE : SuggestionModes.REGULAR;\n            }\n        );\n    };\n\n    const { consented } = React.useContext(CookieContext);\n\n    return (\n        <div className=\"rating startdetails\">\n            <CloseButton />\n            <div className=\"title\">Penalties</div>\n            <ScreenContent id=\"penalties\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>\n                    {RatingPresets.ALL.map((preset) => (\n                        <ScreenMainButton\n                            key={preset.id}\n                            icon={preset.icon}\n                            id={preset.id}\n                            autoFocus={isActive(preset.id) || (state.ratingPreset == -1 && preset.id == 0)}\n                            className={(pos: XY) => getButtonClass(preset.id, pos)}\n                            onClick={() => applyPreset(preset.id)}\n                            lines={[preset.label]}\n                        />\n                    ))}\n                </Row>\n                <Row>\n                    <ScreenToggle\n                        label=\"Undo Penalty\"\n                        description=\"Undo is enabled, but excessive use will be painful. This penalty starts with 2 and increases exponentially.\"\n                        value={!!state.ratingSettings.undoPenalty}\n                        callBack={setUndoPenalty}\n                    />\n                    <ScreenToggle\n                        label=\"Time Penalty\"\n                        description=\"Fast players are rewarded with a time bonus, slow players will be punished.\"\n                        value={!!state.ratingSettings.timedMode}\n                        callBack={setTimeRating}\n                    />\n                </Row>\n                <Row>\n                    <ScreenToggle\n                        label=\"Hint Penalty\"\n                        description=\"Each manual hint will reduce the number of points by 10. This setting disables automatic suggestions. \"\n                        value={!!state.ratingSettings.hintPenalty}\n                        callBack={setHintPenalty}\n                    />\n                    <ScreenToggle\n                        label=\"Miss Penalty\"\n                        description=\"Be careful where you click, as each invalid action will lead to a penalty of 10 points.\"\n                        value={!!state.ratingSettings.missPenalty}\n                        callBack={setMissPenalty}\n                    />\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\n\nexport default Rating;\n","import SuggestionModes, { SuggestionMode } from \"../../../../Model/Game/Settings/SuggestionModes\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport { CookieContext } from \"../../../Context\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenToggle from \"./ScreenToggle\";\nimport StartScreenContext from \"../Context\";\n\nconst Suggestions = () => {\n    const { consented } = React.useContext(CookieContext);\n    const { state, setState } = React.useContext(StartScreenContext);\n\n    const suggestionModes = SuggestionModes.allSuggestionModes();\n\n    const isActive = (id: string) => state.suggestionMode == id;\n\n    const isDisabled = (id: string) => id !== SuggestionModes.NONE && state.ratingSettings.hintPenalty;\n\n    const renderToggle = (mode: SuggestionMode, index: number) => (\n        <ScreenToggle\n            value={isActive(mode.key)}\n            disabled={isDisabled(mode.key)}\n            label={mode.icon + \" \" + mode.label}\n            callBack={() => setState({ ...state, suggestionMode: mode.key })}\n            description={mode.description}\n            key={index}\n            autoFocus={isActive(mode.key)}\n        />\n    );\n\n    return (\n        <div className=\"suggestions startdetails\">\n            <CloseButton />\n            <div className=\"title\">Suggestions</div>\n            <ScreenContent id=\"settings\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>{suggestionModes.slice(0, 2).map(renderToggle)}</Row>\n                <Row>{suggestionModes.slice(2).map(renderToggle)}</Row>\n            </ScreenContent>\n        </div>\n    );\n};\n\nexport default Suggestions;\n","import Controls from \"./Controls\";\nimport Difficulty from \"./Difficulty\";\nimport { NavigationContext } from \"../Context\";\nimport QuickStart from \"./QuickStart\";\nimport Rating from \"./Rating\";\nimport React from \"react\";\nimport ScreenContext from \"./Context\";\nimport Suggestions from \"./Suggestions\";\n\nconst Screen = (props: { screen: string }) => {\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n    const closeScreen = () =>\n        setNavigation({\n            ...navigation,\n            focus: \"menu\",\n            screeen: \"\",\n            mainMenu: navigation.mainMenu,\n            menu: { ...navigation.menu },\n        });\n\n    return (\n        <ScreenContext.Provider value={{ closeScreen: () => closeScreen() }}>\n            <div className=\"startscreen-layout\">\n                <div className=\"startscreen-jail\">\n                    {props.screen == \"rating\" ? <Rating /> : null}\n                    {props.screen == \"difficulty\" ? <Difficulty /> : null}\n                    {props.screen == \"settings\" ? <QuickStart /> : null}\n                    {props.screen == \"suggestions\" ? <Suggestions /> : null}\n                    {props.screen == \"controls0\" ? <Controls player={0} /> : null}\n                    {props.screen == \"controls1\" ? <Controls player={1} /> : null}\n                </div>\n            </div>\n        </ScreenContext.Provider>\n    );\n};\n\nexport default Screen;\n","import React from \"react\";\n\nconst VerticalMenu = (props: any) => {\n    return (\n        <div className=\"ui menu\">\n            <div className=\"startscreen-jail\">\n                <div className=\"innermenu\">{props.children}</div>\n            </div>\n        </div>\n    );\n};\nexport default VerticalMenu;\n","import \"../../../Style/Menu.scss\";\n\nimport { CookieContext } from \"../../../Context\";\nimport GameModes from \"../../../../GameModes\";\nimport MenuButton from \"./MenuButton\";\nimport MenuTitle from \"./MenuTitle\";\nimport MenuTree from \"./MenuTree\";\nimport { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport StorageManager from \"../../StorageManager\";\nimport { Universal } from \"../../../Game/KeyboardLayouts\";\nimport VerticalMenu from \"./VerticalMenu\";\nimport { XY } from \"../../XY\";\n\nconst StartMenu = (props: { start: (boardMode: string) => void }) => {\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n    const { consented, setConsented } = React.useContext(CookieContext);\n\n    const switchToScreen = (s: string, pos: XY) =>\n        setNavigation({\n            ...navigation,\n            focus: \"screen\",\n            screeen: s,\n            screen: { x: -1, y: -1 },\n            menu: { ...pos },\n        });\n\n    const switchToMenu = (menu: string, pos: XY) =>\n        setNavigation({\n            ...navigation,\n            focus: \"menu\",\n            screeen: \"\",\n            mainMenu: menu,\n            menu: { ...pos },\n        });\n\n    const toggleScreen = (s: string, pos: XY) => {\n        if (navigation.screeen !== s) {\n            switchToScreen(s, pos);\n        } else {\n            switchToMenu(navigation.mainMenu, pos);\n        }\n    };\n\n    const toggleMainMenu = (val: string, pos: XY) => switchToMenu(navigation.mainMenu !== val ? val : \"\", pos);\n\n    const toggleConsent = consented\n        ? () => {\n              const revoke = storage.revokeConsent();\n              if (confirm(revoke.prompt)) {\n                  revoke.confirm();\n                  setConsented(false);\n              }\n          }\n        : () => {\n              const consent = storage.giveConsent();\n              if (confirm(consent.prompt)) {\n                  consent.confirm();\n                  setConsented(true);\n              }\n          };\n\n    const storage = new StorageManager();\n\n    return (\n        <VerticalMenu>\n            <MenuTitle label=\"♦ Solitaire\" />\n\n            <MenuTree keyboardLayout={Universal}>\n                <MenuButton icon=\"🎲\" title=\"Single Player\" onClick={() => props.start(GameModes.SINGLEPLAYER)} />\n                <MenuButton\n                    icon=\"⚔️\"\n                    title=\"Versus\"\n                    onClick={(pos: XY) => toggleMainMenu(\"versus\", pos)}\n                    toggled={navigation.mainMenu == \"versus\"}\n                >\n                    <MenuButton\n                        icon=\"🎮\"\n                        title=\"Player 1\"\n                        onClick={(pos: XY) => toggleScreen(\"controls0\", pos)}\n                        toggled={navigation.screeen == \"controls0\"}\n                    />\n                    <MenuButton\n                        icon=\"🎮\"\n                        title=\"Player 2\"\n                        onClick={(pos: XY) => toggleScreen(\"controls1\", pos)}\n                        toggled={navigation.screeen == \"controls1\"}\n                    />\n                    <MenuButton icon=\"🎲\" title=\"Start\" onClick={() => props.start(GameModes.VERSUS)} />\n                </MenuButton>\n                <MenuButton\n                    icon=\"⚙️\"\n                    title=\"Options\"\n                    onClick={(pos: XY) => toggleMainMenu(\"custom\", pos)}\n                    toggled={navigation.mainMenu == \"custom\"}\n                >\n                    <MenuButton\n                        icon=\"💪\"\n                        title=\"Difficulty\"\n                        onClick={(pos: XY) => toggleScreen(\"difficulty\", pos)}\n                        toggled={navigation.screeen == \"difficulty\"}\n                    />\n                    <MenuButton\n                        icon=\"⚖️\"\n                        title=\"Penalties\"\n                        onClick={(pos: XY) => toggleScreen(\"rating\", pos)}\n                        toggled={navigation.screeen == \"rating\"}\n                    />\n                    <MenuButton\n                        icon=\"💡\"\n                        title=\"Suggestions\"\n                        onClick={(pos: XY) => toggleScreen(\"suggestions\", pos)}\n                        toggled={navigation.screeen == \"suggestions\"}\n                    />\n                    <MenuButton\n                        icon=\"🧰\"\n                        title=\"Various\"\n                        onClick={(pos: XY) => toggleScreen(\"settings\", pos)}\n                        toggled={navigation.screeen == \"settings\"}\n                    />\n                </MenuButton>\n                <MenuButton icon=\"🍪\" title={consented ? \"Delete Cookie\" : \"Allow Cookie\"} onClick={toggleConsent} toggled={false} />\n            </MenuTree>\n        </VerticalMenu>\n    );\n};\nexport default StartMenu;\n","import { NavigationProvider, NavigationState, Provider, StartScreenState, defaultStartScreenState } from \"./Context\";\n\nimport { CookieContextProvider } from \"../../Context\";\nimport DifficultyOptions from \"./DifficultyOptions\";\nimport { LaunchSettings } from \"../../../Common\";\nimport React from \"react\";\nimport Screen from \"./Screens/Screen\";\nimport StartMenu from \"./Menu/StartMenu\";\nimport StorageManager from \"../StorageManager\";\n\nconst Home = (props: { start: (settings: LaunchSettings) => void }) => {\n    const storage = new StorageManager();\n    const [consented, setConsented] = React.useState<boolean>(!!storage.hasConsent());\n    const previous = storage.getPreviousState();\n    const [state, setState] = React.useState<StartScreenState>(previous ? previous : defaultStartScreenState);\n    const startPos = { x: 0, y: 0 };\n    const [navigation, setNavigation] = React.useState<NavigationState>({\n        menu: { ...startPos },\n        screen: { ...startPos },\n        focus: \"menu\",\n        mainMenu: \"\",\n        screeen: \"\",\n    });\n    const startScreenContext = {\n        state,\n        setState: (s: StartScreenState) => {\n            setState(s);\n            storage.store(s);\n        },\n    };\n    const navigationContext = {\n        navigation,\n        setNavigation,\n    };\n    const cookieContext = {\n        consented,\n        setConsented,\n    };\n\n    const start = (boardMode: string) => {\n        const settings = {\n            ...DifficultyOptions[state.difficultySettings].settings,\n            ...state.ratingSettings,\n            baseEntropy: state.entropySettings.baseEntropy || 0,\n            interactionEntropy: state.entropySettings.interactionEntropy || 0,\n            players: { ...state.players },\n            quickDeal: state.quickDeal,\n            boardMode: boardMode,\n            initialized: true,\n            suggestionMode: state.suggestionMode,\n            inputMode: \"\",\n        };\n        props.start(settings);\n    };\n\n    return (\n        <Provider value={startScreenContext}>\n            <NavigationProvider value={navigationContext}>\n                <CookieContextProvider value={cookieContext}>\n                    <StartMenu start={start} />\n                    <Screen screen={navigation.screeen} />\n                </CookieContextProvider>\n            </NavigationProvider>\n        </Provider>\n    );\n};\nexport default Home;\n","export interface Ratio {\n    prefix: string;\n    multiplier: number;\n}\nexport default class Ratios {\n    static _16to9: Ratio = {\n        prefix: \"16-to-9\",\n        multiplier: 1.7778,\n    };\n    static _4to3: Ratio = {\n        prefix: \"4-to-3\",\n        multiplier: 1.3333,\n    };\n}\n","import \"./View/Style/App.css\";\n\nimport { LaunchSettings, defaultPlayerSettings } from \"./Common\";\n\nimport AspectRatio from \"./View/AspectRatio/AspectRatio\";\nimport Deck from \"./Model/Deck/Deck\";\nimport DelayedSuspense from \"./DelayedSuspense\";\nimport GameModes from \"./GameModes\";\nimport Home from \"./View/UI/StartScreen/Home\";\nimport { PauseProvider } from \"./View/PauseContext\";\nimport Ratios from \"./View/AspectRatio/Ratios\";\nimport React from \"react\";\nimport SuggestionModes from \"./Model/Game/Settings/SuggestionModes\";\n\nconst App = () => {\n    const [started, setStarted] = React.useState<number>(0);\n    const defaultState = {\n        boardMode: GameModes.SINGLEPLAYER,\n        inputMode: \"mouse\",\n        initialized: false,\n        players: defaultPlayerSettings,\n        drawMode: \"\",\n        recyclingMode: \"\",\n        interactionEntropy: 0,\n        baseEntropy: 0,\n        suggestionMode: SuggestionModes.NONE,\n    };\n\n    const [launchState, setLaunchState] = React.useState<LaunchSettings>(defaultState);\n\n    const restart = () => {\n        setLaunchState(defaultState);\n    };\n\n    const deck = new Deck().shuffle();\n    const start = (settings: LaunchSettings) => {\n        deck.shuffle();\n        setLaunchState({ ...settings });\n        setStarted(Date.now());\n    };\n\n    if (launchState?.initialized) {\n        const BoardWrap = React.lazy(() => import(\"./View/Game/BoardWrap\"));\n        let board = null;\n        if (launchState.boardMode == GameModes.SINGLEPLAYER) {\n            board = (\n                <AspectRatio ratio={Ratios._4to3}>\n                    <div className={\"layout-grid-container singleplayer\"}>\n                        <BoardWrap player={0} settings={launchState} restart={restart} deck={deck} />\n                    </div>\n                </AspectRatio>\n            );\n        }\n        if (launchState.boardMode == GameModes.VERSUS) {\n            board = (\n                <div className=\"game-layout-container splitscreen\">\n                    <div className={\"layout-grid-container \" + launchState.boardMode}>\n                        <BoardWrap\n                            player={0}\n                            settings={{ ...launchState, inputMode: launchState.players[0].inputMethod }}\n                            restart={restart}\n                            deck={deck.copy()}\n                        />\n                    </div>\n\n                    <div className={\"layout-grid-container \" + launchState.boardMode}>\n                        <BoardWrap\n                            player={1}\n                            settings={{ ...launchState, inputMode: launchState.players[1].inputMethod }}\n                            restart={restart}\n                            deck={deck.copy()}\n                        />\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <PauseProvider started={started}>\n                <DelayedSuspense delay={500} fallback={<h3>Loading...</h3>}>\n                    {board}\n                </DelayedSuspense>\n            </PauseProvider>\n        );\n    }\n\n    return (\n        <AspectRatio ratio={Ratios._16to9}>\n            <Home start={start} />\n        </AspectRatio>\n    );\n};\nexport default App;\n","import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\n\nimport Model from \"../Model/Model\";\nimport React from \"react\";\n\ninterface IGlobalContext {\n    state: Model | null;\n    replaceContext: StateReplaceFunction;\n    updateContext: StateUpdateFunction;\n    updateGameContext: StateUpdateFunction;\n    restart: () => void;\n}\n\nconst defaultValue = {\n    state: null,\n    replaceContext: () => {},\n    updateContext: () => {},\n    updateGameContext: () => {},\n    restart: () => {},\n};\n\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\n\nexport const Provider = GlobalContext.Provider;\n\nexport default GlobalContext;\n\nexport interface ICookieContext {\n    consented: boolean;\n    setConsented: (c: boolean) => void;\n}\nexport const CookieContext = React.createContext<ICookieContext>({ consented: false, setConsented: () => {} });\nexport const CookieContextProvider = CookieContext.Provider;\n","const TouchDetector = ()  => {\n    try {\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\n\n        const mq = (query) => window.matchMedia(query).matches;\n\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\n            return true;\n        }\n\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\n    } catch (e) {\n        console.error(\"(Touch detect failed)\", e);\n        return false;\n    }\n}\n\nexport default TouchDetector;","import { EntropySettings, PlayerSettings, RatingSettings, defaultPlayerSettings } from \"../../../Common\";\n\nimport RatingPresets from \"./RatingOptions\";\nimport React from \"react\";\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\nimport TouchDetector from \"./TouchDetector\";\n\nexport interface IStartScreenContext {\n    state: StartScreenState;\n    setState: (s: StartScreenState) => void;\n}\n\nexport const defaultStartScreenState: StartScreenState = {\n    ratingSettings: { ...RatingPresets.REGULAR },\n    difficultySettings: 1,\n    ratingPreset: 1,\n    quickDeal: TouchDetector(),\n    entropySettings: {\n        baseEntropy: TouchDetector() ? 1 : 2,\n        interactionEntropy: TouchDetector() ? 1 : 2,\n    },\n    suggestionMode: SuggestionModes.REGULAR,\n    players: defaultPlayerSettings,\n};\n\nexport interface StartScreenState {\n    ratingSettings: RatingSettings;\n    difficultySettings: number;\n    ratingPreset: number;\n    quickDeal: boolean;\n    entropySettings: EntropySettings;\n    suggestionMode: string;\n    players: PlayerSettings;\n}\n\nexport interface NavigationState {\n    menu: {\n        x: number;\n        y: number;\n    };\n    screen: {\n        x: number;\n        y: number;\n    };\n    focus: string;\n    mainMenu: string;\n    screeen: string;\n}\ninterface INavigationContext {\n    navigation: NavigationState;\n    setNavigation: (n: NavigationState) => void;\n}\n\nexport const NavigationContext = React.createContext<INavigationContext>({\n    navigation: {\n        menu: {\n            x: 0,\n            y: 0,\n        },\n        screen: {\n            x: 0,\n            y: 0,\n        },\n        focus: \"menu\",\n        mainMenu: \"\",\n        screeen: \"\",\n    },\n    setNavigation: () => {},\n});\n\nconst StartScreenContext = React.createContext<IStartScreenContext>({\n    state: {\n        difficultySettings: 0,\n        ratingPreset: 0,\n        ratingSettings: {},\n        entropySettings: {},\n        quickDeal: false,\n        suggestionMode: SuggestionModes.REGULAR,\n        players: defaultPlayerSettings,\n    },\n    setState: () => {},\n});\n\nexport const Provider = StartScreenContext.Provider;\nexport const NavigationProvider = NavigationContext.Provider;\nexport default StartScreenContext;\n","import { Suit } from \"./Suits\";\n\nexport default class Card {\n    face: string;\n    type: Suit;\n    isHidden: boolean;\n    entropyStyle: any;\n    source: string;\n    suggestion: boolean;\n    canClick: () => void;\n    onClick: (_p: any) => void;\n    constructor(face: string, type: Suit, isHidden: boolean) {\n        this.face = face;\n        this.type = type;\n        this.isHidden = isHidden;\n        this.entropyStyle = {};\n        this.source = \"\";\n        this.suggestion = false;\n        this.canClick = () => {};\n        // eslint-disable-next-line no-unused-vars\n        this.onClick = (_p) => {};\n    }\n\n    causeEntropy = (lvl: number) => {\n        if (lvl == 0) {\n            this.entropyStyle = {};\n            return;\n        }\n        const level = lvl * 2;\n        const random = () => Math.random() < 0.5;\n        const randomInt = (min: number, max: number) => Math.random() * (max - min) + min;\n        //shift\n        if (random()) {\n            if (random()) {\n                this.entropyStyle[\"left\"] = randomInt(0, level / 20) + \"vw\";\n            } else {\n                this.entropyStyle[\"right\"] = randomInt(0, level / 20) + \"vw\";\n            }\n        }\n        //rotate\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\n    };\n\n    equals = (other: Card| null) => {\n        return other && Card.equals(this, other);\n    };\n\n    static equals(card: Card, otherCard: Card) {\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\n    }\n\n    static copy = (orig: Card) => {\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\n        copy.source = orig.source;\n        copy.entropyStyle = { ...orig.entropyStyle };\n        copy.canClick = orig.canClick;\n        copy.onClick = orig.onClick;\n        return copy;\n    };\n\n    static copyAll = (cards: Card[]) => cards.map((card) => Card.copy(card));\n}\n","export class SuggestionMode {\n    key: string;\n    label: string;\n    isTemporary: boolean;\n    supportsHints: boolean;\n    next: string | undefined;\n    icon: string;\n    description: string;\n    constructor(key: string, obj: ISuggestionMode) {\n        this.key = key;\n        this.label = obj.label;\n        this.icon = obj.icon;\n        this.description = obj.description;\n        this.isTemporary = !!obj.isTemporary;\n        this.supportsHints = !!obj.supportsHints;\n        this.next = obj.next;\n    }\n}\n\nexport type ISuggestionMode = {\n    label: string;\n    icon: string;\n    description: string;\n    isTemporary?: boolean;\n    supportsHints?: boolean;\n    next?: string;\n};\n\nexport default class SuggestionModes {\n    static NONE: string = \"NONE\";\n    static SCORED: string = \"SCORED\";\n    static REGULAR: string = \"REGULAR\";\n    static FULL: string = \"FULL\";\n    static ONCE: string = \"ONCE\";\n    static TWICE: string = \"TWICE\";\n    static raw: { [id: string]: ISuggestionMode } = {\n        NONE: {\n            label: \"None\",\n            description: 'No distractions. This enables one-time hints.',\n            supportsHints: true,\n            icon: \"❌\",\n        },\n        SCORED: {\n            label: \"Scored\",\n            description: 'Shows all actions that increase the score.',\n            icon: \"🏆\",\n        },\n        REGULAR: {\n            label: \"Regular\",\n            description: 'Shows all possible actions except circular',\n            icon: \"💡\",\n        },\n        FULL: {\n            label: \"Full\",\n            description: 'Shows all possible actions, even if they are circular',\n            icon: \"🎓\",\n        },\n        ONCE: {\n            label: \"Single Action\",\n            description: 'triggered by manual hint in game',\n            isTemporary: true,\n            next: \"NONE\",\n            icon: \"⏳\",\n        },\n    };\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\n    static default = () => SuggestionModes.get(SuggestionModes.REGULAR);\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\n    static next = (current: SuggestionMode) => {\n        const all = SuggestionModes.allSuggestionModes();\n        if (all[all.length - 1].key == current.key) {\n            return all[0];\n        }\n        for (let i = 0; i < all.length; i++) {\n            if (all[i].key == current.key) {\n                return all[i + 1];\n            }\n        }\n        return all[0];\n    };\n}\n","import React from \"react\";\n\nexport interface IPauseState {\n    started: number;\n    end: number;\n    paused: boolean;\n    pauses: number[];\n    pauseStartedAt: number;\n    allowed: number;\n    isSilent?: boolean;\n    pausedBy: number;\n    showMenu: boolean;\n}\nexport interface IPauseContext {\n    state: IPauseState;\n    togglePause: (isPaused: boolean, pausedBy: number) => void;\n    getElapsed: () => string,\n}\nexport const defaultPauseState = {\n    started: 0,\n    end: 0,\n    paused: false,\n    pauses: [],\n    pauseStartedAt: 0,\n    allowed: 5,\n    pausedBy: -1,\n    showMenu: false,\n};\nexport const defaultPauseContext = {\n    state: defaultPauseState,\n    togglePause: () => {},\n    getElapsed: () => \"\",\n};\n\nconst PauseContext = React.createContext<IPauseContext>(defaultPauseContext);\nconst PauseContextProvider = PauseContext.Provider;\n\nexport const PauseProvider = (props: any) => {\n    const [paused, setPaused] = React.useState<IPauseState>({ ...defaultPauseState });\n    const getElapsedMs = () => {\n        const pauses = paused.pauses.reduce((a, b) => a + b, 0);\n        return (paused.end || paused.pauseStartedAt || Date.now()) - props.started - pauses;\n    };\n\n    const getElapsed = () => {\n        const padleft = (i: number) => ((i + \"\").length == 1 ? \"0\" + i : i);\n        let msec = getElapsedMs();\n        const hh = Math.floor(msec / 1000 / 60 / 60);\n        msec -= hh * 1000 * 60 * 60;\n        const mm = Math.floor(msec / 1000 / 60);\n        msec -= mm * 1000 * 60;\n        const ss = Math.floor(msec / 1000);\n        msec -= ss * 1000;\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\n    };\n    const togglePause = (isPaused: boolean, pausedBy: number) => {\n        if (paused.showMenu) {\n            setPaused({\n                ...paused,\n                pausedBy: pausedBy,\n                pauses: [...paused.pauses, Date.now() - paused.pauseStartedAt],\n                pauseStartedAt: 0,\n                paused: false,\n                showMenu: false,\n            });\n        } else if (paused.pauses.length < paused.allowed) {\n            setPaused({\n                ...paused,\n                pausedBy: pausedBy,\n                pauseStartedAt: Date.now(),\n                paused: true,\n                showMenu: true,\n            });\n        } else {\n            setPaused({\n                ...paused,\n                pausedBy: pausedBy,\n                pauseStartedAt: 0,\n                paused: false,\n                showMenu: true,\n            });\n        }\n    };\n    const context = {\n        state: { ...paused, started: props.started },\n        togglePause,\n        getElapsed,\n    };\n\n    return <PauseContextProvider value={context}>{props.children}</PauseContextProvider>;\n};\n\nexport default PauseContext;\n","export default class GameModes {\n    static SINGLEPLAYER = \"singleplayer\";\n    static VERSUS = \"splitscreen\";\n}\n","import React from \"react\";\nimport ReactGamePad from \"react-gamepad\";\nimport RenderAfter from \"./RenderAfter\";\n\nconst GamePad = (props) => {\n    const buttonHandler = (e) => {\n        //@todo use layout abstraction like in keyboard\n        //@todo make layouts configurable (for visuals allow switching PS4 and XBOX layouts)\n        console.debug(e);\n        if (e == \"DPadLeft\") {\n            props.onLeft && props.onLeft();\n        }\n        if (e == \"DPadRight\") {\n            props.onRight && props.onRight();\n        }\n        if (e == \"DPadUp\") {\n            props.onUp && props.onUp();\n        }\n        if (e == \"DPadDown\") {\n            props.onDown && props.onDown();\n        }\n        if (e == \"A\") {\n            props.onAction && props.onAction();\n        }\n        if (e == \"B\") {\n            props.onCancel && props.onCancel();\n        }\n        if (e == \"X\") {\n            props.onHint && props.onHint();\n        }\n        if (e == \"Y\") {\n            props.onUndo && props.onUndo();\n        }\n        if (e == \"Start\") {\n            props.onPause && props.onPause();\n        }\n        if (e == \"Back\") {\n            props.onPause && props.onMenu();\n        }\n    };\n\n    const connectHandler = (e) => {\n        console.debug(\"connected\", e);\n    };\n\n    const disconnectHandler = (e) => {\n        console.debug(\"disconnected\", e);\n    };\n\n    return (\n        <RenderAfter delay={125}>\n            <ReactGamePad\n                gamepadIndex={props.gamepadIndex}\n                onButtonDown={buttonHandler}\n                onConnect={connectHandler}\n                onDisconnect={disconnectHandler}\n            >\n                <span></span>\n            </ReactGamePad>\n        </RenderAfter>\n    );\n};\n\nexport default GamePad;\n","interface KeyboardLayout {\n    up: (e: KeyboardEvent) => boolean;\n    down: (e: KeyboardEvent) => boolean;\n    right: (e: KeyboardEvent) => boolean;\n    left: (e: KeyboardEvent) => boolean;\n    cancel: (e: KeyboardEvent) => boolean;\n    action: (e: KeyboardEvent) => boolean;\n    undo: (e: KeyboardEvent) => boolean;\n    hint: (e: KeyboardEvent) => boolean;\n    pause: (e: KeyboardEvent) => boolean;\n    menu: (e: KeyboardEvent) => boolean;\n}\n\nexport default KeyboardLayout;\n\nexport const getKeyboardLayout = (id: number) => {\n    if (id == 0) return Wasd;\n    if (id == 1) return Arrows;\n    if (id == 2) return NumPad;\n    throw \"Unknown keyboard layout ID\";\n};\n\nexport const Arrows: KeyboardLayout = {\n    up: (e) => e.keyCode == 38,\n    down: (e) => e.keyCode == 40,\n    right: (e) => e.keyCode == 39,\n    left: (e) => e.keyCode == 37,\n    cancel: (e) => e.keyCode == 27,\n    action: (e) => e.keyCode == 96,\n    undo: (e) => e.keyCode == 90 && e.ctrlKey,\n    hint: (e) => e.keyCode == 72,\n    pause: (e) => e.keyCode == 80,\n    menu: (e) => e.keyCode == 77,\n};\n\nexport const Wasd: KeyboardLayout = {\n    up: (e) => e.keyCode == 87,\n    down: (e) => e.keyCode == 83,\n    right: (e) => e.keyCode == 68,\n    left: (e) => e.keyCode == 65,\n    cancel: (e) => e.keyCode == 69,\n    action: (e) => e.keyCode == 81,\n    undo: (e) => e.keyCode == 88,\n    hint: (e) => e.keyCode == 90,\n    pause: (e) => e.keyCode == 999,\n    menu: (e) => e.keyCode == 27,\n};\n\nexport const NumPad: KeyboardLayout = {\n    up: (e) => e.keyCode == 104,\n    down: (e) => e.keyCode == 101,\n    right: (e) => e.keyCode == 102,\n    left: (e) => e.keyCode == 100,\n    cancel: (e) => e.keyCode == 105,\n    action: (e) => e.keyCode == 103,\n    undo: (e) => e.keyCode == 98,\n    hint: (e) => e.keyCode == 97,\n    pause: (e) => e.keyCode == 999,\n    menu: (e) => e.keyCode == 99,\n};\n\nexport const Universal: KeyboardLayout = {\n    up: (e) => NumPad.up(e) || Wasd.up(e) || Arrows.up(e),\n    down: (e) => NumPad.down(e) || Wasd.down(e) || Arrows.down(e),\n    right: (e) => NumPad.right(e) || Wasd.right(e) || Arrows.right(e),\n    left: (e) => NumPad.left(e) || Wasd.left(e) || Arrows.left(e),\n    cancel: (e) => NumPad.cancel(e) || Wasd.cancel(e) || Arrows.cancel(e),\n    action: (e) => NumPad.action(e) || Wasd.action(e) || Arrows.action(e),\n    undo: (e) => NumPad.undo(e) || Wasd.undo(e) || Arrows.undo(e),\n    hint: (e) => NumPad.hint(e) || Wasd.hint(e) || Arrows.hint(e),\n    pause: (e) => NumPad.pause(e) || Wasd.pause(e) || Arrows.pause(e),\n    menu: (e) => NumPad.menu(e) || Wasd.menu(e) || Arrows.menu(e),\n};\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\n\nexport const getFoundationOrder = () => {\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\n};\n\nexport const getTableauOrder = () => {\n    return [...DeckSize];\n};\n","import React from \"react\";\n\nconst Keyboard = (props) => {\n    const navListener = (e) => {\n        const evtobj = window.event ? event : e;\n        const { layout } = props;\n        if (layout.cancel(evtobj)) {\n            props.onCancel && props.onCancel();\n            e.preventDefault();\n        }\n        if (layout.left(evtobj)) {\n            props.onLeft && props.onLeft();\n            e.preventDefault();\n        }\n        if (layout.right(evtobj)) {\n            props.onRight && props.onRight();\n            e.preventDefault();\n        }\n        if (layout.up(evtobj)) {\n            props.onUp && props.onUp();\n            e.preventDefault();\n        }\n        if (layout.down(evtobj)) {\n            props.onDown && props.onDown();\n            e.preventDefault();\n        }\n        if (layout.action(evtobj)) {\n            props.onAction && props.onAction();\n            e.preventDefault();\n        }\n        if (layout.undo(evtobj)) {\n            props.onUndo && props.onUndo();\n            e.preventDefault();\n        }\n        if (layout.hint(evtobj)) {\n            props.onHint && props.onHint();\n            e.preventDefault();\n        }\n        if (layout.pause(evtobj)) {\n            props.onPause && props.onPause();\n            e.preventDefault();\n        }\n        if (layout.menu(evtobj)) {\n            props.onPause && props.onMenu();\n            e.preventDefault();\n        }\n    };\n    React.useEffect(() => {\n        document.addEventListener(\"keydown\", navListener);\n        return () => {\n            document.removeEventListener(\"keydown\", navListener);\n        };\n    }, [props]);\n    return null;\n};\nexport default Keyboard;\n","import Card from \"./Model/Deck/Card\";\nimport Model from \"./Model/Model\";\n\nexport type StateReplacer = (state: Model) => Model | null;\nexport type StateUpdater = (state: Model) => void;\nexport type StateReplaceFunction = (modifier: StateReplacer) => void;\nexport type StateUpdateFunction = (modifier: StateUpdater) => void;\n\nexport const defaultPlayerSettings: PlayerSettings = {\n    0: {\n        id: 0,\n        name: \"Player 1\",\n        inputMethod: \"gamepad\",\n        inputLayout: 0,\n    },\n    1: {\n        id: 1,\n        name: \"Player 2\",\n        inputMethod: \"keyboard\",\n        inputLayout: 0,\n    },\n};\n\ninterface PlayerSetting {\n    id: number;\n    name: string;\n    inputMethod: string;\n    inputLayout: number;\n}\n\nexport interface PlayerSettings {\n    [id: number]: PlayerSetting;\n}\n\nexport interface LaunchSettings extends RatingSettings {\n    recyclingMode: string;\n    drawMode: string;\n    //@todo remove, this is contained in playersettings\n    inputMode: string;\n    interactionEntropy: number;\n    baseEntropy: number;\n    suggestionMode: string;\n    players: PlayerSettings;\n    boardMode: string;\n    initialized?: boolean;\n    quickDeal?: boolean;\n}\n\nexport interface ClickHandler {\n    dispatchPutDown: (card: Card, position: any, state: Model, index: number) => void;\n    dispatchPickup: (card: Card | null, position: any, state: Model, index: number) => void;\n}\n\nexport type BlinkFunction = (state: Model, index: number) => void;\n\nexport interface RatingSettings {\n    undoPenalty?: boolean;\n    hintPenalty?: boolean;\n    timedMode?: boolean;\n    missPenalty?: boolean;\n}\n\nexport interface EntropySettings {\n    baseEntropy?: number;\n    interactionEntropy?: number;\n}\n","export interface Suit {\n    icon: string;\n    color: string;\n}\n\nconst Suits: { [id: string]: Suit } = {\n    heart: {\n        icon: \"♥\",\n        color: \"red\",\n    },\n    club: {\n        icon: \"♣\",\n        color: \"black\",\n    },\n    diamond: {\n        icon: \"♦\",\n        color: \"red\",\n    },\n    spade: {\n        icon: \"♠\",\n        color: \"black\",\n    },\n};\n\nexport default Suits;\n","import { RatingSettings } from \"../../../Common\";\nimport { StartScreenState } from \"./Context\";\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\n\nexport interface RatingPreset {\n    id: number;\n    icon: string;\n    label: string;\n    settings: RatingSettings;\n    apply: (s: StartScreenState) => void;\n}\n\nconst apply = (after: RatingSettings, s: StartScreenState, id: number) => {\n    if (!s.ratingSettings.hintPenalty && after.hintPenalty) {\n        s.suggestionMode = SuggestionModes.NONE;\n    }\n    //@todo remember which suggestion mode was there before, and reset to that on next change of hint penalty\n    s.ratingSettings = { ...after };\n    s.ratingPreset = id;\n};\n\nexport default class RatingPresets {\n    static CHILL = {\n        timedMode: false,\n        missPenalty: false,\n        undoPenalty: false,\n        hintPenalty: false,\n    };\n\n    static REGULAR = {\n        timedMode: true,\n        missPenalty: false,\n        undoPenalty: true,\n        hintPenalty: false,\n    };\n\n    static COMPETITIVE = {\n        timedMode: true,\n        missPenalty: true,\n        undoPenalty: true,\n        hintPenalty: true,\n    };\n\n    static ALL: RatingPreset[] = [\n        {\n            id: 0,\n            icon: \"🌴\",\n            label: \"Chill\",\n            settings: { ...RatingPresets.CHILL },\n            apply: (s) => apply(RatingPresets.CHILL, s, 0),\n        },\n        {\n            id: 1,\n            icon: \"⚖️\",\n            label: \"Regular\",\n            settings: { ...RatingPresets.REGULAR },\n            apply: (s) => apply(RatingPresets.REGULAR, s, 1),\n        },\n        {\n            id: 2,\n            icon: \"🏆\",\n            label: \"Competitive\",\n            settings: { ...RatingPresets.COMPETITIVE },\n            apply: (s) => apply(RatingPresets.COMPETITIVE, s, 2),\n        },\n    ];\n\n    static matchPreset = (settings: any) => {\n        const filterd = RatingPresets.ALL.filter((preset) => RatingPresets.equals(preset.settings, settings));\n        if (filterd.length > 0) {\n            return filterd[0].id;\n        }\n        return -1;\n    };\n\n    static equals = (s1: any, s2: any) =>\n        s1.timedMode === s2.timedMode &&\n        s1.missPenalty === s2.missPenalty &&\n        s1.undoPenalty === s2.undoPenalty &&\n        s1.hintPenalty === s2.hintPenalty;\n}\n","import { XY } from \"../XY\";\n\nexport default class AbstractNavigator {\n    rows: any[];\n    constructor() {\n        this.rows = [];\n    }\n    getRows = () => this.rows;\n    getRow = (x: number) => this.getRows()[x];\n    goToRow = (pos: XY) => {\n        const rows = this.getRows();\n        const row = rows[pos.y];\n        if (row.buttons.length - 1 < pos.x) {\n            return { ...pos, x: row.buttons.length - 1 };\n        }\n\n        return pos;\n    };\n}\n","const EntropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\nexport default EntropyLevels;","import { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport { TreeNavigator } from \"./TreeNavigator\";\nimport { XY } from \"../../XY\";\n\ninterface _MenuButtonProps extends StaticMenuButtonProps {\n    x?: number;\n    y?: number;\n    navigator?: TreeNavigator;\n}\n\nexport interface StaticMenuButtonProps {\n    icon: string;\n    title: string;\n    onClick: (pos: XY) => void;\n    toggled?: boolean;\n    children?: any[];\n    disabled?: boolean;\n    skip?: boolean;\n}\ninterface MenuButtonProps extends StaticMenuButtonProps {\n    x: number;\n    y: number;\n    menuX: number;\n    menuY: number;\n    menuFocus: string;\n    active: boolean;\n    toggled: boolean;\n    onFocus: (pos: XY) => void;\n}\nconst MenuButton = (props: _MenuButtonProps) => {\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\n        return null;\n    }\n\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n\n    const onFocus = (pos: XY) => setNavigation({ ...navigation, menu: pos });\n\n    const addItem = (child: any, index: number) => {\n        const assign = (n: any[]) => {\n            n[props.x || 0].buttons[index + 1] = { ...props, x: props.x, y: index + 1 };\n        };\n        assign(props.navigator?.rows || []);\n\n        return React.cloneElement(child, { key: index, x: props.x, y: index + 1, navigator: props.navigator });\n    };\n\n    return (\n        <_MenuButton\n            title={props.title}\n            x={props.x || 0}\n            y={props.y || 0}\n            icon={props.icon}\n            menuX={navigation.menu.x}\n            menuY={navigation.menu.y}\n            menuFocus={navigation.focus}\n            disabled={props.disabled}\n            active={false}\n            onFocus={onFocus}\n            onClick={props.onClick}\n            toggled={!!props.toggled}\n            skip={props.skip}\n        >\n            {props.children?.map(addItem)}\n        </_MenuButton>\n    );\n};\nconst _MenuButton = (props: MenuButtonProps) => {\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n\n    let className = \"\";\n\n    if (props.y > 0) {\n        className += \" indented\";\n    }\n\n    const shouldBeFocus = props.menuX == props.x && props.menuY == props.y && props.menuFocus == \"menu\";\n\n    if (shouldBeFocus && !props.skip) {\n        className += \" highlight\";\n    }\n\n    React.useEffect(() => {\n        if (\n            props.menuX == props.x &&\n            props.menuY == props.y &&\n            props.menuFocus == \"menu\" &&\n            inputEl.current &&\n            inputEl.current !== document.activeElement\n        ) {\n            setClicking(true);\n            inputEl && inputEl.current && inputEl.current.focus();\n        }\n    }, [props.menuFocus, props.menuX, props.menuY, props.x, props.y]);\n\n    if (props.active) {\n        className += \" active\";\n    }\n\n    //omg this is the worst but it works (5h lost)\n    const [isClicking, setClicking] = React.useState(false);\n\n    const focus = () => {\n        if (!isClicking && !(props.menuX == props.x && props.menuY == props.y) && props.menuFocus == \"menu\") {\n            props.onFocus({ x: props.x, y: props.y });\n            setClicking(false);\n        }\n    };\n\n    const click = () => {\n        setClicking(false);\n        props.onClick({ x: props.x, y: props.y });\n    };\n\n    return (\n        <>\n            <button\n                ref={inputEl}\n                className={className}\n                title={props.title}\n                onFocus={focus}\n                onClick={click}\n                disabled={props.skip}\n                onMouseDown={() => setClicking(true)}\n            >\n                <div className=\"icon\">{props.icon}</div>\n                <div className=\"label\">{props.title}</div>\n            </button>\n            <div>{!props.toggled ? null : props.children}</div>\n        </>\n    );\n};\nexport default MenuButton;\n","import React from \"react\";\n\nconst MenuTitle = (props: { label: string }) => {\n    return <div className=\"title maintitle\">{props.label}</div>;\n};\nexport default MenuTitle;\n","import GamePad from \"../../../Game/GamePad\";\nimport Keyboard from \"../../../Game/Keyboard\";\nimport KeyboardLayout from \"../../../Game/KeyboardLayouts\";\nimport { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport { TreeNavigator } from \"../Menu/TreeNavigator\";\nimport { XY } from \"../../XY\";\n\nconst TreeNavWrapper = (props: { navigator: TreeNavigator; keyboardLayout: KeyboardLayout }) => {\n    const { navigator } = props;\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n\n    const assignState = (result: XY) => {\n        if (navigation.focus == \"menu\") {\n            setNavigation({ ...navigation, menu: result });\n        }\n        if (navigation.focus == \"screen\") {\n            throw \"Invalid navigation action\";\n        }\n    };\n\n    const inputHandlers = {\n        onCancel: () =>\n            setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } }),\n        onUp: () => assignState(navigator.moveUp(navigation.menu.x, navigation.menu.y)),\n        onDown: () => assignState(navigator.moveDown(navigation.menu.x, navigation.menu.y)),\n        onLeft: () => assignState(navigator.moveLeft(navigation.menu.x, navigation.menu.y)),\n        onRight: () => assignState(navigator.moveRight(navigation.menu.x, navigation.menu.y)),\n        onAction: () => navigator.action(navigation.menu),\n    };\n\n    return navigation.focus == \"menu\" ? (\n        <>\n            <Keyboard layout={props.keyboardLayout} {...inputHandlers} />\n            <GamePad {...inputHandlers} />\n        </>\n    ) : null;\n};\n\nexport default TreeNavWrapper;\n","import AbstractNavigator from \"../AbstractNavigator\";\nimport { NavHandler } from \"../../NavHandler\";\nimport { XY } from \"../../XY\";\n\nexport class TreeNavigator extends AbstractNavigator implements NavHandler {\n    moveUp: (x: number, y: number) => XY = (x, y) => {\n        if (x == 0) {\n            return { x: this.rows.length - 1, y: 0 };\n        }\n\n        if (y > 0) {\n            return { x: x, y: y - 1 };\n        }\n\n        if (y == 0) {\n            const row = this.getRow(x - 1);\n            if (row.toggled) {\n                return { x: x - 1, y: row.buttons.length - 1 };\n            } else {\n                return { x: x - 1, y: y };\n            }\n        }\n\n        return { x: x - 1, y: y };\n    };\n\n    moveDown: (x: number, y: number) => XY = (x, y) => {\n        const row = this.getRow(x);\n        if (y == 0 && row.toggled) {\n            return { x: x, y: 1 };\n        }\n\n        if (y > 0 && y < row.buttons.length - 1) {\n            return { x: x, y: y + 1 };\n        }\n\n        if (y > 0) {\n            return { x: x + 1, y: 0 };\n        }\n\n        if (x < this.rows.length - 1) {\n            return { x: x + 1, y: y };\n        }\n\n        return { x: 0, y: 0 };\n    };\n\n    moveLeft: (x: number, y: number) => XY = (x, y) => ({ x: x, y: y });\n\n    moveRight: (x: number, y: number) => XY = (x, y) => ({ x: x, y: y });\n\n    action: (xy: XY) => void = () => {\n        const activeElement: any = document.activeElement;\n        activeElement && activeElement.click();\n    };\n}\n","import KeyboardLayout from \"../../../Game/KeyboardLayouts\";\nimport React from \"react\";\nimport TreeNavWrapper from \"./TreeNavWrapper\";\nimport { TreeNavigator } from \"./TreeNavigator\";\n\nconst MenuTree = (props: { children: any[]; keyboardLayout: KeyboardLayout }) => {\n    const navigator = new TreeNavigator();\n    navigator.rows = [];\n    let index = -1;\n    let _i = -1;\n    const addItem = (child: any) => {\n        _i++;\n        if (!child.props.skip) {\n            index++;\n            navigator.rows[index] = { x: index, y: 0, ...child.props, buttons: [] };\n        }\n        return React.cloneElement(child, { key: _i, x: index, y: 0, navigator: navigator });\n    };\n    return (\n        <>\n            {props.children.map(addItem)}\n            <TreeNavWrapper navigator={navigator} keyboardLayout={props.keyboardLayout} />\n        </>\n    );\n};\nexport default MenuTree;\n"],"sourceRoot":""}