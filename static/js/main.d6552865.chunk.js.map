{"version":3,"sources":["View/Context.ts","View/Game/GamePad.js","View/Game/BoardGamePad.js","View/Game/Keyboard.js","View/Game/BoardKeyboard.js","View/Navigator.js","View/PauseContext.tsx","View/Game/BoardNavigator.js","View/Game/Dealer.js","View/Game/BlinkingComponent.js","View/Game/Card.js","View/Game/MouseHand.js","View/Game/TouchHand.js","View/Game/Hand.js","View/Game/StackBase.js","View/Game/Foundation.js","View/UI/Header/Clock.js","View/UI/Header/EndGame.js","View/UI/Header/Hearts.js","View/UI/Header/Hint.js","View/UI/Header/InputMethod.js","View/UI/Header/Pause.js","View/UI/Header/Points.js","View/UI/RestartGame.js","View/UI/Header/ToggleMenu.js","View/UI/Header/Undo.js","View/UI/Header/Header.js","Model/Game/EntropyLevels.js","View/UI/Menu.js","View/UI/PauseScreen.js","View/Game/Stock.js","View/Game/Tableau.js","View/Game/Waste.js","View/Game/Board.js","Business/Blinker.ts","Business/Tableau.ts","Business/Dealer.ts","Business/Dispatcher.ts","Business/Foundation.ts","Model/Deck/Card.js","Model/Game/Focus.js","Model/Game/BasicStack.js","Model/Deck/Suits.js","Model/Deck/DeckSize.js","Model/Game/Foundation.js","Model/Game/Rating.js","Model/Game/TimeMachine.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings/SuggestionModes.ts","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.ts","Model/Game/Waste.js","Model/Model.ts","Business/Navigator.ts","Business/Stock.ts","Business/Waste.ts","Business/Suggestions.ts","Business/BusinessModel.ts","View/UI/EndScreen.js","View/Game/BoardWrap.tsx","Model/Deck/Deck.js","View/GameModes.tsx","View/UI/StartScreen/Tree.ts","View/UI/StartScreen/DifficultyOptions.ts","View/UI/Menu/MenuButton.js","View/UI/Menu/MenuTitle.js","View/UI/StartScreen/Context.ts","View/UI/StartScreen/RatingOptions.ts","View/UI/StartScreen/Controls.tsx","View/UI/StartScreen/Navigation.ts","View/UI/StartScreen/ScreenMainButton.tsx","View/UI/StartScreen/Difficulty.tsx","View/UI/StartScreen/MenuToggle.tsx","View/UI/StartScreen/QuickStart.tsx","View/UI/StartScreen/Rating.tsx","View/UI/StartScreen/Screen.tsx","View/UI/StartScreen/TouchDetector.js","View/UI/Menu/VerticalMenu.js","View/UI/StartScreen/StartMenu.tsx","App.tsx","index.tsx"],"names":["defaultValue","state","replaceContext","updateContext","updateGameContext","restart","GlobalContext","React","createContext","Provider","GamePad","props","gamepadIndex","onButtonDown","e","console","debug","onLeft","onRight","onUp","onDown","onAction","onCancel","onHint","onUndo","onPause","onMenu","onConnect","onDisconnect","BoardGamePad","useContext","isGamePadDriven","settings","launchSettings","inputMode","isSinglePlayer","gameMode","boardMode","switchToGamePad","ctx","focus","isKeyBoard","mouseMode","Keyboard","navListener","evtobj","window","event","keyCode","preventDefault","ctrlKey","useEffect","document","addEventListener","removeEventListener","BoardKeyboard","isKeyboardDriven","switchToKeyboard","Navigator","defaultPauseState","started","end","paused","pauses","pauseStartedAt","allowed","isSilent","defaultPauseContext","togglePause","PauseContext","PauseContextProvider","PauseProvider","useState","setPaused","context","isPaused","Date","now","length","getElapsed","padleft","i","msec","reduce","a","b","getElapsedMs","hh","Math","floor","mm","ss","value","children","BoardNavigator","before","x","navigator","currentIndex","y","z","menuToggle","showMenu","modifier","moveLeft","moveRight","moveUp","moveDown","pressCurrent","hand","stack","onClick","isKeyboard","suggestionMode","supportsHints","isTemporary","isVisible","isDisabled","enableHint","_state","previous","game","timemachine","popPreviousState","previousStates","rating","penalize","player","Dealer","timeouts","quickDeal","dealer","isDealt","dealAll","deal","dealt","push","setTimeout","dealOne","forEach","timeout","clearTimeout","BlinkingComponent","selector","this","blinkFor","unblink","Component","contextType","Card","pause","inputEl","useRef","isFocused","hasCard","model","current","card","clientX","clientY","ele","target","className","includes","offsetParent","rect","getBoundingClientRect","position","click","ownerDocument","defaultView","pageXOffset","pageYOffset","element","names","map","id","label","split","source","isHidden","type","icon","face","style","pointerEvents","onFocus","onBlur","zIndex","offsetTop","top","entropyStyle","offsetLeft","left","getCardStyle","ref","hasSuggestion","isSuggested","suggestion","isSelected","blink","canClick","getClassName","disabled","tabIndex","aria-label","title","MouseHand","onMouseMove","positionFixed","setState","updateDisplay","myRef","createRef","bind","node","parent","putBack","getOffsetTop","index","TouchHand","enableKeyNav","mode","parentModel","_c","p","Hand","getTop","clickEmpty","StackBase","classname","hasStack","Foundation","s","foundation","stacks","Stacks","Clock","elapsed","setElapsed","interval","setInterval","clearInterval","EndGame","Hearts","recyclingMode","passes","createString","Array","from","keys","join","stock","getHearts","Hint","InputMethod","Pause","Points","points","RestartGame","ToggleMenu","menu","Undo","pow","multiplicator","Header","EntropyLevels","Menu","onChange","sm","setSuggestionMode","key","hintPenalty","suggestionModes","mouseModes","lvl","setEntropy","baseEntropy","entropyLevel","interactionEntropy","PauseScreen","globalCtx","remaining","announcement","_toggle","Renderer","InnerRenderer","usePrevious","speed","waste","isFromWaste","putDownHand","addAll","popTop","canRecycle","recycle","Stock","Tableau","tableau","getOffset","Waste","drawMode","isHoldingCard","additionalOffset","Board","Blinker","startBlink","registerBlink","stopBlink","dispatchPutDown","wouldAcceptHand","src","registerMove","dispatchPickup","pickUp","popWithFollowing","registerPickup","TableauHidden","tryUncover","uncover","registerUncover","dealingAt","callback","newCard","popOne","isFirst","Dispatcher","clickHandler","getHandler","tryDetectEnd","_card","getPreviousUsed","remove","countCards","isEnded","causeEntropy","level","random","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","Focus","validSettings","keyboard","setCard","unsetCard","unsetStack","setStack","BasicStack","getClickable","filter","HandHoldingStack","getHandContent","Suits","heart","color","club","diamond","spade","DeckSize","setOnClick","sindex","getCurrentAccepted","currentFoundation","acceptedCards","hasMoreThanOneCard","accepts","currentCard","add","putDown","currentAccepted","usedCards","pop","f","parseInt","template","slice","reverse","Object","suit","origStack","Rating","currentMove","rateMove","registerRecycle","undoPenalty","penalty","registerHint","done","getTimePenalty","start","secondsToFinish","trunc","getBonusPoints","round","getTotal","on","missPenalty","move","isTableau","obj","substr","isFoundation","TimeMachine","memorable","modified","pushPreviousState","modelEquals","isRequested","popPrevious","stackEquals","every","stacksEqual","Game","disableHint","c","splice","_onClick","isHoldingKing","isFromCurrentSource","isFromFoundation","isFromTableau","isFromAnyTableau","substring","getTableauIndex","SuggestionMode","next","SuggestionModes","NONE","SCORED","REGULAR","FULL","ONCE","TWICE","raw","get","all","allSuggestionModes","default","getHintMode","Settings","hintMode","setCardProperties","recyclings","isOnTop","result","TableauStack","onClickhidden","canUncover","getStack","canPutDown","range","indexOf","getCard","j","stackEntropy","entropy","concat","offset","canAdd","Model","getInitialState","deck","rows","getZindex","elem","targets","update","pos","row","finishNav","valid","direction","undefined","toggleRow","clickable","pickLast","last","_position","moveToWaste","recycleWaste","Suggestions","evaluateOptions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","isMoveOfKingBetweenEmptySlots","isMoveBetweenSimilarParentCards","isNotLoop","foundAny","wasteState","BusinessModel","cardIndex","tableauState","filtered","_stack","disableSuggestion","suggestor","withSuggestions","withHandlers","EndScreen","BoardWrap","render","Deck","deckSize","flat","shuffleArray","array","GameModes","QUICK","autoConfig","CUSTOM","VERSUS","NULL","Button","isRoot","active","toggled","MenuLeafButton","updateMap","MenuNodeButton","child","MenuSectionButton","MenuActionButton","MenuRootButton","action","xy","DifficultyOptions","lines","MenuButton","subscribe","menuX","menuY","menuFocus","activeElement","setClicking","isClicking","onMouseDown","MenuTitle","StartScreenContext","difficultySettings","ratingPreset","ratingSettings","entropySettings","screen","mainMenu","screeen","RatingPresets","timedMode","matchPreset","filterd","preset","s1","s2","Controls","pad","found","buttonPressed","pads","setPads","press","log","ScreenButton","ScreenRow","buttons","ScreenMainButton","hasFocus","line","mapOption","option","getDifficultyRows","difficultyIsActive","Difficulty","getButtonClass","name","button","bi","MenuToggle","autoFocus","checked","callBack","description","optimizeOptions","getSettingRows","settingIsActive","val","QuickStart","getRatingRows","ratingIsActive","ratingHasFocus","customizeRating","ri","r","ScreenNavigator","getRows","getRow","NavWrapper","assignState","getScreenStartPos","getRatingNav","getDifficultyNav","getSettingNav","Screen","getScreen","TouchDetector","prefixes","DocumentTouch","query","matchMedia","matches","error","VerticalMenu","StartMenuPageButton","onfocus","MenuStartButton","StartMenu","initialized","subscriber","setSubscriber","setButtons","getNavigator","getPos","switchToMenu","toggleScreen","switchToScreen","toggleMainMenu","ButtonRenderer","App","setStarted","defaultState","appState","setAppState","shuffle","board","startSettings","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6552865.chunk.js","sourcesContent":["import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\r\n\r\nimport BusinessModel from \"../Business/BusinessModel\";\r\nimport React from \"react\";\r\n\r\ninterface IGlobalContext {\r\n    state: BusinessModel | null;\r\n    replaceContext: StateReplaceFunction;\r\n    updateContext: StateUpdateFunction;\r\n    updateGameContext: StateUpdateFunction;\r\n    restart: () => void;\r\n}\r\n\r\nconst defaultValue = {\r\n    state: null,\r\n    replaceContext: () => {},\r\n    updateContext: () => {},\r\n    updateGameContext: () => {},\r\n    restart: () => {},\r\n};\r\n\r\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\r\n\r\nexport const Provider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n","import React from \"react\";\r\nimport ReactGamePad from \"react-gamepad\";\r\n\r\nconst GamePad = (props) => {\r\n    const buttonHandler = (e) => {\r\n        console.debug(e);\r\n        if (e == \"DPadLeft\") {\r\n            props.onLeft && props.onLeft();\r\n        }\r\n        if (e == \"DPadRight\") {\r\n            props.onRight && props.onRight();\r\n        }\r\n        if (e == \"DPadUp\") {\r\n            props.onUp && props.onUp();\r\n        }\r\n        if (e == \"DPadDown\") {\r\n            props.onDown && props.onDown();\r\n        }\r\n        if (e == \"A\") {\r\n            props.onAction && props.onAction();\r\n        }\r\n        if (e == \"B\") {\r\n            props.onCancel && props.onCancel();\r\n        }\r\n        if (e == \"X\") {\r\n            props.onHint && props.onHint();\r\n        }\r\n        if (e == \"Y\") {\r\n            props.onUndo && props.onUndo();\r\n        }\r\n        if (e == \"Start\") {\r\n            props.onPause && props.onPause();\r\n        }\r\n        if (e == \"Back\") {\r\n            props.onPause && props.onMenu();\r\n        }\r\n    };\r\n    const connectHandler = (e) => {\r\n        console.debug(\"connected\", e);\r\n    };\r\n    const disconnectHandler = (e) => {\r\n        console.debug(\"disconnected\", e);\r\n    };\r\n\r\n    //@todo pick ID of gamepad dynamically\r\n    //allow switching PS4 and XBOX layouts\r\n    //also support splitscreen battle mode\r\n    return (\r\n        <ReactGamePad gamepadIndex={props.gamepadIndex} onButtonDown={buttonHandler} onConnect={connectHandler} onDisconnect={disconnectHandler}>\r\n            <span></span>\r\n        </ReactGamePad>\r\n    );\r\n};\r\n\r\nexport default GamePad;\r\n","import GamePad from \"./GamePad\";\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst BoardGamePad = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const isGamePadDriven = state.settings.launchSettings.inputMode == \"gamepad\";\r\n    const isSinglePlayer = state.settings.launchSettings.gameMode.boardMode === \"singleplayer\";\r\n    const switchToGamePad = (ctx) => {\r\n        ctx.focus.isKeyBoard(true);\r\n        if (isSinglePlayer) {\r\n            ctx.settings.mouseMode = \"remain-on-stack\";\r\n            ctx.settings.launchSettings.inputMode = \"gamepad\";\r\n        }\r\n    };\r\n\r\n    //@todo pick ID of gamepad dynamically\r\n    //allow switching PS4 and XBOX layouts\r\n    //also support splitscreen battle mode\r\n    return isSinglePlayer || isGamePadDriven ? (\r\n        <GamePad\r\n            gamepadIndex={0}\r\n            onLeft={() => props.onLeft && props.onLeft(switchToGamePad)}\r\n            onRight={() => props.onRight && props.onRight(switchToGamePad)}\r\n            onUp={() => props.onUp && props.onUp(switchToGamePad)}\r\n            onDown={() => props.onDown && props.onDown(switchToGamePad)}\r\n            onAction={() => props.onAction && props.onAction(switchToGamePad)}\r\n            onCancel={() => props.onCancel && props.onCancel(switchToGamePad)}\r\n            onHint={() => props.onHint && props.onHint(switchToGamePad)}\r\n            onUndo={() => props.onUndo && props.onUndo()}\r\n            onPause={() => props.onPause && props.onPause(switchToGamePad)}\r\n            onMenu={() => props.onPause && props.onMenu(switchToGamePad)}\r\n            \r\n        >\r\n            <span></span>\r\n        </GamePad>\r\n    ) : null;\r\n};\r\n\r\nexport default BoardGamePad;\r\n","import React from \"react\";\r\n\r\nconst Keyboard = (props) => {\r\n    const navListener = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27) {\r\n            props.onCancel && props.onCancel();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 37) {\r\n            props.onLeft && props.onLeft();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 39) {\r\n            props.onRight && props.onRight();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 38) {\r\n            props.onUp && props.onUp();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 40) {\r\n            props.onDown && props.onDown();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 96) {\r\n            props.onAction && props.onAction();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 90 && evtobj.ctrlKey) {\r\n            props.onUndo && props.onUndo();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 72) {\r\n            props.onHint && props.onHint();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 80) {\r\n            props.onPause && props.onPause();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 77) {\r\n            props.onPause && props.onMenu();\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", navListener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", navListener);\r\n        };\r\n    }, [props]);\r\n    return null;\r\n};\r\nexport default Keyboard;\r\n","import GlobalContext from \"../Context\";\r\nimport Keyboard from \"./Keyboard\";\r\nimport React from \"react\";\r\n\r\nconst BoardKeyboard = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const isKeyboardDriven = state.settings.launchSettings.inputMode === \"keyboard\";\r\n    const isSinglePlayer = state.settings.launchSettings.gameMode.boardMode === \"singleplayer\";\r\n\r\n    const switchToKeyboard = (ctx) => {\r\n        ctx.focus.isKeyBoard(true);\r\n        if (isSinglePlayer) {\r\n            ctx.settings.mouseMode = \"remain-on-stack\";\r\n            ctx.settings.launchSettings.inputMode = \"keyboard\";\r\n        }\r\n    };\r\n\r\n    return isKeyboardDriven || isSinglePlayer ? (\r\n        <Keyboard\r\n            onLeft={() => props.onLeft && props.onLeft(switchToKeyboard)}\r\n            onRight={() => props.onRight && props.onRight(switchToKeyboard)}\r\n            onUp={() => props.onUp && props.onUp(switchToKeyboard)}\r\n            onDown={() => props.onDown && props.onDown(switchToKeyboard)}\r\n            onAction={() => props.onAction && props.onAction(switchToKeyboard)}\r\n            onCancel={() => props.onCancel && props.onCancel(switchToKeyboard)}\r\n            onHint={() => props.onHint && props.onHint(switchToKeyboard)}\r\n            onUndo={() => props.onUndo && props.onUndo()}\r\n            onPause={() => props.onPause && props.onPause(switchToKeyboard)}\r\n            onMenu={() => props.onMenu && props.onMenu(switchToKeyboard)}\r\n        />\r\n    ) : null;\r\n};\r\n\r\nexport default BoardKeyboard;\r\n","import BoardGamePad from \"./Game/BoardGamePad\";\r\nimport BoardKeyboard from \"./Game/BoardKeyboard\";\r\nimport React from \"react\";\r\n\r\nconst Navigator = (props) => {\r\n    return (\r\n        <>\r\n            <BoardKeyboard\r\n                onLeft={props.onLeft}\r\n                onRight={props.onRight}\r\n                onUp={props.onUp}\r\n                onDown={props.onDown}\r\n                onAction={props.onAction}\r\n                onCancel={props.onCancel}\r\n                onHint={props.onHint}\r\n                onUndo={props.onUndo}\r\n                onPause={props.onPause}\r\n                onMenu={props.onMenu}\r\n            />\r\n            <BoardGamePad\r\n                onLeft={props.onLeft}\r\n                onRight={props.onRight}\r\n                onUp={props.onUp}\r\n                onDown={props.onDown}\r\n                onAction={props.onAction}\r\n                onCancel={props.onCancel}\r\n                onHint={props.onHint}\r\n                onUndo={props.onUndo}\r\n                onPause={props.onPause}\r\n                onMenu={props.onMenu}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\r\n\r\nexport interface IPauseState {\r\n    started: number;\r\n    end: number;\r\n    paused: boolean;\r\n    pauses: number[];\r\n    pauseStartedAt: number;\r\n    allowed: number;\r\n    isSilent: string;\r\n}\r\nexport interface IPauseContext {\r\n    state: IPauseState;\r\n    togglePause: (isPaused: boolean) => void;\r\n}\r\nexport const defaultPauseState = { started: 0, end: 0, paused: false, pauses: [], pauseStartedAt: 0, allowed: 5, isSilent: \"\" };\r\nexport const defaultPauseContext = {\r\n    state: defaultPauseState,\r\n    togglePause: () => {},\r\n};\r\n\r\nconst PauseContext = React.createContext<IPauseContext>(defaultPauseContext);\r\nconst PauseContextProvider = PauseContext.Provider;\r\n\r\nexport const PauseProvider = (props: any) => {\r\n    const [paused, setPaused] = React.useState<IPauseState>({ ...defaultPauseState });\r\n    const getElapsedMs = () => {\r\n        const pauses = paused.pauses.reduce((a, b) => a + b, 0);\r\n        return (paused.end || paused.pauseStartedAt || Date.now()) - props.started - pauses;\r\n    };\r\n\r\n    const getElapsed = () => {\r\n        const padleft = (i: number) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = getElapsedMs();\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n    const togglePause = (isPaused: boolean, isSilent?: string) => {\r\n        if (paused.paused == isPaused) {\r\n            if (paused.paused) {\r\n                setPaused({\r\n                    ...paused,\r\n                    pauses: [...paused.pauses, Date.now() - paused.pauseStartedAt],\r\n                    pauseStartedAt: 0,\r\n                    paused: false,\r\n                    isSilent: isSilent ? isSilent : \"\",\r\n                });\r\n            } else if (paused.pauses.length < paused.allowed) {\r\n                setPaused({\r\n                    ...paused,\r\n                    pauseStartedAt: Date.now(),\r\n                    paused: true,\r\n                    isSilent: isSilent ? isSilent : \"\",\r\n                });\r\n            }\r\n        }\r\n    };\r\n    const context = {\r\n        state: { ...paused, started: props.started },\r\n        togglePause,\r\n        getElapsed,\r\n    };\r\n\r\n    return <PauseContextProvider value={context}>{props.children}</PauseContextProvider>;\r\n};\r\n\r\nexport default PauseContext;\r\n","import GlobalContext from \"../Context\";\r\nimport Navigator from \"../Navigator\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst BoardNavigator = () => {\r\n    const { state, updateContext, updateGameContext, replaceContext } = React.useContext(GlobalContext);\r\n    const paused = React.useContext(PauseContext);\r\n    const before = { x: state.navigator.currentIndex.x, y: state.navigator.currentIndex.y, z: state.navigator.currentIndex.z };\r\n    const isPaused = !!paused.state.paused;\r\n\r\n    const onLeft = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveLeft(before);\r\n        });\r\n\r\n    const onRight = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveRight(before);\r\n        });\r\n\r\n    const onUp = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveUp(before);\r\n        });\r\n\r\n    const onDown = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveDown(before);\r\n        });\r\n\r\n    const onAction = (modifier) =>\r\n        updateGameContext((ctx) => {\r\n            modifier(ctx);\r\n            state.navigator.pressCurrent()(ctx);\r\n        });\r\n\r\n    const onCancel = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.hand.stack.length && ctx.hand.stack[0].onClick({ isKeyboard: true })(ctx);\r\n        });\r\n\r\n    const onPause = () => paused.togglePause(isPaused);\r\n\r\n    const isVisible = (state) => state.settings.suggestionMode.supportsHints || state.settings.suggestionMode.isTemporary;\r\n    const isDisabled = (state) => state.settings.suggestionMode.isTemporary;\r\n\r\n    const onHint = (modifier) => {\r\n        updateContext((state) => {\r\n            modifier(state);\r\n            if (isVisible(state) && !isDisabled(state)) {\r\n                state.settings.enableHint();\r\n            }\r\n        });\r\n    };\r\n\r\n    const onUndo = () => {\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n    };\r\n    const menuToggle = state.settings.showMenu;\r\n    const onMenu = (modifier) => {\r\n        updateContext((state) => {\r\n            modifier(state);\r\n            state.settings.showMenu = !menuToggle;\r\n        });\r\n        paused.togglePause(!state.settings.showMenu, state.player);\r\n    };\r\n\r\n    return isPaused ? null : (\r\n        <Navigator\r\n            onLeft={onLeft}\r\n            onRight={onRight}\r\n            onUp={onUp}\r\n            onDown={onDown}\r\n            onAction={onAction}\r\n            onCancel={onCancel}\r\n            onHint={onHint}\r\n            onUndo={onUndo}\r\n            onPause={onPause}\r\n            onMenu={onMenu}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BoardNavigator;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Dealer = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const timeouts = [];\r\n\r\n    //@todo implement launch setting UI for quick dealing\r\n    if (state.settings.launchSettings.quickDeal) {\r\n        if (state && state.dealer && !state.dealer.isDealt) {\r\n            replaceContext(state.dealer.dealAll(state));\r\n        }\r\n    } else {\r\n        const deal = (dealt) => {\r\n            timeouts.push(\r\n                setTimeout(() => {\r\n                    if (state && state.dealer && !state.dealer.isDealt) {\r\n                        replaceContext(state.dealer.dealOne(dealt, deal));\r\n                    }\r\n                }, 35)\r\n            );\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            deal(state.dealer.dealt);\r\n            return () =>\r\n                timeouts.forEach((timeout) => {\r\n                    clearTimeout(timeout);\r\n                });\r\n        }, []);\r\n        React.useEffect(() => {\r\n            \r\n        }, [state.dealer.isDealt]);\r\n    }\r\n    return null;\r\n};\r\nexport default Dealer;\r\n","import { Component } from \"react\";\r\nimport GlobalContext from \"../Context\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    constructor(selector) {\r\n        super();\r\n        this.timeout = null;\r\n        this.selector = selector;\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    componentDidUpdate() {\r\n        if (this.selector(this.context.state).blinkFor) {\r\n            this.timeout = setTimeout(\r\n                () =>\r\n                    this.context.updateGameContext((state) => {\r\n                        this.selector(state).unblink(state);\r\n                    }),\r\n                200\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const { state, updateGameContext } = React.useContext(GlobalContext);\r\n    const pause = React.useContext(PauseContext);\r\n    const inputEl = React.useRef(null);\r\n    const isFocused = state.focus.hasCard(props.model);\r\n    React.useEffect(() => {\r\n        if (isFocused && state.settings.launchSettings.gameMode.boardMode == \"singleplayer\") {\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    }, [isFocused, state.focus.card]);\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        const isKeyBoard = e.clientX == 0 && e.clientY == 0;\r\n        let ele = e.target;\r\n\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            isKeyBoard,\r\n            click: {\r\n                x: e.clientX - ele.ownerDocument.defaultView.pageXOffset,\r\n                y: e.clientY - ele.ownerDocument.defaultView.pageYOffset,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n        const isSinglePlayer = state.settings.launchSettings.gameMode.boardMode === \"singleplayer\";\r\n        //@todo A11Y allow keyboard actions in singleplayer\r\n        if (props.model.onClick && !position.isKeyBoard) {\r\n            updateGameContext((context) => {\r\n                props.model.onClick(position)(context);\r\n                if (isSinglePlayer) {\r\n                    context.settings.launchSettings.inputMode = \"mouse\";\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const getClassName = () => {\r\n        const hasSuggestion = props.isSuggested || props.model.suggestion;\r\n        let className = `card card-base suit-${props.model.type.icon}`;\r\n        className += !props.isSelected && !isFocused && !hasSuggestion ? ` card-stack-${props.model.source}` : \"\";\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        className += props.model.canClick() ? \" clickable\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack (preview what happens if picked up)\r\n        className += hasSuggestion && !isFocused ? \" card-suggested\" : \"\";\r\n        className += isFocused ? \" card-focused\" : \"\";\r\n        return className;\r\n    };\r\n\r\n    const getCardStyle = () => {\r\n        const style = {\r\n            zIndex: (props.zIndex ? props.zIndex : !!props.offsetTop * 20)+1,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };\r\n\r\n        //move to left on waste (triple draw)\r\n        if (props.offsetLeft) {\r\n            style.left = props.offsetLeft * 4 + \"vw\";\r\n        }\r\n\r\n        if (!props.model.onClick) {\r\n            style.pointerEvents = \"none\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    const getStackbaseStyle = () => {\r\n        if (!props.model.onClick) {\r\n            return { pointerEvents: \"none\" };\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    const names = [0, 1, 2, 3, 4, 5, 6].map((id) => \" stack \" + (id + 1));\r\n    let label = \"\";\r\n    const split = props.model.source.split(\"-\");\r\n    label += split[0];\r\n    if (split.length > 1) {\r\n        label += names[split[1]]\r\n    }\r\n    label += \": \"\r\n\r\n    label += props.model.isHidden ? \"hidden card\" : props.model.type.icon + props.model.face;\r\n\r\n    // @todo 3d flip https://3dtransforms.desandro.com/card-flip on unhide\r\n    // https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n\r\n    return (\r\n        <div style={getStackbaseStyle()} className=\"stack-base\">\r\n            <button\r\n                onFocus={() => {\r\n                    // updateContext((ctx) => {\r\n                    //     ctx.navigator.update(props.model.source, props.model);\r\n                    // });\r\n                }}\r\n                onBlur={() => {\r\n                    //updateContext((ctx) => ctx.focus.unsetCard(props.model));\r\n                }}\r\n                style={getCardStyle()}\r\n                ref={inputEl}\r\n                className={getClassName()}\r\n                onClick={onClick ? onClick : null}\r\n                disabled={!props.model.canClick() || pause.state.paused}\r\n                tabIndex={props.model.canClick() ? 0 : -1}\r\n                aria-label={label}\r\n                title={label}\r\n            >\r\n                <div className=\"card-content\">\r\n                    {props.model.isHidden || pause.state.paused ? (\r\n                        <div className=\"card-back\">&nbsp;</div>\r\n                    ) : (\r\n                        <div className=\"card-grid-container\">\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-left\">{props.model.face}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                            <div className=\"mainface\">\r\n                                <div className=\"align-center\">{props.model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-right\">{props.model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source)\r\n            this.props.putBack(null, { isKeyboard: false });\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card key={index} model={card} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    enableKeyNav = (context, mode) => {\r\n        const isSinglePlayer = context.settings.launchSettings.gameMode.boardMode === \"singleplayer\";\r\n        context.focus.isKeyBoard(true);\r\n        if (isSinglePlayer) {\r\n            context.settings.mouseMode = \"remain-on-stack\";\r\n            context.settings.launchSettings.inputMode = mode;\r\n        }\r\n    };\r\n   \r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parentModel.source !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {[\r\n                    this.props.hand &&\r\n                        this.props.hand.stack &&\r\n                        this.props.hand.stack.map((card, index) => (\r\n                            <Card\r\n                                key={index}\r\n                                model={card}\r\n                                offsetTop={this.props.offsetTop + index * 24}\r\n                                offsetLeft={this.props.offsetLeft}\r\n                                zIndex={1000 + index * 20}\r\n                                isSelected={true}\r\n                                onClick={(_c, p) => this.props.onClick(p)}\r\n                            />\r\n                        )),\r\n                ]}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    const { state, updateGameContext } = React.useContext(GlobalContext);\r\n    if (!state.hand || props.parentModel.source !== state.hand.source) {\r\n        return null;\r\n    }\r\n    const putBack = (p) => {\r\n        if (props.parentModel.stack.length) {\r\n            updateGameContext(props.parentModel.getTop().onClick(p));\r\n        } else {\r\n            updateGameContext(props.parentModel.clickEmpty(p));\r\n        }\r\n    };\r\n    if (state.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parentModel.source} hand={state.hand} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (state.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <>\r\n                <TouchHand\r\n                    parentModel={props.parentModel}\r\n                    hand={state.hand}\r\n                    offsetTop={props.offsetTop}\r\n                    offsetLeft={props.offsetLeft}\r\n                />\r\n            </>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base socket\";\r\n    const inputEl = React.useRef(null);\r\n    const { state, updateGameContext } = React.useContext(GlobalContext);\r\n    React.useEffect(() => {\r\n        if (state.focus.hasStack(props.model.parent) && state.settings.launchSettings.gameMode.boardMode == \"singleplayer\") {\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    });\r\n    if (!props.model.stack.length) {\r\n        if (props.model.blinkFor) {\r\n            classname += \" socket-blink\";\r\n        } else if (state.focus.hasStack(props.model.source)) {\r\n            classname += \" socket-focused\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n\r\n    if (props.model.suggestion && !props.model.stack.length) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        const isKeyBoard = e.clientX == 0 && e.clientY == 0;\r\n        if (!isKeyBoard) {\r\n            updateGameContext(props.model.clickEmpty({ isKeyBoard }));\r\n        }\r\n    };\r\n\r\n    const names = [0, 1, 2, 3, 4, 5, 6].map((id) => \" stack \" + (id + 1));\r\n    let label = \"\";\r\n    const split = props.model.source.split(\"-\");\r\n    label += split[0];\r\n    if (split.length > 1) {\r\n        label += names[split[1]]\r\n    }\r\n    label += \": empty socket\"\r\n\r\n    return (\r\n        <button\r\n            onFocus={() => {\r\n                // updateContext((ctx) => {\r\n                //     ctx.navigator.update(props.model.parent);\r\n                // });\r\n            }}\r\n            onBlur={() => {\r\n                // updateContext((ctx) => ctx.focus.unsetStack(props.model.parent));\r\n            }}\r\n            ref={inputEl}\r\n            className={classname}\r\n            onClick={onClick}\r\n            disabled={props.model.stack.length}\r\n            tabIndex={!props.model.stack.length ? 0 : -1}\r\n            aria-label={label}\r\n            title={label}\r\n\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.foundation.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state } = React.useContext(GlobalContext);\r\n        return state.foundation.stacks.map((foundation, index) => <Foundation key={index} model={foundation} index={index} />);\r\n    };\r\n\r\n    render() {\r\n        const model = this.props.model;\r\n        return (\r\n            <div className=\"board-field\" key={this.props.index}>\r\n                <StackBase model={model}>\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                parentModel={model}\r\n                    //onClick={(c, p) => onClick(model.stack[model.stack.length - 1], p, this.props.index)}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import PauseContext from \"../../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst Clock = () => {\r\n    const { state, getElapsed } = React.useContext(PauseContext);\r\n    const [elapsed, setElapsed] = React.useState(0);\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (state.started && !state.paused) {\r\n                setElapsed(getElapsed());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [state.started, state.paused]);\r\n\r\n    return !state.started || elapsed <= 0 ? null : (\r\n        <div className=\"header-clock\">\r\n            <div className=\"icon-container\">🕒</div>\r\n            {elapsed}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndGame = () => {\r\n    const { restart } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"End Game\" onClick={restart}>\r\n                🗑️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default EndGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hearts = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const getHearts = () => {\r\n        if (state.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            return state.game.passes > 0 ? \"❤️\" : \"💔\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            const createString = (length, icon) =>\r\n                Array.from(new Array(length).keys())\r\n                    .map(() => icon)\r\n                    .join(\"\");\r\n\r\n            return createString(state.stock.passes, \"❤️\") + createString(3 - state.stock.passes, \"💔\");\r\n        }\r\n        return null;\r\n    };\r\n    return <div className=\"heart-container\">{getHearts()}</div>;\r\n};\r\nexport default Hearts;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hint = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    const isVisible = (state) => state.settings.suggestionMode.supportsHints || state.settings.suggestionMode.isTemporary;\r\n    const isDisabled = (state) => state.settings.suggestionMode.isTemporary;\r\n\r\n    const suggestOnce = () => {\r\n        updateContext((state) => {\r\n            if (isVisible(state) && !isDisabled(state)) {\r\n                state.settings.enableHint();\r\n            }\r\n        });\r\n    };\r\n\r\n    return !isVisible(state) ? null : (\r\n        <div>\r\n            <button title=\"Hint\" onClick={() => suggestOnce()} disabled={isDisabled(state)}>\r\n                💡\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Hint;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst InputMethod = () => {\r\n    //⌨️\r\n    //🎮\r\n    //\r\n    const { state } = React.useContext(GlobalContext);\r\n    let icon = \"🖱️\";\r\n    icon = state.settings.launchSettings.inputMode == \"keyboard\" ? \"⌨️\" : icon;\r\n    icon = state.settings.launchSettings.inputMode == \"gamepad\" ? \"🎮\" : icon;\r\n\r\n    return <div><button>{icon}</button></div>;\r\n};\r\n\r\nexport default InputMethod;\r\n","import PauseContext from \"../../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst Pause = () => {\r\n    const { state, togglePause } = React.useContext(PauseContext);\r\n\r\n    return state.pauses.length < state.allowed ? (\r\n        <div>\r\n            <button title={`Pause - ${state.allowed-state.pauses.length} remaining`} disabled={state.paused} onClick={() => togglePause(state.paused)}>{state.paused ? \"▶️\" : \"⏸️\"}</button>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default Pause;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Points = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"icon-container\">🏆</div> {state.game.rating.points}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Points;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst RestartGame = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n\r\n    const reset = () =>\r\n        replaceContext((state) => (state.game.timemachine.previousStates ? state.game.timemachine.previousStates[0] : null));\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Restart\" disabled={!state.game.timemachine.previousStates.length} onClick={reset}>\r\n                ♻️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestartGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport PauseContext from \"../../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst ToggleMenu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    const pause = React.useContext(PauseContext);\r\n\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n                pause.togglePause(!state.settings.showMenu, state.player);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button disabled={pause.state.pauses.length >= pause.state.allowed} title=\"Settings\" onClick={() => toggleMenu(state.settings.showMenu)}>\r\n                ⚙️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleMenu;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Undo = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const undo = () =>\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                disabled={!state.game.timemachine.previousStates.length}\r\n                title={\"Undo (Penalty:\" + Math.pow(2, state.game.rating.multiplicator) + \")\"}\r\n                onClick={undo}\r\n            >\r\n                ⏪\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Undo;\r\n","import \"../../Style/Header.css\";\r\n\r\nimport Clock from \"./Clock\";\r\nimport EndGame from \"./EndGame\";\r\nimport Hearts from \"./Hearts\";\r\nimport Hint from \"./Hint\";\r\nimport InputMethod from \"./InputMethod\";\r\nimport Pause from \"./Pause\";\r\nimport Points from \"./Points\";\r\nimport React from \"react\";\r\nimport RestartGame from \"../RestartGame\";\r\nimport ToggleMenu from \"./ToggleMenu\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = (props) => (\r\n    <div className={\"header \" + props.mode}>\r\n        <div className=\"header-title\">\r\n            <Hearts />\r\n            <Points />\r\n        </div>\r\n        <Clock />\r\n        <div className=\"header-buttons\">\r\n            <InputMethod />\r\n            <Hint />\r\n            <Undo />\r\n            <Pause />\r\n            <RestartGame />\r\n            <EndGame />\r\n            <ToggleMenu />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","const EntropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\nexport default EntropyLevels;","import \"../Style/Menu.css\";\r\n\r\nimport EntropyLevels from \"../../Model/Game/EntropyLevels\";\r\nimport GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst Menu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    const { togglePause } = React.useContext(PauseContext);\r\n\r\n    //@todo persist game settings in local storage too and use for initialization\r\n    const setSuggestionMode = (sm) => updateContext((state) => state.settings.setSuggestionMode(sm));\r\n    const setBaseEntropy = (lvl) => updateContext((state) => state.setEntropy(lvl));\r\n    const setInteractionEntropy = (lvl) => updateContext((state) => (state.settings.interactionEntropy = lvl));\r\n    const setMouseMode = (mm) => updateContext((state) => (state.settings.mouseMode = mm));\r\n\r\n    //@todo review duplication with ToggleMenu Component from Header\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n                togglePause(!state.settings.showMenu, state.player);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!state.settings.showMenu) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui neutral menu\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => toggleMenu(state.settings.showMenu)}>🗙</button>\r\n            </div>\r\n            <div className=\"title\">Settings</div>\r\n            <div className=\"content\">\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Suggestions</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much help - if any - should the game offer by displaying suggestions?</div>\r\n                        <select\r\n                            onChange={(e) => setSuggestionMode(e.target.value)}\r\n                            value={state.settings.suggestionMode.key}\r\n                            disabled={state.settings.launchSettings.hintPenalty}\r\n                        >\r\n                            {state.settings.suggestionModes.map((suggestionMode) => (\r\n                                <option key={suggestionMode.key} value={suggestionMode.key}>\r\n                                    {suggestionMode.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Active Card</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">Should the selected card follow the cursor or remain on the stack?</div>\r\n                        <select onChange={(e) => setMouseMode(e.target.value)} value={state.settings.mouseMode}>\r\n                            {state.settings.mouseModes.map((mouseMode) => (\r\n                                <option key={mouseMode} value={mouseMode}>\r\n                                    {mouseMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Base Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                        <select onChange={(e) => setBaseEntropy(e.target.value)} value={state.settings.baseEntropy}>\r\n                            {EntropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Interaction Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will each interaction add to a stack on the board?</div>\r\n                        <select onChange={(e) => setInteractionEntropy(e.target.value)} value={state.settings.interactionEntropy}>\r\n                            {EntropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Menu;\r\n","import \"../Style/Screens.scss\";\r\n\r\nimport GamePad from \"../Game/GamePad\";\r\nimport GlobalContext from \"../Context\";\r\nimport Keyboard from \"../Game/Keyboard\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst PauseScreen = () => {\r\n    const globalCtx = React.useContext(GlobalContext);\r\n    const { state, togglePause } = React.useContext(PauseContext);\r\n    const remaining = state.allowed - state.pauses.length - 1;\r\n\r\n    //@todo proper I18N\r\n    let announcement = `You can pause the game ${remaining} more times.`;\r\n    if (remaining == 1) {\r\n        announcement = `You can pause the game ${remaining} more time.`;\r\n    }\r\n    if (remaining == 0) {\r\n        announcement = \"This is the last remaining pause. If you continue, no more pause will be possible.\";\r\n    }\r\n\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    const _toggle = () => togglePause(state.paused);\r\n    return !state.paused || (state.isSilent && state.isSilent == globalCtx.state.player) ? null : (\r\n        <div className=\"ui neutral endscreen\">\r\n            <div className=\"title\">😴</div>\r\n            <div className=\"content\">\r\n                <div>{announcement}</div>\r\n                <div>\r\n                    {state.isSilent ? (\r\n                        \"Wait for Player \" + state.isSilent + \" to continue.\"\r\n                    ) : (\r\n                        <button onClick={_toggle}>\r\n                            ▶️<div>Continue</div>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <Keyboard onAction={_toggle} onCancel={_toggle} />\r\n            <GamePad onAction={_toggle} onCancel={_toggle} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PauseScreen;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nconst usePrevious = (value) => {\r\n    const ref = React.useRef();\r\n    React.useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n};\r\n\r\nconst Renderer = (props) => {\r\n    const { state } = React.useContext(PauseContext);\r\n    const { paused, started } = state;\r\n    return <InnerRenderer length={props.length} paused={paused} started={started} />;\r\n};\r\n\r\nconst InnerRenderer = (props) => {\r\n    const context = React.useContext(GlobalContext);\r\n    const { length, started, paused } = props;\r\n    const previous = usePrevious({ length, paused, started });\r\n    React.useEffect(() => {\r\n        let timeout = null;\r\n        if (context.state.settings.launchSettings.speed && previous && started && !paused && (previous.length != length || previous.started != started || previous.paused != paused)) {\r\n            timeout = setTimeout(() => {\r\n                context.updateContext((state) => {\r\n                    if (length == state.stock.stack.length && state.stock.passes > 0 && (state.stock.stack.length || state.waste.stack.length)) {\r\n                        if (state.hand.isFromWaste()) {\r\n                            state.waste.putDownHand();\r\n                        }\r\n                        if (state.stock.stack.length) {\r\n                            state.waste.addAll(state.stock.popTop());\r\n                        } else if (state.stock.canRecycle()) {\r\n                            state.stock.recycle(state.waste.recycle());\r\n                        }\r\n                    }\r\n                });\r\n            }, 10000);\r\n        }\r\n        return () => clearTimeout(timeout);\r\n    }, [length, paused, started]);\r\n\r\n    return (\r\n        <div className=\"board-field stock\">\r\n            <StackBase model={context.state.stock} />\r\n            {context.state.stock.stack.map((card, index) => (\r\n                <Card\r\n                    key={index}\r\n                    model={card}\r\n                    offsetTop={(index / 2) * -1}\r\n                    zIndex={index}\r\n                    blink={context.state.stock.blinkFor}\r\n                    isSuggested={context.state.stock.suggestion && index == context.state.stock.stack.length - 1}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n//Can't use multiple contexts in one React class, need two renderer functions to feed two contexts into props for reliable detection of changes\r\nexport default class Stock extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.stock);\r\n    }\r\n\r\n    render() {\r\n        return <Renderer length={this.context.state.stock.stack.length} />;\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.tableau.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state } = React.useContext(GlobalContext);\r\n        return state.tableau.stacks.map((tableau, index) => <Tableau key={index} index={index} model={tableau} parent={state.tableau} />);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 1;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div className=\"board-field\">\r\n                <StackBase model={props.model} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        offsetTop={getOffset(index)}\r\n                    />\r\n                ))}\r\n                <Hand  parentModel={props.model} stack={props.model.stack} offsetTop={getOffset(props.model.stack.length)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.waste);\r\n    }\r\n\r\n    render() {\r\n        const { state } = this.context;\r\n        const getOffset = (index) => {\r\n            if (state.settings.launchSettings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length =\r\n                state.waste.settings.mouseMode == \"remain-on-stack\" && state.hand.isHoldingCard() && state.hand.isFromWaste()\r\n                    ? state.waste.stack.length + 1\r\n                    : state.waste.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div className=\"board-field\">\r\n                <StackBase model={state.waste} />\r\n                {state.waste.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        blink={state.waste.blinkFor}\r\n                        isSuggested={state.waste.suggestion && index == state.waste.stack.length - 1}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    offsetTop={(state.waste.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(state.waste.stack.length)}\r\n                    parentModel={state.waste}\r\n                    stack={state.waste.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"../Style/Board.scss\";\r\n\r\nimport BoardNavigator from \"./BoardNavigator\";\r\nimport Dealer from \"./Dealer\";\r\nimport Foundation from \"./Foundation\";\r\nimport Header from \"../UI/Header/Header\";\r\nimport Menu from \"../UI/Menu\";\r\nimport PauseScreen from \"../UI/PauseScreen\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = (props) => (\r\n    <div className={\"layout-grid-container \" + props.mode}>\r\n        <Header mode={props.mode} />\r\n        <div className={\"board-jail \" + props.mode}>\r\n            <div className={\"board-grid-container \" + props.mode}>\r\n                <Stock />\r\n                <Waste />\r\n                <div className=\"spacer\">&nbsp;</div>\r\n                <Foundation.Stacks />\r\n                <Tableau.Stacks />\r\n            </div>\r\n            <Menu />\r\n            <PauseScreen />\r\n        </div>\r\n        <Dealer />\r\n        <BoardNavigator />\r\n    </div>\r\n);\r\n\r\nexport default Board;\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Waste from \"../Model/Game/Waste\";\r\n\r\nexport type BlinkSelector = (state: BusinessModel) => Waste | Stock | any;\r\n\r\nexport interface IBlinker {\r\n    startBlink: (selector: BlinkSelector, state: BusinessModel) => void;\r\n}\r\n\r\nexport default class Blinker implements IBlinker {\r\n    startBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        if (selector(state).blinkFor < 10) {\r\n            selector(state).blinkFor = 10;\r\n            state.game.registerBlink(true);\r\n            selector(state).unblink = (s: BusinessModel) => this.stopBlink(selector, s);\r\n        }\r\n    };\r\n\r\n    stopBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        selector(state).blinkFor = 0;\r\n        state.game.registerBlink(false);\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Tableau implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.tableau.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.tableau.wouldAcceptHand(index)) {\r\n            const src = state.hand.source;\r\n            state.tableau.putDownHand(index) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (card) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n}\r\n\r\nexport class TableauHidden extends Tableau {\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (card) {\r\n            this.tryUncover(card, index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card: Card, index: number, state: BusinessModel) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Tableau from \"../Model/Game/Tableau\";\r\n\r\nexport default class Dealer {\r\n    dealt: number;\r\n    dealingAt: number;\r\n    isDealt: boolean;\r\n\r\n    constructor() {\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    dealOne = (dealt: number, callback: any) => (state: BusinessModel) => {\r\n        if (dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n\r\n        state.dealer.deal(state.stock, state.tableau);\r\n        if (state.dealer.isDealt) {\r\n            state.game.started = Date.now();\r\n        }\r\n\r\n        if (!state.dealer.isDealt) {\r\n            callback(state.dealer.dealt);\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    dealAll = () => (state: BusinessModel) => {\r\n        if (this.dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n        while (!state.dealer.isDealt) {\r\n            state.dealer.deal(state.stock, state.tableau);\r\n        }\r\n        state.game.started = Date.now();\r\n        return state;\r\n    };\r\n\r\n    deal = (stock: Stock, tableau: Tableau) => {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = stock.popOne();\r\n                newCard.source = tableau.stacks[i].source;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                tableau.deal(newCard, i);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Hand from \"../Model/Game/Hand\";\r\n\r\nexport default class Dispatcher {\r\n    clickHandler: ClickHandler;\r\n\r\n    constructor(clickHandler: ClickHandler) {\r\n        this.clickHandler = clickHandler;\r\n    }\r\n\r\n    getHandler = (hand: Hand) => {\r\n        if (hand && hand.isHoldingCard()) {\r\n            return this.dispatchPutDown;\r\n        } else {\r\n            return this.dispatchPickup;\r\n        }\r\n    };\r\n\r\n    dispatchPutDown = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPutDown(card, position, state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPickup(card, position, state, index);\r\n        }\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Foundation implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.foundation.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.foundation.wouldAcceptHand(index)) {\r\n            const src = state.hand.source;\r\n            state.foundation.putDownHand(index) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (_card: Card, position: any, state: BusinessModel, index: number) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    //@todo move this to a generic place, also detect failure\r\n    tryDetectEnd(state: BusinessModel) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.source = \"\";\r\n        this.suggestion = false;\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 20) + \"vw\";\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 20) + \"vw\";\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        copy.canClick = orig.canClick;\r\n        copy.onClick = orig.onClick;\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Focus {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.card = null;\r\n        this.stack = null;\r\n        this.keyboard = false;\r\n    }\r\n\r\n    validSettings = () => this.settings.launchSettings.inputMode !== \"mouse\";\r\n\r\n    isKeyBoard = (isKeyboard) => {\r\n        this.keyboard = isKeyboard;\r\n    }\r\n\r\n    setCard = (card) => {\r\n        this.card = card;\r\n        this.stack = null;\r\n    };\r\n\r\n    unsetCard = (card) => {\r\n        if (this.card && card && Card.equals(this.card, card)) {\r\n            this.card = null;\r\n        }\r\n    };\r\n\r\n    unsetStack = (stack) => {\r\n        if (this.stack && stack && this.stack == stack) {\r\n            this.stack = null;\r\n        }\r\n    }\r\n\r\n    setStack = (stack) => {\r\n        this.card = null;\r\n        this.stack = stack;\r\n    };\r\n\r\n    hasCard = (card) => this.keyboard && this.validSettings() && this.card && card && Card.equals(this.card, card);\r\n\r\n    hasStack = (stack) => this.keyboard && this.validSettings() && this.stack && stack && this.stack == stack;\r\n}\r\n","export default class BasicStack {\r\n    constructor(source) {\r\n        this.source = source;\r\n    }\r\n    stack = [];\r\n    getTop = () => this.stack && this.stack.length && this.stack[this.stack.length - 1];\r\n    suggestion = false;\r\n    getClickable = () => this.stack.filter((card) => card.canClick());\r\n}\r\n\r\nexport class HandHoldingStack extends BasicStack {\r\n    constructor(source, hand) {\r\n        super(source);\r\n        this.hand = hand;\r\n    }\r\n    getHandContent = () => this.hand.source == this.source ? this.hand.stack : [];\r\n    getClickable = () => [...this.stack.filter((card) => card.canClick()), ...this.getHandContent().filter((card) => card.canClick())];\r\n}\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","import Card from \"../Deck/Card\";\r\nimport { HandHoldingStack } from \"./BasicStack\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings, hand) {\r\n        this.settings = settings;\r\n        this.hand = hand;\r\n        const template = (index) => {\r\n            const s = new HandHoldingStack(\"foundation-\" + index, hand);\r\n            s.stack = [];\r\n            s.acceptedCards = [...getFoundationOrder()];\r\n            s.usedCards = [];\r\n            s.icon = null;\r\n            s.color = null;\r\n            s.blinkFor = 0;\r\n            return s;\r\n        };\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit, index) => ({ ...template(index), ...suit }));\r\n        this.stacks = [...stacks];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n    }\r\n\r\n    setOnClick = (onClick) => {\r\n        this.stacks.forEach((stack, index) => {\r\n            stack.clickEmpty = (p) => onClick(null, p, index);\r\n            stack.stack.forEach((card, sindex) => {\r\n                card.onClick = (p) => onClick({ ...card }, p, index);\r\n                card.canClick = () => sindex == stack.stack.length - 1;\r\n            });\r\n            this.hand.setOnClick(stack);\r\n        });\r\n    };\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAcceptHand = (index) => !this.hand.hasMoreThanOneCard() && this.accepts(index, this.hand.currentCard());\r\n\r\n    putDownHand = (index) => this.add(index, this.hand.putDown());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = this.stacks[index].source;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => [...this.stacks[index].usedCards].pop();\r\n\r\n    countCards = () => this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n\r\n    getTop = (index) => this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n\r\n    static copy = (orig, hand) => {\r\n        const copy = new Foundation(orig.settings, hand);\r\n        copy.stacks = orig.stacks.map((origStack) => {\r\n            const s = new HandHoldingStack(origStack.source, hand);\r\n            s.stack = Card.copyAll(origStack.stack);\r\n            s.acceptedCards = [...origStack.acceptedCards];\r\n            s.usedCards = [...origStack.usedCards];\r\n            s.icon = origStack.icon;\r\n            s.color = origStack.color;\r\n            return s;\r\n        });\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","export default class Rating {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        this.points += this.rateMove(currentMove);\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        if (this.settings.launchSettings.drawMode == \"single\" && this.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n    };\r\n\r\n    registerBlink(on) {\r\n        if (on && this.settings.launchSettings.missPenalty) {\r\n            this.points -= 10;\r\n            console.debug(\"RATING: subtract 10 points for invalid action\");\r\n        }\r\n    }\r\n\r\n    penalize = (other) => {\r\n        if (this.settings.launchSettings.undoPenalty) {\r\n            const penalty = Math.pow(2, other.multiplicator);\r\n            console.debug(`RATING: applying penalty of ${penalty} points for UNDO`);\r\n            this.points = Math.min(this.points, other.points) - penalty;\r\n            this.multiplicator = other.multiplicator + 1;\r\n        }\r\n    };\r\n\r\n    registerHint = (done) => {\r\n        if (done && this.settings.launchSettings.hintPenalty) {\r\n            this.points -= 10;\r\n            console.debug(`RATING: applying penalty of 10 points for HINT`);\r\n        }\r\n    };\r\n\r\n    rateMove(move) {\r\n        const isTableau = (obj) => obj.substr(0, 7) == \"tableau\";\r\n        const isFoundation = (obj) => obj.substr(0, 10) == \"foundation\";\r\n        if (isTableau(move.source)) {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (isFoundation(move.source)) {\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getTimePenalty = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        return Math.trunc(secondsToFinish / 5) * -2;\r\n    };\r\n\r\n    getBonusPoints = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        if (secondsToFinish < 30) {\r\n            return 0;\r\n        }\r\n        return Math.round((20000 / secondsToFinish) * 35);\r\n    };\r\n\r\n    getTotal = (start, end) => {\r\n        return this.points + this.getBonusPoints(start, end) - this.getTimePenalty(start, end);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Rating(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.multiplicator = orig.multiplicator;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class TimeMachine {\r\n    constructor() {\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n    };\r\n\r\n    pushPreviousState = (state) => {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    };\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.timemachine.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        return true;\r\n    };\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    }\r\n\r\n    stackEquals = (a, b) => {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    };\r\n\r\n    stacksEqual = (a, b) => {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    };\r\n\r\n    modelEquals = (a, b) => {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new TimeMachine();\r\n        copy.previousStates = [...orig.previousStates];\r\n        copy.memorable = orig.memorable;\r\n        copy.modified = orig.modified;\r\n        return copy;\r\n    };\r\n}\r\n","import Rating from \"./Rating\";\r\nimport TimeMachine from \"./TimeMachine\";\r\n\r\nexport default class Game {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.rating = new Rating(settings);\r\n        this.timemachine = new TimeMachine();\r\n        this.started = 0;\r\n        this.isEnded = false;\r\n        this.end = 0;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerMove(target, source);\r\n        this.timemachine.registerMove(target, source);\r\n        return true;\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.timemachine.registerPickup();\r\n        return true;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerRecycle();\r\n        this.timemachine.registerRecycle();\r\n        return true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerUncover();\r\n        this.timemachine.registerUncover();\r\n        return true;\r\n    };\r\n\r\n    registerBlink(on) {\r\n        this.rating.registerBlink(on);\r\n        this.timemachine.registerBlink(on);\r\n        return true;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.timemachine = TimeMachine.copy(orig.timemachine);\r\n        copy.rating = Rating.copy(orig.rating);\r\n        copy.paused = orig.paused;\r\n        return copy;\r\n    };\r\n\r\n    \r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp = (stack, source, position) => {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    };\r\n\r\n    putDown = () => {\r\n        this.source = null;\r\n        const result = this.stack.splice(0, this.stack.length);\r\n        return result;\r\n    };\r\n\r\n    setOnClick = (model) => {\r\n        if (this.source && this.source == model.source) {\r\n            let _onClick = model.clickEmpty;\r\n            if (model.stack.length) {\r\n                _onClick = model.stack[model.stack.length - 1].onClick;\r\n            }\r\n            this.stack.forEach((card) => {\r\n                card.onClick = _onClick;\r\n                card.canClick = () => true;\r\n            });\r\n        }\r\n    };\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    isHoldingKing = () => this.isHoldingCard() && this.currentCard().face == \"K\";\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    isFromWaste = () => this.source && this.source == \"waste\";\r\n\r\n    isFromFoundation = (index) => this.source && this.source == `foundation-${index}`;\r\n\r\n    isFromTableau = (index) => this.source && this.source == `tableau-${index}`;\r\n\r\n    isFromAnyTableau = () => this.source && this.source.substring(0, 8) == \"tableau-\";\r\n\r\n    getTableauIndex = () => this.source && this.source.substring(8);\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand(orig.focus);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","class SuggestionMode {\r\n    key: string;\r\n    label: string;\r\n    isTemporary: boolean;\r\n    supportsHints: boolean;\r\n    next: string | undefined;\r\n    constructor(key: string, obj: ISuggestionMode) {\r\n        this.key = key;\r\n        this.label = obj.label;\r\n        this.isTemporary = !!obj.isTemporary;\r\n        this.supportsHints = !!obj.supportsHints;\r\n        this.next = obj.next;\r\n    }\r\n}\r\n\r\ntype ISuggestionMode = {\r\n    label: string;\r\n    isTemporary?: boolean;\r\n    supportsHints?: boolean;\r\n    next?: string;\r\n};\r\n\r\nexport default class SuggestionModes {\r\n    static NONE: string = \"NONE\";\r\n    static SCORED: string = \"SCORED\";\r\n    static REGULAR: string = \"REGULAR\";\r\n    static FULL: string = \"FULL\";\r\n    static ONCE: string = \"ONCE\";\r\n    static TWICE: string = \"TWICE\";\r\n    static raw: { [id: string]: ISuggestionMode } = {\r\n        NONE: {\r\n            label: \"None\",\r\n            supportsHints: true,\r\n        },\r\n        SCORED: {\r\n            label: \"Scored\",\r\n        },\r\n        REGULAR: {\r\n            label: \"Regular\",\r\n        },\r\n        FULL: {\r\n            label: \"Full\",\r\n        },\r\n        ONCE: {\r\n            label: \"Single Action\",\r\n            isTemporary: true,\r\n            next: \"NONE\",\r\n        },\r\n    };\r\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\r\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\r\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\r\n    static default = () => SuggestionModes.get(SuggestionModes.REGULAR);\r\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\r\n}\r\n","import SuggestionModes from \"./Settings/SuggestionModes\";\r\n\r\nexport default class Settings {\r\n    constructor(launchSettings) {\r\n        this.launchSettings = launchSettings;\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = \"remain-on-stack\";\r\n\r\n        this.baseEntropy = launchSettings.baseEntropy;\r\n        this.interactionEntropy = launchSettings.interactionEntropy;\r\n\r\n        this.suggestionModes = SuggestionModes.allSuggestionModes();\r\n        this.suggestionMode = SuggestionModes.get(launchSettings.suggestionMode);\r\n    }\r\n\r\n    setSuggestionMode = (sm) => {\r\n        if (this.suggestionMode.key !== sm) {\r\n            this.suggestionMode = SuggestionModes.get(sm);\r\n        }\r\n    };\r\n\r\n    enableHint = () => {\r\n        this.suggestionMode = SuggestionModes.getHintMode();\r\n    };\r\n\r\n    disableHint = () => {\r\n        if (this.suggestionMode.isTemporary && this.suggestionMode.next) {\r\n            this.suggestionMode = SuggestionModes.get(this.suggestionMode.next);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings(orig.launchSettings);\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        copy.hintMode = orig.hintMode;\r\n        return copy;\r\n    };\r\n}\r\n","import BasicStack from \"./BasicStack\";\r\nimport Card from \"../Deck/Card\";\r\n\r\nexport default class Stock extends BasicStack {\r\n    constructor(stack, settings) {\r\n        super(\"stock\");\r\n        this.settings = settings;\r\n        this.stack = stack.map(this.setCardProperties);\r\n        this.recyclings = 0;\r\n        this.passes = -1;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        if (this.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            this.passes = 1;\r\n        }\r\n        if (this.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            this.passes = 3;\r\n        }\r\n    }\r\n\r\n    setOnClick = (onClick) => {\r\n        this.clickEmpty = (p) => onClick(null, p);\r\n        this.stack.forEach((card,index) => {\r\n            card.onClick = (p) => onClick({...card}, p);\r\n            card.canClick = () => index == this.stack.length-1;\r\n        });\r\n    };\r\n\r\n    popOne = () => {\r\n        const result = this.stack.pop();\r\n        return result;\r\n    };\r\n\r\n    canRecycle() {\r\n        return (\r\n            this.settings.launchSettings.recyclingMode == \"infinite\" ||\r\n            (this.settings.launchSettings.recyclingMode == \"3-pass\" && this.recyclings < 2)\r\n        );\r\n    }\r\n\r\n    recycle = (waste) => {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map(this.setCardProperties);\r\n            this.recyclings++;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setCardProperties = (card) => {\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        card.isHidden = true;\r\n        card.source = this.source;\r\n        return card;\r\n    };\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    popTop = () => {\r\n        let result = [];\r\n        if (this.settings.launchSettings.drawMode == \"single\") {\r\n            result = [this.stack.pop()];\r\n        }\r\n        if (this.settings.launchSettings.drawMode == \"triple\") {\r\n            result = this.stack.splice(this.stack.length - 3);\r\n        }\r\n        if (this.stack.length == 0) {\r\n            this.passes--;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings, orig.focus);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        copy.passes = orig.passes;\r\n        copy.recyclings = orig.recyclings;\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Hand from \"./Hand\";\r\nimport { HandHoldingStack } from \"./BasicStack\";\r\nimport Settings from \"./Settings\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nclass TableauStack extends HandHoldingStack {\r\n    blinkFor = 0;\r\n    id = 0;\r\n    // eslint-disable-next-line no-unused-vars\r\n    onClick = (a: any, b: any) => {};\r\n    // eslint-disable-next-line no-unused-vars\r\n    clickEmpty = (a: any, b: any) => {};\r\n}\r\nexport default class Tableau {\r\n    stacks: TableauStack[];\r\n    settings: Settings;\r\n    hand: Hand;\r\n\r\n    constructor(settings: Settings, hand: Hand) {\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.hand = hand;\r\n        this.stacks = ids.map((id) => {\r\n            const s = new TableauStack(\"tableau-\" + id, hand);\r\n            s.stack = [];\r\n            s.blinkFor = 0;\r\n            s.id = id;\r\n            return s;\r\n        });\r\n        this.settings = settings;\r\n    }\r\n\r\n    setOnClick = (onClick: (a: any, b: any, index: number) => void, onClickhidden: (a: any, b: any, index: number) => void, hand: Hand) => {\r\n        this.stacks.forEach((stack, index) => {\r\n            stack.clickEmpty = (p: any) => onClick(null, p, index);\r\n            stack.stack.forEach((card, sindex) => {\r\n                const click = card.isHidden && sindex == stack.stack.length-1 ? onClickhidden : onClick;\r\n                card.onClick = (p: any) => click({ ...card }, p, index);\r\n                card.canClick = () => !card.isHidden || this.canUncover(index, card);\r\n            });\r\n            hand.setOnClick(stack);\r\n        });\r\n    };\r\n\r\n    getStack = (index: number) => this.stacks[index];\r\n\r\n    wouldAcceptHand = (index: number) => this.canPutDown(this.getTop(index), this.hand, index);\r\n\r\n    putDownHand = (index: number) => this.add(index, this.hand.putDown()); \r\n\r\n    canPutDown = (card: Card, hand: Hand, index: number) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.isFromTableau(index));\r\n\r\n    accepts = (index: number, current: Card) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index: number, card: Card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card: Card, i: number) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    deal = (card: Card, index: number) => {\r\n        this.stacks[index].stack.push(card);\r\n    };\r\n\r\n    canUncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        return top.isHidden && card && card.equals(this.getTop(index));\r\n    };\r\n\r\n    uncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        if (this.canUncover(index, card)) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index: number) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index: number, cards: Card[]) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card: Card, index: number) => {\r\n        card.source = this.stacks[index].source;\r\n        return card;\r\n    };\r\n\r\n    getTop = (index: number, offset?: number) => this.stacks[index].stack[this.stacks[index].stack.length - 1 - (offset || 0)];\r\n\r\n    static copy = (orig: Tableau, hand: Hand) => {\r\n        const copy = new Tableau(orig.settings, hand);\r\n        copy.stacks = orig.stacks.map((stack, index) => {\r\n            const s = new TableauStack(stack.source, hand);\r\n            s.id = index;\r\n            s.stack = Card.copyAll(stack.stack);\r\n            return s;\r\n        });\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { HandHoldingStack } from \"./BasicStack\";\r\n\r\nexport default class Waste extends HandHoldingStack {\r\n    constructor(settings, hand) {\r\n        super(\"waste\", hand);\r\n        this.settings = settings;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n    }\r\n\r\n    setOnClick = (onClick) => {\r\n        this.clickEmpty = (p) => onClick(null, p);\r\n        this.stack.forEach((card, index) => {\r\n            card.onClick = (p) => onClick({...card}, p);\r\n            card.canClick = () => index == this.stack.length-1;\r\n        });\r\n        this.hand.setOnClick(this);  \r\n    };\r\n\r\n    putDownHand = () => this.addAll(this.hand.putDown());\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = this.source;\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAcceptHand = () => this.hand.isFromWaste() && this.canAdd(this.hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    static copy = (orig, hand) => {\r\n        const copy = new Waste(orig.settings, hand);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport Focus from \"./Game/Focus\";\r\nimport Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Model {\r\n    stock: Stock;\r\n    waste: Waste;\r\n    foundation: Foundation;\r\n    tableau: Tableau;\r\n    hand: Hand;\r\n    game: Game;\r\n    settings: Settings;\r\n    focus: Focus;\r\n    player: string;\r\n\r\n    constructor(obj: any) {\r\n        this.stock = obj.stock;\r\n        this.waste = obj.waste;\r\n        this.foundation = obj.foundation;\r\n        this.tableau = obj.tableau;\r\n        this.hand = obj.hand;\r\n        this.game = obj.game;\r\n        this.settings = obj.settings;\r\n        this.focus = obj.focus;\r\n        this.player = obj.player;\r\n    }\r\n\r\n    static getInitialState = (launchSettings: AppState, deck: Deck, player: string) => {\r\n        const settings = new Settings(launchSettings);\r\n        const hand = new Hand();\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings),\r\n            waste: new Waste(settings, hand),\r\n            foundation: new Foundation(settings, hand),\r\n            tableau: new Tableau(settings, hand),\r\n            hand: hand,\r\n            game: new Game(settings),\r\n            settings: settings,\r\n            focus: new Focus(settings),\r\n            player,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        const hand = Hand.copy(state.hand);\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste, hand),\r\n            foundation: Foundation.copy(state.foundation, hand),\r\n            tableau: Tableau.copy(state.tableau, hand),\r\n            hand: hand,\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n            focus: state.focus,\r\n            player: state.player,\r\n        };\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\nimport { IStack } from \"../Model/Game/IStack\";\r\nimport Model from \"../Model/Model\";\r\n\r\ninterface NavIndex {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\nexport default class Navigator {\r\n    model: Model;\r\n    currentIndex: NavIndex;\r\n    rows: IStack[][];\r\n    constructor(model: Model) {\r\n        this.model = model;\r\n        this.currentIndex = { x: 0, y: 0, z: 0 };\r\n        this.rows = [[this.model.stock, this.model.waste, undefined, ...this.model.foundation.stacks], [...this.model.tableau.stacks]];\r\n    }\r\n\r\n    getZindex = (elem: IStack, card: Card) => {\r\n        const targets = elem.getClickable();\r\n        for (let i = 0; i < targets.length; i++) {\r\n            if (Card.equals(card, targets[i])) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    update = (pos: string, card: Card) => {\r\n        for (let i = 0; i < this.rows.length; i++) {\r\n            const row = this.rows[i];\r\n            for (let j = 0; j < row.length; j++) {\r\n                const elem = row[j];\r\n                if (elem && elem.source == pos) {\r\n                    const zIndex = this.getZindex(elem, card);\r\n                    this.currentIndex = { x: j, y: i, z: zIndex };\r\n                    this.finishNav();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    valid = (pos: NavIndex) => pos.x === this.currentIndex.x && pos.y === this.currentIndex.y && pos.z === this.currentIndex.z;\r\n\r\n    moveLeft = (pos: NavIndex) =>\r\n        this.move(pos, () => {\r\n            this.currentIndex.x--;\r\n            if (this.currentIndex.x == -1) {\r\n                this.currentIndex.x = 6;\r\n            }\r\n        });\r\n\r\n    moveRight = (pos: NavIndex) =>\r\n        this.move(pos, () => {\r\n            this.currentIndex.x++;\r\n            if (this.currentIndex.x == 7) {\r\n                this.currentIndex.x = 0;\r\n            }\r\n        });\r\n\r\n    move = (pos: NavIndex, direction: () => void) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        direction();\r\n        if (this.current() == undefined) {\r\n            this.move(this.currentIndex, direction);\r\n        } else {\r\n            this.currentIndex.z = this.current().getClickable().length - 1;\r\n            this.finishNav();\r\n        }\r\n    };\r\n\r\n    moveUp = (pos: NavIndex) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        const clickable = this.current().getClickable();\r\n        if (clickable.length && this.currentIndex.z > 0) {\r\n            this.currentIndex.z--;\r\n            this.finishNav();\r\n        } else {\r\n            this.toggleRow(true);\r\n        }\r\n    };\r\n\r\n    moveDown = (pos: NavIndex) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        const clickable = this.current().getClickable();\r\n        if (clickable.length && this.currentIndex.z < clickable.length - 1) {\r\n            this.currentIndex.z++;\r\n            this.finishNav();\r\n        } else {\r\n            this.toggleRow(false);\r\n        }\r\n    };\r\n\r\n    toggleRow = (pickLast: boolean) => {\r\n        if (this.currentIndex.y == 0) {\r\n            this.currentIndex.y = 1;\r\n        } else {\r\n            this.currentIndex.y = 0;\r\n        }\r\n        const last = this.current() ? this.current().getClickable().length - 1 : 0;\r\n        this.currentIndex.z = pickLast ? last : 0;\r\n        if (this.current() == undefined) {\r\n            this.moveLeft(this.currentIndex);\r\n        } else {\r\n            this.finishNav();\r\n        }\r\n    };\r\n\r\n    finishNav = () => {\r\n        const clickable = this.current().getClickable();\r\n        if (clickable && clickable[this.currentIndex.z]) {\r\n            this.model.focus.setCard(clickable[this.currentIndex.z]);\r\n        } else {\r\n            this.model.focus.setStack(this.current().source);\r\n        }\r\n    };\r\n\r\n    current = () => {\r\n        return this.rows[this.currentIndex.y][this.currentIndex.x];\r\n    };\r\n\r\n    pressCurrent = () => {\r\n        if (this.model.focus.card && this.model.focus.card.canClick()) {\r\n            return this.model.focus.card.onClick({ isKeyboard: true });\r\n        } else if (this.model.focus.stack) {\r\n            return this.current().clickEmpty({ isKeyboard: true });\r\n        } else {\r\n            return (ctx: BusinessModel) => {\r\n                ctx.navigator.finishNav();\r\n                ctx.game.timemachine.modified = true;\r\n            };\r\n        }\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Stock implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.stock, state);\r\n\r\n    dispatchPutDown = (_card: Card, _position: any, state: BusinessModel) => this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, _position: any, state: BusinessModel) =>{\r\n        return card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state);\r\n    }\r\n\r\n    moveToWaste = (card: Card, state: BusinessModel) =>\r\n    {\r\n        return state.stock.isOnTop(card) && state.waste.addAll(state.stock.popTop()) && state.game.registerMove(\"waste\", \"stock\");\r\n    }\r\n\r\n    recycleWaste = (_card: Card, state: BusinessModel) => {\r\n        if (!state.stock.getTop()) {\r\n            return (\r\n                (!!state.waste.getTop() &&\r\n                    state.stock.canRecycle() &&\r\n                    state.stock.recycle(state.waste.recycle()) &&\r\n                    state.game.registerRecycle()) ||\r\n                this.blink(state, 0)\r\n            );\r\n        }\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Waste implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.waste, state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel) =>\r\n        (state.waste.wouldAcceptHand() &&\r\n            state.waste.putDownHand() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state, 0);\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport SuggestionModes from \"../Model/Game/Settings/SuggestionModes\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Suggestions {\r\n    tableau: Tableau;\r\n    waste: Waste;\r\n\r\n    constructor() {\r\n        this.tableau = new Tableau();\r\n        this.waste = new Waste();\r\n    }\r\n\r\n    evaluateOptions = (state: BusinessModel) => {\r\n        this.disableAllSuggestions(state);\r\n        if (\r\n            state.settings.suggestionMode.key !== SuggestionModes.NONE &&\r\n            !this.getUncoverOptions(state) &&\r\n            !this.getPutdownSuggestions(state) &&\r\n            !state.hand.isHoldingCard() &&\r\n            (!this.getPickupOptions(state) || state.settings.suggestionMode.key == SuggestionModes.FULL) &&\r\n            (state.stock.getTop() || state.stock.canRecycle()) &&\r\n            state.settings.suggestionMode.key !== SuggestionModes.SCORED\r\n        ) {\r\n            state.stock.suggestion = true;\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state: BusinessModel, onlyUseful?: boolean) => {\r\n        if (!state.hand.isHoldingCard() || state.settings.suggestionMode.key == SuggestionModes.NONE) {\r\n            return 0;\r\n        }\r\n\r\n        const accepted = [];\r\n        if (state.waste.wouldAcceptHand()) {\r\n            if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromWaste()) {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.foundation.wouldAcceptHand(index)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromFoundation(index)) {\r\n                    const move = { target: stack.source, source: state.hand.source };\r\n                    if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.tableau.wouldAcceptHand(index)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromTableau(index)) {\r\n                    const isMoveOfKingBetweenEmptySlots =\r\n                        state.hand.isHoldingKing() &&\r\n                        stack.stack.length == 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length == 0;\r\n\r\n                    const isMoveBetweenSimilarParentCards =\r\n                        stack.stack.length > 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length > 0 &&\r\n                        stack.stack[stack.stack.length - 1].face ==\r\n                            state.tableau.stacks[state.hand.getTableauIndex()].stack[\r\n                                state.tableau.stacks[state.hand.getTableauIndex()].stack.length - 1\r\n                            ].face &&\r\n                        !state.tableau.getTop(state.hand.getTableauIndex()).isHidden;\r\n\r\n                    const isNotLoop = !isMoveOfKingBetweenEmptySlots && !isMoveBetweenSimilarParentCards;\r\n\r\n                    if (!onlyUseful || state.settings.suggestionMode.key === SuggestionModes.FULL || isNotLoop) {\r\n                        const move = { target: stack.source, source: state.hand.source };\r\n                        if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state: BusinessModel) => {\r\n        let foundAny = false;\r\n        const wasteState = BusinessModel.copy(state);\r\n        this.waste.dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.timemachine.modified) {\r\n            if (this.getPutdownSuggestions(wasteState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) =>\r\n            tableau.stack\r\n                .map((card, cardIndex) => ({ cardIndex, card }))\r\n                .filter(({ card }) => !card.isHidden)\r\n                .forEach(({ card, cardIndex }) => {\r\n                    const tableauState = BusinessModel.copy(state);\r\n                    this.tableau.dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.timemachine.modified) {\r\n                        if (this.getPutdownSuggestions(tableauState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                })\r\n        );\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            const filtered = state.tableau.stacks\r\n                .map((_stack, index) => index)\r\n                .filter((index) => state.tableau.getTop(index) && state.tableau.getTop(index).isHidden);\r\n            filtered.forEach((index) => {\r\n                state.tableau.getTop(index).suggestion = true;\r\n            });\r\n            return filtered.length;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    disableAllSuggestions = (state: BusinessModel) => {\r\n        const disableSuggestion = (obj: any) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import Tableau, { TableauHidden } from \"./Tableau\";\r\n\r\nimport { AppState } from \"../Common\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Dealer from \"./Dealer\";\r\nimport Deck from \"../Model/Deck/Deck\";\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Foundation from \"./Foundation\";\r\nimport Model from \"../Model/Model\";\r\nimport Navigator from \"./Navigator\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class BusinessModel extends Model {\r\n    suggestor: Suggestions;\r\n    dealer: Dealer;\r\n    navigator: Navigator;\r\n\r\n    constructor(obj: any) {\r\n        super(obj);\r\n        this.suggestor = new Suggestions();\r\n        this.dealer = new Dealer();\r\n        this.navigator = new Navigator(this);\r\n    }\r\n\r\n    withSuggestions = () => {\r\n        this.suggestor.evaluateOptions(this);\r\n        return this;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.settings.baseEntropy = lvl;\r\n        this.stock.setEntropy(lvl);\r\n        this.waste.setEntropy(lvl);\r\n        this.foundation.setEntropy(lvl);\r\n        this.tableau.setEntropy(lvl);\r\n    };\r\n\r\n    withHandlers = () => {\r\n        const getHandler = (clickHandler: ClickHandler) => new Dispatcher(clickHandler).getHandler(this.hand);\r\n        this.stock.setOnClick(getHandler(new Stock()));\r\n        this.waste.setOnClick(getHandler(new Waste()));\r\n        this.foundation.setOnClick(getHandler(new Foundation()));\r\n        this.tableau.setOnClick(getHandler(new Tableau()),getHandler(new TableauHidden()), this.hand);\r\n        return this;\r\n    };\r\n\r\n    static getInitialState = (launchSettings: AppState, deck: Deck, player: string) => {\r\n        return new BusinessModel(Model.getInitialState(launchSettings, deck, player));\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return new BusinessModel(Model.copy(state));\r\n    };\r\n}\r\n","import \"../Style/Screens.scss\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst EndScreen = () => {\r\n    const { state, restart } = React.useContext(GlobalContext);\r\n    const pause = React.useContext(PauseContext);\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    return !state.game.isEnded ? null : (\r\n        <div className=\"ui neutral endscreen\">\r\n            <div className=\"title\">🥳</div>\r\n            <div className=\"content\">\r\n                <div>Time: {pause.getElapsed()}</div>\r\n                <div>Points: {state.game.rating.points}</div>\r\n                <div>Time Penalty: {state.game.rating.getTimePenalty(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Bonus Points: {state.game.rating.getBonusPoints(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Total Points: {state.game.rating.getTotal(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>\r\n                    <button onClick={restart}>\r\n                        🗑️<div>New Game</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndScreen;\r\n","import { AppState, StateReplacer, StateUpdater } from \"../../Common\";\r\n\r\nimport Board from \"./Board\";\r\nimport BusinessModel from \"../../Business/BusinessModel\";\r\nimport Deck from \"../../Model/Deck/Deck\";\r\nimport EndScreen from \"../UI/EndScreen\";\r\nimport { Provider } from \"../Context\";\r\nimport React from \"react\";\r\n\r\ninterface BoardWrapProps {\r\n    settings: AppState;\r\n    restart: () => void;\r\n    deck: Deck;\r\n    player: string;\r\n}\r\n\r\nexport default class BoardWrap extends React.Component<BoardWrapProps, BusinessModel> {\r\n    constructor(props: BoardWrapProps) {\r\n        super(props);\r\n        this.state = BusinessModel.getInitialState(props.settings, props.deck, props.player);\r\n    }\r\n\r\n    replaceContext = (modifier: StateReplacer) => this.setState(modifier);\r\n\r\n    updateContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            modifier(state);\r\n            return state;\r\n        });\r\n\r\n    updateGameContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            state.game.timemachine.modified = false;\r\n            const previous = BusinessModel.copy(state);\r\n            modifier(state);\r\n            if (state.game.timemachine.modified) {\r\n                state.game.timemachine.pushPreviousState(previous);\r\n                return state;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    render = () => {\r\n        const context = {\r\n            state: this.state.withHandlers().withSuggestions(),\r\n            replaceContext: this.replaceContext,\r\n            updateContext: this.updateContext,\r\n            updateGameContext: this.updateGameContext,\r\n            restart: this.props.restart,\r\n        };\r\n        return (\r\n            <Provider value={context}>\r\n                <Board mode={this.props.settings.gameMode.boardMode} />\r\n                <EndScreen />\r\n            </Provider>\r\n        );\r\n    };\r\n}\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\r\n            .flat()\r\n            .reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    copy() {\r\n        const result = new Deck();\r\n        result.cards = Card.copyAll(this.cards);\r\n        return result;\r\n    }\r\n}\r\n","export interface GameMode {\r\n    key: string;\r\n    title: string;\r\n    boardMode: string;\r\n    autoConfig: boolean;\r\n}\r\n\r\nexport default class GameModes {\r\n    static QUICK: GameMode = {\r\n        key: \"QUICK\",\r\n        title: \"Quick Game\",\r\n        boardMode: \"singleplayer\",\r\n        autoConfig: true,\r\n    };\r\n    static CUSTOM: GameMode = {\r\n        key: \"CUSTOM\",\r\n        title: \"Custom Game\",\r\n        boardMode: \"singleplayer\",\r\n        autoConfig: false,\r\n    };\r\n    static VERSUS: GameMode = {\r\n        key: \"VERSUS\",\r\n        title: \"Versus\",\r\n        boardMode: \"splitscreen\",\r\n        autoConfig: false,\r\n    };\r\n    static NULL: GameMode = {\r\n        key: \"\",\r\n        title: \"\",\r\n        boardMode: \"\",\r\n        autoConfig: false,\r\n    };\r\n}\r\n","export interface IButton {\r\n    getClickable: () => IButton[];\r\n    updateMap: (x: number, y: number) => void;\r\n    onClick: (pos: XY) => void;\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Button {\r\n    isRoot: any;\r\n    id: any;\r\n    active: any;\r\n    icon: any;\r\n    title: any;\r\n    onClick: (pos: XY) => void;\r\n    onFocus: (pos: XY) => void;\r\n    blink: boolean;\r\n    toggled: boolean;\r\n    children: Button[];\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor() {\r\n        this.isRoot = false;\r\n        this.id = \"not null\";\r\n        this.active = false;\r\n        this.icon = \"\";\r\n        this.title = \"\";\r\n        this.onClick = () => {};\r\n        this.onFocus = () => {};\r\n        this.blink = false;\r\n        this.toggled = false;\r\n        this.children = [];\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n}\r\n\r\nexport class MenuLeafButton extends Button implements IButton {\r\n    constructor(id: string, icon: string, title: string, onClick: (pos: XY) => void) {\r\n        super();\r\n        this.id = id;\r\n        this.icon = icon;\r\n        this.title = title;\r\n        this.onClick = onClick;\r\n    }\r\n    updateMap: (x: number, y: number) => void = (x: number, y: number) => {\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n    getClickable: () => IButton[] = () => {\r\n        return [this];\r\n    };\r\n}\r\n\r\nclass MenuNodeButton extends Button implements IButton {\r\n    children: any;\r\n    toggled: any;\r\n    constructor(children: IButton[]) {\r\n        super();\r\n        this.children = children;\r\n        this.toggled = false;\r\n    }\r\n    updateMap: (x: number, y: number) => void = (x: number, y: number) => {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.children.forEach((child: IButton, index: number) => child.updateMap(x, index + 1));\r\n    };\r\n    getClickable: () => IButton[] = () => {\r\n        return !this.toggled ? [this] : [this, ...this.children.map((child: IButton) => child.getClickable())].flat();\r\n    };\r\n}\r\nexport class MenuSectionButton extends MenuNodeButton {\r\n    constructor(\r\n        id: string,\r\n        icon: string,\r\n        title: string,\r\n        onClick: (pos: XY) => void,\r\n        onFocus: (pos: XY) => void,\r\n        toggled: boolean,\r\n        children: IButton[]\r\n    ) {\r\n        super(children);\r\n        this.id = id;\r\n        this.icon = icon;\r\n        this.title = title;\r\n        this.onClick = onClick;\r\n        this.onFocus = onFocus;\r\n        this.toggled = toggled;\r\n    }\r\n    moveDown = (x: number, y: number, next: number) => {\r\n        if (this.children.length > y) {\r\n            return { x: x, y: y + 1 };\r\n        } else {\r\n            return { x: next, y: 0 };\r\n        }\r\n    };\r\n    moveUp = (x: number, y: number, previous: number) => {\r\n        if (y > 1) {\r\n            return { x: x, y: y - 1 };\r\n        } else {\r\n            return { x: previous, y: 0 };\r\n        }\r\n    };\r\n}\r\n\r\nexport interface XY {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport interface NavHandler {\r\n    moveUp: (x: number, y: number) => XY;\r\n    moveDown: (x: number, y: number) => XY;\r\n    moveLeft: (x: number, y: number) => XY;\r\n    moveRight: (x: number, y: number) => XY;\r\n    action: (xy: XY) => void;\r\n}\r\n\r\nexport class MenuActionButton extends MenuLeafButton {\r\n    constructor(id: string, icon: string, title: string, active: boolean, onClick: (pos: XY) => void) {\r\n        super(id, icon, title, onClick);\r\n        this.active = active;\r\n        this.onClick = onClick;\r\n    }\r\n}\r\n\r\nexport class MenuRootButton extends MenuNodeButton implements NavHandler {\r\n    constructor(children: IButton[]) {\r\n        super(children);\r\n        this.isRoot = true;\r\n        this.children = children;\r\n        this.children.forEach((child: IButton, i: number) => child.updateMap(i, 0));\r\n    }\r\n    getClickable: () => IButton[] = () => [...this.children.map((child: IButton) => child.getClickable())].flat();\r\n\r\n    moveRight = (x: number, y: number) => {\r\n        //ignore\r\n        return { x, y };\r\n    };\r\n    moveLeft = (x: number, y: number) => {\r\n        //ignore\r\n        return { x, y };\r\n    };\r\n    moveDown = (x: number, y: number) => {\r\n        const current = this.children[x];\r\n        if (y > 0) {\r\n            const next = this.children.length - 1 == x ? 0 : x + 1;\r\n            return current.moveDown(x, y, next);\r\n        }\r\n\r\n        if (current.getClickable().length > 1) {\r\n            return { x, y: y + 1 };\r\n        }\r\n\r\n        if (this.children.length > x + 1) {\r\n            return { x: x + 1, y: 0 };\r\n        } else {\r\n            return { x: 0, y: 0 };\r\n        }\r\n    };\r\n    moveUp = (x: number, y: number) => {\r\n        const current = this.children[x];\r\n        if (y > 0) {\r\n            const previous = x == 0 ? this.children.length : x;\r\n            return current.moveUp(x, y, previous);\r\n        }\r\n        const previous = x == 0 ? this.children.length - 1 : x - 1;\r\n        return { x: previous, y: this.children[previous].getClickable().length - 1 };\r\n    };\r\n    action = (xy: XY) => {\r\n        const { x, y } = xy;\r\n        const current = this.children[x];\r\n        if (y > 0) {\r\n            current.children[y - 1].onClick(xy);\r\n        } else {\r\n            current.onClick(xy);\r\n        }\r\n    };\r\n}\r\n","const DifficultyOptions = [\r\n    {\r\n        id: 0,\r\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\r\n        icon: \"🐭\",\r\n        lines: [\"Turn 1 card\", \"No Limit\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐹\",\r\n        lines: [\"Turn 1 card\", \"Three passes\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐰\",\r\n        lines: [\"Turn 1 card\", \"Only a single pass\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\r\n        icon: \"🐨\",\r\n        lines: [\"Turn 3 cards\", \"No limit\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐼\",\r\n        lines: [\"Turn 3 cards \", \"Three passes\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐻\",\r\n        lines: [\"Turn 3 cards \", \"Only a single pass\"],\r\n    },\r\n];\r\n\r\nexport default DifficultyOptions;\r\n","import React from \"react\";\r\n\r\nconst MenuButton = (props) => {\r\n    const inputEl = React.useRef(null);\r\n    React.useEffect(() => {\r\n        props.subscribe({\r\n            id: 100* props.x +  props.y,\r\n            click: (pos) => props.x == pos.x && props.y == pos.y && console.debug(\"click handler inside the MenuButton\", props.x, props.y, pos.x, pos.y),\r\n        });\r\n    }, [props.x, props.y]);\r\n\r\n    let className = \"\";\r\n    if (props.blink) {\r\n        className += \" blinking\";\r\n    }\r\n\r\n    if (props.y > 0) {\r\n        className += \" indented\";\r\n    }\r\n\r\n    const shouldBeFocus = props.menuX == props.x && props.menuY == props.y && props.menuFocus == \"menu\";\r\n\r\n    if (shouldBeFocus) {\r\n        className += \" highlight\";\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (\r\n            props.menuX == props.x &&\r\n            props.menuY == props.y &&\r\n            props.menuFocus == \"menu\" &&\r\n            inputEl.current &&\r\n            inputEl.current !== document.activeElement\r\n        ) {\r\n            setClicking(true);\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    }, [props.menuFocus, props.menuX, props.menuY, props.x, props.y]);\r\n\r\n    if (props.active) {\r\n        className += \" active\";\r\n    }\r\n\r\n    //omg this is the worst but it works (5h lost)\r\n    const [isClicking, setClicking] = React.useState(false);\r\n\r\n    const focus = () => {\r\n        if (!isClicking && !(props.menuX == props.x && props.menuY == props.y) && props.menuFocus == \"menu\") {\r\n            props.onFocus({ x: props.x, y: props.y });\r\n            setClicking(false);\r\n        }\r\n    };\r\n\r\n    const click = () => {\r\n        setClicking(false);\r\n        props.onClick({ x: props.x, y: props.y });\r\n    };\r\n\r\n    return (\r\n        <button ref={inputEl} className={className} title={props.title} onFocus={focus} onClick={click} onMouseDown={()=>setClicking(true)}>\r\n            <div className=\"icon\">{props.icon}</div>\r\n            <div className=\"label\">{props.title}</div>\r\n        </button>\r\n    );\r\n};\r\nexport default MenuButton;\r\n","import React from \"react\";\r\n\r\nconst MenuTitle = (props) => {\r\n    return <div className=\"title maintitle\">{props.label}</div>;\r\n};\r\nexport default MenuTitle;\r\n","import React from \"react\";\r\nimport { StartScreenState } from \"../../../Common\";\r\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\r\n\r\nexport interface IStartScreenContext {\r\n    state: StartScreenState;\r\n    setState: (s: StartScreenState) => void;\r\n}\r\n\r\nconst StartScreenContext = React.createContext<IStartScreenContext>({\r\n    state: {\r\n        difficultySettings: 0,\r\n        ratingPreset: 0,\r\n        ratingSettings: {},\r\n        entropySettings: {},\r\n        quickDeal: false,\r\n        menu: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        screen: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        focus: \"menu\",\r\n        mainMenu: \"\",\r\n        screeen: \"\",\r\n        suggestionMode: SuggestionModes.REGULAR,\r\n    },\r\n    setState: () => {},\r\n});\r\n\r\nexport const Provider = StartScreenContext.Provider;\r\nexport default StartScreenContext;\r\n","export default class RatingPresets {\r\n    static all = [\r\n        {\r\n            id: 0,\r\n            icon: \"🌴\",\r\n            label: \"Chill\",\r\n            settings: {\r\n                timedMode: false,\r\n                missPenalty: false,\r\n                undoPenalty: false,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 1,\r\n            icon: \"⚖️\",\r\n            label: \"Regular\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: false,\r\n                undoPenalty: true,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: \"🏆\",\r\n            label: \"Competitive\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: true,\r\n                undoPenalty: true,\r\n                hintPenalty: true,\r\n            },\r\n        },\r\n    ];\r\n    static matchPreset = (settings: any) => {\r\n        const filterd = RatingPresets.all.filter((preset) => RatingPresets.equals(preset.settings, settings));\r\n        if (filterd.length > 0) {\r\n            return filterd[0].id;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    static equals = (s1: any, s2: any) =>\r\n        s1.timedMode === s2.timedMode &&\r\n        s1.missPenalty === s2.missPenalty &&\r\n        s1.undoPenalty === s2.undoPenalty &&\r\n        s1.hintPenalty === s2.hintPenalty;\r\n}\r\n","import GamePad from \"../../Game/GamePad\";\r\nimport React from \"react\";\r\n\r\n//this is what Chrome returns on navigator.getGamepads()\r\n// type GamepadList = {\r\n//     0: Gamepad;\r\n//     1: Gamepad;\r\n//     2: Gamepad;\r\n//     3: Gamepad;\r\n//     length: number;\r\n// };\r\n//firefox and edge have different formats\r\nconst Controls = (props: { player: number }) => {\r\n    const [pads, setPads] = React.useState([\r\n        {\r\n            found: false,\r\n            buttonPressed: false,\r\n        },\r\n        {\r\n            found: false,\r\n            buttonPressed: false,\r\n        },\r\n    ]);\r\n    const connect = (i: number) => {\r\n        pads[i].found = true;\r\n        setPads({ ...pads });\r\n    };\r\n    const press = (i: number) => {\r\n        pads[i].found = true;\r\n        pads[i].buttonPressed = true;\r\n        setPads({ ...pads });\r\n        console.log(pads);\r\n    };\r\n    const display = (pad: any) => (\r\n        <div>\r\n            <div>pressed: {pad.buttonPressed}</div>\r\n            <div>connected: {pad.found ? \"Y\" : \"N\"}</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"controls startdetails\">\r\n            <div className=\"title\">Controls</div>\r\n            <div className=\"content center\">\r\n                <div>\r\n                    <div className=\"title\">Player {props.player}</div>\r\n                    {display(pads[0])}\r\n                    <div>\r\n                        <GamePad\r\n                            gamepadIndex={0}\r\n                            onConnect={() => connect(0)}\r\n                            onUp={() => press(0)}\r\n                            onDown={() => press(0)}\r\n                            onRight={() => press(0)}\r\n                            onLeft={() => press(0)}\r\n                            onAction={() => press(0)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Controls;\r\n","export class ScreenButton<T> {\r\n    icon: string;\r\n    lines: string[];\r\n    id: number;\r\n    model: T;\r\n    constructor(id: number, icon: string, lines: string[], model: T) {\r\n        this.id = id;\r\n        this.icon = icon;\r\n        this.lines = lines;\r\n        this.model= model;\r\n    }\r\n}\r\nexport class ScreenRow<T> {\r\n    buttons: ScreenButton<T>[];\r\n    constructor(buttons: ScreenButton<T>[]) {\r\n        this.buttons = buttons;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\nconst ScreenMainButton = (props: {\r\n    id: number;\r\n    x: number;\r\n    y: number;\r\n    icon: string;\r\n    className: string;\r\n    lines: string[];\r\n    hasFocus: boolean;\r\n    onClick: () => void;\r\n}) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    //omg this is the worst but it works (5h lost)\r\n    //const [isClicking, setClicking] = React.useState(false);\r\n    React.useEffect(() => {\r\n        if (props.hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [props.hasFocus, inputEl]);\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const focus = () => {\r\n        if (!props.hasFocus) {\r\n            setState({ ...state, screen: { x: props.x, y: props.y } });\r\n            //setClicking(false);\r\n        }\r\n    };\r\n    return (\r\n        <button\r\n            onFocus={focus}\r\n            ref={inputEl}\r\n            key={props.id}\r\n            className={props.className}\r\n            //onMouseDown={() => setClicking(true)}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.icon}\r\n            {props.lines.map((line: string, index: number) => (\r\n                <div key={index}>{line}</div>\r\n            ))}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ScreenMainButton;\r\n","import { ScreenButton, ScreenRow } from \"./Navigation\";\r\n\r\nimport DifficultyOptions from \"./DifficultyOptions\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\nimport { StartScreenState } from \"../../../Common\";\r\n\r\nconst mapOption = (option: any) => new ScreenButton(option.id, option.icon, option.lines, option);\r\nexport const getDifficultyRows = () => {\r\n    return [new ScreenRow(DifficultyOptions.slice(0, 3).map(mapOption)), new ScreenRow(DifficultyOptions.slice(3).map(mapOption))];\r\n};\r\n\r\nexport const getDifficultyNav = (state: StartScreenState) => {\r\n    let result = { x: 0, y: 0 };\r\n    getDifficultyRows().forEach((row, ri) => {\r\n        row.buttons.forEach((button, bi) => {\r\n            if (difficultyIsActive(state, button.id)) {\r\n                result = { x: bi, y: ri };\r\n            }\r\n        });\r\n    });\r\n    return result;\r\n};\r\nconst difficultyIsActive = (state: StartScreenState, id: number) => state.difficultySettings == id\r\nconst Difficulty = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const closeScreen = () => setState({ ...state, focus: \"menu\", screeen: \"\", mainMenu: state.mainMenu, menu: { ...state.menu } });\r\n    const hasFocus = (index: number, y: number, x: number) => state.focus == \"screen\" && state.screen.x == x && state.screen.y == y;\r\n    const updateDifficulty = (settings: number) => setState({ ...state, difficultySettings: settings });\r\n    const getButtonClass = (index: number, y: number, x: number) => {\r\n        const hasFocus = state.screen.x == x && state.screen.y == y;\r\n        let name = difficultyIsActive(state, index) ? `active active-${index}` : `inactive-${index}`;\r\n        name += hasFocus ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n    return (\r\n        <div className=\"ui difficulty startdetails\">\r\n            <div className=\"closer\">\r\n                <button onClick={closeScreen}>🗙</button>\r\n            </div>\r\n            <div className=\"title\">Difficulty</div>\r\n            <div className=\"content center\">\r\n                {getDifficultyRows().map((row, index) => (\r\n                    <div key={index} className=\"row\">\r\n                        {row.buttons.map((button, bi) => (\r\n                            <ScreenMainButton\r\n                                key={button.id}\r\n                                x={bi}\r\n                                y={index}\r\n                                icon={button.icon}\r\n                                id={button.id}\r\n                                hasFocus={hasFocus(button.id, index, bi)}\r\n                                className={getButtonClass(button.id, index, bi)}\r\n                                onClick={() => updateDifficulty(button.id)}\r\n                                lines={button.lines}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n                <div className=\"row\"></div>\r\n                <div className=\"row\">\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">Draw Mode</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">\r\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode == \"triple\"\r\n                                ? \"Turn 3 cards at once from the Stock to the Waste.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode == \"single\"\r\n                                ? \"Turn 1 card after the other from the Stock to the Waste.\"\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">Pass Limit</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"1-pass\"\r\n                                ? \"One pass through the deck. Waste can not be recycled to the Stock.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"3-pass\"\r\n                                ? \"Three passes through the deck. Waste can be recycled to Stock two times.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"infinite\"\r\n                                ? \"No limit on passes through the deck. Waste can be recycled to Stock endlessly.\"\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Difficulty;\r\n","import Toggle from \"react-toggle\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\nimport { XY } from \"./Tree\";\r\ntype ToggleProps = { label: string; description: string; value: boolean; callBack: (s: boolean, pos: XY) => void, x: number, y: number, hasFocus: boolean };\r\nconst MenuToggle = (props: ToggleProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    React.useEffect(() => {\r\n        if (props.hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [props.hasFocus, inputEl]);\r\n    const cb = () => {\r\n        props.callBack(!props.value, { x: props.x, y: props.y });\r\n    };\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const focus = () => {\r\n        if (!props.hasFocus) {\r\n            setState({ ...state, screen: { x: props.x, y: props.y } });\r\n        }\r\n    };\r\n    let className=\"\";\r\n    if (props.hasFocus) {\r\n        className += \" focused\"\r\n    }\r\n     //ref?: any;\r\n    return (\r\n        <div className={\"togglecontainer\"+className}>\r\n            <div className=\"title\">{props.label}</div>\r\n            <div className=\"toggle\">               \r\n                <Toggle ref={inputEl} autoFocus={props.hasFocus} onFocus={focus} checked={props.value} onChange={cb} />\r\n            </div>\r\n            <div className=\"description\">{props.description}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuToggle;\r\n","import { ScreenButton, ScreenRow } from \"./Navigation\";\r\n\r\nimport EntropyLevels from \"../../../Model/Game/EntropyLevels\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\nimport { StartScreenState } from \"../../../Common\";\r\nimport MenuToggle from \"./MenuToggle\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\nimport { XY } from \"./Tree\";\r\n\r\nconst optimizeOptions = (state: StartScreenState) => [\r\n    {\r\n        entropy: 2,\r\n        quickDeal: false,\r\n        lines: [(!state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Desktop\"],\r\n        icon: \"🖥️\",\r\n    },\r\n    {\r\n        entropy: 1,\r\n        quickDeal: true,\r\n        lines: [(state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Mobile\"],\r\n        icon: \"📱\",\r\n    },\r\n];\r\n\r\nexport const getSettingRows = (state: StartScreenState) => {\r\n    return [new ScreenRow(optimizeOptions(state).map((option) => new ScreenButton(option.entropy, option.icon, option.lines, option)))];\r\n};\r\n\r\nexport const getSettingNav = (state: StartScreenState) => {\r\n    let result = { x: 0, y: 0 };\r\n    getSettingRows(state).forEach((row, ri) => {\r\n        row.buttons.forEach((button, bi) => {\r\n            if (settingIsActive(state, button.model.quickDeal)) {\r\n                result = { x: bi, y: ri };\r\n            }\r\n        });\r\n    });\r\n    return result;\r\n};\r\nconst settingIsActive = (state: StartScreenState, val: boolean) => state.quickDeal == val\r\n\r\nconst QuickStart = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const hasFocus = (y: number, x: number) => state.focus == \"screen\" && state.screen.x == x && state.screen.y == y;\r\n    const closeScreen = () => setState({ ...state, focus: \"menu\", screeen: \"\", mainMenu: state.mainMenu, menu: { ...state.menu } });\r\n\r\n    const setBaseEntropy = (value: string) => {\r\n        setState({ ...state, entropySettings: { ...state.entropySettings, baseEntropy: parseInt(value) } });\r\n    };\r\n    const setInteractionEntropy = (value: string) => {\r\n        setState({ ...state, entropySettings: { ...state.entropySettings, interactionEntropy: parseInt(value) } });\r\n    };\r\n    const setQuickDeal = (value: boolean, pos: XY) => {\r\n        setState({ ...state, quickDeal: value, screen: pos });\r\n    };\r\n    const getClassName = (button: ScreenButton<any>, y: number, x: number) => {\r\n        const hasFocus = state.focus == \"screen\" && state.screen.x == x && state.screen.y == y;\r\n        let name = settingIsActive(state, button.model.quickDeal) ? \"active active-0\" : \"inactive-0\";\r\n        name += hasFocus ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    return (\r\n        <div className=\"ui quickstart startdetails\">\r\n            <div className=\"closer\">\r\n                <button onClick={closeScreen}>🗙</button>\r\n            </div>\r\n            <div className=\"title\">Settings</div>\r\n\r\n            <div className=\"content center\">\r\n                {getSettingRows(state).map((row, index) => (\r\n                    <div key={index} className=\"row\">\r\n                        {row.buttons.map((button, bi) => (\r\n                            <ScreenMainButton\r\n                            key={button.id}\r\n                            x={bi}\r\n                            y={index}\r\n                            icon={button.icon}\r\n                            id={button.id}\r\n                            hasFocus={hasFocus(index, bi)}\r\n                            className={getClassName(button, index, bi)}\r\n                            onClick={() =>\r\n                                setState({\r\n                                    ...state,\r\n                                    quickDeal: button.model.quickDeal,\r\n                                    entropySettings: {\r\n                                        baseEntropy: button.model.entropy,\r\n                                        interactionEntropy: button.model.entropy,\r\n                                    },\r\n                                })}\r\n                            lines={button.lines}\r\n                        />\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n\r\n                <div className=\"row\"></div>\r\n                <div className=\"row\">\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">Base Entropy</div>\r\n                        <div className=\"toggle\">\r\n                            <select onChange={(e) => setBaseEntropy(e.target.value)} value={state.entropySettings.baseEntropy}>\r\n                                {EntropyLevels.map((entropyLevel, index) => (\r\n                                    <option key={entropyLevel} value={index}>\r\n                                        {entropyLevel}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            <div className=\"label\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">Interaction Entropy</div>\r\n                        <div className=\"toggle\">\r\n                            <select\r\n                                onChange={(e) => setInteractionEntropy(e.target.value)}\r\n                                value={state.entropySettings.interactionEntropy}\r\n                            >\r\n                                {EntropyLevels.map((entropyLevel, index) => (\r\n                                    <option key={entropyLevel} value={index}>\r\n                                        {entropyLevel}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            <div className=\"label\">How much chaos will each interaction add to a stack on the board?</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <MenuToggle\r\n                        x={3}\r\n                        y={0}\r\n                        hasFocus={hasFocus(0,3)}\r\n                        label=\"Instant Deal\"\r\n                        description=\"Should the deal animation at the beginning of the game be skipped?\"\r\n                        value={state.quickDeal}\r\n                        callBack={setQuickDeal}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default QuickStart;\r\n","import \"../../Style/react-toggle.css\";\r\n\r\nimport { ScreenButton, ScreenRow } from \"./Navigation\";\r\n\r\nimport RatingPresets from \"./RatingOptions\";\r\nimport { RatingSettings, StartScreenState } from \"../../../Common\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\nimport MenuToggle from \"./MenuToggle\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\nimport { XY } from \"./Tree\";\r\n\r\nexport const getRatingRows = () => [\r\n    new ScreenRow(RatingPresets.all.map((preset) => new ScreenButton(preset.id, preset.icon, [preset.label], preset))),\r\n    //this can be done better\r\n    new ScreenRow([new ScreenButton<any>(-1, \"\", [], null), new ScreenButton<any>(-1, \"\", [], null)]),\r\n    new ScreenRow([new ScreenButton<any>(-1, \"\", [], null), new ScreenButton<any>(-1, \"\", [], null)]),\r\n];\r\nexport const getRatingNav = (state: StartScreenState) => {\r\n    let result = { x: 0, y: 0 };\r\n    getRatingRows().forEach((row, ri) => {\r\n        row.buttons.forEach((button, bi) => {\r\n            if (ratingIsActive(state, button.id)) {\r\n                result = { x: bi, y: ri };\r\n            }\r\n        });\r\n    });\r\n    return result;\r\n};\r\nconst ratingIsActive = (state: StartScreenState, id: number) => state.ratingPreset == id;\r\nconst ratingHasFocus = (state: StartScreenState, y: number, x: number) =>\r\n    state.focus == \"screen\" && state.screen.x == x && state.screen.y == y;\r\n\r\nconst Rating = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const closeScreen = () => setState({ ...state, focus: \"menu\", screeen: \"\", mainMenu: state.mainMenu, menu: { ...state.menu } });\r\n\r\n    const applyPreset = (id: number) => setState({ ...state, ratingSettings: { ...RatingPresets.all[id].settings }, ratingPreset: id });\r\n\r\n    const getButtonClass = (id: number, y: number, x: number) => {\r\n        let name = ratingIsActive(state, id) ? `active active-${id}` : `inactive-${id}`;\r\n        name += ratingHasFocus(state, y, x) ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    const customizeRating = (modifier: (context: RatingSettings) => void, pos: XY) => {\r\n        const next = { ...state };\r\n        modifier(next.ratingSettings);\r\n        next.screen = pos;\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setState(next);\r\n    };\r\n    const setMissPenalty = (value: boolean, pos: XY) =>\r\n        customizeRating((r) => {\r\n            r.missPenalty = value;\r\n        }, pos);\r\n    const setTimeRating = (value: boolean, pos: XY) =>\r\n        customizeRating((r) => {\r\n            r.timedMode = value;\r\n        }, pos);\r\n    const setUndoPenalty = (value: boolean, pos: XY) =>\r\n        customizeRating((r) => {\r\n            r.undoPenalty = value;\r\n        }, pos);\r\n    const setHintPenalty = (value: boolean, pos: XY) => {\r\n        customizeRating((r) => {\r\n            r.hintPenalty = value;\r\n        }, pos);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ui rating startdetails\">\r\n            <div className=\"closer\">\r\n                <button onClick={closeScreen}>🗙</button>\r\n            </div>\r\n            <div className=\"title\">Rating</div>\r\n\r\n            <div className=\"content center\">\r\n                {getRatingRows()\r\n                    .slice(0, 1)\r\n                    .map((row, ri) => (\r\n                        <div key={ri} className=\"row\">\r\n                            {row.buttons.map((preset, bi) => (\r\n                                <ScreenMainButton\r\n                                    key={preset.id}\r\n                                    x={bi}\r\n                                    y={ri}\r\n                                    icon={preset.icon}\r\n                                    id={preset.id}\r\n                                    hasFocus={ratingHasFocus(state, ri, bi)}\r\n                                    className={getButtonClass(preset.id, ri, bi)}\r\n                                    onClick={() => applyPreset(preset.id)}\r\n                                    lines={[preset.lines[0]]}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                <div className=\"row\"></div>\r\n                <div className=\"row\">\r\n                    <MenuToggle\r\n                        x={0}\r\n                        y={1}\r\n                        hasFocus={ratingHasFocus(state, 1, 0)}\r\n                        label=\"Undo Penalty\"\r\n                        description=\"Undo is enabled, but excessive use will be painful. This penalty starts with 2 and increases exponentially.\"\r\n                        value={!!state.ratingSettings.undoPenalty}\r\n                        callBack={setUndoPenalty}\r\n                    />\r\n                    <MenuToggle\r\n                        x={1}\r\n                        y={1}\r\n                        hasFocus={ratingHasFocus(state, 1, 1)}\r\n                        label=\"Time Penalty\"\r\n                        description=\"Fast players are rewarded with a time bonus, slow players will be punished.\"\r\n                        value={!!state.ratingSettings.timedMode}\r\n                        callBack={setTimeRating}\r\n                    />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <MenuToggle\r\n                        x={0}\r\n                        y={2}\r\n                        hasFocus={ratingHasFocus(state, 2, 0)}\r\n                        label=\"Hint Penalty\"\r\n                        description=\"Each manual hint will reduce the number of points by 10. This setting disables automatic suggestions. \"\r\n                        value={!!state.ratingSettings.hintPenalty}\r\n                        callBack={setHintPenalty}\r\n                    />\r\n                    <MenuToggle\r\n                        x={1}\r\n                        y={2}\r\n                        hasFocus={ratingHasFocus(state, 2, 1)}\r\n                        label=\"Miss Penalty\"\r\n                        description=\"Be careful where you click, as each invalid action will lead to a penalty of 10 points.\"\r\n                        value={!!state.ratingSettings.missPenalty}\r\n                        callBack={setMissPenalty}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","import Controls from \"./Controls\";\r\nimport Difficulty, { getDifficultyNav, getDifficultyRows } from \"./Difficulty\";\r\nimport QuickStart, { getSettingNav, getSettingRows } from \"./QuickStart\";\r\nimport Rating, { getRatingRows, getRatingNav } from \"./Rating\";\r\nimport React from \"react\";\r\nimport { NavHandler, XY } from \"./Tree\";\r\nimport { StartScreenState } from \"../../../Common\";\r\nimport StartScreenContext from \"./Context\";\r\nimport Keyboard from \"../../Game/Keyboard\";\r\nimport GamePad from \"../../Game/GamePad\";\r\n\r\nexport class ScreenNavigator implements NavHandler {\r\n    screen: string;\r\n    state: StartScreenState;\r\n    constructor(screen: string, state: StartScreenState) {\r\n        this.screen = screen;\r\n        this.state = state;\r\n    }\r\n    getRows = () => {\r\n        if (this.screen == \"rating\") {\r\n            return getRatingRows();\r\n        }\r\n        if (this.screen == \"settings\") {\r\n            return getSettingRows(this.state);\r\n        }\r\n        if (this.screen == \"difficulty\") {\r\n            return getDifficultyRows();\r\n        }\r\n        return [];\r\n    };\r\n    getRow = (x: number) => this.getRows()[x];\r\n    moveUp: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const rows = this.getRows();\r\n        console.debug(rows, x, y);\r\n        if (rows.length < 2) {\r\n            return { x: x, y: y };\r\n        }\r\n        if (y == 0) {\r\n            return { x: x, y: rows.length - 1 };\r\n        }\r\n        return { x: x, y: y - 1 };\r\n    };\r\n    moveDown: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const rows = this.getRows();\r\n        console.debug(rows, x, y);\r\n        if (rows.length < 2) {\r\n            return { x: x, y: y };\r\n        }\r\n        if (y == rows.length - 1) {\r\n            return { x: x, y: 0 };\r\n        }\r\n        return { x: x, y: y + 1 };\r\n    };\r\n    moveLeft: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const row = this.getRow(y);\r\n        console.debug(row, x, y);\r\n        if (x == 0) {\r\n            return { x: row.buttons.length - 1, y: y };\r\n        }\r\n        return { x: x - 1, y: y };\r\n    };\r\n    moveRight: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const row = this.getRow(y);\r\n        console.debug(row, x, y);\r\n        if (x == row.buttons.length - 1) {\r\n            return { x: 0, y: y };\r\n        }\r\n        return { x: x + 1, y: y };\r\n    };\r\n    action: (xy: XY) => void = () => {\r\n        const activeElement: any = document.activeElement;\r\n        activeElement && activeElement.click();\r\n    };\r\n}\r\nconst NavWrapper = (props: { screen: string }) => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const navigator = new ScreenNavigator(props.screen, state);\r\n    const assignState = (result: XY) => {\r\n        if (state.focus == \"screen\") {\r\n            setState({ ...state, screen: result });\r\n        }\r\n        if (state.focus == \"menu\") {\r\n            throw \"Invalid navigation action\";\r\n        }\r\n    };\r\n    const closeScreen = () => setState({ ...state, focus: \"menu\", screeen: \"\", mainMenu: state.mainMenu, menu: { ...state.menu } });\r\n    const onCancel = () => {\r\n        closeScreen();\r\n    };\r\n    const onUp = () => {\r\n        assignState(navigator.moveUp(state.screen.x, state.screen.y));\r\n    };\r\n    const onDown = () => {\r\n        assignState(navigator.moveDown(state.screen.x, state.screen.y));\r\n    };\r\n\r\n    const onLeft = () => {\r\n        assignState(navigator.moveLeft(state.screen.x, state.screen.y));\r\n    };\r\n\r\n    const onRight = () => {\r\n        assignState(navigator.moveRight(state.screen.x, state.screen.y));\r\n    };\r\n\r\n    const onAction = () => {\r\n        navigator.action(state.screen);\r\n    };\r\n\r\n    return state.focus == \"screen\" ? (\r\n        <>\r\n            <Keyboard onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} onCancel={onCancel} />\r\n            <GamePad onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} onCancel={onCancel} />\r\n        </>\r\n    ) : null;\r\n};\r\nexport const getScreenStartPos = (screen: string, state: StartScreenState) => {\r\n    switch (screen) {\r\n        case \"rating\":\r\n            return getRatingNav(state);\r\n        case \"difficulty\":\r\n            return getDifficultyNav(state);\r\n        case \"settings\":\r\n            return getSettingNav(state);\r\n        default:\r\n            return { x: 0, y: 0 };\r\n    }\r\n};\r\nconst Screen = (props: { screen: string }) => {\r\n    const getScreen = () => {\r\n        switch (props.screen) {\r\n            case \"rating\":\r\n                return (\r\n                    <>\r\n                        <Rating />\r\n                    </>\r\n                );\r\n            case \"difficulty\":\r\n                return (\r\n                    <>\r\n                        <Difficulty />\r\n                    </>\r\n                );\r\n            case \"settings\":\r\n                return (\r\n                    <>\r\n                        <QuickStart />\r\n                    </>\r\n                );\r\n            case \"controls0\":\r\n                return (\r\n                    <>\r\n                        <Controls player={0} />\r\n                    </>\r\n                );\r\n            case \"controls1\":\r\n                return (\r\n                    <>\r\n                        <Controls player={1} />\r\n                    </>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return props.screen ? (\r\n        <div className=\"startscreen-layout\">\r\n            <div className=\"startscreen-jail\">{getScreen()}</div>\r\n            <NavWrapper screen={props.screen} />\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default Screen;\r\n","const TouchDetector = ()  => {\r\n    try {\r\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n        const mq = (query) => window.matchMedia(query).matches;\r\n\r\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n            return true;\r\n        }\r\n\r\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n    } catch (e) {\r\n        console.error(\"(Touch detect failed)\", e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default TouchDetector;","import React from \"react\";\r\n\r\nconst VerticalMenu = (props) => {\r\n    return (\r\n        <div className=\"ui menu\">\r\n            <div className=\"startscreen-jail\">\r\n                <div className=\"innermenu\">{props.children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default VerticalMenu;\r\n","import GameModes, { GameMode } from \"../../GameModes\";\r\nimport { MenuActionButton, MenuLeafButton, MenuRootButton, MenuSectionButton, XY } from \"./Tree\";\r\n\r\nimport DifficultyOptions from \"./DifficultyOptions\";\r\nimport GamePad from \"../../Game/GamePad\";\r\nimport Keyboard from \"../../Game/Keyboard\";\r\nimport MenuButton from \"../Menu/MenuButton\";\r\nimport MenuTitle from \"../Menu/MenuTitle\";\r\nimport { Provider } from \"./Context\";\r\nimport RatingPresets from \"./RatingOptions\";\r\nimport React from \"react\";\r\nimport Screen, { getScreenStartPos } from \"./Screen\";\r\nimport { StartScreenState } from \"../../../Common\";\r\nimport TouchDetector from \"./TouchDetector\";\r\nimport VerticalMenu from \"../Menu/VerticalMenu\";\r\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\r\n\r\nexport class StartMenuPageButton extends MenuActionButton {\r\n    constructor(id: string, icon: string, title: string, screen: string, onClick: (pos: XY) => void, onfocus: (pos: XY) => void) {\r\n        super(id, icon, title, id == screen, onClick);\r\n        this.active = id == screen;\r\n        this.onClick = onClick;\r\n        this.onFocus = onfocus;\r\n    }\r\n}\r\n\r\nexport class MenuStartButton extends MenuLeafButton {\r\n    constructor(title: string, icon: string, start: () => void, onFocus: (pos: XY) => void) {\r\n        super(\"start\", icon, title, start);\r\n        this.onFocus = onFocus;\r\n    }\r\n}\r\n\r\nconst StartMenu = (props: { start: (settings: any) => void }) => {\r\n    const start = (gameMode: GameMode) => {\r\n        const settings = {\r\n            ...DifficultyOptions[state.difficultySettings].settings,\r\n            ...state.ratingSettings,\r\n            ...state.entropySettings,\r\n            quickDeal: state.quickDeal,\r\n            gameMode: gameMode,\r\n            initialized: true,\r\n            suggestionMode: state.ratingSettings.hintPenalty ? SuggestionModes.NONE : state.suggestionMode,\r\n        };\r\n        props.start(settings);\r\n    };\r\n    const [state, setState] = React.useState<StartScreenState>({\r\n        ratingSettings: { ...RatingPresets.all[1].settings },\r\n        difficultySettings: 1,\r\n        ratingPreset: 1,\r\n        quickDeal: TouchDetector(),\r\n        entropySettings: {\r\n            baseEntropy: TouchDetector() ? 1 : 2,\r\n            interactionEntropy: TouchDetector() ? 1 : 2,\r\n        },\r\n        menu: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        screen: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        focus: \"menu\",\r\n        screeen: \"\",\r\n        mainMenu: \"\",\r\n        suggestionMode: SuggestionModes.REGULAR,\r\n    });\r\n\r\n    interface Subscriber {\r\n        id: number;\r\n        click: (pos: XY) => {};\r\n    }\r\n\r\n    const [subscriber, setSubscriber] = React.useState<Subscriber[]>([]);\r\n    const subscribe = (s: Subscriber) => {\r\n        subscriber[s.id] = s;\r\n        setSubscriber(subscriber);\r\n    };\r\n\r\n    const [buttons, setButtons] = React.useState(new MenuRootButton([]));\r\n\r\n    const getNavigator = () => buttons;\r\n\r\n    const assignState = (result: XY) => {\r\n        if (state.focus == \"menu\") {\r\n            setState({ ...state, menu: result });\r\n        }\r\n        if (state.focus == \"screen\") {\r\n            throw \"Invalid navigation action\";\r\n        }\r\n    };\r\n\r\n    const getPos = () => (state.focus == \"menu\" ? state.menu : state.screen);\r\n\r\n    const onUp = () => {\r\n        assignState(getNavigator().moveUp(getPos().x, getPos().y));\r\n    };\r\n    const onDown = () => {\r\n        assignState(getNavigator().moveDown(getPos().x, getPos().y));\r\n    };\r\n\r\n    const onLeft = () => {\r\n        assignState(getNavigator().moveLeft(getPos().x, getPos().y));\r\n    };\r\n\r\n    const onRight = () => {\r\n        assignState(getNavigator().moveRight(getPos().x, getPos().y));\r\n    };\r\n\r\n    const onAction = () => {\r\n        getNavigator().action(getPos());\r\n    };\r\n\r\n    const switchToScreen = (s: string, pos: XY) => {\r\n        setState({ ...state, focus: \"screen\", screeen: s, screen: getScreenStartPos(s, state), menu: { ...pos } });\r\n    };\r\n    const switchToMenu = (menu: string, pos: XY) => {\r\n        setState({ ...state, focus: \"menu\", screeen: \"\", mainMenu: menu, menu: { ...pos } });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const toggleScreen = (s: string, pos: XY) => {\r\n            if (state.screeen !== s) {\r\n                switchToScreen(s, pos);\r\n            } else {\r\n                switchToMenu(state.mainMenu, pos);\r\n            }\r\n        };\r\n\r\n        const toggleMainMenu = (val: string, pos: XY) => {\r\n            if (state.mainMenu !== val) {\r\n                switchToMenu(val, pos);\r\n            } else {\r\n                switchToMenu(\"\", pos);\r\n            }\r\n        };\r\n\r\n        const onfocus = (pos: XY) => {\r\n            setState({ ...state, menu: pos });\r\n        };\r\n\r\n        setButtons(\r\n            new MenuRootButton([\r\n                new MenuStartButton(\"Single Player\", \"🎲\", () => start(GameModes.CUSTOM), onfocus),\r\n\r\n                new MenuSectionButton(\r\n                    \"versus\",\r\n                    \"🏆\",\r\n                    \"Versus\",\r\n                    (pos: XY) => toggleMainMenu(\"versus\", pos),\r\n                    onfocus,\r\n                    state.mainMenu == \"versus\",\r\n                    [\r\n                        new StartMenuPageButton(\r\n                            \"controls0\",\r\n                            \"🎮\",\r\n                            \"Player 1\",\r\n                            state.screeen,\r\n                            (pos: XY) => toggleScreen(\"controls0\", pos),\r\n                            onfocus\r\n                        ),\r\n                        new StartMenuPageButton(\r\n                            \"controls1\",\r\n                            \"🎮\",\r\n                            \"Player 2\",\r\n                            state.screeen,\r\n                            (pos: XY) => toggleScreen(\"controls1\", pos),\r\n                            onfocus\r\n                        ),\r\n                        new MenuStartButton(\"Start\", \"🎲\", () => start(GameModes.VERSUS), onfocus),\r\n                    ]\r\n                ),\r\n\r\n                new MenuSectionButton(\r\n                    \"custom\",\r\n                    \"⚙️\",\r\n                    \"Options\",\r\n                    (pos: XY) => toggleMainMenu(\"custom\", pos),\r\n                    onfocus,\r\n                    state.mainMenu == \"custom\",\r\n                    [\r\n                        new StartMenuPageButton(\r\n                            \"difficulty\",\r\n                            \"💪\",\r\n                            \"Difficulty\",\r\n                            state.screeen,\r\n                            (pos: XY) => toggleScreen(\"difficulty\", pos),\r\n                            onfocus\r\n                        ),\r\n                        new StartMenuPageButton(\"rating\", \"🎲\", \"Rating\", state.screeen, (pos: XY) => toggleScreen(\"rating\", pos), onfocus),\r\n                        new StartMenuPageButton(\r\n                            \"settings\",\r\n                            \"🔧\",\r\n                            \"Device\",\r\n                            state.screeen,\r\n                            (pos: XY) => toggleScreen(\"settings\", pos),\r\n                            onfocus\r\n                        ),\r\n                    ]\r\n                ),\r\n            ])\r\n        );\r\n    }, [state, state.menu.x, state.menu.y, state.screeen, state.mainMenu]);\r\n\r\n    const ButtonRenderer = (props: any) => {\r\n        const c = props.button;\r\n        return (\r\n            <div>\r\n                {!c.isRoot && (\r\n                    <MenuButton\r\n                        subscribe={subscribe}\r\n                        x={props.x}\r\n                        y={props.y}\r\n                        active={c.active}\r\n                        onClick={c.onClick}\r\n                        onFocus={c.onFocus}\r\n                        icon={c.icon}\r\n                        title={c.title}\r\n                        toggled={c.toggled}\r\n                        blink={c.blink}\r\n                        menuX={state.menu.x}\r\n                        menuY={state.menu.y}\r\n                        menuFocus={state.focus}\r\n                    ></MenuButton>\r\n                )}\r\n                {c.isRoot &&\r\n                    c.children.map((child: any, index: number) => (\r\n                        <ButtonRenderer x={index} y={0} key={(props.x + 1) * 100 + index} button={child} />\r\n                    ))}\r\n                {c.toggled &&\r\n                    c.children.map((child: any, index: number) => (\r\n                        <ButtonRenderer key={(props.x + 1) * 100 + index} x={props.x} y={index + 1} button={child} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Provider value={{ state, setState }}>\r\n            <VerticalMenu>\r\n                <MenuTitle label=\"Solitaire\" />\r\n                <ButtonRenderer button={buttons} x={0} y={0} menuX={state.menu.x} />\r\n            </VerticalMenu>\r\n            <Screen screen={state.screeen} />\r\n            {state.focus == \"menu\" && <Keyboard onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} />}\r\n            {state.focus == \"menu\" && <GamePad onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} />}\r\n        </Provider>\r\n    );\r\n};\r\nexport default StartMenu;\r\n","import \"./View/Style/App.css\";\r\nimport \"./View/Style/UI.css\";\r\n\r\nimport { AppState } from \"./Common\";\r\nimport BoardWrap from \"./View/Game/BoardWrap\";\r\nimport Deck from \"./Model/Deck/Deck\";\r\nimport GameModes from \"./View/GameModes\";\r\nimport { PauseProvider } from \"./View/PauseContext\";\r\nimport React from \"react\";\r\nimport StartMenu from \"./View/UI/StartScreen/StartMenu\";\r\n\r\nconst App = () => {\r\n    const [started, setStarted] = React.useState<number>(0);\r\n    const defaultState = { gameMode: GameModes.CUSTOM, inputMode: \"mouse\", initialized: false };\r\n    const [appState, setAppState] = React.useState<AppState>(defaultState);\r\n\r\n    const restart = () => {\r\n        setAppState(defaultState);\r\n    };\r\n\r\n    const deck = new Deck().shuffle();\r\n    const start = (settings: any) => {\r\n        //@todo explicit typing of startup settings\r\n        deck.shuffle();\r\n        const startSettings = {\r\n            ...appState,\r\n            ...settings,\r\n        };\r\n        setAppState(startSettings);\r\n        setStarted(Date.now());\r\n    };\r\n\r\n    if (appState.initialized) {\r\n        let board = null;\r\n        if (appState.gameMode.boardMode == \"singleplayer\") {\r\n            board = (\r\n                <div className=\"game-layout-container singleplayer\">\r\n                    <BoardWrap player=\"1\" settings={appState} restart={restart} deck={deck} />\r\n                </div>\r\n            );\r\n        }\r\n        if (appState.gameMode.boardMode == \"splitscreen\") {\r\n            board = (\r\n                <div className=\"game-layout-container splitscreen\">\r\n                    <BoardWrap player=\"1\" settings={{ ...appState, inputMode: \"gamepad\" }} restart={restart} deck={deck.copy()} />\r\n                    <BoardWrap player=\"2\" settings={{ ...appState, inputMode: \"keyboard\" }} restart={restart} deck={deck.copy()} />\r\n                </div>\r\n            );\r\n        }\r\n        return <PauseProvider started={started}>{board}</PauseProvider>;\r\n    }\r\n\r\n    return <StartMenu start={start} />;\r\n};\r\nexport default App;\r\n\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}