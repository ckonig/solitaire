{"version":3,"sources":["View/Clock.js","View/Footer.js","View/BlinkingComponent.js","View/Card.js","View/StackBase.js","View/TouchAwareComponent.js","View/TouchHand.js","View/Foundation.js","Model/Deck/CardRange.js","Model/Deck/Deck.js","Model/Deck/CardTools.js","Model/Game/MultiStackHolder.js","Model/Game/Foundation.js","Model/Game/FoundationStack.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/StackHolder.js","Model/Game/Stock.js","Model/Deck/Suits.js","Model/Game/Tableau.js","Model/Game/Waste.js","Model/Factory.js","Service/BaseService.js","Service/Foundation.js","Service/Stock.js","Service/TableauStack.js","Service/Waste.js","Service/Game.js","View/MouseHand.js","View/Stock.js","View/TableauStack.js","View/Waste.js","App.js","index.js"],"names":["Clock","props","state","timeElapsed","setInterval","setState","msec","end","Date","now","started","hh","Math","floor","mm","ss","className","this","Component","Footer","model","points","isEnded","onClick","reset","href","BlinkingComponent","blinkFor","unblink","Card","type","icon","isSelected","blink","style","zIndex","offsetTop","top","isHidden","face","StackBase","classname","children","TouchAwareComponent","isTouch","is_touch_device","prefixes","split","window","DocumentTouch","document","query","join","matchMedia","matches","e","console","error","source","hand","isHoldingCard","TouchHand","parent","stack","map","card","index","offset","c","Foundation","canUncover","length","CardRange","Deck","cards","shuffleArray","array","i","j","random","CardTools","otherCard","filter","value","cardNotEquals","stacks","filterNotEqual","MultiStackHolder","filterOut","getCurrentAccepted","currentFoundation","acceptedCards","accepts","currentAccepted","contains","indexOf","add","push","usedCards","pop","remove","getPreviousUsed","countCards","f","parseInt","reduce","a","b","FoundationStack","color","slice","reverse","Game","moves","currentMove","target","rateMove","debug","move","sourceIsTableau","substr","targetIsTableau","sourceIsFoundation","targetIsFoundation","Hand","isHoldingKing","currentCard","isCurrentCard","hasMoreThanOneCard","containsCurrentCard","isFromCurrentSource","StackHolder","Stock","waste","element","cardEquals","getTop","Suits","heart","diamond","club","spade","Tableau","current","range","splice","concat","Waste","canAdd","ret","Factory","getInitialState","deck","stock","foundation","generateFoundations","tableau","generateTableau","game","keys","Object","suit","key","TableauGenerator","getStacks","pointer","oldpointer","ids","id","getStack","forEach","generateStack","getRndInteger","min","max","template","Service","stateholder","dispatchPutDown","_setState","_dispatchPutDown","dispatchPickup","_dispatchPickup","_blink","selector","startBlink","setTimeout","toggleBlink","_card","registerMove","putDown","tryDetectEnd","pickUp","s","moveToWaste","recycleWaste","isOnTop","recycle","registerRecycle","TableauStack","canPutDown","tryUncover","popWithFollowing","uncover","registerUncover","tryPutDown","popTop","factory","generateDeck","shuffle","services","tableauStack","handler","clickTableauStack","clickFoundation","clickStock","clickWaste","MouseHand","myRef","React","createRef","node","addEventListener","x","clientX","y","clientY","left","position","ref","getOffset","App","handlers","getHandlers","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.acfa5832.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeElapsed: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            this.setState((state) => {\r\n                //@todo padleft or string format : 00:01\r\n                let msec = (this.props.end || Date.now()) - this.props.started;\r\n                const hh = Math.floor(msec / 1000 / 60 / 60);\r\n                msec -= hh * 1000 * 60 * 60;\r\n                const mm = Math.floor(msec / 1000 / 60);\r\n                msec -= mm * 1000 * 60;\r\n                const ss = Math.floor(msec / 1000);\r\n                msec -= ss * 1000;\r\n                state.timeElapsed = hh ? hh + \":\" + mm + \":\" + ss : mm + \":\" + ss;\r\n                return { ...state };\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return <span className={this.props.className}>Time Elapsed: {this.state.timeElapsed}</span>;\r\n    }\r\n}\r\n","import Clock from \"./Clock\";\r\nimport React from \"react\";\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-grid-container\">\r\n                <span>Points: {props.model.points}</span>\r\n                <Clock className=\"clock\" started={props.model.started} end={props.model.end} />\r\n                <span>Is Ended: {props.model.isEnded ? \"Y\" : \"N\"}</span>\r\n                <button onClick={props.reset}>reset</button>\r\n                <span className=\"report\">\r\n                    Report Issues <a href=\"https://github.com/ckonig/solitaire/issues\">here</a>.\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Component } from \"react\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    componentDidUpdate() {\r\n        if (this.props.model.blinkFor) {\r\n            this.props.model.unblink();\r\n        }\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default function Card(props) {\r\n    const model = props.model;\r\n    let className = \"card card-base suit-\" + model.type.icon;\r\n    className += props.isSelected ? \" card-selected\" : \"\";\r\n    className += props.blink ? \" blink\" : \"\";\r\n    const style = {\r\n        zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n        top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n    };\r\n    //@todo props contains canUncover this should be part of the model. Until then we mix both into fake card object.\r\n    return (\r\n        <div className=\"stack-base\">\r\n            <div style={style} className={className} onClick={() => props.onClick({ ...props, ...model })}> \r\n                {model.isHidden ? (\r\n                    <div className=\"card-back quarot\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function StackBase(props) {\r\n    let classname = \"card-base socket-empty\";\r\n    if (props.blink) {\r\n        classname += \" blink\";\r\n    }\r\n    return (\r\n        <div className={classname} onClick={() => props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n","import { Component } from \"react\";\r\n\r\nexport default class TouchAwareComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isTouch = this.is_touch_device();\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = function (query) {\r\n                return window.matchMedia(query).matches;\r\n            };\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    shouldShowHand(source) {\r\n        return this.isTouch && this.props.hand.isHoldingCard() && this.props.hand.source === source;\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport TouchAwareComponent from \"./TouchAwareComponent\";\r\n\r\nexport default class TouchHand extends TouchAwareComponent {\r\n    render() {\r\n        if (!this.isTouch || !this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card\r\n                            model={card}\r\n                            key={\"h2\" + index}\r\n                            offsetTop={this.props.offset + index * 20}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                            onClick={(c) => this.props.onClick(c)}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick()}>\r\n                    <div className={\"align-center foundation-base suit-\" + props.model.icon}>{props.model.icon}</div>\r\n                </StackBase>\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={\"fc\" + index}\r\n                        blink={props.model.blinkFor}\r\n                        canUncover={index == props.model.stack.length - 1}\r\n                        onClick={(c) => props.onClick(c)}\r\n                    />\r\n                ))}\r\n                <TouchHand\r\n                    parent={\"foundation-\" + props.index}\r\n                    hand={props.hand}\r\n                    onClick={() => props.onClick(props.model.stack[props.model.stack.length - 1])}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const CardRange = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getTargetOrder = () => {\r\n    return [\"A\", ...CardRange.slice(0, CardRange.length - 1)].reverse();\r\n};\r\n","export default class Deck {\r\n    constructor(cards) {\r\n        this.cards = cards;\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","class CardTool {\r\n    cardEquals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    cardNotEquals(card, otherCard) {\r\n        return otherCard.face !== card.face || otherCard.type.icon !== card.type.icon;\r\n    }\r\n\r\n    filterNotEqual(stack, card) {\r\n        return stack.filter((value) => {\r\n            return CardTools.cardNotEquals(value, card);\r\n        });\r\n    }\r\n\r\n    filterOut(stacks, card) {\r\n        for (let i = 0; i < stacks.length; i++) {\r\n            stacks[i].stack = CardTools.filterNotEqual(stacks[i].stack, card);\r\n        }\r\n\r\n        return stacks;\r\n    }\r\n}\r\n\r\nconst CardTools = new CardTool();\r\nexport default CardTools;\r\n","export default class MultiStackHolder {\r\n    constructor(stacks) {\r\n        this.stacks = stacks;\r\n    }\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n}","import CardTools from \"../Deck/CardTools\";\r\nimport MultiStackHolder from \"./MultiStackHolder\";\r\n\r\nexport default class Foundation extends MultiStackHolder {\r\n    filterOut = (card) => {\r\n        this.stacks = CardTools.filterOut(this.stacks, card);\r\n    };\r\n\r\n    getCurrentAccepted = (index) => {\r\n         const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    contains = (index, card) => {\r\n        return this.stacks[index].stack.indexOf(card) !== -1;\r\n    };\r\n\r\n    add = (index, card) => {\r\n        card.source = \"foundation-\" + index;\r\n        this.stacks[index].stack.push(card);\r\n        this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.filterOut(card);\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n    };\r\n\r\n    getPreviousUsed = (index) => {\r\n        return [...this.stacks[index].usedCards].pop();\r\n    };\r\n\r\n    countCards = () => {\r\n        this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n    }\r\n}\r\n","import { getTargetOrder } from \"../Deck/CardRange\";\r\n\r\nexport default class FoundationStack {\r\n    constructor(icon, color) {\r\n        this.stack = [];\r\n        this.acceptedCards = [...getTargetOrder()];\r\n        this.usedCards = [];\r\n        this.icon = icon;\r\n        this.color = color;\r\n    }\r\n}\r\n","export default class Game {\r\n    constructor() {\r\n        this.moves = [];\r\n        this.currentMove = null;\r\n        this.points = 0;\r\n        this.started = Date.now();\r\n    }\r\n\r\n    registerMove(target, card) {\r\n        const currentMove = {\r\n            source: card.source,\r\n            card: card,\r\n            target: target,\r\n        };\r\n\r\n        this.points += this.rateMove(currentMove);\r\n        this.moves.push({ ...currentMove });\r\n        return true;\r\n    }\r\n\r\n    registerRecycle() {\r\n        this.moves.push({ source: \"waste\", target: \"stock\", card: null });\r\n        this.points -= 100;\r\n        if (this.points < 0) {\r\n            this.points = 0;\r\n        }\r\n        console.debug(\"RATING: subtract 100 points for RECYCLE\");\r\n    }\r\n\r\n    registerUncover(card) {\r\n        this.moves.push({ source: null, target: null, card: card });\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n    }\r\n\r\n    rateMove(move) {\r\n        const sourceIsTableau = move.source.substr(0, 7) == \"tableau\";\r\n        const targetIsTableau = move.target.substr(0, 7) == \"tableau\";\r\n        const sourceIsFoundation = move.source.substr(0, 10) == \"foundation\";\r\n        const targetIsFoundation = move.target.substr(0, 10) == \"foundation\";\r\n        if (sourceIsTableau) {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (sourceIsFoundation) {\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n        console.debug(\"tried to rate move\", move);\r\n\r\n        return 0;\r\n    }\r\n}\r\n","export default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n    }\r\n\r\n    pickUp(stack, source) {\r\n        if (stack) {\r\n            this.stack = stack;\r\n            this.source = source;\r\n        }\r\n\r\n        return stack;\r\n    }\r\n\r\n    putDown() {\r\n        const cards = [...this.stack];\r\n        this.stack = [];\r\n        this.source = null;\r\n        return cards;\r\n    }\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    isHoldingKing = () => this.currentCard() && this.currentCard().face == \"K\";\r\n\r\n    isCurrentCard = (card) => card && this.currentCard() == card;\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    containsCurrentCard = (stack) => stack && stack.indexOf(this.currentCard()) !== -1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n}\r\n","export default class StackHolder {\r\n    constructor(stack) {\r\n        this.stack = [...stack];\r\n    }\r\n\r\n    getTop() {\r\n        return this.stack[this.stack.length - 1];\r\n    }\r\n}","import CardTools from \"../Deck/CardTools\";\r\nimport StackHolder from \"./StackHolder\";\r\n\r\nexport default class Stock extends StackHolder {\r\n    recycle(waste) {\r\n        if (waste.length) {\r\n            this.stack = [...waste].reverse().map((element) => {\r\n                return { ...element, isHidden: true };\r\n            });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isOnTop(card) {\r\n        return CardTools.cardEquals(card, this.getTop());\r\n    }\r\n}\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import { CardRange } from \"../Deck/CardRange\";\r\nimport CardTools from \"../Deck/CardTools\";\r\nimport MultiStackHolder from \"./MultiStackHolder\";\r\n\r\nexport default class Tableau extends MultiStackHolder {\r\n    getStack(index) {\r\n        return this.stacks[index];\r\n    }\r\n\r\n    accepts(index, current) {\r\n        const top = this.getTop(index);\r\n        const range = [...CardRange];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color != top.type.color;\r\n    }\r\n\r\n    popWithFollowing(card, i) {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && CardTools.cardEquals(this.stacks[i].stack[j], card)) {\r\n                return this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    uncover(index) {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden) {\r\n            top.isHidden = false;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    add(index, cards) {\r\n        const mapper = (c) => {\r\n            c.source = \"tableau-\" + index;\r\n            return c;\r\n        };\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map(mapper));\r\n    }\r\n}\r\n","import CardTools from \"../Deck/CardTools\";\r\nimport StackHolder from \"./StackHolder\";\r\n\r\nexport default class Waste extends StackHolder {\r\n    constructor() {\r\n        super([]);\r\n    }\r\n\r\n    tryPutDown(card) {\r\n        return this.canAdd(card) && (this.add(card) || true);\r\n    }\r\n\r\n    add(card) {\r\n        if (card) {\r\n            card.source = \"waste\";\r\n            card.isHidden = false;\r\n            this.stack.push(card);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    canAdd(card) {\r\n        const top = this.getTop();\r\n        return card && (!top || CardTools.cardNotEquals(card, top));\r\n    }\r\n\r\n    popTop(card) {\r\n        if (CardTools.cardEquals(card, this.getTop())) {\r\n            return this.stack.pop();\r\n        }\r\n    }\r\n\r\n    recycle() {\r\n        const ret = [...this.stack];\r\n        this.stack = [];\r\n        return ret;\r\n    }\r\n}\r\n","import { CardRange } from \"./Deck/CardRange\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport Foundation from \"./Game/Foundation\";\r\nimport FoundationStack from \"./Game/FoundationStack\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Suits from \"./Deck/Suits\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Factory {\r\n    getInitialState = (deck) => ({\r\n        stock: new Stock([...deck.cards.slice(28)]),\r\n        waste: new Waste(),\r\n        foundation: this.generateFoundations(),\r\n        tableau: this.generateTableau([...deck.cards.slice(0, 28)]),\r\n        hand: new Hand(),\r\n        game: new Game(),\r\n    });\r\n\r\n    generateDeck() {\r\n        const deck = [];\r\n        const keys = Object.keys(Suits);\r\n        for (let i = 0; i < CardRange.length; i++) {\r\n            for (let j = 0; j < keys.length; j++) {\r\n                const suit = Suits[keys[j]];\r\n                deck.push({\r\n                    face: CardRange[i],\r\n                    type: suit,\r\n                    isHidden: true,\r\n                });\r\n            }\r\n        }\r\n        return new Deck(deck);\r\n    }\r\n\r\n    generateFoundations() {\r\n        return new Foundation(\r\n            Object.keys(Suits)\r\n                .map((key) => Suits[key])\r\n                .map((suit) => new FoundationStack(suit.icon, suit.color))\r\n        );\r\n    }\r\n\r\n    generateTableau(cards) {\r\n        return new Tableau(new TableauGenerator().getStacks(cards));\r\n    }\r\n}\r\n\r\nclass TableauGenerator {\r\n    getStacks = (deck) => {\r\n        this.deck = deck;\r\n        this.pointer = 0;\r\n        this.oldpointer = this.pointer;\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => this.getStack(id));\r\n        ids.reverse().forEach((id) => {\r\n            this.generateStack(id);\r\n        });\r\n        return this.stacks;\r\n    };\r\n\r\n    generateStack = (id) => {\r\n        this.pointer += 6 - id + 1;\r\n        this.stacks[id].stack = this.deck\r\n            .slice(this.oldpointer, this.pointer)\r\n            .map((c) => {\r\n                c.isHidden = true;\r\n                c.source = \"tableau-\" + id;\r\n                return c;\r\n            })\r\n            .reverse();\r\n        if (this.stacks[id].stack[this.stacks[id].stack.length - 1]) {\r\n            this.stacks[id].stack[this.stacks[id].stack.length - 1].isHidden = false;\r\n        }\r\n        this.oldpointer = this.pointer;\r\n    };\r\n\r\n    getRndInteger = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    };\r\n\r\n    getStack = (id) => {\r\n        const template = { stack: [], id };\r\n        //@todo add functionality\r\n        return { ...template };\r\n    };\r\n}\r\n","export default class Service {\r\n    constructor(stateholder) {\r\n        this._setState = (a, b) =>\r\n            stateholder.setState((state) => {\r\n                a(state);\r\n                return { ...state };\r\n            }, b);\r\n    }\r\n\r\n    dispatchPutDown = (card, index) => {\r\n        this._setState((state) => {\r\n            if (state.hand.isHoldingCard()) {\r\n                this._dispatchPutDown(card, state, index);\r\n            } else {\r\n                console.debug(\"partially avoided double execution putdown (thx 2 strict mode)\");\r\n            }\r\n        });\r\n    };\r\n\r\n    dispatchPickup = (card, index) => {\r\n        this._setState((state) => {\r\n            if (!state.hand.isHoldingCard()) {\r\n                this._dispatchPickup(card, state, index);\r\n            } else {\r\n                console.debug(\"partially avoided double execution pickup (thx 2 strict mode)\");\r\n            }\r\n        });\r\n    };\r\n\r\n    _blink = (selector, state) => this.startBlink(selector, 10, state);\r\n\r\n    startBlink = (selector, blinkFor, state) => {\r\n        selector(state).blinkFor = blinkFor;\r\n        selector(state).unblink = () => setTimeout(() => this.toggleBlink(selector, 0), 100);\r\n    };\r\n    \r\n    toggleBlink = (selector, blinkFor) =>\r\n        this._setState((state) => {\r\n            selector(state).blinkFor = blinkFor;\r\n        });\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Foundation extends Service {\r\n    _dispatchPutDown = (_card, state, index) => {\r\n        if (!state.hand.hasMoreThanOneCard() && state.foundation.accepts(index, state.hand.currentCard())) {\r\n            state.game.registerMove(\"foundation-\" + index, state.hand.currentCard());\r\n            state.foundation.add(index, state.hand.currentCard());\r\n            state.hand.putDown();\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (_card, state, index) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.foundation.remove(index, card);\r\n            state.hand.pickUp([card], card.source);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryDetectEnd(state) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n\r\n    blink = (index, state) => this._blink((s) => s.foundation.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Stock extends Service {\r\n    _dispatchPutDown = (card, state) => this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, state) => (card ? this.moveToWaste(card, state) : this.recycleWaste(card, state));\r\n\r\n    moveToWaste = (card, state) =>\r\n        state.stock.isOnTop(card) && state.waste.add(state.stock.stack.pop()) && state.game.registerMove(\"stock\", state.waste.getTop());\r\n\r\n    recycleWaste = (_card, state) =>\r\n        !state.stock.getTop() && !!state.waste.getTop() && state.stock.recycle(state.waste.recycle()) && state.game.registerRecycle(state);\r\n\r\n    blink = (_card, state) => this._blink((s) => s.stock, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class TableauStack extends Service {\r\n    _dispatchPutDown = (card, state, index) => {\r\n        if (this.canPutDown(card, state, index)) {\r\n            state.game.registerMove(\"tableau-\" + index, state.hand.currentCard());\r\n            state.tableau.add(index, state.hand.putDown());\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    canPutDown = (card, state, index) =>\r\n        !state.hand.containsCurrentCard(state.tableau.stacks[index].stack) &&\r\n        ((card && state.hand.isFromCurrentSource(card) && card.isHidden) ||\r\n            (card && state.tableau.accepts(index, state.hand.currentCard())) ||\r\n            (!card && (state.hand.isHoldingKing() || state.hand.source == \"tableau-\" + index)));\r\n\r\n    _dispatchPickup = (card, state, index) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source);\r\n        } else if (!card) {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card, index, state) => {\r\n        if (!state.hand.isHoldingCard() && card.isHidden && card.canUncover) {\r\n            state.tableau.uncover(index, card) && state.game.registerUncover(card, state);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    blink = (index, state) => this._blink((s) => s.tableau.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Waste extends Service {\r\n    _dispatchPutDown = (card, state) =>\r\n        (state.hand.source == \"waste\" &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.game.registerMove(\"waste\", state.hand.currentCard()) &&\r\n            state.hand.putDown()) ||\r\n        this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, state) => (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\")) || this.blink(card, state);\r\n\r\n    blink = (card, state) => this._blink((s) => s.waste, state);\r\n}\r\n","import Factory from \"../Model/Factory\";\r\nimport Foundation from \"./Foundation\";\r\nimport Stock from \"./Stock\";\r\nimport TableauStack from \"./TableauStack\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Game {\r\n    constructor(stateholder) {\r\n        this.stateholder = stateholder;\r\n        this.factory = new Factory();\r\n        this.deck = this.factory.generateDeck();\r\n        this.deck.shuffle();\r\n        this.services = {\r\n            tableauStack: new TableauStack(stateholder),\r\n            foundation: new Foundation(stateholder),\r\n            stock: new Stock(stateholder),\r\n            waste: new Waste(stateholder),\r\n        };\r\n    }\r\n\r\n    getInitialState = () => this.factory.getInitialState(this.deck);\r\n\r\n    getHandlers() {\r\n        let handler = \"dispatchPickup\";\r\n        if (this.stateholder.state && this.stateholder.state.hand && this.stateholder.state.hand.isHoldingCard()) {\r\n            handler = \"dispatchPutDown\";\r\n        }\r\n        return {\r\n            clickTableauStack: this.services.tableauStack[handler],\r\n            clickFoundation: this.services.foundation[handler],\r\n            clickStock: this.services.stock[handler],\r\n            clickWaste: this.services.waste[handler],\r\n        };\r\n    }\r\n\r\n    reset = () => {\r\n        this.stateholder.setState(() => ({ ...this.getInitialState() }));\r\n    };\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport TouchAwareComponent from \"./TouchAwareComponent\";\r\n\r\nexport default class MouseHand extends TouchAwareComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.isTouch) {\r\n            const node = this.myRef.current;\r\n            document.addEventListener(\"mousemove\", (e) => {\r\n                const x = e.clientX,\r\n                    y = e.clientY;\r\n                node.style.top = y + 25 +\"px\";\r\n                node.style.left = x + 25 +\"px\";\r\n                node.style.position = \"relative\";\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.isTouch ? null : (\r\n            <div ref={this.myRef}>\r\n                {this.props.stack &&\r\n                    this.props.stack.map((card, index) => (\r\n                        <Card\r\n                            model={card}\r\n                            key={\"H\" + index}\r\n                            onClick={() => {\r\n                                console.error(\"clicked card in mouse hand\");\r\n                            }}\r\n                            offsetTop={index * 20}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={\"sc\" + index}\r\n                        type={card.type}\r\n                        face={card.face}\r\n                        blink={props.model.blinkFor}\r\n                        source=\"main\"\r\n                        isHidden={card.isHidden}\r\n                        canUncover={index == props.model.stack.length - 1}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class TableauStack extends BlinkingComponent {\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            let i = 0;\r\n            while (i <= index) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n                i++;\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick(null, \"tableau-\" + props.index)} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={\"tsc\" + index}\r\n                        blink={props.model.blinkFor}\r\n                        offsetTop={getOffset(index)}\r\n                        canUncover={index == props.model.stack.length - 1}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n                <TouchHand\r\n                    parent={\"tableau-\" + props.index}\r\n                    hand={props.hand}\r\n                    offset={getOffset(props.model.stack.length)}\r\n                    onClick={() => props.onClick(props.model.stack[props.model.stack.length - 1])}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={\"wc\" + index}\r\n                        blink={props.model.blinkFor}\r\n                        canUncover={index == props.model.stack.length - 1}\r\n                        onClick={(c) => props.onClick(c)}\r\n                    />\r\n                ))}\r\n                <TouchHand parent=\"waste\" hand={props.hand} onClick={(c) => props.onClick(c, \"waste\")} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport { Component } from \"react\";\r\nimport Footer from \"./View/Footer\";\r\nimport Foundation from \"./View/Foundation\";\r\nimport Game from \"./Service/Game\";\r\nimport Hand from \"./View/MouseHand\";\r\nimport React from \"react\";\r\nimport Stock from \"./View/Stock\";\r\nimport TableauStack from \"./View/TableauStack\";\r\nimport Waste from \"./View/Waste\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.game = new Game(this);\r\n        this.state = this.game.getInitialState();\r\n    }\r\n\r\n    render() {\r\n        const handlers = this.game.getHandlers();\r\n        return (\r\n            <div>\r\n                <Hand stack={this.state.hand.stack} />\r\n                <div className=\"layout-grid-container\">\r\n                    <Stock model={this.state.stock} onClick={handlers.clickStock} />\r\n                    <Waste model={this.state.waste} hand={this.state.hand} onClick={handlers.clickWaste} />\r\n                    <div className=\"spacer\">&nbsp;</div>\r\n                    {this.state.foundation.stacks.map((foundation, index) => (\r\n                        <Foundation\r\n                            key={\"f\" + index}\r\n                            index={index}\r\n                            model={foundation}\r\n                            hand={this.state.hand}\r\n                            onClick={(c) => handlers.clickFoundation(c, index)}\r\n                        />\r\n                    ))}\r\n                    {this.state.tableau.stacks.map((stack, index) => (\r\n                        <TableauStack\r\n                            key={\"t\" + index}\r\n                            index={index}\r\n                            model={stack}\r\n                            hand={this.state.hand}\r\n                            onClick={(card) => handlers.clickTableauStack(card, index)}\r\n                        />\r\n                    ))}\r\n                    <Footer reset={this.game.reset} model={this.state.game} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}