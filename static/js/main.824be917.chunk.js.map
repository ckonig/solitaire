{"version":3,"sources":["View/Context.ts","View/Game/Dealer.js","View/UI/EndScreen.js","View/Game/BlinkingComponent.js","View/Game/Card.js","View/Game/MouseHand.js","View/Game/TouchHand.js","View/Game/Hand.js","View/Game/StackBase.js","View/Game/Foundation.js","View/UI/Clock.js","View/UI/EndGame.js","View/UI/Hearts.js","View/UI/Hint.js","View/UI/Points.js","View/UI/RestartGame.js","View/UI/ToggleMenu.js","View/UI/Undo.js","View/UI/Header.js","View/UI/Menu.js","View/Game/Stock.js","View/Game/Tableau.js","View/Game/Waste.js","View/Game/Board.js","Business/Dealer.ts","Business/Dispatcher.ts","Business/Blinker.ts","Business/Foundation.ts","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","Model/Game/Foundation.js","Model/Game/Rating.js","Model/Game/TimeMachine.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.ts","Model/Game/Waste.js","Model/Model.ts","Business/Stock.ts","Business/Tableau.ts","Business/Waste.ts","Business/Suggestions.ts","Business/BusinessModel.ts","View/Game/BoardWrap.tsx","View/UI/StartScreen.js","App.tsx","index.tsx"],"names":["defaultValue","state","replaceContext","updateContext","updateGameContext","restart","GlobalContext","React","createContext","Provider","Dealer","useContext","timeouts","settings","launchSettings","quickDeal","dealer","isDealt","dealAll","deal","dealt","push","setTimeout","dealOne","useEffect","forEach","timeout","clearTimeout","EndScreen","game","isEnded","className","points","getElapsed","onClick","BlinkingComponent","selector","this","context","blinkFor","unblink","Component","contextType","Card","props","e","ele","target","includes","offsetParent","rect","getBoundingClientRect","position","click","x","clientX","y","clientY","element","model","style","pointerEvents","zIndex","offsetTop","top","entropyStyle","offsetLeft","left","getCardStyle","hasSuggestion","isSuggested","suggestion","type","icon","isSelected","source","blink","getClassName","isHidden","face","MouseHand","onMouseMove","positionFixed","setState","updateDisplay","myRef","createRef","bind","onKeyDown","document","addEventListener","putBack","removeEventListener","node","current","hand","parent","window","event","keyCode","getOffsetTop","index","ref","stack","map","card","TouchHand","c","Hand","p","length","mouseMode","StackBase","classname","visible","suggested","children","Foundation","s","foundation","stacks","Stacks","i","Clock","useState","elapsed","setElapsed","interval","setInterval","started","clearInterval","EndGame","title","Hearts","recyclingMode","passes","createString","Array","from","keys","join","stock","getHearts","Hint","suggestOnce","previous","suggestionMode","suggest","listenForH","Points","rating","RestartGame","disabled","timemachine","previousStates","ToggleMenu","menu","showMenu","Undo","undo","_state","popPreviousState","penalize","ctrlZ","evtobj","ctrlKey","Math","pow","multiplicator","Header","Menu","onChange","sm","value","suggestionModes","mm","mouseModes","lvl","setEntropy","baseEntropy","entropyLevels","entropyLevel","interactionEntropy","rel","href","Stock","Tableau","tableau","getOffset","Waste","waste","drawMode","isHoldingCard","isFromWaste","additionalOffset","Board","dealingAt","callback","Date","now","newCard","pop","isFirst","Dispatcher","clickHandler","getHandler","dispatchPutDown","dispatchPickup","Blinker","startBlink","registerBlink","stopBlink","wouldAccept","src","add","putDown","registerMove","tryDetectEnd","_card","getTop","getPreviousUsed","pickUp","remove","registerPickup","countCards","end","causeEntropy","level","random","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","DeckSize","Suits","heart","color","club","diamond","spade","Deck","Object","deckSize","key","flat","reverse","shuffleArray","array","j","floor","getCurrentAccepted","currentFoundation","acceptedCards","hasMoreThanOneCard","accepts","currentCard","currentAccepted","usedCards","f","parseInt","reduce","a","b","suit","slice","origStack","Rating","currentMove","rateMove","registerRecycle","console","debug","registerUncover","penalty","move","isTableau","obj","substr","isFoundation","TimeMachine","memorable","modified","pushPreviousState","modelEquals","id","isRequested","popPrevious","stackEquals","every","stacksEqual","Game","padleft","msec","hh","ss","splice","isHoldingKing","isFromCurrentSource","isFromFoundation","isFromTableau","isFromAnyTableau","substring","getTableauIndex","Settings","isTouch","is_touch_device","prefixes","split","DocumentTouch","query","matchMedia","matches","error","recycle","setCardProperties","recyclings","isOnTop","popTop","result","getStack","canPutDown","range","indexOf","getCard","popWithFollowing","stackEntropy","uncover","entropy","next","concat","offset","tryPutDown","canAdd","addAll","_a","_b","_c","Model","getInitialState","deck","shuffle","_position","moveToWaste","recycleWaste","canRecycle","tryUncover","Suggestions","evaluateOptions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","isMoveOfKingBetweenEmptySlots","isMoveBetweenSimilarParentCards","isNotLoop","foundAny","wasteState","BusinessModel","cardIndex","filter","tableauState","filtered","_stack","disableSuggestion","suggestor","withHandlers","BoardWrap","modifier","render","JSON","stringify","StartScreen","start","App","defaultState","initialized","appState","setAppState","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.824be917.chunk.js","sourcesContent":["import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\r\n\r\nimport BusinessModel from \"../Business/BusinessModel\";\r\nimport React from \"react\";\r\n\r\ninterface IGlobalContext {\r\n    state: BusinessModel | null;\r\n    replaceContext: StateReplaceFunction;\r\n    updateContext: StateUpdateFunction;\r\n    updateGameContext: StateUpdateFunction;\r\n    restart: () => void;\r\n}\r\n\r\nconst defaultValue = {\r\n    state: null,\r\n    replaceContext: () => {},\r\n    updateContext: () => {},\r\n    updateGameContext: () => {},\r\n    restart: () => {},\r\n};\r\n\r\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\r\n\r\nexport const Provider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Dealer = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const timeouts = [];\r\n    //@todo implement launch setting UI for quick dealing\r\n    if (state.settings.launchSettings.quickDeal) {\r\n        if (state && state.dealer && !state.dealer.isDealt) {\r\n            replaceContext(state.dealer.dealAll(state));\r\n        }\r\n    } else {\r\n        const deal = (dealt) => {\r\n            timeouts.push(\r\n                setTimeout(() => {\r\n                    if (state && state.dealer && !state.dealer.isDealt) {\r\n                        replaceContext(state.dealer.dealOne(dealt, deal));\r\n                    }\r\n                }, 35)\r\n            );\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            deal(state.dealer.dealt);\r\n            return () => timeouts.forEach((timeout) => clearTimeout(timeout));\r\n        }, []);\r\n    }\r\n    return null;\r\n};\r\nexport default Dealer;\r\n","import \"../Style/Screens.css\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndScreen = () => {\r\n    const { state, restart } = React.useContext(GlobalContext);\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    return !state.game.isEnded ? null : (\r\n        <div className=\"endscreen\">\r\n            <div className=\"title\">🥳</div>\r\n            <div>Points: {state.game.points}</div>\r\n            <div>Time: {state.game.getElapsed()}</div>\r\n            <div>\r\n                <button onClick={restart}>\r\n                    ♻️<div>new game</div>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndScreen;\r\n","import { Component } from \"react\";\r\nimport GlobalContext from \"../Context\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    constructor(selector) {\r\n        super();\r\n        this.timeout = null;\r\n        this.selector = selector;\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    componentDidUpdate() {\r\n        if (this.selector(this.context.state).blinkFor) {\r\n            this.timeout = setTimeout(\r\n                () =>\r\n                    this.context.updateGameContext((state) => {\r\n                        this.selector(state).unblink(state);\r\n                    }),\r\n                200\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const onClick = (e) => {\r\n        let ele = e.target;\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        //@todo use scroll difference instead\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            click: {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n\r\n        props.onClick({ ...props.model }, position);\r\n    };\r\n\r\n    const getClassName = () => {\r\n        const hasSuggestion = props.isSuggested || props.model.suggestion;\r\n        let className = `card card-base suit-${props.model.type.icon}`;\r\n        className += !props.isSelected && !hasSuggestion ? ` card-stack-${props.model.source}` : \"\";\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack (preview what happens if picked up)\r\n        className += hasSuggestion ? \" card-suggested\" : \"\";\r\n\r\n        return className;\r\n    };\r\n\r\n    const getCardStyle = () => {\r\n        const style = {\r\n            zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };\r\n\r\n        //move to left on waste (triple draw)\r\n        if (props.offsetLeft) {\r\n            style.left = props.offsetLeft * 4 + \"vw\";\r\n        }\r\n\r\n        if (!props.onClick) {\r\n            style.pointerEvents = \"none\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    const getStackbaseStyle = () => {\r\n        if (!props.onClick) {\r\n            return { pointerEvents: \"none\" };\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    // @todo 3d flip https://3dtransforms.desandro.com/card-flip on unhide\r\n    // https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n\r\n    return (\r\n        <div style={getStackbaseStyle()} className=\"stack-base\">\r\n            <div style={getCardStyle()} className={getClassName()} onClick={onClick ? onClick : null}>\r\n                {props.model.isHidden ? (\r\n                    <div className=\"card-back\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        if (this.props.putBack) {\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card key={index} model={card} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends React.Component {\r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.props.hand &&\r\n                this.props.hand.stack &&\r\n                this.props.hand.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={this.props.offsetTop + index * 24}\r\n                        offsetLeft={this.props.offsetLeft}\r\n                        zIndex={1000 + index * 20}\r\n                        isSelected={true}\r\n                        onClick={(c) => this.props.onClick(c)}\r\n                    />\r\n                )),\r\n        ];\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    if (!state.hand || props.parent !== state.hand.source) {\r\n        return null;\r\n    }\r\n    const putBack = (c, p) => props.onClick(props.stack[props.stack.length - 1], p, props.stack.length - 1);\r\n    if (state.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parent} hand={state.hand} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (state.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <TouchHand\r\n                parent={props.parent}\r\n                hand={state.hand}\r\n                offsetTop={props.offsetTop}\r\n                offsetLeft={props.offsetLeft}\r\n                onClick={putBack}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base\";\r\n\r\n    if (props.visible) {\r\n        if (props.blink) {\r\n            classname += \" socket-blink\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n\r\n    if (props.suggested) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n\r\n    return (\r\n        <div className={classname} onClick={() => props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.foundation.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state, updateGameContext } = React.useContext(GlobalContext);\r\n        const onClick = (c, p, i) => updateGameContext(state.foundation.onClick(c, p, i));\r\n        return state.foundation.stacks.map((foundation, index) => (\r\n            <Foundation key={index} model={foundation} index={index} onClick={onClick} />\r\n        ));\r\n    };\r\n\r\n    render() {\r\n        const model = this.props.model;\r\n        return (\r\n            <div key={this.props.index}>\r\n                <StackBase\r\n                    suggested={model.suggestion && !model.stack.length}\r\n                    blink={model.blinkFor}\r\n                    onClick={() => this.props.onClick(null, null, this.props.index)}\r\n                    visible={!model.stack.length}\r\n                >\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                        onClick={(c, p) => this.props.onClick(c, p, this.props.index)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parent={\"foundation-\" + this.props.index}\r\n                    onClick={(c, p) => this.props.onClick(model.stack[model.stack.length - 1], p, this.props.index)}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Clock = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const [elapsed, setElapsed] = React.useState(0);\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (state.game.started) {\r\n                setElapsed(state.game.getElapsed());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return !state.game.started || !elapsed ? null : (\r\n        <div className=\"header-clock\">\r\n            <div className=\"icon-container\">🕒</div>\r\n            {elapsed}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndGame = () => {\r\n    const { restart } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"End Game\" onClick={restart}>\r\n                🗑️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default EndGame;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hearts = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const getHearts = () => {\r\n        if (state.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            return state.game.passes > 0 ? \"❤️\" : \"💔\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            const createString = (length, icon) =>\r\n                Array.from(new Array(length).keys())\r\n                    .map(() => icon)\r\n                    .join(\"\");\r\n\r\n            return createString(state.stock.passes, \"❤️\") + createString(3 - state.stock.passes, \"💔\");\r\n        }\r\n        return null;\r\n    };\r\n    return <div className=\"heart-container\">{getHearts()}</div>;\r\n};\r\nexport default Hearts;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hint = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    const suggestOnce = () => {\r\n        updateContext((state) => {\r\n            const previous = state.settings.suggestionMode;\r\n            //@todo : keep hint active for a whole move\r\n            //only change suggestionMode, then change afterwards \r\n            //let central render function trigger suggest() \r\n            //@todo penalize hint based on settings\r\n            state.settings.suggestionMode = \"regular\";\r\n            state.suggest();\r\n            state.settings.suggestionMode = previous;\r\n        });\r\n    };\r\n    const listenForH = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 72) {\r\n            suggestOnce();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", listenForH);\r\n        return () => document.removeEventListener(\"keydown\", listenForH);\r\n    }, []);\r\n\r\n    return state.settings.suggestionMode !== \"none\" ? null : (\r\n        <div>\r\n            <button title=\"Hint\" onClick={() => suggestOnce()}>\r\n                💡\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Hint;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Points = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"icon-container\">🏆</div> {state.game.rating.points}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Points;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst RestartGame = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n\r\n    const reset = () =>\r\n        replaceContext((state) => (state.game.timemachine.previousStates ? state.game.timemachine.previousStates[0] : null));\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Restart\" disabled={!state.game.timemachine.previousStates.length} onClick={reset}>\r\n                ♻️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestartGame;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst ToggleMenu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Settings\" onClick={() => toggleMenu(state.settings.showMenu)}>\r\n                ⚙️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleMenu;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Undo = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const undo = () =>\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                previous.suggest();\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    const ctrlZ = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 90 && evtobj.ctrlKey) {\r\n            undo();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", ctrlZ);\r\n        return () => document.removeEventListener(\"keydown\", ctrlZ);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                disabled={!state.game.timemachine.previousStates.length}\r\n                title={\"Undo (Penalty:\" + Math.pow(2, state.game.rating.multiplicator) + \")\"}\r\n                onClick={undo}\r\n            >\r\n                ⏪\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Undo;\r\n","import \"../Style/Header.css\";\r\n\r\nimport Clock from \"./Clock\";\r\nimport EndGame from \"./EndGame\";\r\nimport Hearts from \"./Hearts\";\r\nimport Hint from \"./Hint\";\r\nimport Points from \"./Points\";\r\nimport React from \"react\";\r\nimport RestartGame from \"./RestartGame\";\r\nimport ToggleMenu from \"./ToggleMenu\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <div className=\"header-title\">\r\n            <Hearts />\r\n            <Points />\r\n        </div>\r\n        <Clock />\r\n        <div className=\"header-buttons\">\r\n            <Hint />\r\n            <Undo />\r\n            <RestartGame />\r\n            <EndGame />\r\n            <ToggleMenu />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import \"../Style/Menu.css\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Menu = () => {\r\n    //@todo persist game settings in local storage\r\n\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    const setSuggestionMode = (sm) => {\r\n        updateContext((state) => {\r\n            if (state.settings.suggestionMode !== sm) {\r\n                state.settings.suggestionMode = sm;\r\n                state.suggest();\r\n            }\r\n        });\r\n    };\r\n\r\n    const setBaseEntropy = (lvl) =>\r\n        updateContext((state) => {\r\n            state.setEntropy(lvl);\r\n        });\r\n\r\n    const setInteractionEntropy = (lvl) =>\r\n        updateContext((state) => {\r\n            state.settings.interactionEntropy = lvl;\r\n        });\r\n\r\n    const setMouseMode = (mm) =>\r\n        updateContext((state) => {\r\n            state.settings.mouseMode = mm;\r\n            state.suggest();\r\n        });\r\n\r\n    if (!state.settings.showMenu) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"title\">Settings</div>\r\n            <div className=\"section\">\r\n                <div className=\"title\">Suggestions</div>\r\n                <div className=\"row\">\r\n                    <div className=\"label\">How much help - if any - should the game offer by displaying suggestions?</div>\r\n                    <select onChange={(e) => setSuggestionMode(e.target.value)} value={state.settings.suggestionMode}>\r\n                        {state.settings.suggestionModes.map((suggestionMode) => (\r\n                            <option key={suggestionMode} value={suggestionMode}>\r\n                                {suggestionMode}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"section\">\r\n                <div className=\"title\">Active Card</div>\r\n                <div className=\"row\">\r\n                    <div className=\"label\">Should the selected card follow the cursor or remain on the stack?</div>\r\n                    <select onChange={(e) => setMouseMode(e.target.value)} value={state.settings.mouseMode}>\r\n                        {state.settings.mouseModes.map((mouseMode) => (\r\n                            <option key={mouseMode} value={mouseMode}>\r\n                                {mouseMode}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"section\">\r\n                <div className=\"title\">Base Entropy</div>\r\n                <div className=\"row\">\r\n                    <div className=\"label\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                    <select onChange={(e) => setBaseEntropy(e.target.value)} value={state.settings.baseEntropy}>\r\n                        {state.settings.entropyLevels.map((entropyLevel, index) => (\r\n                            <option key={entropyLevel} value={index}>\r\n                                {entropyLevel}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"section\">\r\n                <div className=\"title\">Interaction Entropy</div>\r\n                <div className=\"row\">\r\n                    <div className=\"label\">How much chaos will each interaction add to a stack on the board?</div>\r\n                    <select onChange={(e) => setInteractionEntropy(e.target.value)} value={state.settings.interactionEntropy}>\r\n                        {state.settings.entropyLevels.map((entropyLevel, index) => (\r\n                            <option key={entropyLevel} value={index}>\r\n                                {entropyLevel}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/ckonig/solitaire/issues\">\r\n                Report Issues here\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\nexport default Menu;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.stock);\r\n    }\r\n\r\n    render() {\r\n        const { state, updateGameContext } = this.context;\r\n        const onClick = (c, p, i) => updateGameContext(state.stock.onClick(c, p, i));\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={state.stock.blinkFor}\r\n                    onClick={onClick}\r\n                    suggested={state.stock.suggestion && !state.stock.stack.length}\r\n                    visible={!state.stock.stack.length}\r\n                />\r\n                {state.stock.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        blink={state.stock.blinkFor}\r\n                        isSuggested={state.stock.suggestion && index == state.stock.stack.length - 1}\r\n                        onClick={onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.tableau.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state, updateGameContext } = React.useContext(GlobalContext);\r\n        const onClick = (c, p, i) => updateGameContext(state.tableau.onClick(c, p, i));\r\n        return state.tableau.stacks.map((tableau, index) => <Tableau key={index} index={index} model={tableau} onClick={onClick} />);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, props.index)}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={(card, p) => props.onClick(card, p, props.index)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parent={\"tableau-\" + props.index}\r\n                    onClick={(card, p) => props.onClick(card, p, props.index)}\r\n                    stack={props.model.stack}\r\n                    offsetTop={getOffset(props.model.stack.length)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.waste);\r\n    }\r\n\r\n    render() {\r\n        const { state, updateGameContext } = this.context;\r\n        const onClick = (c, p, i) => updateGameContext(state.waste.onClick(c, p, i));\r\n        const getOffset = (index) => {\r\n            if (state.settings.launchSettings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length =\r\n                state.waste.settings.mouseMode == \"remain-on-stack\" && state.hand.isHoldingCard() && state.hand.isFromWaste()\r\n                    ? state.waste.stack.length + 1\r\n                    : state.waste.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={state.waste.blinkFor}\r\n                    onClick={() => onClick(null, null)}\r\n                    suggested={state.waste.suggestion && !state.waste.stack.length}\r\n                    visible={!state.waste.stack.length}\r\n                />\r\n                {state.waste.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        blink={state.waste.blinkFor}\r\n                        isSuggested={state.waste.suggestion && index == state.waste.stack.length - 1}\r\n                        onClick={(c, p) => onClick(c, p)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    offsetTop={(state.waste.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(state.waste.stack.length)}\r\n                    parent=\"waste\"\r\n                    onClick={onClick}\r\n                    stack={state.waste.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"../Style/Board.scss\";\r\n\r\nimport Dealer from \"./Dealer\";\r\nimport EndScreen from \"../UI/EndScreen\";\r\nimport Foundation from \"./Foundation\";\r\nimport Header from \"../UI/Header\";\r\nimport Menu from \"../UI/Menu\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = () => (\r\n    <>\r\n        <div className=\"layout-grid-container\">\r\n            <Header />\r\n            <div className=\"board-grid-container\">\r\n                <Stock />\r\n                <Waste />\r\n                <div className=\"spacer\">&nbsp;</div>\r\n                <Foundation.Stacks />\r\n                <Tableau.Stacks />\r\n            </div>\r\n        </div>\r\n        <Menu />\r\n        <EndScreen />\r\n        <Dealer />\r\n    </>\r\n);\r\n\r\nexport default Board;\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Tableau from \"../Model/Game/Tableau\";\r\n\r\nexport default class Dealer {\r\n    dealt: number;\r\n    dealingAt: number;\r\n    isDealt: boolean;\r\n\r\n    constructor() {\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    dealOne = (dealt: number, callback: any) => (state: BusinessModel) => {\r\n        if (dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n\r\n        state.dealer.deal(state.stock, state.tableau);\r\n        if (state.dealer.isDealt) {\r\n            state.game.started = Date.now();\r\n        }\r\n\r\n        if (state.dealer.isDealt) {\r\n            state.suggest();\r\n        } else {\r\n            callback(state.dealer.dealt);\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    dealAll = () => (state: BusinessModel) => {\r\n        if (this.dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n        while (!state.dealer.isDealt) {\r\n            state.dealer.deal(state.stock, state.tableau);\r\n        }\r\n        state.game.started = Date.now();\r\n        state.suggest();\r\n        return state;\r\n    };\r\n\r\n    deal = (stock: Stock, tableau: Tableau) => {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = stock.stack.pop();\r\n                newCard.source = \"tableau-\" + i;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                stack.push(newCard);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    };\r\n}\r\n","import { ClickHandler, StateUpdateFunction } from \"../Common\";\r\n\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\nimport Hand from \"../Model/Game/Hand\";\r\n\r\nexport default class Dispatcher {\r\n    clickHandler: ClickHandler;\r\n\r\n    constructor(clickHandler: ClickHandler) {\r\n        this.clickHandler = clickHandler;\r\n    }\r\n\r\n    getHandler = (hand: Hand) => {\r\n        if (hand && hand.isHoldingCard()) {\r\n            return this.dispatchPutDown;\r\n        } else {\r\n            return this.dispatchPickup;\r\n        }\r\n    };\r\n\r\n    dispatchPutDown = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPutDown(card, position, state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPickup(card, position, state, index);\r\n        }\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Waste from \"../Model/Game/Waste\";\r\n\r\n//@todo specify types of single tableau and foundation to avoid any\r\n\r\nexport type BlinkSelector = (state: BusinessModel) => Waste | Stock | any;\r\n\r\nexport interface IBlinker {\r\n    startBlink: (selector: BlinkSelector, state: BusinessModel) => void;\r\n}\r\n\r\nexport default class Blinker implements IBlinker {\r\n    startBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        selector(state).blinkFor = 10;\r\n        state.game.registerBlink();\r\n        selector(state).unblink = (s: BusinessModel) => this.stopBlink(selector, s);\r\n    };\r\n\r\n    stopBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        selector(state).blinkFor = 0;\r\n        state.game.registerBlink();\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Foundation implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.foundation.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.foundation.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (_card: Card, position: any, state: BusinessModel, index: number) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    //@todo move this to a generic place, also detect failure\r\n    tryDetectEnd(state: BusinessModel) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.source = \"\";\r\n        this.suggestion = false;\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\r\n            .flat()\r\n            .reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (a, b, c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => !hand.hasMoreThanOneCard() && this.accepts(index, hand.currentCard());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = \"foundation-\" + index;\r\n        card.suggestion = false;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => [...this.stacks[index].usedCards].pop();\r\n\r\n    countCards = () => this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n\r\n    getTop = (index) => this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation(orig.settings);\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","export default class Rating {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        this.points += this.rateMove(currentMove);\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        if (this.settings.launchSettings.drawMode == \"single\" && this.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n    };\r\n\r\n    registerBlink() {\r\n        //@todo support optionally penalizing invalid moves\r\n    }\r\n\r\n    penalize = (other) => {\r\n        const penalty = Math.pow(2, other.multiplicator);\r\n        console.debug(`RATING: applying penalty of ${penalty} points for UNDO`);\r\n        this.points = Math.min(this.points, other.points) - penalty;\r\n        this.multiplicator = other.multiplicator + 1;\r\n    };\r\n\r\n    rateMove(move) {\r\n        const isTableau = (obj) => obj.substr(0, 7) == \"tableau\";\r\n        const isFoundation = (obj) => obj.substr(0, 10) == \"foundation\";\r\n        if (isTableau(move.source)) {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (isFoundation(move.source)) {\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Rating(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.multiplicator = orig.multiplicator;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class TimeMachine {\r\n    constructor() {\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n    };\r\n\r\n    pushPreviousState = (state) => {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    };\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.timemachine.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        return true;\r\n    };\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    }\r\n\r\n    stackEquals = (a, b) => {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    };\r\n\r\n    stacksEqual = (a, b) => {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    };\r\n\r\n    modelEquals = (a, b) => {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new TimeMachine();\r\n        copy.previousStates = [...orig.previousStates];\r\n        copy.memorable = orig.memorable;\r\n        copy.modified = orig.modified;\r\n        return copy;\r\n    };\r\n}\r\n","import Rating from \"./Rating\";\r\nimport TimeMachine from \"./TimeMachine\";\r\n\r\nexport default class Game {\r\n    constructor(settings) {\r\n        this.rating = new Rating(settings);\r\n        this.timemachine = new TimeMachine();\r\n        this.started = 0;\r\n        this.isEnded = false;\r\n        this.end = 0;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.rating.registerMove(target, source);\r\n        this.timemachine.registerMove(target, source);\r\n        return true;\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.timemachine.registerPickup();\r\n        return true;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.rating.registerRecycle();\r\n        this.timemachine.registerRecycle();\r\n        return true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.rating.registerUncover();\r\n        this.timemachine.registerUncover();\r\n        return true;\r\n    };\r\n\r\n    registerBlink() {\r\n        this.rating.registerBlink();\r\n        this.timemachine.registerBlink();\r\n        return true;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.started = orig.started;\r\n        copy.timemachine = TimeMachine.copy(orig.timemachine);\r\n        copy.rating = Rating.copy(orig.rating);\r\n        return copy;\r\n    };\r\n\r\n    getElapsed = () => {\r\n        const padleft = (i) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = (this.end || Date.now()) - this.started;\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp = (stack, source, position) => {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    };\r\n\r\n    putDown = () => {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    };\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    isHoldingKing = () => this.isHoldingCard() && this.currentCard().face == 'K';\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    isFromWaste = () => this.source && this.source == \"waste\";\r\n\r\n    isFromFoundation = (index) => this.source && this.source == `foundation-${index}`\r\n\r\n    isFromTableau = (index) => this.source && this.source == `tableau-${index}`\r\n\r\n    isFromAnyTableau = () => this.source && this.source.substring(0,8) == \"tableau-\";\r\n\r\n    getTableauIndex = () => this.source && this.source.substring(8);\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","export default class Settings {\r\n    constructor(launchSettings) {\r\n        this.launchSettings = launchSettings;\r\n        const isTouch = this.is_touch_device();\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = isTouch ? \"remain-on-stack\" : \"follow-cursor\";\r\n\r\n        this.entropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\n        this.baseEntropy = isTouch ? 1 : 2;\r\n        this.interactionEntropy = isTouch ? 1 : 2;\r\n\r\n        this.suggestionModes = [\"none\", \"scored\", \"regular\", \"full\"];\r\n        this.suggestionMode = \"regular\";\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = (query) => window.matchMedia(query).matches;\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings(orig.launchSettings);\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack, settings) {\r\n        this.settings = settings;\r\n        this.stack = stack.map(this.setCardProperties);\r\n        this.recyclings = 0;\r\n        this.passes = -1;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (a, b, c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n        if (this.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            this.passes = 1;\r\n        }\r\n        if (this.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            this.passes = 3;\r\n        }\r\n    }\r\n\r\n    canRecycle() {\r\n        return (\r\n            this.settings.launchSettings.recyclingMode == \"infinite\" ||\r\n            (this.settings.launchSettings.recyclingMode == \"3-pass\" && this.recyclings < 2)\r\n        );\r\n    }\r\n\r\n    recycle = (waste) => {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map(this.setCardProperties);\r\n            this.recyclings++;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setCardProperties = (card) => {\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        card.isHidden = true;\r\n        card.source = \"stock\";\r\n        return card;\r\n    };\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    popTop = () => {\r\n        let result = [];\r\n        if (this.settings.launchSettings.drawMode == \"single\") {\r\n            result = [this.stack.pop()];\r\n        }\r\n        if (this.settings.launchSettings.drawMode == \"triple\") {\r\n            result = this.stack.splice(this.stack.length - 3);\r\n        }\r\n        if (this.stack.length == 0) {\r\n            this.passes--;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        copy.passes = orig.passes;\r\n        copy.recyclings = orig.recyclings;\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Hand from \"./Hand\";\r\nimport Settings from \"./Settings\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    stacks: { stack: Card[]; id: number; suggestion?: boolean }[];\r\n    settings: Settings;\r\n    onClick: (a: any, b: any, c: any) => void;\r\n\r\n    constructor(settings: Settings) {\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => ({\r\n            stack: [],\r\n            id,\r\n        }));\r\n        this.settings = settings;\r\n        this.onClick = () => {};\r\n    }\r\n\r\n    getStack = (index: number) => this.stacks[index];\r\n\r\n    wouldAccept = (index: number, hand: Hand) => this.canPutDown(this.getTop(index), hand, index);\r\n\r\n    canPutDown = (card: Card, hand: Hand, index: number) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.isFromTableau(index));\r\n\r\n    accepts = (index: number, current: Card) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index: number, card: Card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card: Card, i: number) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index: number) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index: number, cards: Card[]) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card: Card, index: number) => {\r\n        card.source = \"tableau-\" + index;\r\n        return card;\r\n    };\r\n\r\n    getTop = (index: number, offset?: number) => this.stacks[index].stack[this.stacks[index].stack.length - 1 - (offset || 0)];\r\n\r\n    static copy = (orig: Tableau) => {\r\n        const copy = new Tableau(orig.settings);\r\n        copy.stacks = orig.stacks.map((stack, index) => ({ id: index, stack: Card.copyAll(stack.stack) }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.stack = [];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (_a, _b, _c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAccept = (hand) => hand.isFromWaste() && this.canAdd(hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste(orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Model {\r\n    stock: Stock;\r\n    waste: Waste;\r\n    foundation: Foundation;\r\n    tableau: Tableau;\r\n    hand: Hand;\r\n    game: Game;\r\n    settings: Settings;\r\n\r\n    constructor(obj: any) {\r\n        this.stock = obj.stock;\r\n        this.waste = obj.waste;\r\n        this.foundation = obj.foundation;\r\n        this.tableau = obj.tableau;\r\n        this.hand = obj.hand;\r\n        this.game = obj.game;\r\n        this.settings = obj.settings;\r\n    }\r\n\r\n    static getInitialState = (launchSettings: AppState) => {\r\n        const deck = new Deck().shuffle();\r\n        const settings = new Settings(launchSettings);\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings),\r\n            waste: new Waste(settings),\r\n            foundation: new Foundation(settings),\r\n            tableau: new Tableau(settings),\r\n            hand: new Hand(),\r\n            game: new Game(settings),\r\n            settings: settings,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n        };\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Stock implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.stock, state);\r\n\r\n    dispatchPutDown = (_card: Card, _position: any, state: BusinessModel) => this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, _position: any, state: BusinessModel) =>\r\n        card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state);\r\n\r\n    moveToWaste = (card: Card, state: BusinessModel) =>\r\n        state.stock.isOnTop(card) && state.waste.addAll(state.stock.popTop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    recycleWaste = (_card: Card, state: BusinessModel) =>\r\n        (!state.stock.getTop() &&\r\n            !!state.waste.getTop() &&\r\n            state.stock.canRecycle() &&\r\n            state.stock.recycle(state.waste.recycle()) &&\r\n            state.game.registerRecycle()) ||\r\n        this.blink(state, 0);\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Tableau implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.tableau.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.tableau.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card: Card, index: number, state: BusinessModel) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Waste implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.waste, state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel) =>\r\n        (state.waste.wouldAccept(state.hand) &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state, 0);\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Suggestions {\r\n    tableau: Tableau;\r\n    waste: Waste;\r\n\r\n    constructor() {\r\n        this.tableau = new Tableau();\r\n        this.waste = new Waste();\r\n    }\r\n\r\n    evaluateOptions = (state: BusinessModel) => {\r\n        this.disableAllSuggestions(state);\r\n        if (\r\n            state.settings.suggestionMode !== \"none\" &&\r\n            !this.getUncoverOptions(state) &&\r\n            !this.getPutdownSuggestions(state) &&\r\n            !state.hand.isHoldingCard() &&\r\n            (!this.getPickupOptions(state) || state.settings.suggestionMode == \"full\") &&\r\n            (state.stock.getTop() || state.stock.canRecycle())\r\n        ) {\r\n            state.stock.suggestion = true;\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state: BusinessModel, onlyUseful?: boolean) => {\r\n        if (!state.hand.isHoldingCard() || state.settings.suggestionMode == \"none\") {\r\n            return 0;\r\n        }\r\n\r\n        const accepted = [];\r\n        if (state.waste.wouldAccept(state.hand)) {\r\n            if (state.settings.suggestionMode === \"full\" || !state.hand.isFromWaste()) {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode !== \"scored\" || state.game.rating.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.foundation.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode === \"full\" || !state.hand.isFromFoundation(index)) {\r\n                    const move = { target: \"foundation-\" + index, source: state.hand.source };\r\n                    if (state.settings.suggestionMode !== \"scored\" || state.game.rating.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.tableau.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode === \"full\" || !state.hand.isFromTableau(index)) {\r\n                    const isMoveOfKingBetweenEmptySlots =\r\n                        state.hand.isHoldingKing() &&\r\n                        stack.stack.length == 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length == 0;\r\n\r\n                    const isMoveBetweenSimilarParentCards =\r\n                        stack.stack.length > 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length > 0 &&\r\n                        stack.stack[stack.stack.length - 1].face ==\r\n                            state.tableau.stacks[state.hand.getTableauIndex()].stack[\r\n                                state.tableau.stacks[state.hand.getTableauIndex()].stack.length - 1\r\n                            ].face &&\r\n                        !state.tableau.getTop(state.hand.getTableauIndex()).isHidden;\r\n\r\n                    const isNotLoop = !isMoveOfKingBetweenEmptySlots && !isMoveBetweenSimilarParentCards;\r\n\r\n                    if (!onlyUseful || state.settings.suggestionMode === \"full\" || isNotLoop) {\r\n                        const move = { target: \"tableau-\" + index, source: state.hand.source };\r\n                        if (state.settings.suggestionMode !== \"scored\" || state.game.rating.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state: BusinessModel) => {\r\n        let foundAny = false;\r\n        const wasteState = BusinessModel.copy(state);\r\n        this.waste.dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.timemachine.modified) {\r\n            if (this.getPutdownSuggestions(wasteState, true) > (state.settings.suggestionMode == \"full\" ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) =>\r\n            tableau.stack\r\n                .map((card, cardIndex) => ({ cardIndex, card }))\r\n                .filter(({ card }) => !card.isHidden)\r\n                .forEach(({ card, cardIndex }) => {\r\n                    const tableauState = BusinessModel.copy(state);\r\n                    this.tableau.dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.timemachine.modified) {\r\n                        if (this.getPutdownSuggestions(tableauState, true) > (state.settings.suggestionMode == \"full\" ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                })\r\n        );\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            const filtered = state.tableau.stacks\r\n                .map((_stack, index) => index)\r\n                .filter((index) => state.tableau.getTop(index) && state.tableau.getTop(index).isHidden);\r\n            filtered.forEach((index) => {\r\n                state.tableau.getTop(index).suggestion = true;\r\n            });\r\n            return filtered.length;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    disableAllSuggestions = (state: BusinessModel) => {\r\n        const disableSuggestion = (obj: any) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Dealer from \"./Dealer\";\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Foundation from \"./Foundation\";\r\nimport Model from \"../Model/Model\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class BusinessModel extends Model {\r\n    suggestor: Suggestions;\r\n    dealer: Dealer;\r\n\r\n    constructor(obj: any) {\r\n        super(obj);\r\n        this.suggestor = new Suggestions();\r\n        this.dealer = new Dealer();\r\n    }\r\n\r\n    suggest = () => this.suggestor.evaluateOptions(this);\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.settings.baseEntropy = lvl;\r\n        this.stock.setEntropy(lvl);\r\n        this.waste.setEntropy(lvl);\r\n        this.foundation.setEntropy(lvl);\r\n        this.tableau.setEntropy(lvl);\r\n    };\r\n\r\n    withHandlers = () => {\r\n        const getHandler = (clickHandler: ClickHandler) => new Dispatcher(clickHandler).getHandler(this.hand);\r\n        this.stock.onClick = getHandler(new Stock());\r\n        this.waste.onClick = getHandler(new Waste());\r\n        this.foundation.onClick = getHandler(new Foundation());\r\n        this.tableau.onClick = getHandler(new Tableau());\r\n        return this;\r\n    };\r\n\r\n    static getInitialState = (launchSettings: AppState) => {\r\n        return new BusinessModel(Model.getInitialState(launchSettings));\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return new BusinessModel(Model.copy(state));\r\n    };\r\n}\r\n","import { AppState, StateReplacer, StateUpdater } from \"../../Common\";\r\n\r\nimport Board from \"./Board\";\r\nimport BusinessModel from \"../../Business/BusinessModel\";\r\nimport { Provider } from \"../Context\";\r\nimport React from \"react\";\r\n\r\ninterface BoardWrapProps {\r\n    settings: AppState;\r\n    restart: () => void;\r\n}\r\n\r\nexport default class BoardWrap extends React.Component<BoardWrapProps, BusinessModel> {\r\n    constructor(props: BoardWrapProps) {\r\n        super(props);\r\n        this.state = BusinessModel.getInitialState(props.settings);\r\n    }\r\n\r\n    replaceContext = (modifier: StateReplacer) => this.setState(modifier);\r\n\r\n    updateContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            modifier(state);\r\n            return state;\r\n        });\r\n\r\n    updateGameContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            state.game.timemachine.modified = false;\r\n            const previous = BusinessModel.copy(state);\r\n            modifier(state);\r\n            if (state.game.timemachine.modified) {\r\n                state.game.timemachine.pushPreviousState(previous);\r\n                state.suggest();\r\n                return state;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    render = () => {\r\n        console.debug(JSON.stringify(this.state.withHandlers()));\r\n        //this.state.withSuggestions(); @todo this will work once hints are implemented differently\r\n        const context = {\r\n            state: this.state.withHandlers(),\r\n            replaceContext: this.replaceContext,\r\n            updateContext: this.updateContext,\r\n            updateGameContext: this.updateGameContext,\r\n            restart: this.props.restart,\r\n        };\r\n        return (\r\n            <Provider value={context}>\r\n                <Board />\r\n            </Provider>\r\n        );\r\n    };\r\n}\r\n","import \"../Style/Screens.css\";\r\n\r\nimport React from \"react\";\r\n\r\nconst StartScreen = (props) => {\r\n    //@todo add selector for timed game\r\n    //@todo add selectors for different rating strategies (undo, hint, blink)\r\n    //@todo add and implement custom start button + selectors for draw mode & recycling options\r\n    //@todo add selector for quick dealing\r\n    return !props || !props.start ? null : (\r\n        <div>\r\n            <div className=\"quickstart\">\r\n                <div>\r\n                    <div className=\"title\">Quickstart</div>\r\n                    <div className=\"left\">\r\n                        <button onClick={() => props.start({ drawMode: \"single\", recyclingMode: \"infinite\" })}>\r\n                            🐭\r\n                            <div>Turn 1 card at once.</div>\r\n                            <div>No limit on passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"single\", recyclingMode: \"3-pass\" })}>\r\n                            🐹\r\n                            <div>Turn 1 card at once.</div>\r\n                            <div>Three passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"single\", recyclingMode: \"1-pass\" })}>\r\n                            🐰\r\n                            <div>Turn 1 card at once.</div>\r\n                            <div>Only a single pass</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <button onClick={() => props.start({ drawMode: \"triple\", recyclingMode: \"infinite\" })}>\r\n                            🐨\r\n                            <div>Turn 3 cards at once.</div>\r\n                            <div>No limit on passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"triple\", recyclingMode: \"3-pass\" })}>\r\n                            🐼\r\n                            <div>Turn 3 cards at once.</div>\r\n                            <div>Three passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"triple\", recyclingMode: \"1-pass\" })}>\r\n                            🐻\r\n                            <div>Turn 3 cards at once.</div>\r\n                            <div>Only a single pass</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartScreen;\r\n","import \"./View/Style/App.css\";\r\n\r\nimport {AppState} from \"./Common\";\r\nimport BoardWrap from \"./View/Game/BoardWrap\";\r\nimport React from \"react\";\r\nimport StartScreen from \"./View/UI/StartScreen\";\r\n\r\nconst App = () => {\r\n    const defaultState = { initialized: false, drawMode: \"\", recyclingMode: \"\" };\r\n    const [appState, setAppState] = React.useState(defaultState);\r\n    const start = (settings: AppState) =>\r\n        setAppState({\r\n            ...settings,\r\n            initialized: true,\r\n        });\r\n    const restart = () => setAppState(defaultState);\r\n    return !appState.initialized ? <StartScreen start={start} /> : <BoardWrap settings={appState} restart={restart} />;\r\n};\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}