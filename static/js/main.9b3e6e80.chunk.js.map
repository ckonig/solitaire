{"version":3,"sources":["View/Clock.js","View/Undo.js","View/Footer.js","View/BlinkingComponent.js","View/Card.js","View/MouseHand.js","View/TouchHand.js","View/Hand.js","View/StackBase.js","View/Foundation.js","View/Stock.js","View/Tableau.js","View/Waste.js","View/Board.js","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","Model/Game/Foundation.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.js","Model/Game/Waste.js","Model/Facade.js","Service/BaseService.js","Service/Foundation.js","Service/Game.js","Service/Settings.js","Service/Stock.js","Service/Tableau.js","Service/Waste.js","Service/Facade.js","App.js","index.js"],"names":["Clock","props","state","timeElapsed","setInterval","setState","msec","end","Date","now","started","hh","Math","floor","mm","ss","className","this","Component","Undo","document","addEventListener","e","evtobj","window","event","keyCode","ctrlKey","undo","onClick","undoLabel","Footer","model","points","isEnded","reset","beat","onChange","setBaseEntropy","target","value","settings","baseEntropy","entropyLevels","map","entropyLevel","index","setInteractionEntropy","interactionEntropy","setMouseMode","mouseMode","mouseModes","toggle3d","rel","href","BlinkingComponent","blinkFor","unblink","Card","ele","includes","offsetParent","rect","getBoundingClientRect","position","click","x","clientX","y","clientY","element","type","icon","isSelected","blink","style","zIndex","offsetTop","top","entropyStyle","shadowOffsetX","offsetY","shadowOffsetY","_style","_div","children","isHidden","face","MouseHand","onMouseMove","positionFixed","updateDisplay","myRef","React","createRef","bind","onKeyDown","putBack","removeEventListener","node","current","hand","parent","source","left","getOffsetTop","ref","stack","card","TouchHand","c","Hand","p","length","StackBase","classname","visible","Foundation","stackindex","Stacks","stacks","foundation","Stock","Tableau","getOffset","i","tableau","Waste","Board","viewClassname","boardClassname","is3D","stock","handlers","clickStock","waste","clickWaste","clickFoundation","clickTableau","game","causeEntropy","lvl","level","random","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","DeckSize","Suits","heart","color","club","diamond","spade","Deck","keys","Object","deckSize","key","flat","shuffleArray","array","j","getCurrentAccepted","currentFoundation","acceptedCards","accepts","currentAccepted","add","push","usedCards","pop","remove","getTop","getPreviousUsed","countCards","f","parseInt","reduce","a","b","setEntropy","forEach","suit","slice","reverse","origStack","Game","popPreviousState","id","isRequested","previousStates","popPrevious","previous","memorable","modelEquals","pow","multiplicator","modified","currentMove","rateMove","every","stackEquals","stacksEqual","console","debug","move","sourceIsTableau","substr","targetIsTableau","sourceIsFoundation","targetIsFoundation","isHoldingCard","currentCard","hasMoreThanOneCard","isFromCurrentSource","splice","Settings","isTouch","is_touch_device","drawModes","drawMode","prefixes","split","DocumentTouch","query","join","matchMedia","matches","error","isOnTop","getStack","range","indexOf","getCard","popWithFollowing","result","stackEntropy","uncover","entropy","next","concat","setCardProperties","TableauGenerator","generateStacks","offset","deck","pointer","oldpointer","ids","template","generateStack","tryPutDown","canAdd","popTop","recycle","Facade","getInitialState","Service","stateholder","dispatchPutDown","_setState","_dispatchPutDown","dispatchPickup","_dispatchPickup","_blink","selector","startBlink","registerBlink","setTimeout","toggleBlink","Model","pushPreviousState","handler","_card","src","putDown","registerMove","tryDetectEnd","pickUp","registerPickup","s","currentState","was3D","moveToWaste","recycleWaste","registerRecycle","canPutDown","tryUncover","registerUncover","shuffle","getHandlers","getHandler","App","subscribe","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9b3e6e80.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeElapsed: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            this.setState((state) => {\r\n                //@todo padleft or string format : 00:01\r\n                let msec = (this.props.end || Date.now()) - this.props.started;\r\n                const hh = Math.floor(msec / 1000 / 60 / 60);\r\n                msec -= hh * 1000 * 60 * 60;\r\n                const mm = Math.floor(msec / 1000 / 60);\r\n                msec -= mm * 1000 * 60;\r\n                const ss = Math.floor(msec / 1000);\r\n                msec -= ss * 1000;\r\n                state.timeElapsed = hh ? hh + \":\" + mm + \":\" + ss : mm + \":\" + ss;\r\n                return { ...state };\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return <span className={this.props.className}>Time Elapsed: {this.state.timeElapsed}</span>;\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Undo extends Component {\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            const evtobj = window.event ? event : e;\r\n            if (evtobj.keyCode == 90 && evtobj.ctrlKey) this.props.undo();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.props.undo}>undo (penalty:-{this.props.undoLabel()})</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Clock from \"./Clock\";\r\nimport React from \"react\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-grid-container\">\r\n                <div className=\"stats\">\r\n                    Game Stats\r\n                    <div>Points: {props.model.points}</div>\r\n                    <Clock className=\"clock\" started={props.model.started} end={props.model.end} />\r\n                    <div>Is Ended: {props.model.isEnded ? \"Y\" : \"N\"}</div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    Game Actions\r\n                    <div>\r\n                        <button onClick={props.reset}>reset</button>\r\n                    </div>\r\n                    <Undo undo={props.undo} undoLabel={props.undoLabel} />\r\n                    <div></div>\r\n                </div>\r\n\r\n                <div className=\"entropy\">\r\n                    Entropy\r\n                    <div>\r\n                        <button onClick={props.beat}>beat on table</button>\r\n                    </div>\r\n                    <div>\r\n                        Base Level\r\n                        <select onChange={(e) => props.setBaseEntropy(e.target.value)} value={props.settings.baseEntropy}>\r\n                            {props.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        Interaction Level\r\n                        <select onChange={(e) => props.setInteractionEntropy(e.target.value)} value={props.settings.interactionEntropy}>\r\n                            {props.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"settings\">\r\n                    UI Settings\r\n                    <div>\r\n                        Card\r\n                        <select onChange={(e) => props.setMouseMode(e.target.value)} value={props.settings.mouseMode}>\r\n                            {props.settings.mouseModes.map((mouseMode) => (\r\n                                <option key={mouseMode} value={mouseMode}>\r\n                                    {mouseMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={props.toggle3d}>Toggle 3D</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"report\">\r\n                    Report Issues\r\n                    <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/ckonig/solitaire/issues\">\r\n                        here\r\n                    </a>\r\n                    .\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Footer;\r\n","import { Component } from \"react\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    componentDidUpdate() {\r\n        if (this.props.model.blinkFor) {\r\n            this.props.model.unblink();\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onClick = (e) => {\r\n        let ele = e.target;\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            click: {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n\r\n        this.props.onClick({ ...this.props.model }, position);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        //@todo 3d flip https://3dtransforms.desandro.com/card-flip\r\n        //run css animation first like this:\r\n        //https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n        //then trigger re-render through state change in parent\r\n        const model = props.model;\r\n        let className = props.className + \" card card-base suit-\" + model.type.icon;\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        const style = {\r\n            zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };        \r\n        if (!props.isSelected && !props.blink && (props.shadowOffsetX || (!props.shadowOffsetX && props.shadowOffsetX === 0))) {\r\n            const offsetY = props.shadowOffsetY || \"-1\";\r\n            style[\"boxShadow\"] = props.shadowOffsetX + \"px \" + offsetY + \"px 4px 4px rgba(0, 0, 0, 0.75)\";\r\n        }\r\n\r\n        const _style = {};\r\n\r\n        if (!this.props.onClick) {\r\n            style[\"pointerEvents\"] = \"none\";\r\n            _style[\"pointerEvents\"] = \"none\";\r\n        }\r\n\r\n        const _div = (props) => (\r\n            <div style={_style} className={props.className}>\r\n                {props.children}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <_div className=\"stack-base\">\r\n                <div style={style} className={className} onClick={this.onClick ? this.onClick : null}>\r\n                    {model.isHidden ? (\r\n                        <div className=\"card-back quarot\">&nbsp;</div>\r\n                    ) : (\r\n                        <div className=\"card-grid-container\">\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-left\">{model.face}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div className=\"mainface\">\r\n                                <div className=\"align-center\">{model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-right\">{model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </_div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        if (this.props.putBack) {\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef} style={{}}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card model={card} key={index} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends Component {\r\n    render() {\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.props.hand &&\r\n                this.props.hand.stack &&\r\n                this.props.hand.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        shadowOffsetX={this.props.shadowOffsetX}\r\n                        shadowOffsetY={this.props.shadowOffsetY}\r\n                        offsetTop={this.props.offsetTop + index * 24}\r\n                        zIndex={1000 + index * 20}\r\n                        isSelected={true}\r\n                        onClick={(c) => this.props.onClick(c)}\r\n                    />\r\n                )),\r\n        ];\r\n    }\r\n}\r\n","import MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    if (!props.model || props.parent !== props.model.source) {\r\n        return null;\r\n    }\r\n    const putBack = (c, p) => props.onClick(props.stack[props.stack.length - 1], p, props.stack.length - 1);\r\n    if (props.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parent} hand={props.model} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (props.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <TouchHand\r\n                parent={props.parent}\r\n                hand={props.model}\r\n                shadowOffsetX={props.shadowOffsetX}\r\n                shadowOffsetY={props.shadowOffsetY}\r\n                offsetTop={props.offsetTop}\r\n                onClick={putBack}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base\";\r\n\r\n    if (props.visible) {\r\n        if (props.blink) {\r\n            classname += \" socket-blink\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n    return (\r\n        <div className={classname} onClick={()=> props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    static Stacks = (props) =>\r\n        props.model.stacks.map((foundation, index) => (\r\n            <Foundation\r\n                hand={props.hand}\r\n                key={index}\r\n                model={foundation}\r\n                stackindex={index}\r\n                settings={props.settings}\r\n                onClick={(c, p) => props.onClick(c, p, index)}\r\n            />\r\n        ));\r\n    render() {\r\n        const props = this.props;\r\n        const model = this.props.model;\r\n        const stackindex = this.props.stackindex;\r\n        const settings = this.props.settings;\r\n        return (\r\n            <div key={stackindex}>\r\n                <StackBase blink={model.blinkFor} onClick={() => props.onClick(null, null, stackindex)} visible={!model.stack.length}>\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        shadowOffsetX={stackindex * 2}\r\n                        shadowOffsetY={-3}\r\n                        blink={model.blinkFor}\r\n                        onClick={(c, p) => props.onClick(c, p, stackindex)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={settings}\r\n                    parent={\"foundation-\" + stackindex}\r\n                    shadowOffsetX={stackindex * 2}\r\n                    shadowOffsetY={-3}\r\n                    onClick={(c, p) => props.onClick(model.stack[model.stack.length - 1], p, stackindex)}\r\n                    model={props.hand}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} visible={!props.model.stack.length}  />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        offsetTop={index/2*-1}\r\n                        blink={props.model.blinkFor}\r\n                        shadowOffsetX={-6}\r\n                        shadowOffsetY={-3}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    static Stacks = (props) =>\r\n        props.model.stacks.map((tableau, index) => (\r\n            <Tableau\r\n                settings={props.settings}\r\n                key={index}\r\n                index={index}\r\n                model={tableau}\r\n                hand={props.hand}\r\n                onClick={(card, p) => props.onClick(card, p, index)}\r\n            />\r\n        ));\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, \"tableau-\" + props.index)}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        shadowOffsetX={(4 - 7 + props.index) * 2}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={props.settings}\r\n                    parent={\"tableau-\" + props.index}\r\n                    onClick={props.onClick}\r\n                    model={props.hand}\r\n                    stack={props.model.stack}\r\n                    shadowOffsetX={(4 - 7 + props.index) * 2}\r\n                    offsetTop={getOffset(props.model.stack.length)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick(null, null)} visible={!props.model.stack.length} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        shadowOffsetX={-4}\r\n                        shadowOffsetY={-3}\r\n                        offsetTop={(index / 2) * -1}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        onClick={(c, p) => props.onClick(c, p)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={props.model.settings}\r\n                    shadowOffsetX={-4}\r\n                    shadowOffsetY={-3}\r\n                    offsetTop={(props.model.stack.length / 2) * -1}\r\n                    parent=\"waste\"\r\n                    onClick={props.onClick}\r\n                    model={props.hand}\r\n                    stack={props.model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Footer from \"./Footer\";\r\nimport Foundation from \"./Foundation\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = (props) => {\r\n    let viewClassname = \"game-view\";\r\n    let boardClassname = \"board-grid-container\";\r\n    if (props.model.settings.is3D) {\r\n        viewClassname += \" game-view-3d\";\r\n        boardClassname += \" board-3d\";\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"layout-grid-container\">\r\n                <div className={viewClassname}>\r\n                    <div className={boardClassname}>\r\n                        <Stock model={props.model.stock} onClick={props.handlers.clickStock} />\r\n                        <Waste model={props.model.waste} hand={props.model.hand} onClick={props.handlers.clickWaste} />\r\n                        <div className=\"spacer\">&nbsp;</div>\r\n                        <Foundation.Stacks\r\n                            settings={props.model.settings}\r\n                            model={props.model.foundation}\r\n                            hand={props.model.hand}\r\n                            onClick={props.handlers.clickFoundation}\r\n                        />\r\n                        <Tableau.Stacks\r\n                            settings={props.model.settings}\r\n                            model={props.model.tableau}\r\n                            hand={props.model.hand}\r\n                            onClick={props.handlers.clickTableau}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Footer\r\n                    //@todo shrink interface\r\n                    reset={props.handlers.reset}\r\n                    undoLabel={props.handlers.undoLabel}\r\n                    undo={props.handlers.undo}\r\n                    setMouseMode={props.handlers.setMouseMode}\r\n                    setBaseEntropy={props.handlers.setBaseEntropy}\r\n                    setInteractionEntropy={props.handlers.setInteractionEntropy}\r\n                    toggle3d={props.handlers.toggle3d}\r\n                    beat={props.handlers.beat}\r\n                    settings={props.model.settings}\r\n                    model={props.model.game}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.offsetTop = 0;\r\n        this.causeEntropy(1);\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        //@todo this is awesome but move it to model\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n            if (random()) {\r\n                //this.offsetTop -= randomInt(lvl , lvl);\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = orig.entropyStyle\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))]).flat();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    //@todo same (similar) in tableau\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = \"foundation-\" + index;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => {\r\n        return [...this.stacks[index].usedCards].pop();\r\n    };\r\n\r\n    countCards = () => {\r\n        return this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation(orig.settings);\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Game {\r\n    constructor() {\r\n        this.points = 0;\r\n        this.started = Date.now();\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove(target, source) {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n\r\n        this.points += this.rateMove(currentMove);\r\n        return true;\r\n    }\r\n\r\n    stackEquals(a, b) {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    }\r\n\r\n    stacksEqual(a, b) {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    }\r\n\r\n    modelEquals(a, b) {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    }\r\n\r\n    pushPreviousState(state) {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    }\r\n\r\n    registerPickup() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        if (previous && previous.game) {\r\n            previous.game.points = Math.min(previous.game.points, this.points) - Math.pow(2, this.multiplicator);\r\n            previous.game.multiplicator = this.multiplicator + 1;\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        if (this.points > 0) {\r\n            if (this.points < 100) {\r\n                this.points = 0;\r\n            } else {\r\n                this.points -= 100;\r\n            }\r\n        }\r\n        console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n    }\r\n\r\n    registerUncover() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n        return true;\r\n    }\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    rateMove(move) {\r\n        const sourceIsTableau = move.source.substr(0, 7) == \"tableau\";\r\n        const targetIsTableau = move.target.substr(0, 7) == \"tableau\";\r\n        const sourceIsFoundation = move.source.substr(0, 10) == \"foundation\";\r\n        const targetIsFoundation = move.target.substr(0, 10) == \"foundation\";\r\n        if (sourceIsTableau) {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (sourceIsFoundation) {\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game();\r\n        copy.points = orig.points;\r\n        copy.started = orig.started;\r\n        copy.modified = orig.modified;\r\n        copy.multiplicator = orig.multiplicator;\r\n        copy.memorable = orig.memorable;\r\n        copy.previousStates = [...orig.previousStates];\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp(stack, source, position) {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack;\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    }\r\n\r\n    putDown() {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    }\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack)\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    }\r\n}\r\n","export default class Settings {\r\n    constructor() {\r\n        const isTouch = this.is_touch_device();\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = isTouch ? \"remain-on-stack\" : \"follow-cursor\";\r\n\r\n        this.entropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\n        this.baseEntropy = isTouch ? 1 : 2;\r\n        this.interactionEntropy = isTouch ? 1 : 2;\r\n\r\n        this.drawModes = [\"single\"];\r\n        this.drawMode = \"single\"; //@todo implement triple draw\r\n\r\n        this.is3D = false;\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = (query) => window.matchMedia(query).matches;\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings();\r\n        copy.is3D = orig.is3D;\r\n        return copy;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack, settings) {\r\n        this.settings = settings;\r\n        this.stack = stack;\r\n    }\r\n\r\n    recycle(waste) {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map((element) => {\r\n                element.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n                element.isHidden = true;\r\n                return element;\r\n            });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    }\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach(element => element.causeEntropy(Math.min(lvl,1)));\r\n        return this;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    constructor(cards, settings) {\r\n        this.stacks = !cards ? [] : new TableauGenerator().generateStacks(cards);\r\n        this.settings = settings;\r\n    }\r\n\r\n    getStack = (index) => {\r\n        return this.stacks[index];\r\n    };\r\n\r\n    accepts = (index, current) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color;\r\n    };\r\n\r\n    getCard = (index, card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card, i) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index, card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card, index) => {\r\n        card.source = \"tableau-\" + index;\r\n        return card;\r\n    };\r\n\r\n    getTop(index, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1 - offset];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Tableau([], orig.settings);\r\n        copy.stacks = orig.stacks.map((stack) => ({ stack: Card.copyAll(stack.stack) }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n\r\nclass TableauGenerator {\r\n    generateStacks = (deck) => {\r\n        this.deck = deck;\r\n        this.pointer = 0;\r\n        this.oldpointer = this.pointer;\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => this.template(id));\r\n        ids.reverse().forEach((id) => {\r\n            this.generateStack(id);\r\n        });\r\n        return this.stacks;\r\n    };\r\n\r\n    template = (id) => ({\r\n        stack: [],\r\n        id,\r\n    });\r\n\r\n    generateStack = (id) => {\r\n        this.pointer += 6 - id + 1;\r\n        this.stacks[id].stack = this.deck\r\n            .slice(this.oldpointer, this.pointer)\r\n            .map((c) => ({\r\n                ...c,\r\n                isHidden: true,\r\n                source: \"tableau-\" + id,\r\n            }))\r\n            .reverse();\r\n        if (this.stacks[id].stack[this.stacks[id].stack.length - 1]) {\r\n            this.stacks[id].stack[this.stacks[id].stack.length - 1].isHidden = false;\r\n        }\r\n        this.oldpointer = this.pointer;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.stack = [];\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste(orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    }\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach(element => element.causeEntropy(Math.min(lvl,1)));\r\n        return this;\r\n    }\r\n}\r\n","import Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Facade {\r\n    static getInitialState = (deck) => {\r\n        const settings = new Settings();\r\n        const state = {\r\n            stock: new Stock([...deck.cards.slice(28)], settings),\r\n            waste: new Waste(settings),\r\n            foundation: new Foundation(settings),\r\n            tableau: new Tableau([...deck.cards.slice(0, 28)], settings),\r\n            hand: new Hand(),\r\n            game: new Game(),\r\n            settings: settings,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n        };\r\n    };\r\n\r\n    static setEntropy = (state, lvl) => {\r\n        return {\r\n            stock: state.stock.setEntropy(lvl),\r\n            waste: state.waste.setEntropy(lvl),\r\n            foundation: state.foundation.setEntropy(lvl),\r\n            tableau: state.tableau.setEntropy(lvl),\r\n            hand: state.hand,\r\n            game: state.game,\r\n            settings: state.settings,\r\n        };\r\n    };\r\n}\r\n","import Model from \"../Model/Facade\";\r\n\r\nexport default class Service {\r\n    getHandler(hand) {\r\n        let handler = \"dispatchPickup\";\r\n        if (hand && hand.isHoldingCard()) {\r\n            handler = \"dispatchPutDown\";\r\n        }\r\n        return this[handler];\r\n    }\r\n\r\n    constructor(stateholder) {\r\n        this._setState = (a, b) =>\r\n            stateholder.setState((state) => {\r\n                state.game.modified = false;\r\n                const previous = Model.copy(state);\r\n                a(state);\r\n                if (state.game.modified) {\r\n                    //@todo  use localstorage for previous state, reduce react state for performance\r\n                    state.game.pushPreviousState(previous);\r\n                    return { ...state };\r\n                }\r\n\r\n                // @todo enable undoing via browser back gesture/button\r\n                return null;\r\n            }, b);\r\n    }\r\n\r\n    dispatchPutDown = (card, position, index) => {\r\n        this._setState(\r\n            (state) => {\r\n                if (state.hand.isHoldingCard()) {\r\n                    this._dispatchPutDown(card, position, state, index);\r\n                }\r\n            },\r\n            null,\r\n            true\r\n        );\r\n    };\r\n\r\n    dispatchPickup = (card, position, index) => {\r\n        this._setState((state) => {\r\n            if (!state.hand.isHoldingCard()) {\r\n                this._dispatchPickup(card, position, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    _blink = (selector, state) => this.startBlink(selector, 10, state);\r\n\r\n    startBlink = (selector, blinkFor, state) => {\r\n        selector(state).blinkFor = blinkFor;\r\n        state.game.registerBlink();\r\n        selector(state).unblink = () => setTimeout(() => this.toggleBlink(selector, 0), 100);\r\n    };\r\n\r\n    toggleBlink = (selector, blinkFor) =>\r\n        this._setState((state) => {\r\n            selector(state).blinkFor = blinkFor;\r\n            state.game.registerBlink();\r\n        });\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Foundation extends Service {\r\n    _dispatchPutDown = (_card, position, state, index) => {\r\n        if (!state.hand.hasMoreThanOneCard() && state.foundation.accepts(index, state.hand.currentCard())) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (_card, position, state, index) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryDetectEnd(state) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n\r\n    blink = (index, state) => this._blink((s) => s.foundation.stacks[index], state);\r\n}\r\n","export default class Game {\r\n    constructor(getInitialState) {\r\n        this.getInitialState = getInitialState;\r\n    }\r\n\r\n    reset = (stateholder) =>\r\n        stateholder.setState((state) => (state.game.previousStates ? state.game.previousStates[0] : { ...this.getInitialState() }));\r\n\r\n    undo = (id, stateholder, currentState) => stateholder.setState((state) => state.game.popPreviousState(id, currentState) || null);\r\n\r\n    undoLabel = (stateholder) => Math.pow(2, stateholder.state.game.multiplicator);\r\n\r\n    getHandlers(stateholder, state) {\r\n        return {\r\n            undo: () => this.undo(state.game.previousStates.length - 1, stateholder, state),\r\n            reset: () => this.reset(stateholder),\r\n            undoLabel: () => Math.pow(2, stateholder.state.game.multiplicator),\r\n        };\r\n    }\r\n}\r\n","import Facade from \"../Model/Facade\";\r\n\r\nexport default class Settings {\r\n    beat = (stateholder) => {\r\n        this.setBaseEntropy(stateholder, 4);\r\n    };\r\n\r\n    setBaseEntropy = (stateholder, lvl) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.baseEntropy = lvl;\r\n            stateholder.setState((state) => Facade.setEntropy(state, state.settings.baseEntropy));\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setInteractionEntropy = (stateholder, lvl) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.interactionEntropy = lvl;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setMouseMode = (stateholder, mm) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.mouseMode = mm;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    toggle3d = (stateholder, was3D) => {\r\n        stateholder.setState((state) => {\r\n            if (state.settings.is3D == was3D) {\r\n                state.settings.is3D = !state.settings.is3D;\r\n            }\r\n            return state;\r\n        });\r\n    };\r\n\r\n    getHandlers(stateholder, state) {\r\n        return {\r\n            beat: () => this.beat(stateholder),\r\n            setBaseEntropy: (lvl) => this.setBaseEntropy(stateholder, lvl),\r\n            setInteractionEntropy: (lvl) => this.setInteractionEntropy(stateholder, lvl),\r\n            setMouseMode: (mm) => this.setMouseMode(stateholder, mm),\r\n            toggle3d: () => this.toggle3d(stateholder, state.settings.is3D),\r\n        };\r\n    }\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Stock extends Service {\r\n    _dispatchPutDown = (card,position, state) => this.blink(card, state);\r\n\r\n    _dispatchPickup = (card,position, state) => (card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state));\r\n\r\n    moveToWaste = (card, state) =>\r\n        state.stock.isOnTop(card) && state.waste.add(state.stock.stack.pop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    recycleWaste = (_card, state) =>\r\n        !state.stock.getTop() && !!state.waste.getTop() && state.stock.recycle(state.waste.recycle()) && state.game.registerRecycle(state);\r\n\r\n    blink = (_card, state) => this._blink((s) => s.stock, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Tableau extends Service {\r\n    _dispatchPutDown = (card, position, state, index) => {\r\n        if (this.canPutDown(card, state, index)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    canPutDown = (card, state, index) =>\r\n        (card && card.isHidden && state.hand.isFromCurrentSource(card)) ||\r\n        state.tableau.accepts(index, state.hand.currentCard()) ||\r\n        (!card && state.hand.source == \"tableau-\" + index);\r\n\r\n    _dispatchPickup = (card, position, state, index) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card, index, state) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n\r\n    blink = (index, state) => this._blink((s) => s.tableau.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Waste extends Service {\r\n    _dispatchPutDown = (card, position, state) =>\r\n        (state.hand.source == \"waste\" &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state);\r\n\r\n    _dispatchPickup = (card, position, state) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state);\r\n\r\n    blink = (state) => this._blink((s) => s.waste, state);\r\n}\r\n","import Deck from \"../Model/Deck/Deck\";\r\nimport Foundation from \"./Foundation\";\r\nimport Game from \"./Game\";\r\nimport Model from \"../Model/Facade\"\r\nimport Settings from \"./Settings\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Facade {\r\n    constructor() {\r\n        this.deck = new Deck();\r\n        this.deck.shuffle();\r\n    }\r\n\r\n    getInitialState = () => Model.getInitialState(this.deck);\r\n\r\n    getHandlers(stateholder, state) {\r\n        return {\r\n            ...new Game(this.getInitialState).getHandlers(stateholder, state),\r\n            ...new Settings().getHandlers(stateholder, state),\r\n            clickTableau: new Tableau(stateholder, state.hand).getHandler(state.hand),\r\n            clickFoundation: new Foundation(stateholder).getHandler(state.hand),\r\n            clickStock: new Stock(stateholder).getHandler(state.hand),\r\n            clickWaste: new Waste(stateholder).getHandler(state.hand),\r\n        };\r\n    }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport Board from \"./View/Board\";\r\nimport { Component } from \"react\";\r\nimport Game from \"./Service/Facade\";\r\nimport React from \"react\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //@todo allow resuming earlier game.\r\n        this.game = new Game();\r\n        this.state = this.game.getInitialState(this);\r\n    }\r\n\r\n    render() {\r\n        const handlers = this.game.getHandlers(this, this.state);\r\n        return <Board subscribe={this.subscribe} model={this.state} game={this.game} handlers={handlers} />;\r\n    }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}