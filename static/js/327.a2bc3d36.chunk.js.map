{"version":3,"file":"static/js/327.a2bc3d36.chunk.js","mappings":"4LAQaA,EAAwC,CACjD,EAAG,CACCC,GAAI,EACJC,KAAM,WACNC,YAAa,UACbC,YAAa,GAEjB,EAAG,CACCH,GAAI,EACJC,KAAM,WACNC,YAAa,WACbC,YAAa,I,UCZfC,EAAgBC,EAAAA,cAAoC,CAAEC,WAAW,EAAOC,aAAc,4BAC/EC,EAAwBJ,EAAcK,SAEnD,EADyB,SAAnBC,mBAAmB,OAAML,EAAAA,WAAiBD,I,4DCL3BO,EAAAA,WAEjB,iBAAe,uBADfC,WACc,EACV,IAAMC,EAAOC,OAAOD,KAAKE,EAAAA,GACzBC,KAAKJ,OAAQK,EAAAA,EAAAA,MACRC,KAAI,SAACC,GAAD,cAAkBN,EAAKK,KAAI,SAACE,GAAD,OAAS,IAAIC,EAAAA,EAAKF,EAAUJ,EAAAA,EAAMK,IAAM,UACvEE,OACAC,UAoBR,OAnBA,kCAED,SAAAC,UAEI,OADAR,KAAKS,aAAaT,KAAKJ,OAChBI,O,0BAIX,SAAAS,aAAaC,GACT,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADH,EAEhB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFgC,KAE5BD,EAAMG,GAFsB,QAI9C,kBAED,SAAAI,OACI,IAAMC,EAAS,IAAIvB,KAEnB,OADAuB,EAAOtB,MAAQS,EAAAA,EAAAA,QAAaL,KAAKJ,OAC1BsB,MACV,KA3BgBvB,G,6BCUfwB,EAAQ,SAARA,MAASC,EAAuBC,EAAqBrC,IAClDqC,EAAEC,eAAeC,aAAeH,EAAMG,cACvCF,EAAEG,eAAiBC,EAAAA,EAAAA,MAGvBJ,EAAEC,gBAAF,UAAwBF,GACxBC,EAAEK,aAAe1C,GAGA2C,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,iBAAAA,EAAAA,EAAAA,GAAAA,KAAAA,kBAAAA,EACVC,MAAQ,CACXC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbR,aAAa,GALAI,EAQVK,QAAU,CACbH,WAAW,EACXC,aAAa,EACbC,aAAa,EACbR,aAAa,GAZAI,EAeVM,YAAc,CACjBJ,WAAW,EACXC,aAAa,EACbC,aAAa,EACbR,aAAa,GAnBAI,EAsBVO,IAAsB,CACzB,CACIlD,GAAI,EACJmD,KAAMC,EAAAA,IACNC,MAAO,QACPC,UAAS,UAAMX,EAAcC,OAC7BT,MAAO,eAACE,GAAD,OAAOF,EAAMQ,EAAcC,MAAOP,EAAG,KAEhD,CACIrC,GAAI,EACJmD,KAAMI,EAAAA,IACNF,MAAO,UACPC,UAAS,UAAMX,EAAcK,SAC7Bb,MAAO,eAACE,GAAD,OAAOF,EAAMQ,EAAcK,QAASX,EAAG,KAElD,CACIrC,GAAI,EACJmD,KAAMK,EAAAA,IACNH,MAAO,cACPC,UAAS,UAAMX,EAAcM,aAC7Bd,MAAO,eAACE,GAAD,OAAOF,EAAMQ,EAAcM,YAAaZ,EAAG,MA1CzCM,EA8CVc,YAAc,SAACH,GAClB,IAAMI,EAAUf,EAAcO,IAAIS,QAAO,SAACC,GAAD,OAAYjB,EAAckB,OAAOD,EAAON,SAAUA,MAC3F,OAAII,EAAQ9B,OAAS,EACV8B,EAAQ,GAAG1D,IAEd,GAnDK2C,EAsDVkB,OAAS,SAACC,EAASC,GAAV,OACZD,EAAGjB,YAAckB,EAAGlB,WACpBiB,EAAGhB,cAAgBiB,EAAGjB,aACtBgB,EAAGf,cAAgBgB,EAAGhB,aACtBe,EAAGvB,cAAgBwB,EAAGxB,aChF9B,IAiBA,EAjBsB,SAAhByB,gBACF,IACI,IAAMC,EAAW,4BAA4BC,MAAM,KAInD,MAAI,iBAAkBC,QAA2C,qBAAzBA,OAAOC,eAAiCC,oBAAoBF,OAAOC,eAFhG,SAALE,GAAMC,GAAD,OAAWJ,OAAOK,WAAWD,GAAOE,QAMxCH,CAAG,CAAC,IAAKL,EAASS,KAAK,oBAAqB,SAAU,KAAKA,KAAK,KACzE,MAAOC,GAEL,OADAC,QAAQC,MAAM,wBAAyBF,IAChC,ICFFG,EAA4C,CACrDxC,gBAAe,UAAMK,EAAcK,SACnC+B,mBAAoB,EACpBrC,aAAc,EACdsC,UAAWhB,IACXiB,aAAa,EACbC,aAAa,EACbC,OAAO,EACPC,gBAAiB,CACbC,YAAarB,IAAkB,EAAI,EACnCsB,mBAAoBtB,IAAkB,EAAI,GAE9CuB,gBAAiB,CAAEC,MAAM,EAAMC,UAAU,EAAMjE,SAAS,GACxDgB,eAAgBC,EAAAA,EAAAA,QAChBiD,QAAS3F,GAiBP4F,EAAqBtF,EAAAA,cAAyC,CAChEuF,MAAO,CACHb,mBAAoB,EACpBrC,aAAc,EACdJ,eAAgB,GAChB8C,gBAAiB,GACjBJ,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,OAAO,EACP3C,eAAgBC,EAAAA,EAAAA,QAChB8C,gBAAiB,CAAEC,MAAM,EAAMC,UAAU,EAAMjE,SAAS,GACxDkE,QAAS3F,GAEb8F,SAAU,wBAGDC,EAAsBH,EAAmBlF,SAItD,EAF8B,SAAxBsF,wBAAwB,OAAM1F,EAAAA,WAAiBsF,I,UCZrD,EAvC8C,CAC1C,CACI3F,GAAI,EACJsD,SAAU,CAAE0C,SAAU,SAAUC,cAAe,YAC/C9C,KAAM+C,EAAAA,IACNC,MAAO,CAAC,cAAe,aAE3B,CACInG,GAAI,EACJsD,SAAU,CAAE0C,SAAU,SAAUC,cAAe,UAC/C9C,KAAMiD,EAAAA,IACND,MAAO,CAAC,cAAe,iBAE3B,CACInG,GAAI,EACJsD,SAAU,CAAE0C,SAAU,SAAUC,cAAe,UAC/C9C,KAAMkD,EAAAA,IACNF,MAAO,CAAC,cAAe,uBAE3B,CACInG,GAAI,EACJsD,SAAU,CAAE0C,SAAU,SAAUC,cAAe,YAC/C9C,KAAMmD,EAAAA,IACNH,MAAO,CAAC,eAAgB,aAE5B,CACInG,GAAI,EACJsD,SAAU,CAAE0C,SAAU,SAAUC,cAAe,UAC/C9C,KAAMoD,EAAAA,IACNJ,MAAO,CAAC,gBAAiB,iBAE7B,CACInG,GAAI,EACJsD,SAAU,CAAE0C,SAAU,SAAUC,cAAe,UAC/C9C,KAAMqD,EAAAA,IACNL,MAAO,CAAC,gBAAiB,wB,oBCrCpBM,EAAmC,CAC5C,CACIzG,GAAI,EACJmD,KAAMuD,EAAAA,IACNxG,YAAa,QACbC,YAAa,EACbgG,MAAO,CAAC,WAAY,aAExB,CACInG,GAAI,EACJmD,KAAMwD,EAAAA,IACNzG,YAAa,UACbC,YAAa,EACbgG,MAAO,CAAC,cAEZ,CACInG,GAAI,EACJmD,KAAMwD,EAAAA,IACNzG,YAAa,UACbC,YAAa,EACbgG,MAAO,CAAC,cAEZ,CACInG,GAAI,EACJmD,KAAMyD,EAAAA,IACN1G,YAAa,WACbC,YAAa,EACbgG,MAAO,CAAC,WAAY,SAExB,CACInG,GAAI,EACJmD,KAAMyD,EAAAA,IACN1G,YAAa,WACbC,YAAa,EACbgG,MAAO,CAAC,WAAY,WAExB,CACInG,GAAI,EACJmD,KAAMyD,EAAAA,IACN1G,YAAa,WACbC,YAAa,EACbgG,MAAO,CAAC,WAAY,Y,SCtC5B,EAToB,SAAdU,cACF,IAAQC,GAAgBC,EAAAA,EAAAA,KAAhBD,YACR,OACI,gBAAKE,UAAU,SAAf,UACI,mBAAQC,QAASH,EAAjB,6BCASI,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,iBAAAA,IAAAA,EAAAA,MAAAA,EAAAA,EAAAA,GAAAA,KAAAA,gBAAAA,KAQjBC,WAAa,WACT,IAAMC,EAAUC,aAAaC,QAAQ,WACrC,OAAOF,KAAaG,SAASH,IAChC,KAEDI,YAAmC,iBAAO,CACtCC,OAAQ,8FACRC,QAAS,mBAEL,OADAL,aAAaM,QAAQ,UAAW,MACzB,KAJoB,KAQnCC,UAAY,kBAAO,EAAKT,aAAe,EAAKU,gBAAkB,EAAKL,eAAvD,KAEZK,cAAqC,iBAAO,CACxCJ,OAAQ,2DACRC,QAAS,mBAEL,OADAL,aAAaS,SACN,KAJsB,KAQrCC,MAAQ,SAACC,GACD,EAAKb,cACLE,aAAaM,QAAQ,QAASM,KAAKC,UAAUF,KAEpD,KAEDG,iBAAmB,WACf,GAAI,EAAKhB,aAAc,CACnB,IAAMvB,EAAQyB,aAAaC,QAAQ,SACnC,OAAgB,MAAT1B,EAAgBqC,KAAKG,MAAMxC,GAAS,KAE/C,OAAO,SA1CMsB,EACVmB,cAAAA,EADUnB,EAEVoB,YAAc,WAIjB,OAHKpB,EAAemB,WAChBnB,EAAemB,SAAW,IAAInB,GAE3BA,EAAemB,UCDvB,IAAME,EAA4B,SAA5BA,0BAA6BC,EAAcC,GACpD,IAAIzB,EAAYwB,EAOhB,OANIC,EAAMC,WACN1B,GAAa,YAEbyB,EAAME,WACN3B,GAAa,aAEVA,GAGE4B,EAAiB,SAAjBA,eAAkBH,EAAkBI,GAC7CxI,EAAAA,WAAgB,WACRoI,EAAMC,UAAYG,GAAWA,EAAQC,SAAWD,EAAQC,UAAYzE,SAAS0E,eAC7EF,EAAQC,QAAQE,UAErB,CAACP,EAAMC,SAAUG,KClBlBI,EAAqB,SAArBA,mBAAsBR,GACxB,IAAQS,GAAenC,EAAAA,EAAAA,KAAfmC,WACFR,EAAW,SAAXA,SAAYS,EAAWC,GAAZ,MAA+C,WAArBF,EAAWF,OAAsBE,EAAWG,OAAOD,IAAMA,GAAKF,EAAWG,OAAOF,IAAMA,GAC3HN,EAAUxI,EAAAA,OAAgC,MAChDuI,EAAe,CAAEF,SAAUA,EAASD,EAAMU,EAAGV,EAAMW,IAAMP,GACzD,IAAI7B,EAAY,eAIhB,OAHI0B,EAASD,EAAMU,EAAGV,EAAMW,KACxBpC,GAAa,YAETyB,EAAMnI,UAqBV,MApBA,oBACIgJ,IAAKT,EACL7B,UAAWA,EACXC,QAAS,mBACL,IACMG,GADU,IAAIF,GACIM,eAGnBiB,EAAMnI,WAAaoH,QAAQN,EAAQK,UACpCL,EAAQM,UACRe,EAAMlI,cAAa,KAV/B,WAcI,gBAAKyG,UAAU,OAAf,2BACA,iBAAKA,UAAU,UAAf,WACI,6EADJ,+FAgBZ,EARqB,SAAfuC,aAAgBd,GAClB,MAAoC/H,IAA5BJ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aACnB,MAAuB,qBAAZkI,EAAMW,GAAwC,qBAAZX,EAAMU,EACxC,MAEJ,SAACF,EAAD,CAAoBG,EAAGX,EAAMW,EAAGD,EAAGV,EAAMU,EAAG7I,UAAWA,EAAWC,aAAcA,K,mBC3B3F,EAlBY,SAANiJ,IAAOf,GACT,GAAsB,oBAAXA,EAAMU,GAA8C,oBAAnBV,EAAMgB,UAC9C,OAAO,KAEX,IAAMC,EAAa,SAAbA,WAAcC,EAAYC,GAC5B,IAAKD,EAAO,OAAO,KACnB,IAGiB,EAAZlB,EAAMoB,MAHI,SAATC,OAAUC,GACZA,EAAEtB,EAAMU,GAAK,GAAGa,QAAQJ,GAAS,GAAK,CAAER,EAAGQ,EAAOT,EAAGV,EAAMU,GAG3DW,EAAO,UAAArB,EAAMgB,iBAAN,eAAiBQ,OAAQ,IAEpC,OAAO5J,EAAAA,aAAmBsJ,EAAO,CAAEvI,IAAKwI,EAAOR,EAAGQ,EAAOT,EAAGV,EAAMU,KAEtE,OAAQV,EAAMyB,UACV,gBAAKlD,UAAU,MAAf,SAAsBmD,MAAMC,QAAQ3B,EAAMyB,UAAYzB,EAAMyB,SAAShJ,IAAIwI,GAAcA,EAAWjB,EAAMyB,SAAU,KAD7F,M,oBCmB7B,EA3ByB,SAAnBG,iBAAoB5B,GACtB,IAAQgB,EAAchB,EAAdgB,UACR,GAAsC1C,EAAAA,EAAAA,KAA9BmC,EAAR,EAAQA,WAAYoB,EAApB,EAAoBA,cAEdC,EAAc,SAAdA,YAAerI,GACQ,WAArBgH,EAAWF,OACXsB,GAAc,kBAAKpB,GAAN,IAAkBG,OAAQnH,MAIzCsI,EAAgB,CAClBC,SAAU,2BACNH,GAAc,kBAAKpB,GAAN,IAAkBF,MAAO,OAAQ0B,QAAS,GAAIC,SAAUzB,EAAWyB,SAAUC,MAAK,UAAM1B,EAAW0B,UACpHC,KAAM,uBAAMN,EAAYd,EAAUqB,OAAO5B,EAAWG,OAAOD,EAAGF,EAAWG,OAAOF,KAChF4B,OAAQ,yBAAMR,EAAYd,EAAUuB,SAAS9B,EAAWG,OAAOD,EAAGF,EAAWG,OAAOF,KACpF8B,OAAQ,yBAAMV,EAAYd,EAAUyB,SAAShC,EAAWG,OAAOD,EAAGF,EAAWG,OAAOF,KACpFgC,QAAS,0BAAMZ,EAAYd,EAAU2B,UAAUlC,EAAWG,OAAOD,EAAGF,EAAWG,OAAOF,KACtFkC,SAAU,2BAAM5B,EAAU6B,OAAOpC,EAAWG,UAGhD,MAA4B,WAArBH,EAAWF,OACd,iCACI,SAACuC,EAAA,GAAD,QAAUC,OAAQC,EAAAA,IAAejB,KACjC,SAACkB,EAAA,GAAD,QAASF,OAAQG,EAAAA,GAAmBnB,OAExC,M,oBC9BKoB,EAAb,wPACId,OAAuC,SAAC1B,EAAGD,GACvC,IAAMc,EAAO,EAAK4B,UAClB,OAAU,IAAN1C,EACO,EAAK2C,QAAQ,CAAE1C,EAAGA,EAAGD,EAAGc,EAAKrI,OAAS,IAE1C,EAAKkK,QAAQ,CAAE1C,EAAGA,EAAGD,EAAGA,EAAI,KAN3C,EASI6B,SAAyC,SAAC5B,EAAGD,GAEzC,OAAIA,IADS,EAAK0C,UACHjK,OAAS,EACb,EAAKkK,QAAQ,CAAE1C,EAAGA,EAAGD,EAAG,IAE5B,EAAK2C,QAAQ,CAAE1C,EAAGA,EAAGD,EAAGA,EAAI,KAd3C,EAiBI+B,SAAyC,SAAC9B,EAAGD,GACzC,IAAM4C,EAAM,EAAKC,OAAO7C,GACxB,OAAU,IAANC,EACO,CAAEA,EAAG2C,EAAI/B,QAAQpI,OAAS,EAAGuH,EAAGA,GAEpC,CAAEC,EAAGA,EAAI,EAAGD,EAAGA,IAtB9B,EAyBIiC,UAA0C,SAAChC,EAAGD,GAE1C,OAAIC,IADQ,EAAK4C,OAAO7C,GACVa,QAAQpI,OAAS,EACpB,CAAEwH,EAAG,EAAGD,EAAGA,GAEf,CAAEC,EAAGA,EAAI,EAAGD,EAAGA,IA9B9B,EAiCImC,OAA2B,WACvB,IAAMvC,EAAqB1E,SAAS0E,cACpCA,GAAiBA,EAAckD,SAnCvC,kC,QAAqCC,GCoBrC,EApBsB,SAAhBC,cAAiB1D,GACnB,IAAMgB,EAAY,IAAImC,EAClBQ,GAAU,EACVC,GAAM,EASV,OACI,iBAAKrF,UAAU,UAAf,UACKyB,EAAMyB,SAAShJ,KAAI,SAACyI,GAAD,OAVb,SAAT2C,OAAU3C,GAMZ,OALA0C,IACK1C,EAAMlB,MAAMoB,OACbuC,IACA3C,EAAUQ,KAAKmC,GAAU,CAAEpC,QAAS,KAEjC3J,EAAAA,aAAmBsJ,EAAO,CAAEvI,IAAKiL,EAAIjD,EAAG,EAAGD,EAAGiD,EAAQ3C,UAAWA,IAIrC6C,CAAO3C,OACtC,SAAC,EAAD,CAAkBF,UAAWA,EAAWJ,OAAO,e,mBCgD3D,EAnDyB,SAAnBkD,iBAAoB9D,GACtB,IAAMI,EAAUxI,EAAAA,OAAgC,MAChD,GAAsC0G,EAAAA,EAAAA,KAA9BmC,EAAR,EAAQA,WAAYoB,EAApB,EAAoBA,cACd5B,EAAgC,WAArBQ,EAAWF,OAAsBE,EAAWG,OAAOD,IAAMX,EAAMW,GAAKF,EAAWG,OAAOF,IAAMV,EAAMU,EACnH9I,EAAAA,WAAgB,WACRqI,GAAYG,GAAWA,EAAQC,SAAWD,EAAQC,UAAYzE,SAAS0E,eACvEF,EAAQC,QAAQE,UAErB,CAACH,EAASH,IAEbrI,EAAAA,WAAgB,WAERoI,EAAM+D,YACL9D,GACDG,GACAA,EAAQC,SACRD,EAAQC,UAAYzE,SAAS0E,gBACJ,IAAzBG,EAAWG,OAAOD,IACO,IAAzBF,EAAWG,OAAOF,GAElBN,EAAQC,QAAQE,UAIrB,CAACH,IAWJ,GAAuB,qBAAZJ,EAAMW,GAAwC,qBAAZX,EAAMU,EAC/C,OAAO,KAGX,IAAMsD,EAAM,CAAErD,EAAGX,EAAMW,EAAGD,EAAGV,EAAMU,GAEnC,OACI,oBAAQuD,QAjBE,SAAR1D,QACGN,GACD4B,GAAc,kBAAKpB,GAAN,IAAkBG,OAAQ,CAAED,EAAGX,EAAMW,GAAK,EAAGD,EAAGV,EAAMU,GAAK,OAepDG,IAAKT,EAAwBF,SAAUF,EAAME,SAAU3B,UAAWyB,EAAMzB,UAAUyF,GAAMxF,QAZtG,SAARgF,QACFxD,EAAMxB,UACNqD,GAAc,kBAAKpB,GAAN,IAAkBG,OAAQ,CAAED,EAAGX,EAAMW,GAAK,EAAGD,EAAGV,EAAMU,GAAK,OAUxE,WACI,SAAC,IAAD,CAAMwD,KAAMlE,EAAMtF,KAAMyJ,KAAK,QAC5BnE,EAAMtC,MAAMjF,KAAI,SAAC2L,EAAcjD,GAAf,OACb,yBAAkBiD,GAARjD,QAHyBnB,EAAMzI,KC2FzD,EAtIiB,SAAX8M,SAAYrE,GAGd,MAA4B1C,IAApBH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACPqD,GAAenC,EAAAA,EAAAA,KAAfmC,WAER,EAAwB7I,EAAAA,SAAe,CACnC,CACI0M,OAAO,EACPC,eAAe,GAEnB,CACID,OAAO,EACPC,eAAe,KAPvB,eAAOC,EAAP,KAAaC,EAAb,KAWMC,EAAQ,SAARA,MAASxL,GACXsL,EAAKtL,GAAGoL,OAAQ,EAChBE,EAAKtL,GAAGqL,eAAgB,EACxBE,GAAQ,UAAKD,IACbrI,QAAQwI,IAAIH,IAGR3M,EAAcI,IAAdJ,UACF+M,EAASzH,EAAMF,QAAQ+C,EAAM4E,QACnC,IAAKA,EACD,OAAO,KAGX,IAAMC,EAAoB,SAApBA,kBAAqBtN,EAAYuN,GAAb,OACtB3H,EAAMF,QAAQ6H,GAAUpN,cAAgBsG,EAAezG,GAAIG,aAC3DyF,EAAMF,QAAQ6H,GAAUrN,cAAgBuG,EAAezG,GAAIE,aAEzDsN,EAAW,SAAXA,SAAYxN,GAAD,OAAgBsN,EAAkBtN,EAAIyI,EAAM4E,SAEvDI,EAAc,SAAdA,YAAezN,GACjB,IAAM0N,GAAU,UAAQ9H,EAAMF,SAC9BgI,EAAWjF,EAAM4E,QAAQnN,YAAcuG,EAAezG,GAAIE,YAC1DwN,EAAWjF,EAAM4E,QAAQlN,YAAcsG,EAAezG,GAAIG,YAC1D0F,GAAS,kBAAKD,GAAN,IAAaF,QAASgI,MAG5BC,EAAiB,SAAjBA,eAAkB3N,EAAYyM,GAChC,IAAIzF,EAAYyF,EAAIrD,EAAI,GAAKqD,EAAItD,EAAI,IAAMD,EAAWG,OAAOD,EAASF,EAAWG,OAAOF,EAAI,IAI5F,OAHAnC,GAAakC,EAAWG,OAAOD,IAAMqD,EAAIrD,GAAKF,EAAWG,OAAOF,IAAMsD,EAAItD,EAAI,WAAa,GAC3FnC,GAAawG,EAASxN,GAAM,YAAc,cAC1CgH,GAAa4G,EAAsB5N,GAAM,YAAc,IAIrD4N,EAAwB,SAAxBA,sBAAyB5N,GAC3B,IAAM6N,EAAe,CAAC,EAAG,GAAGlK,QAAO,SAACmK,GAAD,OAAOA,IAAMrF,EAAM4E,UACtD,OAAOC,EAAkBtN,EAAI6N,EAAa,KAGxCE,EAAW,SAAXA,SAAYnK,GACd,MAA2B,YAAvBA,EAAO1D,YACD,GAAN,eAAW0D,EAAOuC,OAAlB,CAAyB8G,EAAKrJ,EAAOzD,aAAa4M,OAASE,EAAKrJ,EAAOzD,aAAa6M,cAAgB,YAAc,cAE/GpJ,EAAOuC,OAGlB,OACI,iBAAKa,UAAU,wBAAf,WACI,SAAC,EAAD,KACA,gBAAKA,UAAU,QAAf,SAAwBqG,EAAOpN,QAC/B,UAAC,EAAD,CAAeD,GAAG,WAAlB,WACI,SAAC,EAAD,CAAK6J,KAAMvJ,EAAX,UACI,SAAC,EAAD,OAEJ,SAAC,EAAD,UACKmG,EAAeuH,MAAM,EAAG,GAAG9M,KAAI,SAAC0C,GAAD,OAC5B,SAAC,EAAD,CAEIT,KAAMS,EAAOT,KACbnD,GAAI4D,EAAO5D,GACX2I,SAAUiF,EAAsBhK,EAAO5D,IACvCwM,UAAWgB,EAAS5J,EAAO5D,IAC3BgH,UAAW,mBAACyF,GAAD,OAAakB,EAAe/J,EAAO5D,GAAIyM,IAClDxF,QAAS,0BAAMwG,EAAY7J,EAAO5D,KAClCmG,MAAO4H,EAASnK,IAPXA,EAAO5D,UAWxB,SAAC,EAAD,UACKyG,EAAeuH,MAAM,GAAG9M,KAAI,SAAC0C,GAAD,OACzB,SAAC,EAAD,CAEIT,KAAMS,EAAOT,KACbnD,GAAI4D,EAAO5D,GACX2I,SAAUiF,EAAsBhK,EAAO5D,IACvCwM,UAAWgB,EAAS5J,EAAO5D,IAC3BgH,UAAW,mBAACyF,GAAD,OAAakB,EAAe/J,EAAO5D,GAAIyM,IAClDxF,QAAS,0BAAMwG,EAAY7J,EAAO5D,KAClCmG,MAAOvC,EAAOuC,OAPTvC,EAAO5D,UAWxB,UAAC,EAAD,CAAK6J,MAAM,EAAX,WACI,iBAAK7C,UAAU,kBAAf,WACI,gBAAKA,UAAU,QAAf,oBACA,gBAAKA,UAAU,YACf,gBAAKA,UAAU,cAAf,oEAEJ,iBAAKA,UAAU,kBAAf,WACI,gBAAKA,UAAU,QAAf,oBACA,gBAAKA,UAAU,YACf,gBAAKA,UAAU,cAAf,0EAIZ,SAAC0E,EAAA,EAAD,CACIF,OAAQG,EAAAA,EACRsC,aAAc,EACdpD,KAAM,uBAAMsC,EAAM,IAClBpC,OAAQ,yBAAMoC,EAAM,IACpBhC,QAAS,0BAAMgC,EAAM,IACrBlC,OAAQ,yBAAMkC,EAAM,IACpB9B,SAAU,2BAAM8B,EAAM,OAE1B,SAACzB,EAAA,EAAD,CACIF,OAAQG,EAAAA,EACRsC,aAAc,EACdpD,KAAM,uBAAMsC,EAAM,IAClBpC,OAAQ,yBAAMoC,EAAM,IACpBhC,QAAS,0BAAMgC,EAAM,IACrBlC,OAAQ,yBAAMkC,EAAM,IACpB9B,SAAU,2BAAM8B,EAAM,UC3DtC,EAvEmB,SAAbe,aACF,MAA4BnI,IAApBH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACPqD,GAAenC,EAAAA,EAAAA,KAAfmC,WAEFsE,EAAW,SAAXA,SAAYxN,GAAD,OAAgB4F,EAAMb,qBAAuB/E,GASxDmO,EAAe,SAAfA,aAAgBC,GAAD,OACjB,SAAC,EAAD,CAEIjL,KAAMiL,EAAOjL,KACbnD,GAAIoO,EAAOpO,GACXwM,UAAWgB,EAASY,EAAOpO,IAC3BgH,UAAW,mBAACyF,GAAD,OAbI,SAAjBkB,eAAkB/D,EAAe6C,GACnC,IAAM/D,EAAWQ,EAAWG,OAAOD,IAAMqD,EAAIrD,GAAKF,EAAWG,OAAOF,IAAMsD,EAAItD,EAC1ElJ,EAAOuN,EAAS5D,GAAT,wBAAmCA,GAAnC,mBAAyDA,GAEpE,OADA3J,GAAQyI,EAAW,WAAa,IAURiF,CAAeS,EAAOpO,GAAIyM,IAC9CxF,QAAS,0BAAMpB,GAAS,kBAAKD,GAAN,IAAab,mBAAoBqJ,EAAOpO,OAC/DmG,MAAOiI,EAAOjI,OANTiI,EAAOpO,KAUZM,EAAcI,IAAdJ,UAER,OACI,iBAAK0G,UAAU,0BAAf,WACI,SAAC,EAAD,KACA,gBAAKA,UAAU,QAAf,yBACA,UAAC,EAAD,CAAehH,GAAG,aAAlB,WACI,SAAC,EAAD,CAAK6J,KAAMvJ,EAAX,UACI,SAAC,EAAD,OAEJ,SAAC,EAAD,UAAM+N,EAAAA,MAAwB,EAAG,GAAGnN,IAAIiN,MACxC,SAAC,EAAD,UAAME,EAAAA,MAAwB,GAAGnN,IAAIiN,MACrC,UAAC,EAAD,CAAKtE,MAAM,EAAX,WACI,iBAAK7C,UAAU,kBAAf,WACI,gBAAKA,UAAU,QAAf,wBACA,gBAAKA,UAAU,YACf,iBAAKA,UAAU,cAAf,UACuE,WAAlEqH,EAAkBzI,EAAMb,oBAAoBzB,SAAS0C,SAChD,oDACA,KAC6D,WAAlEqI,EAAkBzI,EAAMb,oBAAoBzB,SAAS0C,SAChD,2DACA,YAGd,iBAAKgB,UAAU,kBAAf,WACI,gBAAKA,UAAU,QAAf,yBACA,gBAAKA,UAAU,YACf,iBAAKA,UAAU,cAAf,UAC4E,WAAvEqH,EAAkBzI,EAAMb,oBAAoBzB,SAAS2C,cAChD,qEACA,KACkE,WAAvEoI,EAAkBzI,EAAMb,oBAAoBzB,SAAS2C,cAChD,2EACA,KACkE,aAAvEoI,EAAkBzI,EAAMb,oBAAoBzB,SAAS2C,cAChD,iFACA,qB,WC5C5BqI,GAAqB,SAArBA,mBAAsB7F,GACxB,IAAMI,EAAUxI,EAAAA,OAAgC,MAChDuI,EAAeH,EAAOI,GACtB,OAAsC9B,EAAAA,EAAAA,KAA9BmC,EAAR,EAAQA,WAAYoB,EAApB,EAAoBA,cAMpB,OTT2B,SAAlBiE,gBAAmB9F,EAAkBI,EAAuC4D,GACrFpM,EAAAA,WAAgB,WAERoI,EAAM+D,YACL/D,EAAMC,UACPG,GACAA,EAAQC,SACRD,EAAQC,UAAYzE,SAAS0E,gBAClB,IAAX0D,EAAIrD,IACO,IAAXqD,EAAItD,GAEJN,EAAQC,QAAQE,UAIrB,CAACH,ISPJ0F,CAAgB9F,EAAOI,EAASK,EAAWG,SAEvC,iBAAKrC,UAAWuB,EAA0B,kBAAmBE,GAA7D,WACI,iBAAKzB,UAAU,QAAf,UAAwByB,EAAMtF,OAAQ,SAAC,IAAD,CAAMyJ,KAAK,QAAQD,KAAMlE,EAAMtF,OAArE,IAAgFsF,EAAMpF,UACtF,gBAAK2D,UAAU,SAAf,UACI,SAAC,MAAD,CACIsC,IAAKT,EACLF,WAAYF,EAAME,SAClB6D,UAAW/D,EAAM+D,UACjBE,QAAS,mBACAjE,EAAMC,UACP4B,GAAc,kBAAKpB,GAAN,IAAkBG,OAAQ,CAAED,EAAGX,EAAMW,EAAGD,EAAGV,EAAMU,OAGtEqF,QAAS/F,EAAMT,MACfyG,SAAU,2BAnBX,SAATC,OAAUC,EAAclC,GAC1BnC,GAAc,kBAAKpB,GAAN,IAAkBG,OAAQoD,KACvChE,EAAMmG,UAAYnG,EAAMmG,SAASD,GAiBLD,EAAQjG,EAAMT,MAAO,CAAEoB,EAAGX,EAAMW,EAAGD,EAAGV,EAAMU,UAGpE,gBAAKnC,UAAU,cAAf,SAA8ByB,EAAMoG,kBA4BhD,GAvBqB,SAAfC,aAAgBrG,GAClB,IAAQS,GAAenC,EAAAA,EAAAA,KAAfmC,WACR,GAAuB,qBAAZT,EAAMW,GAAwC,qBAAZX,EAAMU,EAC/C,OAAO,KAEX,IACMsD,EAAM,CAAErD,EAAGX,EAAMW,GAAK,EAAGD,EAAGV,EAAMU,GAAK,GAC7C,OACI,SAACmF,GAAD,CACIlF,EAAGqD,EAAIrD,EACPD,EAAGsD,EAAItD,EACPhG,KAAMsF,EAAMtF,KACZwF,WAAYF,EAAME,SAClBD,SARS,SAAXA,SAAYS,EAAWC,GAAZ,MAA+C,WAArBF,EAAWF,OAAsBE,EAAWG,OAAOD,IAAMA,GAAKF,EAAWG,OAAOF,IAAMA,EAQ/GT,CAAS+D,EAAItD,EAAGsD,EAAIrD,GAC9B/F,MAAOoF,EAAMpF,MACbwL,YAAapG,EAAMoG,YACnB7G,MAAOS,EAAMT,MACb4G,SAAUnG,EAAMmG,SAChBpC,UAAW/D,EAAM+D,aCpC7B,GAnCoB,SAAduC,cACF,MAA4BhJ,IAApBH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACPvF,EAAcI,IAAdJ,UAGR,OACI,iBAAK0G,UAAU,2BAAf,WACI,SAAC,EAAD,KACA,gBAAKA,UAAU,QAAf,0BACA,UAAC,EAAD,CAAehH,GAAG,cAAlB,WACI,SAAC,EAAD,CAAK6J,KAAMvJ,EAAX,UACI,SAAC,EAAD,OAEJ,UAAC,EAAD,YACI,SAAC,GAAD,CACI6C,KAAM,GACNE,MAAM,sBACNwL,YAAY,gFACZ7G,QAASpC,EAAML,gBAAgBC,KAC/BoJ,SAfF,SAAZI,UAAahH,GAAD,OAAoBnC,GAAS,kBAAKD,GAAN,IAAaL,iBAAgB,kBAAMK,EAAML,iBAAb,IAA8BC,KAAMwC,WAiB9F,SAAC,GAAD,CACI7E,KAAM,GACNE,MAAM,0BACNwL,YAAY,iGACZ7G,QAASpC,EAAML,gBAAgBE,SAC/BmJ,SAvBE,SAAhBK,cAAiBjH,GAAD,OAAoBnC,GAAS,kBAAKD,GAAN,IAAaL,iBAAgB,kBAAMK,EAAML,iBAAb,IAA8BE,SAAUuC,cA0B1G,SAAC,EAAD,W,WCPVkH,GAAqB,SAArBA,mBAAsBzG,GACxB,IAAMI,EAAUxI,EAAAA,OAAgC,MAChDuI,EAAeH,EAAOI,GACtB,OAAsC9B,EAAAA,EAAAA,KAA9BmC,EAAR,EAAQA,WAAYoB,EAApB,EAAoBA,cAEpB,OACI,iBAAKtD,UAAWuB,EAA0B,kBAAmBE,GAA7D,WACI,iBAAKzB,UAAU,QAAf,UACKyB,EAAMpF,MADX,KACoBoF,EAAM0G,OAAO1G,EAAMT,OAAO3E,UAE9C,gBAAK2D,UAAU,SAAf,UACI,mBACIwF,UAAW/D,EAAM+D,UACjBlD,IAAKT,EACL5B,QAAS,mBACLwB,EAAMmG,UAAUnG,EAAMT,MAAQ,EAAIS,EAAM0G,OAAOvN,OAAS6G,EAAMT,MAAQ,EAAI,GAAGoH,YAC7E9E,GAAc,kBAAKpB,GAAN,IAAkBG,OAAQ,CAAED,EAAGX,EAAMW,EAAGD,EAAGV,EAAMU,OAElER,WAAYF,EAAME,SAClB+D,QAAS,mBACAjE,EAAMC,UACP4B,GAAc,kBAAKpB,GAAN,IAAkBG,OAAQ,CAAED,EAAGX,EAAMW,EAAGD,EAAGV,EAAMU,OAV1E,6BAiBJ,gBAAKnC,UAAU,cAAf,SAA8ByB,EAAMoG,kBA4BhD,GAvBqB,SAAfQ,aAAgB5G,GAClB,IAAQS,GAAenC,EAAAA,EAAAA,KAAfmC,WACR,GAAuB,qBAAZT,EAAMW,GAAwC,qBAAZX,EAAMU,EAC/C,OAAO,KAEX,IACMsD,EAAM,CAAErD,EAAGX,EAAMW,GAAK,EAAGD,EAAGV,EAAMU,GAAK,GAC7C,OACI,SAAC+F,GAAD,CACI9F,EAAGqD,EAAIrD,EACPD,EAAGsD,EAAItD,EACPR,WAAYF,EAAME,SAClBD,SAPS,SAAXA,SAAYS,EAAWC,GAAZ,MAA+C,WAArBF,EAAWF,OAAsBE,EAAWG,OAAOD,IAAMA,GAAKF,EAAWG,OAAOF,IAAMA,EAO/GT,CAAS+D,EAAItD,EAAGsD,EAAIrD,GAC9B/F,MAAOoF,EAAMpF,MACbwL,YAAapG,EAAMoG,YACnB7G,MAAOS,EAAMT,MACbmH,OAAQ1G,EAAM0G,OACdP,SAAUnG,EAAMmG,SAChBpC,UAAW/D,EAAM+D,aChC7B,GAxCmB,SAAb8C,aACF,MAA4BvJ,IAApBH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACPvF,EAAcI,IAAdJ,UAQR,OACI,iBAAK0G,UAAU,0BAAf,WACI,SAAC,EAAD,KACA,gBAAKA,UAAU,QAAf,sBACA,UAAC,EAAD,CAAehH,GAAG,WAAlB,WACI,SAAC,EAAD,CAAK6J,KAAMvJ,EAAX,UACI,SAAC,EAAD,OAGJ,UAAC,EAAD,YACI,SAAC,GAAD,CACI+C,MAAM,eACNwL,YAAY,qEACZ7G,MAAOpC,EAAMR,gBAAgBC,aAAe,EAC5C8J,OAAQI,GAAAA,EAAAA,KAAkB,SAAClM,EAAOrD,GAAR,MAAgB,CAAEA,GAAAA,EAAIqD,MAAAA,MAChDuL,SArBG,SAAjBY,eAAkBxH,GAAD,OACnBnC,GAAS,kBAAKD,GAAN,IAAaR,iBAAgB,kBAAMQ,EAAMR,iBAAb,IAA8BC,YAAakC,SAASS,SAqBxEwE,WAAW,KAEf,SAAC,GAAD,CACInJ,MAAM,sBACNwL,YAAY,oEACZ7G,MAAOpC,EAAMR,gBAAgBE,oBAAsB,EACnD6J,OAAQI,GAAAA,EAAAA,KAAkB,SAAClM,EAAOrD,GAAR,MAAgB,CAAEA,GAAAA,EAAIqD,MAAAA,MAChDuL,SA1BU,SAAxBa,sBAAyBzH,GAAD,OAC1BnC,GAAS,kBAAKD,GAAN,IAAaR,iBAAgB,kBAAMQ,EAAMR,iBAAb,IAA8BE,mBAAoBiC,SAASS,qBCoHvG,GAtHe,SAAT0H,SACF,MAA4B3J,IAApBH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACPqD,GAAenC,EAAAA,EAAAA,KAAfmC,WAOFsE,EAAW,SAAXA,SAAYxN,GAAD,OAAgB4F,EAAMlD,eAAiB1C,GAQlD2P,EAAkB,SAAlBA,gBAAmBC,GACrB,IAAMC,GAAI,UAAQjK,GAClBgK,EAASC,EAAKvN,gBACduN,EAAKnN,aAAeC,EAAcc,YAAYoM,EAAKvN,gBACnDuD,EAASgK,IAqCLvP,EAAcI,IAAdJ,UAER,OACI,iBAAK0G,UAAU,sBAAf,WACI,SAAC,EAAD,KACA,gBAAKA,UAAU,QAAf,wBACA,UAAC,EAAD,CAAehH,GAAG,YAAlB,WACI,SAAC,EAAD,CAAK6J,KAAMvJ,EAAX,UACI,SAAC,EAAD,OAEJ,SAAC,EAAD,UACKqC,EAAcO,IAAIhC,KAAI,SAAC0C,GAAD,OACnB,SAAC,EAAD,CAEIT,KAAMS,EAAOT,KACbnD,GAAI4D,EAAO5D,GACXwM,UAAWgB,EAAS5J,EAAO5D,MAAgC,IAAxB4F,EAAMlD,cAAqC,IAAdkB,EAAO5D,GACvEgH,UAAW,mBAACyF,GAAD,OAhEZ,SAAjBkB,eAAkB3N,EAAYyM,GAChC,IAAIxM,EAAOuN,EAASxN,GAAT,wBAAgCA,GAAhC,mBAAmDA,GAE9D,OADAC,GAAQiJ,EAAWG,OAAOD,IAAMqD,EAAIrD,GAAKF,EAAWG,OAAOF,IAAMsD,EAAItD,EAAI,WAAa,IA8D1CwE,CAAe/J,EAAO5D,GAAIyM,IAClDxF,QAAS,0BAzEb,SAAdwG,YAAezN,GACjB,IAAM6P,GAAI,UAAQjK,GAClBjD,EAAcO,IAAIlD,GAAImC,MAAM0N,GAC5BhK,EAASgK,GAsE0BpC,CAAY7J,EAAO5D,KAClCmG,MAAO,CAACvC,EAAOP,QANVO,EAAO5D,UAUxB,UAAC,EAAD,YACI,SAAC,GAAD,CACImD,KAAM,GACNE,MAAM,eACNwL,YAAY,8GACZ7G,QAASpC,EAAMtD,eAAeS,YAC9B6L,SA7CG,SAAjBkB,eAAkB9H,GAAD,OACnB2H,GAAgB,SAACI,GACbA,EAAEhN,YAAciF,SA6CR,SAAC,GAAD,CACA7E,KAAM,GACFE,MAAM,eACNwL,YAAY,8EACZ7G,QAASpC,EAAMtD,eAAeO,UAC9B+L,SAzDE,SAAhBoB,cAAiBhI,GAAD,OAClB2H,GAAgB,SAACI,GACbA,EAAElN,UAAYmF,YA0DV,UAAC,EAAD,YACI,SAAC,GAAD,CACA7E,KAAM,GACFE,MAAM,eACNwL,YAAY,yGACZ7G,QAASpC,EAAMtD,eAAeC,YAC9BqM,SAxDG,SAAjBqB,eAAkBjI,IAvBC,SAAnBkI,iBAAoBC,EAAmDP,GACzE,IAAMC,GAAI,UAAQjK,GAClBuK,EAAeN,EAAKvN,gBACpBsN,EAASC,GACTA,EAAKnN,aAAeC,EAAcc,YAAYoM,EAAKvN,gBACnDuD,EAASgK,GAmBTK,EACI,SAACH,GACGA,EAAExN,YAAcyF,KAEpB,SAAC3F,GACGA,EAAEG,eAAiBwF,EAAQvF,EAAAA,EAAAA,KAAuBA,EAAAA,EAAAA,eAoD9C,SAAC,GAAD,CACAU,KAAM,GACFE,MAAM,eACNwL,YAAY,0FACZ7G,QAASpC,EAAMtD,eAAeQ,YAC9B8L,SA9EG,SAAjBwB,eAAkBpI,GAAD,OACnB2H,GAAgB,SAACI,GACbA,EAAEjN,YAAckF,kBCD5B,GAtCoB,SAAdqI,cACF,IAAQ/P,EAAcI,IAAdJ,UACR,EAA4ByF,IAApBH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAETyK,EAAkB7N,EAAAA,EAAAA,qBAElB+K,EAAW,SAAXA,SAAYxN,GAAD,OAAgB4F,EAAMpD,iBAAmBxC,GAEpDuQ,EAAa,SAAbA,WAAcvQ,GAAD,OAAgBA,IAAOyC,EAAAA,EAAAA,MAAwBmD,EAAMtD,eAAeC,aAEjFiO,EAAe,SAAfA,aAAgBC,EAAsB7G,GAAvB,OACjB,SAAC,GAAD,CACI5B,MAAOwF,EAASiD,EAAKrP,KACrBuH,SAAU4H,EAAWE,EAAKrP,KAC1BiC,MAAOoN,EAAKpN,MACZF,KAAMsN,EAAKtN,KACXyL,SAAU,2BAAM/I,GAAS,kBAAKD,GAAN,IAAapD,eAAgBiO,EAAKrP,QAC1DyN,YAAa4B,EAAK5B,YAElBrC,UAAWgB,EAASiD,EAAKrP,MADpBwI,IAKb,OACI,iBAAK5C,UAAU,2BAAf,WACI,SAAC,EAAD,KACA,gBAAKA,UAAU,QAAf,0BACA,UAAC,EAAD,CAAehH,GAAG,WAAlB,WACI,SAAC,EAAD,CAAK6J,KAAMvJ,EAAX,UACI,SAAC,EAAD,OAEJ,SAAC,EAAD,UAAMgQ,EAAgBtC,MAAM,EAAG,GAAG9M,IAAIsP,MACtC,SAAC,EAAD,UAAMF,EAAgBtC,MAAM,GAAG9M,IAAIsP,YCkBnD,GApDgB,SAAVE,UACF,MAA4B3K,IAApBH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACPvF,EAAcI,IAAdJ,UAKR,OACI,iBAAK0G,UAAU,0BAAf,WACI,SAAC,EAAD,KACA,gBAAKA,UAAU,QAAf,sBACA,UAAC,EAAD,CAAehH,GAAG,UAAlB,WACI,SAAC,EAAD,CAAK6J,KAAMvJ,EAAX,UACI,SAAC,EAAD,OAEJ,UAAC,EAAD,YACI,SAAC,GAAD,CACA6C,KAAM,GACFE,MAAM,eACNwL,YAAY,wGACZ7G,MAAOpC,EAAMX,YACb2J,SAlBG,SAAjB+B,eAAkBhC,GAAD,OAAkB9I,GAAS,kBAAKD,GAAN,IAAaX,YAAa0J,MAmBvDnC,WAAW,KAEf,SAAC,GAAD,CACArJ,KAAM,GACFE,MAAM,eACNwL,YAAY,uDACZ7G,MAAOpC,EAAMV,YACb0J,SAxBG,SAAjBgC,eAAkB5I,GAAD,OAAoBnC,GAAS,kBAAKD,GAAN,IAAaV,YAAa8C,YA2BjE,UAAC,EAAD,YACI,SAAC,GAAD,CACA7E,KAAM,GACFE,MAAM,eACNwL,YAAY,qEACZ7G,MAAOpC,EAAMZ,UACb4J,SAlCC,SAAfiC,aAAgB7I,GAAD,OAAoBnC,GAAS,kBAAKD,GAAN,IAAaZ,UAAWgD,SAoCzD,SAAC,GAAD,CACA7E,KAAM,GACFE,MAAM,YACNwL,YAAY,sEACZ7G,MAAOpC,EAAMT,MACbyJ,SAvCH,SAAXkC,SAAY9I,GAAD,OAAoBnC,GAAS,kBAAKD,GAAN,IAAaT,MAAO6C,kBCE/D+I,GAAe,SAAfA,aAAgBtI,GAElB,OACI,gBAAKzB,UAAU,qBAAf,UACI,iBAAKA,UAAU,mBAAf,UACsB,WAAjByB,EAAMY,QAAsB,SAAC,GAAD,IAAa,KACxB,eAAjBZ,EAAMY,QAA0B,SAAC,EAAD,IAAiB,KAChC,aAAjBZ,EAAMY,QAAwB,SAAC,GAAD,IAAiB,KAC9B,gBAAjBZ,EAAMY,QAA2B,SAAC,GAAD,IAAkB,KAClC,YAAjBZ,EAAMY,QAAuB,SAAC,GAAD,IAAc,KAC1B,cAAjBZ,EAAMY,QAAyB,SAAC,EAAD,CAAUgE,OAAQ,IAAQ,KACxC,cAAjB5E,EAAMY,QAAyB,SAAC,EAAD,CAAUgE,OAAQ,IAAQ,KACxC,gBAAjB5E,EAAMY,QAA2B,SAAC,GAAD,IAAkB,WAMpE,GAzBe,SAAT2H,SAEF,IAAQ9H,GAAenC,EAAAA,EAAAA,KAAfmC,WACR,OAAO,SAAC6H,GAAD,CAAc1H,OAAQH,EAAWwB,W,oDCHtCuG,GAAiB5Q,EAAAA,cAAqC,CACxD6Q,eAAe,EACfC,cAAe,6BAGNC,GAAoB,SAApBA,oBAAoB,OAAM/Q,EAAAA,WAAiB4Q,KAElDI,GAAU,SAAVA,QAAW5I,GAQb,OAPA6I,EAAAA,GAAAA,IAAc,WAEV,OADA7I,EAAM8I,QAAU9I,EAAM8I,SACf,WACH9I,EAAMrG,OAASqG,EAAMrG,aAItB,gBAAK4E,UAAU,UAAf,SAA0ByB,EAAMyB,YAGrCsH,GAAkB,CAAEC,KAAM,mBACnBC,GAAyB,SAAzBA,uBAA0BjJ,GACnC,MAAmCpI,EAAAA,UAAwB,GAA3D,eAAO6Q,EAAP,KAAsBS,EAAtB,KACA,EAA8BtR,EAAAA,SAAgC,MAA9D,eAAOuR,EAAP,KAAgBC,EAAhB,KACA,EAA2BxR,EAAAA,SAAyBmR,IAApD,eAAOM,EAAP,KAAeC,EAAf,KACA,EAA6B1R,EAAAA,SAAyBmR,IAAtD,eAAOQ,EAAP,KAAgBC,EAAhB,KACMC,EAAU,CACZhB,cAAAA,EACAC,cAAe,uBAACS,EAA2BL,EAAqBnP,GAC5DuP,IAAYC,GACZC,EAAWD,GACPL,GACAU,EAAU,CAAER,KAAMF,IAElBnP,GACA2P,EAAS,CAAEN,KAAMrP,MAI7B,OACI,UAAC6O,GAAexQ,SAAhB,CAAyBuH,MAAOkK,EAAhC,UACKhB,IACG,SAAC,GAAD,CAASK,OAAQS,EAAQP,KAAMrP,MAAO0P,EAAOL,KAA7C,SACKG,IAGRnJ,EAAMyB,aCVnB,GAhCsB,SAAhBiI,gBACF,MAAoCzR,IAA5BH,EAAR,EAAQA,aAAcD,EAAtB,EAAsBA,UAEhB8G,EADUF,EAAeoB,cACPV,YAChBuJ,EAAkBC,KAAlBD,cAGR,OACI,SAAC,IAAD,WACI,gBAAKnK,UAAU,uBAAf,UACI,gBAAKA,UAAU,mBAAf,UACI,iBAAKA,UAAU,YAAf,WACI,SAACoL,GAAA,EAAD,CAAWjP,KAAMkP,EAAAA,OACjB,gBAAKrL,UAAU,eAAf,SAA+BI,EAAQK,UACvC,UAAC6K,GAAA,EAAD,CAAUC,eAAgB9G,EAAAA,GAA1B,WACI,SAAC+G,GAAA,EAAD,CACIrP,KAAMsP,EAAAA,IACNC,MAAOpS,EAAY,gBAAiB,eACpC2G,QAAS,mBACL1G,EAAa6G,EAAQM,WACrByJ,QAIR,SAACqB,GAAA,EAAD,CAAYrP,KAAMwP,EAAAA,IAAeD,MAAM,SAASzL,QAAS,0BAAMkK,oBCzB3F,GATqB,SAAfyB,aAAgBnK,GAClB,OACI,gBAAKzB,UAAU,gBAAf,UACI,gBAAKA,UAAU,mBAAf,UACI,gBAAKA,UAAU,YAAf,SAA4ByB,EAAMyB,gBCkJlD,GA1HkB,SAAZ2I,UAAapK,GACf,OAAsC1B,EAAAA,EAAAA,KAA9BmC,EAAR,EAAQA,WAAYoB,EAApB,EAAoBA,cACZhK,EAAcI,IAAdJ,UAWFwS,EAAe,SAAfA,aAAgBlI,EAAc6B,GAAf,OACjBnC,GAAc,kBACPpB,GADM,IAETF,MAAO,OACP0B,QAAS,GACTC,SAAUC,EACVA,MAAK,UAAM6B,OAGbsG,EAAe,SAAfA,aAAgB1Q,EAAWoK,GACzBvD,EAAWwB,UAAYrI,EAnBR,SAAjB2Q,eAAkB3Q,EAAWoK,GAC/BnC,GAAc,kBACPpB,GADM,IAETF,MAAO,SACP0B,QAASrI,EACTgH,OAAQ,CAAED,GAAI,EAAGD,GAAI,GACrByB,MAAK,UAAM6B,MAcXuG,CAAe3Q,EAAGoK,GAElBqG,EAAa5J,EAAWyB,SAAU8B,IAIpCwG,EAAiB,SAAjBA,eAAkBtE,EAAalC,GAAd,OAA0BqG,EAAa5J,EAAWyB,WAAagE,EAAMA,EAAM,GAAIlC,IAEtG,EAAyC2E,KAAjCD,EAAR,EAAQA,cAAeD,EAAvB,EAAuBA,cAavB,OACI,UAAC,GAAD,YACI,SAACkB,GAAA,EAAD,CAAWjP,KAAM+P,EAAAA,IAAiB7P,MAAM,eACxC,UAACiP,GAAA,EAAD,CAAUC,eAAgB9G,EAAAA,GAAW9C,SAAUuI,EAA/C,WACI,SAACsB,GAAA,EAAD,CAAYrP,KAAMgQ,EAAAA,IAAwBT,MAAM,gBAAgBzL,QAAS,0BAAMwB,EAAM2K,MAAMC,EAAAA,EAAAA,kBAC3F,UAACb,GAAA,EAAD,CACIrP,KAAMmQ,EAAAA,IACNZ,MAAM,SACNzL,QAAS,iBAACwF,GAAD,OAAawG,EAAe,SAAUxG,IAC/C8G,QAAiC,WAAxBrK,EAAWyB,SAJxB,WAMI,SAAC6H,GAAA,EAAD,CACIrP,KAAMwD,EAAAA,IACN+L,MAAM,WACNzL,QAAS,iBAACwF,GAAD,OAAasG,EAAa,YAAatG,IAChD8G,QAAgC,cAAvBrK,EAAWwB,WAExB,SAAC8H,GAAA,EAAD,CACIrP,KAAMwD,EAAAA,IACN+L,MAAM,WACNzL,QAAS,iBAACwF,GAAD,OAAasG,EAAa,YAAatG,IAChD8G,QAAgC,cAAvBrK,EAAWwB,WAExB,SAAC8H,GAAA,EAAD,CAAYrP,KAAMgQ,EAAAA,IAAwBT,MAAM,QAAQzL,QAAS,0BAAMwB,EAAM2K,MAAMC,EAAAA,EAAAA,eAEvF,UAACb,GAAA,EAAD,CACIrP,KAAMqQ,EAAAA,IACNd,MAAM,UACNzL,QAAS,iBAACwF,GAAD,OAAawG,EAAe,SAAUxG,IAC/C8G,QAAiC,WAAxBrK,EAAWyB,SAJxB,WAMI,SAAC6H,GAAA,EAAD,CACIrP,KAAMsQ,EAAAA,IACNf,MAAM,aACNzL,QAAS,iBAACwF,GAAD,OAAasG,EAAa,aAActG,IACjD8G,QAAgC,eAAvBrK,EAAWwB,WAExB,SAAC8H,GAAA,EAAD,CACIrP,KAAMI,EAAAA,IACNmP,MAAM,YACNzL,QAAS,iBAACwF,GAAD,OAAasG,EAAa,SAAUtG,IAC7C8G,QAAgC,WAAvBrK,EAAWwB,WAExB,SAAC8H,GAAA,EAAD,CACIrP,KAAMuQ,EAAAA,IACNhB,MAAM,cACNzL,QAAS,iBAACwF,GAAD,OAAasG,EAAa,cAAetG,IAClD8G,QAAgC,gBAAvBrK,EAAWwB,WAExB,SAAC8H,GAAA,EAAD,CACIrP,KAAMwQ,EAAAA,IACNjB,MAAM,UACNzL,QAAS,iBAACwF,GAAD,OAAasG,EAAa,UAAWtG,IAC9C8G,QAAgC,YAAvBrK,EAAWwB,WAExB,SAAC8H,GAAA,EAAD,CACIrP,KAAMyQ,EAAAA,IACNlB,MAAM,UACNzL,QAAS,iBAACwF,GAAD,OAAasG,EAAa,WAAYtG,IAC/C8G,QAAgC,aAAvBrK,EAAWwB,WAExB,SAAC8H,GAAA,EAAD,CACIrP,KAAM0Q,EAAAA,IACNnB,MAAM,cACNzL,QAAS,iBAACwF,GAAD,OAAasG,EAAa,cAAetG,IAClD8G,QAAgC,gBAAvBrK,EAAWwB,cAG5B,SAAC8H,GAAA,EAAD,CACIrP,KAAMkP,EAAAA,IACNK,MAAOpS,EAAY,gBAAkB,eACrC2G,QAAS,0BAnFF,SAAjB6M,eAAkB5J,GACpBiH,EACIjH,GACA,WACII,GAAc,kBAAKpB,GAAN,IAAkBF,MAAO,eAE1C,WACIsB,GAAc,kBAAKpB,GAAN,IAAkBF,MAAO,aA4EnB8K,EAAe,SAAC,GAAD,eC3FlD,GA3Ca,SAAPC,KAAQtL,GACV,IAAMuL,EAAU9M,EAAeoB,cACzB2L,EAAWD,EAAQ7L,mBACzB,EAA0B9H,EAAAA,SAAiC4T,GAAsBnP,GAAjF,eAAOc,EAAP,KAAcC,EAAd,KACMqO,EAAqB,CACvBtO,MAAAA,EACAC,SAAU,kBAACxD,GACPwD,EAASxD,GACT2R,EAAQjM,MAAM1F,KAwBtB,OACI,SAAC8R,EAAA,EAAD,CAAaC,MAAOC,EAAAA,EAAAA,OAApB,UACI,SAACvO,EAAD,CAAqBkC,MAAOkM,EAA5B,UACI,UAAC,IAAD,YACI,SAAC,GAAD,CAAWd,MAxBb,SAARA,MAASkB,GACX,IAAMhR,GAAQ,0BACP+K,EAAkBzI,EAAMb,oBAAoBzB,UAC5CsC,EAAMtD,gBAFC,IAGV+C,YAAaO,EAAMR,gBAAgBC,aAAe,EAClDC,mBAAoBM,EAAMR,gBAAgBE,oBAAsB,EAChEI,SAAQ,UAAME,EAAMF,SACpBV,UAAWY,EAAMZ,UACjBG,MAAOS,EAAMT,MACbD,YAAaU,EAAMV,YACnBD,YAAaW,EAAMX,YACnBqP,UAAWA,EACXC,aAAa,EACb/R,eAAgBoD,EAAMpD,eACtBgS,UAAW,GACXjP,iBAAgB,UAAMK,EAAML,mBAEhCkD,EAAM2K,MAAM9P,OAQA,SAAC,GAAD,YCpCdmR,GAAOpU,EAAAA,MAAW,kBAAM,yDAuC9B,GArCY,SAANqU,MACF,IAAMV,EAAU9M,EAAeoB,cAC/B,EAAkCjI,EAAAA,WAA0B2T,EAAQ7M,cAApE,eACMwN,EAAgB,CAClBrU,UAFJ,KAGIC,aAHJ,MAMMqU,EAAe,CACjBN,UAAWjB,EAAAA,EAAAA,aACXmB,UAAW,QACXD,aAAa,EACb7O,QAAS3F,EACTiG,SAAU,GACVC,cAAe,GACfX,mBAAoB,EACpBD,YAAa,EACb7C,eAAgBC,EAAAA,EAAAA,KAChB8C,gBAAiB,CAAEC,MAAM,EAAMC,UAAU,EAAMjE,SAAS,IAG5D,EAAsCnB,EAAAA,SAA+BuU,GAArE,eAAOC,EAAP,KAAoBC,EAApB,KAKMb,EAAWD,EAAQ7L,mBACnB4M,GAAQd,GAAYA,EAAS1O,gBAAgB/D,SAAU,IAAIb,GAAOa,UAAY,IAAIb,EAExF,OACI,SAACH,EAAD,CAAuBwH,MAAO2M,EAA9B,UACI,SAACjD,GAAD,UACgB,OAAXmD,QAAW,IAAXA,GAAAA,EAAaN,aAAc,SAACE,GAAD,CAAYI,YAAAA,EAAaE,KAAAA,EAAMC,QARvD,SAAVA,UAAU,OAAMF,EAAeF,OAQkD,SAAC,GAAD,CAAMxB,MAT/E,SAARA,MAAS9P,GAAD,OAA8BwR,GAAe,kBAAKxR,GAAN,IAAgBiR,aAAa,c,6ECtCtElB,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,aAAAA,EAAAA,EAAAA,GAAAA,KAAAA,cAAAA,EACV4B,aAAe,eADL5B,EAEV6B,OAAS,e,uFCCC7T,EAAAA,WAajB,cAAY8T,EAAsBC,EAAYC,GAAoB,IAAD,+BAZjEF,kBAYiE,OARjEC,UAQiE,OAPjEC,cAOiE,OANjEC,kBAMiE,OALjEC,YAKiE,OAJjEC,gBAIiE,OAHjEC,aAGiE,OAFjEC,cAEiE,OADjEzO,aACiE,OAcjE0O,WAAa,SAACtT,GACV,EAAKoT,QAAUpT,GAf8C,KAkBjEuT,aAAe,SAACC,GACZ,GAAY,IAARA,EAAJ,CAIA,IAAMC,EAAc,EAAND,EACR7T,EAAS,SAATA,SAAS,OAAMF,KAAKE,SAAW,IAC/B+T,EAAY,SAAZA,UAAaC,EAAaC,GAAd,OAA8BnU,KAAKE,UAAYiU,EAAMD,GAAOA,GAE1EhU,MACIA,IACA,EAAKsT,aAAL,KAA4BS,EAAU,EAAGD,EAAQ,IAAM,KAEvD,EAAKR,aAAL,MAA6BS,EAAU,EAAGD,EAAQ,IAAM,MAIhE,EAAKR,aAAL,UAAiC,UAAYS,GAAmB,EAATD,EAAYA,GAAS,YAfxE,EAAKR,aAAe,IApBqC,KAsCjEzR,OAAS,SAACqS,GACN,OAAQA,GAAS7U,KAAKwC,OAAO,EAAMqS,KAAW,GAtC9ClV,KAAKmU,aAAeA,EACpBnU,KAAKoU,KAAOA,EACZpU,KAAKqU,SAAWA,EAChBrU,KAAKsU,aAAe,GACpBtU,KAAKuU,OAAS,GACdvU,KAAKwU,YAAa,EAClBxU,KAAKyU,QAAU,EACfzU,KAAK0U,SAAW,kBAAM,GAGtB1U,KAAKiG,QAAU,SAACkP,GAAD,OAAQ,SAAC9T,MAiC3B,OAhCA,sCA8BD,gBAAc+T,EAAmBC,GAC7B,OAASD,IAASC,GAAeD,GAAQC,GAAaA,EAAUlB,eAAiBiB,EAAKjB,cAAgBkB,EAAUjB,KAAKjS,OAASiT,EAAKhB,KAAKjS,SAC3I,KAzDgB9B,GAAAA,EA2DVY,KAAO,SAACqU,GACX,IAAMrU,EAAO,IAAIZ,EAAKiV,EAAKnB,aAAcmB,EAAKlB,KAAMkB,EAAKjB,UAKzD,OAJApT,EAAKsT,OAASe,EAAKf,OACnBtT,EAAKqT,cAAL,UAAyBgB,EAAKhB,cAC9BrT,EAAKyT,SAAWY,EAAKZ,SACrBzT,EAAKgF,QAAUqP,EAAKrP,QACbhF,GAjEMZ,EAoEVkV,QAAU,SAAC3V,GAAD,OAAmBA,EAAMM,KAAI,SAACkV,GAAD,OAAU/U,EAAKY,KAAKmU,Q,4FCvEzDI,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAEzEvV,EAAqB,SAArBA,qBACT,MAAO,CAAC,KAAD,eAASuV,EAASxI,MAAM,EAAGwI,EAAS5U,OAAS,KAAIL,WAG/CkV,EAAkB,SAAlBA,kBACT,MAAM,GAAN,OAAWD,K,mCCCTzV,EAAgC,CAClC2V,MAAO,CACHvT,KAAMwT,EAAAA,IACNC,MAAO,MACP3W,KAAM,SAEV4W,KAAM,CACF1T,KAAM2T,EAAAA,IACNF,MAAO,QACP3W,KAAM,QAEV8W,QAAS,CACL5T,KAAM+P,EAAAA,IACN0D,MAAO,MACP3W,KAAM,WAEV+W,MAAO,CACH7T,KAAM8T,EAAAA,IACNL,MAAO,QACP3W,KAAM,UAId,O,mBC9BA,IADsB,CAAC,OAAQ,MAAO,UAAW,OAAQ,Y,sFCE5CiX,GAAb,QAQI,wBAAY9V,EAAa+V,IAAuB,iCAPhD/V,SAO+C,OAN/CiC,WAM+C,OAL/C+T,iBAK+C,OAJ/CC,mBAI+C,OAH/CxH,UAG+C,OAF/C1M,UAE+C,OAD/C0L,iBAC+C,EAC3C7N,KAAKI,IAAMA,EACXJ,KAAKqC,MAAQ8T,EAAI9T,MACjBrC,KAAKmC,KAAOgU,EAAIhU,KAChBnC,KAAK6N,YAAcsI,EAAItI,YACvB7N,KAAKoW,cAAgBD,EAAIC,YACzBpW,KAAKqW,gBAAkBF,EAAIE,cAC3BrW,KAAK6O,KAAOsH,EAAItH,QAaHpN,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,mBAAAA,EAAAA,EAAAA,GAAAA,KAAAA,oBAAAA,EACV6U,KAAO,OADG7U,EAEV8U,OAAS,SAFC9U,EAGVO,QAAU,UAHAP,EAIV+U,KAAO,OAJG/U,EAKVgV,KAAO,OALGhV,EAMViV,MAAQ,QANEjV,EAOVkV,IAAyC,CAC5CL,KAAM,CACFjU,MAAO,OACPwL,YAAa,gDACbwI,eAAe,EACflU,KAAMyU,EAAAA,KAEVL,OAAQ,CACJlU,MAAO,SACPwL,YAAa,6CACb1L,KAAMK,EAAAA,KAEVR,QAAS,CACLK,MAAO,UACPwL,YAAa,6CACb1L,KAAMuQ,EAAAA,KAEV8D,KAAM,CACFnU,MAAO,OACPwL,YAAa,wDACb1L,KAAM0U,EAAAA,KAEVJ,KAAM,CACFpU,MAAO,gBACPwL,YAAa,mCACbuI,aAAa,EACbvH,KAAM,OACN1M,KAAM2U,EAAAA,MAlCGrV,EAqCVsV,IAAM,SAAC3W,GAAD,OAAiB,IAAI8V,EAAe9V,EAAKqB,EAAgBkV,IAAIvW,KArCzDqB,EAsCVuV,IAAM,kBAAMlX,OAAOD,KAAK4B,EAAgBkV,KAAKzW,IAAIuB,EAAgBsV,MAtCvDtV,EAuCVwV,mBAAqB,kBAAMxV,EAAgBuV,MAAMrU,QAAO,SAAC8M,GAAD,OAAWA,EAAK2G,gBAvC9D3U,EAwCVyV,QAAU,kBAAMzV,EAAgBsV,IAAItV,EAAgBO,UAxC1CP,EAyCV0V,YAAc,kBAAM1V,EAAgBsV,IAAItV,EAAgBgV,OAzC9ChV,EA0CVoN,KAAO,SAAC/G,GACX,IAAMkP,EAAMvV,EAAgBwV,qBAC5B,GAAID,EAAIA,EAAIpW,OAAS,GAAGR,MAAQ0H,EAAQ1H,IACpC,OAAO4W,EAAI,GAEf,IAAK,IAAIrW,EAAI,EAAGA,EAAIqW,EAAIpW,OAAQD,IAC5B,GAAIqW,EAAIrW,GAAGP,MAAQ0H,EAAQ1H,IACvB,OAAO4W,EAAIrW,EAAI,GAGvB,OAAOqW,EAAI,K,4FCbbI,EAAmB,SAAnBA,iBAAoB3P,GACtB,IAAMI,EAAUxI,EAAAA,OAAgC,MAE5C2G,EAAY,GAEZyB,EAAMU,EAAI,IACVnC,GAAa,aAGKyB,EAAM4P,QAAU5P,EAAMW,GAAKX,EAAM6P,QAAU7P,EAAMU,GAAyB,SAApBV,EAAM8P,YAE5D9P,EAAMoB,OACxB7C,GAAa,cAGjB3G,EAAAA,WAAgB,WAERoI,EAAM4P,QAAU5P,EAAMW,GACtBX,EAAM6P,QAAU7P,EAAMU,GACF,SAApBV,EAAM8P,WACN1P,EAAQC,SACRD,EAAQC,UAAYzE,SAAS0E,gBAE7ByP,GAAY,GACZ3P,GAAWA,EAAQC,SAAWD,EAAQC,QAAQE,WAEnD,CAACP,EAAM8P,UAAW9P,EAAM4P,MAAO5P,EAAM6P,MAAO7P,EAAMW,EAAGX,EAAMU,IAE1DV,EAAMgQ,SACNzR,GAAa,WAIjB,MAAkC3G,EAAAA,UAAe,GAAjD,eAAOqY,EAAP,KAAmBF,EAAnB,KAcA,OACI,iCACI,oBACIlP,IAAKT,EACL7B,UAAWA,EACX0L,MAAOjK,EAAMiK,MACbhG,QAlBE,SAAR1D,QACG0P,GAAgBjQ,EAAM4P,QAAU5P,EAAMW,GAAKX,EAAM6P,QAAU7P,EAAMU,GAA0B,SAApBV,EAAM8P,YAC9E9P,EAAMiE,QAAQ,CAAEtD,EAAGX,EAAMW,EAAGD,EAAGV,EAAMU,IACrCqP,GAAY,KAgBRvR,QAZE,SAARgF,QACFuM,GAAY,GACZ/P,EAAMxB,QAAQ,CAAEmC,EAAGX,EAAMW,EAAGD,EAAGV,EAAMU,KAW7BR,SAAUF,EAAMoB,KAChB8O,YAAa,8BAAMH,GAAY,IAPnC,WASI,gBAAKxR,UAAU,OAAf,UAAsB,SAAC,IAAD,CAAM2F,KAAMlE,EAAMtF,KAAMyJ,KAAK,WACnD,gBAAK5F,UAAU,QAAf,SAAwByB,EAAMiK,YAElC,yBAAOjK,EAAM8K,QAAiB9K,EAAMyB,SAAb,WAInC,IAvGmB,SAAbsI,WAAc/J,GAA6B,IAAD,EAC5C,GAAsC1B,EAAAA,EAAAA,KAA9BmC,EAAR,EAAQA,WAAYoB,EAApB,EAAoBA,cAEpB,GAAuB,qBAAZ7B,EAAMW,GAAwC,qBAAZX,EAAMU,EAC/C,OAAO,KAcX,OACI,SAACiP,EAAD,CACI1F,MAAOjK,EAAMiK,MACbtJ,EAAGX,EAAMW,GAAK,EACdD,EAAGV,EAAMU,GAAK,EACdhG,KAAMsF,EAAMtF,KACZkV,MAAOnP,EAAW0B,KAAKxB,EACvBkP,MAAOpP,EAAW0B,KAAKzB,EACvBoP,UAAWrP,EAAWF,MACtBL,SAAUF,EAAME,SAChB8P,QAAQ,EACR/L,QAtBQ,SAAVA,QAAWD,GAAD,OAAanC,GAAc,kBAAKpB,GAAN,IAAkB0B,KAAM6B,MAuB1DxF,QAASwB,EAAMxB,QACfsM,UAAW9K,EAAM8K,QACjB1J,KAAMpB,EAAMoB,KAbhB,mBAeKpB,EAAMyB,gBAfX,aAeK,EAAgBhJ,KAzBT,SAAV0X,QAAWjP,EAAYC,GAAmB,IAAD,EAM3C,OALe,SAATE,OAAUC,GACZA,EAAEtB,EAAMW,GAAK,GAAGY,QAAQJ,EAAQ,IAAhC,kBAA0CnB,GAA1C,IAAiDW,EAAGX,EAAMW,EAAGD,EAAGS,EAAQ,IAE5EE,EAAO,UAAArB,EAAMgB,iBAAN,eAAiBQ,OAAQ,IAEzB5J,EAAAA,aAAmBsJ,EAAO,CAAEvI,IAAKwI,EAAOR,EAAGX,EAAMW,EAAGD,EAAGS,EAAQ,EAAGH,UAAWhB,EAAMgB,mB,+DCxClG,IAHkB,SAAZ2I,UAAa3J,GACf,OAAO,iBAAKzB,UAAU,kBAAf,WAAiC,SAAC,IAAD,CAAM4F,KAAK,OAAOD,KAAMlE,EAAMtF,OAASsF,EAAMpF,W,6HCiCzF,EA5BuB,SAAjBwV,eAAkBpQ,GACpB,IAAQgB,EAAchB,EAAdgB,UACR,GAAsC1C,EAAAA,EAAAA,KAA9BmC,EAAR,EAAQA,WAAYoB,EAApB,EAAoBA,cAEdC,EAAc,SAAdA,YAAerI,GACQ,SAArBgH,EAAWF,OACXsB,GAAc,kBAAKpB,GAAN,IAAkB0B,KAAM1I,MAIvCsI,EAAgB,CAClBC,SAAU,2BACNH,GAAc,kBAAKpB,GAAN,IAAkBF,MAAO,OAAQ0B,QAAS,GAAIC,SAAUzB,EAAWyB,SAAUC,MAAK,UAAM1B,EAAW0B,UACpHC,KAAM,uBAAMN,EAAYd,EAAUqB,OAAO5B,EAAW0B,KAAKxB,EAAGF,EAAW0B,KAAKzB,KAC5E4B,OAAQ,yBAAMR,EAAYd,EAAUuB,SAAS9B,EAAW0B,KAAKxB,EAAGF,EAAW0B,KAAKzB,KAChF8B,OAAQ,yBAAMV,EAAYd,EAAUyB,SAAShC,EAAW0B,KAAKxB,EAAGF,EAAW0B,KAAKzB,KAChFgC,QAAS,0BAAMZ,EAAYd,EAAU2B,UAAUlC,EAAW0B,KAAKxB,EAAGF,EAAW0B,KAAKzB,KAClFkC,SAAU,2BAAM5B,EAAU6B,OAAOpC,EAAW0B,QAGhD,MAA4B,SAArB1B,EAAWF,OAAqBP,EAAME,SAKzC,MAJA,iCACI,SAAC4C,EAAA,GAAD,QAAUC,OAAQ/C,EAAM8J,gBAAoB/H,KAC5C,SAACkB,EAAA,GAAD,QAASF,OAAQG,EAAAA,GAAmBnB,Q,wCC5BnCsO,EAAb,gPACIhO,OAAuC,SAAC1B,EAAGD,GACvC,GAAU,IAANC,EACA,MAAO,CAAEA,EAAG,EAAKa,KAAKrI,OAAS,EAAGuH,EAAG,GAGzC,GAAIA,EAAI,EACJ,MAAO,CAAEC,EAAGA,EAAGD,EAAGA,EAAI,GAG1B,GAAU,IAANA,EAAS,CACT,IAAM4C,EAAM,EAAKC,OAAO5C,EAAI,GAC5B,OAAI2C,EAAIwH,QACG,CAAEnK,EAAGA,EAAI,EAAGD,EAAG4C,EAAI/B,QAAQpI,OAAS,GAEpC,CAAEwH,EAAGA,EAAI,EAAGD,EAAGA,GAI9B,MAAO,CAAEC,EAAGA,EAAI,EAAGD,EAAGA,IAnB9B,EAsBI6B,SAAyC,SAAC5B,EAAGD,GACzC,IAAM4C,EAAM,EAAKC,OAAO5C,GACxB,OAAU,IAAND,GAAW4C,EAAIwH,QACR,CAAEnK,EAAGA,EAAGD,EAAG,GAGlBA,EAAI,GAAKA,EAAI4C,EAAI/B,QAAQpI,OAAS,EAC3B,CAAEwH,EAAGA,EAAGD,EAAGA,EAAI,GAGtBA,EAAI,EACG,CAAEC,EAAGA,EAAI,EAAGD,EAAG,GAGtBC,EAAI,EAAKa,KAAKrI,OAAS,EAChB,CAAEwH,EAAGA,EAAI,EAAGD,EAAGA,GAGnB,CAAEC,EAAG,EAAGD,EAAG,IAxC1B,EA2CI+B,SAAyC,SAAC9B,EAAGD,GAAJ,MAAW,CAAEC,EAAGA,EAAGD,EAAGA,IA3CnE,EA6CIiC,UAA0C,SAAChC,EAAGD,GAAJ,MAAW,CAAEC,EAAGA,EAAGD,EAAGA,IA7CpE,EA+CImC,OAA2B,WACvB,IAAMvC,EAAqB1E,SAAS0E,cACpCA,GAAiBA,EAAckD,SAjDvC,gC,QAAmCC,GCqBnC,EApBiB,SAAXoG,SAAY7J,GACd,IAAMgB,EAAY,IAAIqP,EACtBrP,EAAUQ,KAAO,GACjB,IAAIL,GAAS,EACTyC,GAAM,EASV,OACI,gCACK5D,EAAMyB,SAAShJ,KAVR,SAAV0X,QAAWjP,GAMb,OALA0C,IACK1C,EAAMlB,MAAMoB,OACbD,IACAH,EAAUQ,KAAKL,IAAf,gBAA0BR,EAAGQ,EAAOT,EAAG,GAAMQ,EAAMlB,OAAnD,IAA0DuB,QAAS,MAEhE3J,EAAAA,aAAmBsJ,EAAO,CAAEvI,IAAKiL,EAAIjD,EAAGQ,EAAOT,EAAG,EAAGM,UAAWA,QAKnE,SAAC,EAAD,CAAgBd,SAAUF,EAAME,SAAUc,UAAWA,EAAW8I,eAAgB9J,EAAM8J,sB,uFCnB7ErG,GAAAA,EAAAA,EAAAA,IAEjB,6BAAe,IAAD,4CADdjC,UACc,OAGd4B,QAAU,kBAAM,EAAK5B,MAHP,KAId+B,OAAS,SAAC5C,GAAD,OAAe,EAAKyC,UAAUzC,IAJzB,KAKd0C,QAAU,SAACW,GACP,IACMV,EADO,EAAKF,UACDY,EAAItD,GACrB,OAAI4C,EAAI/B,QAAQpI,OAAS,EAAI6K,EAAIrD,GACtB,kBAAKqD,GAAZ,IAAiBrD,EAAG2C,EAAI/B,QAAQpI,OAAS,IAGtC6K,GAXPzL,KAAKiJ,KAAO,O,+FCgBd8O,EAAW,CAAE3P,EAAG,EAAGD,EAAG,GACtB6P,EAAyB,CAC3BpO,MAAK,UAAMmO,GACX1P,QAAO,UAAM0P,GACb/P,MAAO,OACP2B,SAAU,GACVD,QAAS,IAGPuO,EAAoB5Y,EAAAA,cAAwC,CAC9D6I,WAAY8P,EACZ1O,cAAe,2BACfxD,YAAa,2BAGJoS,EAAqB,SAArBA,mBAAsBzQ,GAC/B,MAAoCpI,EAAAA,SAAe2Y,GAAnD,eAAO9P,EAAP,KAAmBoB,EAAnB,KASA,OAAO,SAAC2O,EAAkBxY,SAAnB,CAA4BuH,MAAO,CAAEkB,WAAAA,EAAYoB,cAAAA,EAAexD,YARnD,SAAdA,cAAc,OAChBwD,GAAc,kBACPpB,GADM,IAETF,MAAO,OACP0B,QAAS,GACTC,SAAUzB,EAAWyB,SACrBC,MAAK,UAAM1B,EAAW0B,WAEvB,SAAgFnC,EAAMyB,YAKjG,IAF6B,SAAvBnD,uBAAuB,OAAM1G,EAAAA,WAAiB4Y,K,qJC1CvCE,EAAyB9Y,EAAAA,cAAuD,CACzF+Y,MAAOjV,OAAOkV,WACdC,OAAQnV,OAAOoV,cAGEpF,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,YAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,aACjB,qBAAY1L,GAAqD,IAAD,mCAC5D,cAAMA,IACD7C,MAAQ,CAAEwT,MAAO,EAAGE,OAAQ,GACjC,EAAKE,uBAAyB,EAAKA,uBAAuBC,MAA5B,WAH8B,EAgC/D,OA5BA,mDAED,SAAAC,oBACI1Y,KAAKwY,yBACLrV,OAAOwV,iBAAiB,SAAU3Y,KAAKwY,0BAC1C,kCAED,SAAAI,uBACIzV,OAAO0V,oBAAoB,SAAU7Y,KAAKwY,0BAC7C,oCAED,SAAAA,yBACIxY,KAAK6E,SAAS,CAAEuT,MAAOjV,OAAOkV,WAAYC,OAAQnV,OAAOoV,gBAC5D,oBAED,SAAAO,SACI,IAAMC,EAAS/Y,KAAK4E,MAAMwT,OAASpY,KAAK4E,MAAM0T,OAAStY,KAAKyH,MAAM2L,MAAM4F,WAAa,YAAc,WACnG,OACI,SAACb,EAAuB1Y,SAAxB,CAAiCuH,MAAOhH,KAAK4E,MAA7C,UACI,gBAAKoB,UAAU,aAAf,UACI,gBAAKA,UAAW,qBAAchG,KAAKyH,MAAM2L,MAAM6F,OAA/B,KAA2CF,EAA3D,UACI,gBAAK/S,UAAW,qBAAchG,KAAKyH,MAAM2L,MAAM6F,OAA/B,KAA2CF,EAAS,SAApE,UACI,gBAAK/S,UAAU,kBAAf,SAAkChG,KAAKyH,MAAMyB,uBAMpE,YAjCgBiK,CAAoB9T,EAAAA,Y,6ECRpBgU,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,UAAAA,EAAAA,EAAAA,GAAAA,KAAAA,WAAAA,EACV6F,OAAgB,CACnBD,OAAQ,UACRD,WAAY,QAHC3F,EAKV8F,MAAe,CAClBF,OAAQ,SACRD,WAAY,S,yECqDpB,IAtDgB,SAAVtO,QAAWjD,GACb,IAAQ+C,EAAW/C,EAAX+C,OACF4O,EAAW,CACbC,aAAc,sBAAC1V,GACP6G,EAAO8O,OAAO3V,IACd8D,EAAMgC,UAAYhC,EAAMgC,WAExBe,EAAO+O,KAAK5V,IACZ8D,EAAMwC,QAAUxC,EAAMwC,SAEtBO,EAAOgP,MAAM7V,IACb8D,EAAM0C,SAAW1C,EAAM0C,UAEvBK,EAAOiP,GAAG9V,IACV8D,EAAMoC,MAAQpC,EAAMoC,OAEpBW,EAAOkP,KAAK/V,IACZ8D,EAAMsC,QAAUtC,EAAMsC,SAEtBS,EAAOF,OAAO3G,IACd8D,EAAM4C,UAAY5C,EAAM4C,WAExBG,EAAOhG,KAAKb,IACZ8D,EAAMkS,QAAUlS,EAAMkS,SAEtBnP,EAAOoP,KAAKjW,IACZ8D,EAAMoS,QAAUpS,EAAMoS,SAEtBrP,EAAOsP,MAAMnW,IACb8D,EAAMsS,SAAWtS,EAAMsS,UAEvBvP,EAAOZ,KAAKjG,IACZ8D,EAAMuS,QAAUvS,EAAMuS,UAI9BC,UAAW,mBAACtW,GACRC,QAAQsW,MAAM,YAAavW,IAG/BwW,aAAc,sBAACxW,GACXC,QAAQsW,MAAM,eAAgBvW,KAItC,OACI,SAAC,IAAD,CAAayW,MAAO,IAApB,UACI,SAAC,MAAD,gBAAcnN,aAAcxF,EAAMwF,cAAkBmM,GAApD,cACI,SAAC,WAAD,W,mBChChB,IAbsC,CAClCK,GAAI,YAAC9V,GAAD,MAAa,WAANA,GACX+V,KAAM,cAAC/V,GAAD,MAAa,aAANA,GACb6V,MAAO,eAAC7V,GAAD,MAAa,cAANA,GACd4V,KAAM,cAAC5V,GAAD,MAAa,aAANA,GACb2V,OAAQ,gBAAC3V,GAAD,MAAa,MAANA,GACf2G,OAAQ,gBAAC3G,GAAD,MAAa,MAANA,GACfa,KAAM,cAACb,GAAD,MAAa,MAANA,GACbiW,KAAM,cAACjW,GAAD,MAAa,MAANA,GACbmW,MAAO,eAACnW,GAAD,MAAa,UAANA,GACdiG,KAAM,cAACjG,GAAD,MAAa,SAANA,K,mCCsCjB,IAtDiB,SAAX4G,SAAY9C,GAoDd,OAnDApI,EAAAA,WAAgB,WACZ,IAAMgb,EAAc,SAAdA,YAAe1W,GAEjB,IAAM2W,EAASnX,OAAOoX,MAAQA,MAAQ5W,EAC9B6G,EAAW/C,EAAX+C,OACJA,EAAO8O,OAAOgB,KACd7S,EAAMgC,UAAYhC,EAAMgC,WACxB9F,EAAE6W,kBAEFhQ,EAAO+O,KAAKe,KACZ7S,EAAMwC,QAAUxC,EAAMwC,SACtBtG,EAAE6W,kBAEFhQ,EAAOgP,MAAMc,KACb7S,EAAM0C,SAAW1C,EAAM0C,UACvBxG,EAAE6W,kBAEFhQ,EAAOiP,GAAGa,KACV7S,EAAMoC,MAAQpC,EAAMoC,OACpBlG,EAAE6W,kBAEFhQ,EAAOkP,KAAKY,KACZ7S,EAAMsC,QAAUtC,EAAMsC,SACtBpG,EAAE6W,kBAEFhQ,EAAOF,OAAOgQ,KACd7S,EAAM4C,UAAY5C,EAAM4C,WACxB1G,EAAE6W,kBAEFhQ,EAAOhG,KAAK8V,KACZ7S,EAAMkS,QAAUlS,EAAMkS,SACtBhW,EAAE6W,kBAEFhQ,EAAOoP,KAAKU,KACZ7S,EAAMoS,QAAUpS,EAAMoS,SACtBlW,EAAE6W,kBAEFhQ,EAAOsP,MAAMQ,KACb7S,EAAMsS,SAAWtS,EAAMsS,UACvBpW,EAAE6W,kBAEFhQ,EAAOZ,KAAK0Q,KACZ7S,EAAMuS,QAAUvS,EAAMuS,SACtBrW,EAAE6W,mBAIV,OADAnX,SAASsV,iBAAiB,UAAW0B,GAC9B,WACHhX,SAASwV,oBAAoB,UAAWwB,MAE7C,CAAC5S,IACG,O,8EC5CJ,IAAMgT,EAAoB,SAApBA,kBAAqBzb,GAC9B,GAAW,IAAPA,EAAU,OAAO0b,EACrB,GAAW,IAAP1b,EAAU,OAAO2b,EACrB,GAAW,IAAP3b,EAAU,OAAO4b,EACrB,MAAM,IAAIC,MAAM,+BAGPF,EAAyB,CAClClB,GAAI,YAAC9V,GAAD,OAAqB,KAAdA,EAAEmX,SACbpB,KAAM,cAAC/V,GAAD,OAAqB,KAAdA,EAAEmX,SACftB,MAAO,eAAC7V,GAAD,OAAqB,KAAdA,EAAEmX,SAChBvB,KAAM,cAAC5V,GAAD,OAAqB,KAAdA,EAAEmX,SACfxB,OAAQ,gBAAC3V,GAAD,OAAqB,KAAdA,EAAEmX,SACjBxQ,OAAQ,gBAAC3G,GAAD,OAAqB,KAAdA,EAAEmX,SACjBtW,KAAM,cAACb,GAAD,OAAqB,KAAdA,EAAEmX,SAAkBnX,EAAEoX,SACnCnB,KAAM,cAACjW,GAAD,OAAqB,KAAdA,EAAEmX,SACfhB,MAAO,eAACnW,GAAD,OAAqB,KAAdA,EAAEmX,SAChBlR,KAAM,cAACjG,GAAD,OAAqB,KAAdA,EAAEmX,UAGNJ,EAAuB,CAChCjB,GAAI,YAAC9V,GAAD,OAAqB,KAAdA,EAAEmX,SACbpB,KAAM,cAAC/V,GAAD,OAAqB,KAAdA,EAAEmX,SACftB,MAAO,eAAC7V,GAAD,OAAqB,KAAdA,EAAEmX,SAChBvB,KAAM,cAAC5V,GAAD,OAAqB,KAAdA,EAAEmX,SACfxB,OAAQ,gBAAC3V,GAAD,OAAqB,KAAdA,EAAEmX,SACjBxQ,OAAQ,gBAAC3G,GAAD,OAAqB,KAAdA,EAAEmX,SACjBtW,KAAM,cAACb,GAAD,OAAqB,KAAdA,EAAEmX,SACflB,KAAM,cAACjW,GAAD,OAAqB,KAAdA,EAAEmX,SACfhB,MAAO,eAACnW,GAAD,OAAqB,MAAdA,EAAEmX,SAChBlR,KAAM,cAACjG,GAAD,OAAqB,KAAdA,EAAEmX,UAGNF,EAAyB,CAClCnB,GAAI,YAAC9V,GAAD,OAAqB,MAAdA,EAAEmX,SACbpB,KAAM,cAAC/V,GAAD,OAAqB,MAAdA,EAAEmX,SACftB,MAAO,eAAC7V,GAAD,OAAqB,MAAdA,EAAEmX,SAChBvB,KAAM,cAAC5V,GAAD,OAAqB,MAAdA,EAAEmX,SACfxB,OAAQ,gBAAC3V,GAAD,OAAqB,MAAdA,EAAEmX,SACjBxQ,OAAQ,gBAAC3G,GAAD,OAAqB,MAAdA,EAAEmX,SACjBtW,KAAM,cAACb,GAAD,OAAqB,KAAdA,EAAEmX,SACflB,KAAM,cAACjW,GAAD,OAAqB,KAAdA,EAAEmX,SACfhB,MAAO,eAACnW,GAAD,OAAqB,MAAdA,EAAEmX,SAChBlR,KAAM,cAACjG,GAAD,OAAqB,KAAdA,EAAEmX,UAGNrQ,EAA4B,CACrCgP,GAAI,YAAC9V,GAAD,OAAOiX,EAAOnB,GAAG9V,IAAM+W,EAAKjB,GAAG9V,IAAMgX,EAAOlB,GAAG9V,IACnD+V,KAAM,cAAC/V,GAAD,OAAOiX,EAAOlB,KAAK/V,IAAM+W,EAAKhB,KAAK/V,IAAMgX,EAAOjB,KAAK/V,IAC3D6V,MAAO,eAAC7V,GAAD,OAAOiX,EAAOpB,MAAM7V,IAAM+W,EAAKlB,MAAM7V,IAAMgX,EAAOnB,MAAM7V,IAC/D4V,KAAM,cAAC5V,GAAD,OAAOiX,EAAOrB,KAAK5V,IAAM+W,EAAKnB,KAAK5V,IAAMgX,EAAOpB,KAAK5V,IAC3D2V,OAAQ,gBAAC3V,GAAD,OAAOiX,EAAOtB,OAAO3V,IAAM+W,EAAKpB,OAAO3V,IAAMgX,EAAOrB,OAAO3V,IACnE2G,OAAQ,gBAAC3G,GAAD,OAAOiX,EAAOtQ,OAAO3G,IAAM+W,EAAKpQ,OAAO3G,IAAMgX,EAAOrQ,OAAO3G,IACnEa,KAAM,cAACb,GAAD,OAAOiX,EAAOpW,KAAKb,IAAM+W,EAAKlW,KAAKb,IAAMgX,EAAOnW,KAAKb,IAC3DiW,KAAM,cAACjW,GAAD,OAAOiX,EAAOhB,KAAKjW,IAAM+W,EAAKd,KAAKjW,IAAMgX,EAAOf,KAAKjW,IAC3DmW,MAAO,eAACnW,GAAD,OAAOiX,EAAOd,MAAMnW,IAAM+W,EAAKZ,MAAMnW,IAAMgX,EAAOb,MAAMnW,IAC/DiG,KAAM,cAACjG,GAAD,OAAOiX,EAAOhR,KAAKjG,IAAM+W,EAAK9Q,KAAKjG,IAAMgX,EAAO/Q,KAAKjG,M","sources":["Common.ts","View/UI/CookieContext.ts","Model/Deck/Deck.ts","View/UI/StartScreen/RatingOptions.ts","common/TouchDetector.js","View/UI/StartScreen/StartScreenContext.ts","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/ControlsPresets.ts","View/UI/StartScreen/Common/CloseButton.tsx","View/UI/StorageManager.ts","View/UI/StartScreen/Navigation/ScreenElement.ts","View/UI/StartScreen/Common/CookieBanner.tsx","View/UI/StartScreen/Navigation/Row.tsx","View/UI/StartScreen/Navigation/ScreenNavWrapper.tsx","View/UI/StartScreen/Navigation/ScreenNavigator.ts","View/UI/StartScreen/Navigation/ScreenContent.tsx","View/UI/StartScreen/Common/ScreenMainButton.tsx","View/UI/StartScreen/Screens/Controls.tsx","View/UI/StartScreen/Screens/Difficulty.tsx","View/UI/StartScreen/Common/ScreenToggle.tsx","View/UI/StartScreen/Screens/Performance.tsx","View/UI/StartScreen/Common/ScreenSelect.tsx","View/UI/StartScreen/Screens/QuickStart.tsx","View/UI/StartScreen/Screens/Rating.tsx","View/UI/StartScreen/Screens/Suggestions.tsx","View/UI/StartScreen/Screens/Support.tsx","View/UI/StartScreen/Screens/Screen.tsx","common/Overlay.tsx","View/UI/StartScreen/ConsentDialog.tsx","View/UI/StartScreen/Menu/VerticalMenu.tsx","View/UI/StartScreen/Menu/StartMenu.tsx","View/UI/StartScreen/Home.tsx","App.tsx","GameModes.tsx","Model/Deck/Card.ts","Model/Deck/DeckSize.ts","Model/Deck/Suits.ts","Model/Game/Settings/EntropyLevels.ts","Model/Game/Settings/SuggestionModes.ts","View/UI/StartScreen/Menu/MenuButton.tsx","View/UI/StartScreen/Menu/MenuTitle.tsx","View/UI/StartScreen/Menu/TreeNavWrapper.tsx","View/UI/StartScreen/Menu/TreeNavigator.ts","View/UI/StartScreen/Menu/MenuTree.tsx","View/UI/StartScreen/Navigation/AbstractNavigator.ts","View/UI/StartScreen/Navigation/NavigationContext.tsx","common/AspectRatio/AspectRatio.tsx","common/AspectRatio/Ratios.ts","common/GamePad.tsx","common/GamepadLayout.ts","common/Keyboard.ts","common/KeyboardLayouts.ts"],"sourcesContent":["import Card from \"./Model/Deck/Card\";\r\nimport Model from \"./Model/Model\";\r\n\r\nexport type StateReplacer = (state: Model) => Model | null;\r\nexport type StateUpdater = (state: Model) => void;\r\nexport type StateReplaceFunction = (modifier: StateReplacer) => void;\r\nexport type StateUpdateFunction = (modifier: StateUpdater) => void;\r\n\r\nexport const defaultPlayerSettings: PlayerSettings = {\r\n    0: {\r\n        id: 0,\r\n        name: \"Player 1\",\r\n        inputMethod: \"gamepad\",\r\n        inputLayout: 0,\r\n    },\r\n    1: {\r\n        id: 1,\r\n        name: \"Player 2\",\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 0,\r\n    },\r\n};\r\n\r\ninterface PlayerSetting {\r\n    id: number;\r\n    name: string;\r\n    inputMethod: string;\r\n    inputLayout: number;\r\n}\r\n\r\nexport interface PlayerSettings {\r\n    [id: number]: PlayerSetting;\r\n}\r\n\r\nexport interface LaunchSettings extends RatingSettings {\r\n    recyclingMode: string;\r\n    drawMode: string;\r\n    interactionEntropy: number;\r\n    baseEntropy: number;\r\n    suggestionMode: string;\r\n    players: PlayerSettings;\r\n    boardMode: string;\r\n    initialized?: boolean;\r\n    quickDeal?: boolean;\r\n    speed?: boolean;\r\n    autoUncover?: boolean;\r\n    featureSwitches: FeatureSwitches;\r\n}\r\n\r\nexport interface ClickHandler {\r\n    dispatchPutDown: (card: Card, position: any, state: Model, index: number) => void;\r\n    dispatchPickup: (card: Card | null, position: any, state: Model, index: number) => void;\r\n}\r\n\r\nexport type BlinkFunction = (state: Model, index: number) => void;\r\n\r\nexport interface RatingSettings {\r\n    undoPenalty?: boolean;\r\n    hintPenalty?: boolean;\r\n    timedMode?: boolean;\r\n    missPenalty?: boolean;\r\n}\r\n\r\nexport interface FeatureSwitches {\r\n    confetti?: boolean;\r\n    undo?: boolean;\r\n    shuffle: boolean;\r\n}\r\n\r\nexport interface EntropySettings {\r\n    baseEntropy?: number;\r\n    interactionEntropy?: number;\r\n}\r\n","import React from \"react\";\r\n\r\nexport interface ICookieContext {\r\n    consented: boolean;\r\n    setConsented: (c: boolean) => void;\r\n}\r\n\r\nconst CookieContext = React.createContext<ICookieContext>({ consented: false, setConsented: () => {} });\r\nexport const CookieContextProvider = CookieContext.Provider;\r\nconst useCookieContext = () => React.useContext(CookieContext);\r\nexport default useCookieContext;\r\n","import Card from \"./Card\";\r\nimport Suits from \"./Suits\";\r\nimport { getFoundationOrder } from \"./DeckSize\";\r\n\r\nexport default class Deck {\r\n    cards: Card[];\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = getFoundationOrder()\r\n            .map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\r\n            .flat()\r\n            .reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array: any[]) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    copy() {\r\n        const result = new Deck();\r\n        result.cards = Card.copyAll(this.cards);\r\n        return result;\r\n    }\r\n}\r\n","import { mdiBeach, mdiScaleBalance, mdiTrophy } from \"@mdi/js\";\r\n\r\nimport { RatingSettings } from \"../../../Common\";\r\nimport { StartScreenState } from \"./StartScreenContext\";\r\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\r\n\r\nexport interface RatingPreset {\r\n    id: number;\r\n    icon: string;\r\n    label: string;\r\n    settings: RatingSettings;\r\n    apply: (s: StartScreenState) => void;\r\n}\r\n\r\nconst apply = (after: RatingSettings, s: StartScreenState, id: number) => {\r\n    if (!s.ratingSettings.hintPenalty && after.hintPenalty) {\r\n        s.suggestionMode = SuggestionModes.NONE;\r\n    }\r\n    //@todo remember which suggestion mode was there before, and reset to that on next change of hint penalty\r\n    s.ratingSettings = { ...after };\r\n    s.ratingPreset = id;\r\n};\r\n\r\nexport default class RatingPresets {\r\n    static CHILL = {\r\n        timedMode: false,\r\n        missPenalty: false,\r\n        undoPenalty: false,\r\n        hintPenalty: false,\r\n    };\r\n\r\n    static REGULAR = {\r\n        timedMode: true,\r\n        missPenalty: false,\r\n        undoPenalty: true,\r\n        hintPenalty: false,\r\n    };\r\n\r\n    static COMPETITIVE = {\r\n        timedMode: true,\r\n        missPenalty: true,\r\n        undoPenalty: true,\r\n        hintPenalty: true,\r\n    };\r\n\r\n    static ALL: RatingPreset[] = [\r\n        {\r\n            id: 0,\r\n            icon: mdiBeach ,\r\n            label: \"Chill\",\r\n            settings: { ...RatingPresets.CHILL },\r\n            apply: (s) => apply(RatingPresets.CHILL, s, 0),\r\n        },\r\n        {\r\n            id: 1,\r\n            icon: mdiScaleBalance,\r\n            label: \"Regular\",\r\n            settings: { ...RatingPresets.REGULAR },\r\n            apply: (s) => apply(RatingPresets.REGULAR, s, 1),\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: mdiTrophy ,\r\n            label: \"Competitive\",\r\n            settings: { ...RatingPresets.COMPETITIVE },\r\n            apply: (s) => apply(RatingPresets.COMPETITIVE, s, 2),\r\n        },\r\n    ];\r\n\r\n    static matchPreset = (settings: any) => {\r\n        const filterd = RatingPresets.ALL.filter((preset) => RatingPresets.equals(preset.settings, settings));\r\n        if (filterd.length > 0) {\r\n            return filterd[0].id;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    static equals = (s1: any, s2: any) =>\r\n        s1.timedMode === s2.timedMode &&\r\n        s1.missPenalty === s2.missPenalty &&\r\n        s1.undoPenalty === s2.undoPenalty &&\r\n        s1.hintPenalty === s2.hintPenalty;\r\n}\r\n","//credit https://stackoverflow.com/a/60312025/1216242\r\nconst TouchDetector = () => {\r\n    try {\r\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n        const mq = (query) => window.matchMedia(query).matches;\r\n\r\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n            return true;\r\n        }\r\n\r\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n    } catch (e) {\r\n        console.error(\"(Touch detect failed)\", e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default TouchDetector;\r\n","import { EntropySettings, FeatureSwitches, PlayerSettings, RatingSettings, defaultPlayerSettings } from \"../../../Common\";\r\n\r\nimport RatingPresets from \"./RatingOptions\";\r\nimport React from \"react\";\r\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\r\nimport TouchDetector from \"../../../common/TouchDetector\";\r\n\r\nexport interface IStartScreenContext {\r\n    state: StartScreenState;\r\n    setState: (s: StartScreenState) => void;\r\n}\r\n\r\nexport const defaultStartScreenState: StartScreenState = {\r\n    ratingSettings: { ...RatingPresets.REGULAR },\r\n    difficultySettings: 1,\r\n    ratingPreset: 1,\r\n    quickDeal: TouchDetector(),\r\n    autoResolve: true,\r\n    autoUncover: false,\r\n    speed: false,\r\n    entropySettings: {\r\n        baseEntropy: TouchDetector() ? 1 : 2,\r\n        interactionEntropy: TouchDetector() ? 1 : 2,\r\n    },\r\n    featureSwitches: { undo: true, confetti: true, shuffle: true },\r\n    suggestionMode: SuggestionModes.REGULAR,\r\n    players: defaultPlayerSettings,\r\n};\r\n\r\nexport interface StartScreenState {\r\n    ratingSettings: RatingSettings;\r\n    featureSwitches: FeatureSwitches;\r\n    difficultySettings: number;\r\n    ratingPreset: number;\r\n    quickDeal: boolean;\r\n    autoResolve: boolean;\r\n    autoUncover: boolean;\r\n    speed: boolean;\r\n    entropySettings: EntropySettings;\r\n    suggestionMode: string;\r\n    players: PlayerSettings;\r\n}\r\n\r\nconst StartScreenContext = React.createContext<IStartScreenContext>({\r\n    state: {\r\n        difficultySettings: 0,\r\n        ratingPreset: 0,\r\n        ratingSettings: {},\r\n        entropySettings: {},\r\n        quickDeal: false,\r\n        autoResolve: true,\r\n        autoUncover: false,\r\n        speed: false,\r\n        suggestionMode: SuggestionModes.REGULAR,\r\n        featureSwitches: { undo: true, confetti: true, shuffle: true },\r\n        players: defaultPlayerSettings,\r\n    },\r\n    setState: () => {},\r\n});\r\n\r\nexport const StartScreenProvider = StartScreenContext.Provider;\r\n\r\nconst useStartScreenContext = () => React.useContext(StartScreenContext);\r\n\r\nexport default useStartScreenContext;\r\n","import { mdiDuck, mdiGoogleDownasaur, mdiKangaroo, mdiRodent, mdiShark, mdiSnake } from \"@mdi/js\";\r\n\r\nexport interface DifficultyOption {\r\n    id: number;\r\n    settings: {\r\n        drawMode: string;\r\n        recyclingMode: string;\r\n    };\r\n    icon: string;\r\n    lines: string[];\r\n}\r\nconst DifficultyOptions: DifficultyOption[] = [\r\n    {\r\n        id: 0,\r\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\r\n        icon: mdiDuck ,\r\n        lines: [\"Turn 1 card\", \"No Limit\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\r\n        icon: mdiKangaroo ,\r\n        lines: [\"Turn 1 card\", \"Three passes\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\r\n        icon: mdiShark  ,\r\n        lines: [\"Turn 1 card\", \"Only a single pass\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\r\n        icon: mdiRodent  ,\r\n        lines: [\"Turn 3 cards\", \"No limit\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\r\n        icon: mdiSnake  ,\r\n        lines: [\"Turn 3 cards \", \"Three passes\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\r\n        icon: mdiGoogleDownasaur ,\r\n        lines: [\"Turn 3 cards \", \"Only a single pass\"],\r\n    },\r\n];\r\n\r\nexport default DifficultyOptions;\r\n","import { mdiControllerClassic, mdiKeyboard, mdiMouse } from \"@mdi/js\";\r\n\r\nexport interface IControlPreset {\r\n    id: number;\r\n    icon: string;\r\n    inputMethod: string;\r\n    inputLayout: number;\r\n    lines: string[],\r\n}\r\nexport const ControlPresets: IControlPreset[] = [\r\n    {\r\n        id: 0,\r\n        icon: mdiMouse ,\r\n        inputMethod: \"mouse\",\r\n        inputLayout: 0,\r\n        lines: [\"Mouse or\", \"Touchpad\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: mdiControllerClassic ,\r\n        inputMethod: \"gamepad\",\r\n        inputLayout: 0,\r\n        lines: [\"Gamepad 1\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        icon: mdiControllerClassic ,\r\n        inputMethod: \"gamepad\",\r\n        inputLayout: 1,\r\n        lines: [\"Gamepad 2\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        icon: mdiKeyboard ,\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 0,\r\n        lines: [\"Keyboard\", \"WASD\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        icon: mdiKeyboard ,\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 1,\r\n        lines: [\"Keyboard\", \"ARROWS\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        icon: mdiKeyboard ,\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 2,\r\n        lines: [\"Keyboard\", \"NUMPAD\"],\r\n    },\r\n];\r\n","import React from \"react\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\n\r\nconst CloseButton = () => {\r\n    const { closeScreen } = useNavigationContext();\r\n    return (\r\n        <div className=\"closer\">\r\n            <button onClick={closeScreen}>🗙</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CloseButton;\r\n","import { StartScreenState } from \"./StartScreen/StartScreenContext\";\r\n\r\nexport interface ConsentObject {\r\n    prompt: string;\r\n    confirm: () => boolean;\r\n}\r\n\r\nexport default class StorageManager {\r\n    static instance: StorageManager;\r\n    static getInstance = () => {\r\n        if (!StorageManager.instance) {\r\n            StorageManager.instance = new StorageManager();\r\n        }\r\n        return StorageManager.instance;\r\n    };\r\n    hasConsent = () => {\r\n        const consent = localStorage.getItem(\"consent\");\r\n        return consent && !!parseInt(consent);\r\n    };\r\n\r\n    giveConsent: () => ConsentObject = () => ({\r\n        prompt: \"Allow this game to store settings, so your changes will stay. No data leaves your computer.\",\r\n        confirm: () => {\r\n            localStorage.setItem(\"consent\", \"1\");\r\n            return true;\r\n        },\r\n    });\r\n\r\n    getDialog = () => (this.hasConsent() ? this.revokeConsent() : this.giveConsent());\r\n\r\n    revokeConsent: () => ConsentObject = () => ({\r\n        prompt: \"Delete all local stored data? All settings will be lost.\",\r\n        confirm: () => {\r\n            localStorage.clear();\r\n            return false;\r\n        },\r\n    });\r\n\r\n    store = (value: StartScreenState) => {\r\n        if (this.hasConsent()) {\r\n            localStorage.setItem(\"state\", JSON.stringify(value));\r\n        }\r\n    };\r\n\r\n    getPreviousState = () => {\r\n        if (this.hasConsent()) {\r\n            const state = localStorage.getItem(\"state\");\r\n            return state != null ? JSON.parse(state) : null;\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { XY } from \"../../XY\";\r\n\r\nexport interface Focusable {\r\n    hasFocus: boolean;\r\n    autoFocus?: boolean;\r\n}\r\n\r\nexport interface MenuInpputElementProps extends Focusable {\r\n    disabled?: boolean;\r\n}\r\n\r\nexport const getScreenElementClassName = (base: string, props: MenuInpputElementProps) => {\r\n    let className = base;\r\n    if (props.hasFocus) {\r\n        className += \" focused\";\r\n    }\r\n    if (props.disabled) {\r\n        className += \" disabled\";\r\n    }\r\n    return className;\r\n};\r\n\r\nexport const useFocusEffect = (props: Focusable, inputEl: React.RefObject<HTMLElement>) => {\r\n    React.useEffect(() => {\r\n        if (props.hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [props.hasFocus, inputEl]);\r\n};\r\n\r\nexport const useInitialFocus = (props: Focusable, inputEl: React.RefObject<HTMLElement>, pos: XY) => {\r\n    React.useEffect(() => {\r\n        if (\r\n            props.autoFocus &&\r\n            !props.hasFocus &&\r\n            inputEl &&\r\n            inputEl.current &&\r\n            inputEl.current !== document.activeElement &&\r\n            pos.x === -1 &&\r\n            pos.y === -1\r\n        ) {\r\n            inputEl.current.focus();\r\n        }\r\n        // this hooks only works once, when ref is assigned\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [inputEl]);\r\n};\r\n","import useCookieContext, { ICookieContext } from \"../../CookieContext\";\r\n\r\nimport React from \"react\";\r\nimport StorageManager from \"../../StorageManager\";\r\nimport { XY } from \"../../XY\";\r\nimport { useFocusEffect } from \"../Navigation/ScreenElement\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\n\r\ninterface RenderCookieBannerProps extends ICookieContext, XY {}\r\n\r\nconst RenderCookieBanner = (props: RenderCookieBannerProps) => {\r\n    const { navigation } = useNavigationContext();\r\n    const hasFocus = (y: number, x: number) => navigation.focus === \"screen\" && navigation.screen.x === x && navigation.screen.y === y;\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    useFocusEffect({ hasFocus: hasFocus(props.y, props.x) }, inputEl);\r\n    let className = \"cookiebanner\";\r\n    if (hasFocus(props.y, props.x)) {\r\n        className += \" focused\";\r\n    }\r\n    return !props.consented ? (\r\n        <button\r\n            ref={inputEl}\r\n            className={className}\r\n            onClick={() => {\r\n                const storage = new StorageManager();\r\n                const consent = storage.giveConsent();\r\n                //@todo integrate with cookie dialog\r\n                // eslint-disable-next-line no-restricted-globals\r\n                if (!props.consented && confirm(consent.prompt)) {\r\n                    consent.confirm();\r\n                    props.setConsented(true);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"icon\">🍪</div>\r\n            <div className=\"message\">\r\n                <b>Changes on this page will be lost after each game</b>, until you allow this app to store data on your machine. Click here\r\n                to give consent.\r\n            </div>\r\n        </button>\r\n    ) : null;\r\n};\r\n\r\nconst CookieBanner = (props: { x?: number; y?: number }) => {\r\n    const { consented, setConsented } = useCookieContext();\r\n    if (typeof props.x === \"undefined\" || typeof props.y === \"undefined\") {\r\n        return null;\r\n    }\r\n    return <RenderCookieBanner x={props.x} y={props.y} consented={consented} setConsented={setConsented} />;\r\n};\r\n\r\nexport default CookieBanner;\r\n","import React from \"react\";\r\nimport { ScreenNavigator } from \"./ScreenNavigator\";\r\n\r\nconst Row = (props: { skip?: boolean; y?: number; navigator?: ScreenNavigator; children?: any[] | any | undefined }) => {\r\n    if (typeof props.y == \"undefined\" || typeof props.navigator == \"undefined\") {\r\n        return null;\r\n    }\r\n    const addElement = (child: any, index: number) => {\r\n        if (!child) return null;\r\n        const assign = (n: any[]) => {\r\n            n[props.y || 0].buttons[index || 0] = { x: index, y: props.y };\r\n        };\r\n        if (!props.skip) {\r\n            assign(props.navigator?.rows || []);\r\n        }\r\n        return React.cloneElement(child, { key: index, x: index, y: props.y });\r\n    };\r\n    return !props.children ? null : (\r\n        <div className=\"row\">{Array.isArray(props.children) ? props.children.map(addElement) : addElement(props.children, 0)}</div>\r\n    );\r\n};\r\nexport default Row;\r\n","import GamePad from \"../../../../common/GamePad\";\r\nimport GamepadLayout from \"../../../../common/GamepadLayout\";\r\nimport Keyboard from \"../../../../common/Keyboard\";\r\nimport React from \"react\";\r\nimport { ScreenNavigator } from \"./ScreenNavigator\";\r\nimport { Universal } from \"../../../../common/KeyboardLayouts\";\r\nimport { XY } from \"../../XY\";\r\nimport useNavigationContext from \"./NavigationContext\";\r\n\r\nconst ScreenNavWrapper = (props: { navigator: ScreenNavigator; screen: string }) => {\r\n    const { navigator } = props;\r\n    const { navigation, setNavigation } = useNavigationContext();\r\n\r\n    const assignState = (result: XY) => {\r\n        if (navigation.focus === \"screen\") {\r\n            setNavigation({ ...navigation, screen: result });\r\n        }\r\n    };\r\n\r\n    const inputHandlers = {\r\n        onCancel: () =>\r\n            setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } }),\r\n        onUp: () => assignState(navigator.moveUp(navigation.screen.x, navigation.screen.y)),\r\n        onDown: () => assignState(navigator.moveDown(navigation.screen.x, navigation.screen.y)),\r\n        onLeft: () => assignState(navigator.moveLeft(navigation.screen.x, navigation.screen.y)),\r\n        onRight: () => assignState(navigator.moveRight(navigation.screen.x, navigation.screen.y)),\r\n        onAction: () => navigator.action(navigation.screen),\r\n    };\r\n\r\n    return navigation.focus === \"screen\" ? (\r\n        <>\r\n            <Keyboard layout={Universal} {...inputHandlers} />\r\n            <GamePad layout={GamepadLayout} {...inputHandlers} />\r\n        </>\r\n    ) : null;\r\n};\r\nexport default ScreenNavWrapper;\r\n","import AbstractNavigator from \"./AbstractNavigator\";\r\nimport { NavHandler } from \"./NavHandler\";\r\nimport { XY } from \"../../XY\";\r\n\r\nexport class ScreenNavigator extends AbstractNavigator implements NavHandler {\r\n    moveUp: (x: number, y: number) => XY = (x, y) => {\r\n        const rows = this.getRows();\r\n        if (y === 0) {\r\n            return this.goToRow({ x: x, y: rows.length - 1 });\r\n        }\r\n        return this.goToRow({ x: x, y: y - 1 });\r\n    };\r\n\r\n    moveDown: (x: number, y: number) => XY = (x, y) => {\r\n        const rows = this.getRows();\r\n        if (y === rows.length - 1) {\r\n            return this.goToRow({ x: x, y: 0 });\r\n        }\r\n        return this.goToRow({ x: x, y: y + 1 });\r\n    };\r\n\r\n    moveLeft: (x: number, y: number) => XY = (x, y) => {\r\n        const row = this.getRow(y);\r\n        if (x === 0) {\r\n            return { x: row.buttons.length - 1, y: y };\r\n        }\r\n        return { x: x - 1, y: y };\r\n    };\r\n\r\n    moveRight: (x: number, y: number) => XY = (x, y) => {\r\n        const row = this.getRow(y);\r\n        if (x === row.buttons.length - 1) {\r\n            return { x: 0, y: y };\r\n        }\r\n        return { x: x + 1, y: y };\r\n    };\r\n\r\n    action: (xy: XY) => void = () => {\r\n        const activeElement: any = document.activeElement;\r\n        activeElement && activeElement.click();\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport ScreenNavWrapper from \"./ScreenNavWrapper\";\r\nimport { ScreenNavigator } from \"./ScreenNavigator\";\r\n\r\nconst ScreenContent = (props: { id: string; children: any[] }) => {\r\n    const navigator = new ScreenNavigator();\r\n    let _index = -1;\r\n    let _i = -1;\r\n    const addRow = (child: any) => {\r\n        _i++;\r\n        if (!child.props.skip) {\r\n            _index++;\r\n            navigator.rows[_index] = { buttons: [] };\r\n        }\r\n        return React.cloneElement(child, { key: _i, x: 0, y: _index, navigator: navigator });\r\n    };\r\n    return (\r\n        <div className=\"content\">\r\n            {props.children.map((child) => addRow(child))}\r\n            <ScreenNavWrapper navigator={navigator} screen=\"rating\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScreenContent;\r\n","import Icon from \"@mdi/react\";\r\nimport React from \"react\";\r\nimport { XY } from \"../../XY\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\n\r\ninterface ScreenMainButtonProps {\r\n    x?: number;\r\n    y?: number;\r\n    id: number;\r\n    icon: string;\r\n    className: (pos: XY) => string;\r\n    lines: string[];\r\n    onClick: () => void;\r\n    autoFocus: boolean;\r\n    disabled?: boolean;\r\n}\r\nconst ScreenMainButton = (props: ScreenMainButtonProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    const { navigation, setNavigation } = useNavigationContext();\r\n    const hasFocus = navigation.focus === \"screen\" && navigation.screen.x === props.x && navigation.screen.y === props.y;\r\n    React.useEffect(() => {\r\n        if (hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [inputEl, hasFocus]);\r\n\r\n    React.useEffect(() => {\r\n        if (\r\n            props.autoFocus &&\r\n            !hasFocus &&\r\n            inputEl &&\r\n            inputEl.current &&\r\n            inputEl.current !== document.activeElement &&\r\n            navigation.screen.x === -1 &&\r\n            navigation.screen.y === -1\r\n        ) {\r\n            inputEl.current.focus();\r\n        }\r\n    // limited dependencies are on purpose to trigger this only once\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [inputEl]);\r\n    const focus = () => {\r\n        if (!hasFocus) {\r\n            setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\r\n        }\r\n    };\r\n    const click = () => {\r\n        props.onClick();\r\n        setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\r\n    };\r\n\r\n    if (typeof props.x === \"undefined\" || typeof props.y === \"undefined\") {\r\n        return null;\r\n    }\r\n\r\n    const pos = { x: props.x, y: props.y };\r\n\r\n    return (\r\n        <button onFocus={focus} ref={inputEl} key={props.id} disabled={props.disabled} className={props.className(pos)} onClick={click}>\r\n            <Icon path={props.icon} size=\"1em\" />\r\n            {props.lines.map((line: string, index: number) => (\r\n                <div key={index}>{line}</div>\r\n            ))}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ScreenMainButton;\r\n","import { ControlPresets, IControlPreset } from \"../ControlsPresets\";\r\n\r\nimport CloseButton from \"../Common/CloseButton\";\r\nimport CookieBanner from \"../Common/CookieBanner\";\r\nimport GamePad from \"../../../../common/GamePad\";\r\nimport GamepadLayout from \"../../../../common/GamepadLayout\";\r\nimport React from \"react\";\r\nimport Row from \"../Navigation/Row\";\r\nimport ScreenContent from \"../Navigation/ScreenContent\";\r\nimport ScreenMainButton from \"../Common/ScreenMainButton\";\r\nimport { XY } from \"../../XY\";\r\nimport useCookieContext from \"../../CookieContext\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\nimport useStartScreenContext from \"../StartScreenContext\";\r\n\r\nconst Controls = (props: { player: number }) => {\r\n    //@todo support custom keyboard / gamepad layouts\r\n\r\n    const { state, setState } = useStartScreenContext();\r\n    const { navigation } = useNavigationContext();\r\n\r\n    const [pads, setPads] = React.useState([\r\n        {\r\n            found: false,\r\n            buttonPressed: false,\r\n        },\r\n        {\r\n            found: false,\r\n            buttonPressed: false,\r\n        },\r\n    ]);\r\n\r\n    const press = (i: number) => {\r\n        pads[i].found = true;\r\n        pads[i].buttonPressed = true;\r\n        setPads({ ...pads });\r\n        console.log(pads);\r\n    };\r\n\r\n    const { consented } = useCookieContext();\r\n    const player = state.players[props.player];\r\n    if (!player) {\r\n        return null;\r\n    }\r\n\r\n    const playerHasSettings = (id: number, playerId: number) =>\r\n        state.players[playerId].inputLayout === ControlPresets[id].inputLayout &&\r\n        state.players[playerId].inputMethod === ControlPresets[id].inputMethod;\r\n\r\n    const isActive = (id: number) => playerHasSettings(id, props.player);\r\n\r\n    const applyPreset = (id: number) => {\r\n        const nextPlayer = { ...state.players };\r\n        nextPlayer[props.player].inputMethod = ControlPresets[id].inputMethod;\r\n        nextPlayer[props.player].inputLayout = ControlPresets[id].inputLayout;\r\n        setState({ ...state, players: nextPlayer });\r\n    };\r\n\r\n    const getButtonClass = (id: number, pos: XY) => {\r\n        let className = pos.x + \"\" + pos.y + \" \" + navigation.screen.x + \"\" + navigation.screen.y + \" \";\r\n        className += navigation.screen.x === pos.x && navigation.screen.y === pos.y ? \" focused\" : \"\";\r\n        className += isActive(id) ? \" active-0\" : \" inactive-0\";\r\n        className += blockedByOtherPlayers(id) ? \" disabled\" : \"\";\r\n        return className;\r\n    };\r\n\r\n    const blockedByOtherPlayers = (id: number) => {\r\n        const otherPlayers = [0, 1].filter((p) => p !== props.player);\r\n        return playerHasSettings(id, otherPlayers[0]);\r\n    };\r\n\r\n    const getLines = (preset: IControlPreset) => {\r\n        if (preset.inputMethod === \"gamepad\") {\r\n            return [...preset.lines, pads[preset.inputLayout].found || pads[preset.inputLayout].buttonPressed ? \"Connected\" : \"Not Found\"];\r\n        }\r\n        return preset.lines;\r\n    };\r\n\r\n    return (\r\n        <div className=\"controls startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">{player.name}</div>\r\n            <ScreenContent id=\"settings\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    {ControlPresets.slice(0, 3).map((preset) => (\r\n                        <ScreenMainButton\r\n                            key={preset.id}\r\n                            icon={preset.icon}\r\n                            id={preset.id}\r\n                            disabled={blockedByOtherPlayers(preset.id)}\r\n                            autoFocus={isActive(preset.id)}\r\n                            className={(pos: XY) => getButtonClass(preset.id, pos)}\r\n                            onClick={() => applyPreset(preset.id)}\r\n                            lines={getLines(preset)}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    {ControlPresets.slice(3).map((preset) => (\r\n                        <ScreenMainButton\r\n                            key={preset.id}\r\n                            icon={preset.icon}\r\n                            id={preset.id}\r\n                            disabled={blockedByOtherPlayers(preset.id)}\r\n                            autoFocus={isActive(preset.id)}\r\n                            className={(pos: XY) => getButtonClass(preset.id, pos)}\r\n                            onClick={() => applyPreset(preset.id)}\r\n                            lines={preset.lines}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row skip={true}>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">@todo</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\r\n                    </div>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">@todo</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\r\n                    </div>\r\n                </Row>\r\n            </ScreenContent>\r\n            <GamePad\r\n                layout={GamepadLayout}\r\n                gamepadIndex={0}\r\n                onUp={() => press(0)}\r\n                onDown={() => press(0)}\r\n                onRight={() => press(0)}\r\n                onLeft={() => press(0)}\r\n                onAction={() => press(0)}\r\n            />\r\n            <GamePad\r\n                layout={GamepadLayout}\r\n                gamepadIndex={1}\r\n                onUp={() => press(1)}\r\n                onDown={() => press(1)}\r\n                onRight={() => press(1)}\r\n                onLeft={() => press(1)}\r\n                onAction={() => press(1)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Controls;\r\n","import DifficultyOptions, { DifficultyOption } from \"../DifficultyOptions\";\r\n\r\nimport CloseButton from \"../Common/CloseButton\";\r\nimport CookieBanner from \"../Common/CookieBanner\";\r\nimport React from \"react\";\r\nimport Row from \"../Navigation/Row\";\r\nimport ScreenContent from \"../Navigation/ScreenContent\";\r\nimport ScreenMainButton from \"../Common/ScreenMainButton\";\r\nimport { XY } from \"../../XY\";\r\nimport useCookieContext from \"../../CookieContext\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\nimport useStartScreenContext from \"../StartScreenContext\";\r\n\r\nconst Difficulty = () => {\r\n    const { state, setState } = useStartScreenContext();\r\n    const { navigation } = useNavigationContext();\r\n\r\n    const isActive = (id: number) => state.difficultySettings === id;\r\n\r\n    const getButtonClass = (index: number, pos: XY) => {\r\n        const hasFocus = navigation.screen.x === pos.x && navigation.screen.y === pos.y;\r\n        let name = isActive(index) ? `active active-${index}` : `inactive-${index}`;\r\n        name += hasFocus ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    const renderButton = (button: DifficultyOption) => (\r\n        <ScreenMainButton\r\n            key={button.id}\r\n            icon={button.icon}\r\n            id={button.id}\r\n            autoFocus={isActive(button.id)}\r\n            className={(pos) => getButtonClass(button.id, pos)}\r\n            onClick={() => setState({ ...state, difficultySettings: button.id })}\r\n            lines={button.lines}\r\n        />\r\n    );\r\n\r\n    const { consented } = useCookieContext();\r\n\r\n    return (\r\n        <div className=\"difficulty startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Difficulty</div>\r\n            <ScreenContent id=\"difficulty\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>{DifficultyOptions.slice(0, 3).map(renderButton)}</Row>\r\n                <Row>{DifficultyOptions.slice(3).map(renderButton)}</Row>\r\n                <Row skip={true}>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">Draw Mode</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">\r\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode === \"triple\"\r\n                                ? \"Turn 3 cards at once from the Stock to the Waste.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode === \"single\"\r\n                                ? \"Turn 1 card after the other from the Stock to the Waste.\"\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">Pass Limit</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode === \"1-pass\"\r\n                                ? \"One pass through the deck. Waste can not be recycled to the Stock.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode === \"3-pass\"\r\n                                ? \"Three passes through the deck. Waste can be recycled to Stock two times.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode === \"infinite\"\r\n                                ? \"No limit on passes through the deck. Waste can be recycled to Stock endlessly.\"\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Difficulty;\r\n","import \"./react-toggle.css\";\r\n\r\nimport { getScreenElementClassName, useFocusEffect, useInitialFocus } from \"../Navigation/ScreenElement\";\r\n\r\nimport Icon from \"@mdi/react\";\r\nimport React from \"react\";\r\nimport Toggle from \"react-toggle\";\r\nimport { XY } from \"../../XY\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\n\r\ninterface StaticScreenToggleProps {\r\n    value: boolean;\r\n    label: string;\r\n    icon: string;\r\n    description: string;\r\n    disabled?: boolean;\r\n    callBack?: (s: boolean) => void;\r\n    autoFocus?: boolean;\r\n}\r\n\r\ninterface ToggleProps extends StaticScreenToggleProps {\r\n    x: number;\r\n    y: number;\r\n    hasFocus: boolean;\r\n}\r\n\r\ninterface _ScreenToggleProps extends StaticScreenToggleProps {\r\n    x?: number;\r\n    y?: number;\r\n}\r\n\r\nconst RenderScreenToggle = (props: ToggleProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    useFocusEffect(props, inputEl);\r\n    const { navigation, setNavigation } = useNavigationContext();\r\n    const change = (val: boolean, pos: XY) => {\r\n        setNavigation({ ...navigation, screen: pos });\r\n        props.callBack && props.callBack(val);\r\n    };\r\n    useInitialFocus(props, inputEl, navigation.screen);\r\n    return (\r\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\r\n            <div className=\"title\">{props.icon && <Icon size=\"0.8em\" path={props.icon} />} {props.label}</div>\r\n            <div className=\"toggle\">\r\n                <Toggle\r\n                    ref={inputEl}\r\n                    disabled={!!props.disabled}\r\n                    autoFocus={props.autoFocus}\r\n                    onFocus={() => {\r\n                        if (!props.hasFocus) {\r\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\r\n                        }\r\n                    }}\r\n                    checked={props.value}\r\n                    onChange={() => change(!props.value, { x: props.x, y: props.y })}\r\n                />\r\n            </div>\r\n            <div className=\"description\">{props.description}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ScreenToggle = (props: _ScreenToggleProps) => {\r\n    const { navigation } = useNavigationContext();\r\n    if (typeof props.x === \"undefined\" || typeof props.y === \"undefined\") {\r\n        return null;\r\n    }\r\n    const hasFocus = (y: number, x: number) => navigation.focus === \"screen\" && navigation.screen.x === x && navigation.screen.y === y;\r\n    const pos = { x: props.x || 0, y: props.y || 0 };\r\n    return (\r\n        <RenderScreenToggle\r\n            x={pos.x}\r\n            y={pos.y}\r\n            icon={props.icon}\r\n            disabled={!!props.disabled}\r\n            hasFocus={hasFocus(pos.y, pos.x)}\r\n            label={props.label}\r\n            description={props.description}\r\n            value={props.value}\r\n            callBack={props.callBack}\r\n            autoFocus={props.autoFocus}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ScreenToggle;\r\n","import CloseButton from \"../Common/CloseButton\";\r\nimport CookieBanner from \"../Common/CookieBanner\";\r\nimport React from \"react\";\r\nimport Row from \"../Navigation/Row\";\r\nimport ScreenContent from \"../Navigation/ScreenContent\";\r\nimport ScreenToggle from \"../Common/ScreenToggle\";\r\nimport useCookieContext from \"../../CookieContext\";\r\nimport useStartScreenContext from \"../StartScreenContext\";\r\n\r\nconst Performance = () => {\r\n    const { state, setState } = useStartScreenContext();\r\n    const { consented } = useCookieContext();\r\n    const setConfettiFs = (value: boolean) => setState({ ...state, featureSwitches: { ...state.featureSwitches, confetti: value } });\r\n    const setUndoFs = (value: boolean) => setState({ ...state, featureSwitches: { ...state.featureSwitches, undo: value } });\r\n    return (\r\n        <div className=\"performance startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Performance</div>\r\n            <ScreenContent id=\"performance\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                        icon={\"\"}\r\n                        label=\"Undo Feature Switch\"\r\n                        description=\"Undo is an expensive feature and can be switched off for performance reasons.\"\r\n                        value={!!state.featureSwitches.undo}\r\n                        callBack={setUndoFs}\r\n                    />\r\n                    <ScreenToggle\r\n                        icon={\"\"}\r\n                        label=\"Confetti Feature Switch\"\r\n                        description=\"Undo is an expensive feature and can be switched off for performance or concentration reasons.\"\r\n                        value={!!state.featureSwitches.confetti}\r\n                        callBack={setConfettiFs}\r\n                    />\r\n                </Row>\r\n                <Row></Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Performance;\r\n","import { getScreenElementClassName, useFocusEffect } from \"../Navigation/ScreenElement\";\r\n\r\nimport React from \"react\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\n\r\nexport type SelectItem = {\r\n    label: string;\r\n    id: string | number;\r\n};\r\n\r\ninterface StaticSelectProps {\r\n    disabled?: boolean;\r\n    value: number;\r\n    values: SelectItem[];\r\n    label: string;\r\n    description: string;\r\n    callBack: (s: string) => void;\r\n    autoFocus?: boolean;\r\n}\r\n\r\ninterface ScreenSelectProps extends StaticSelectProps {\r\n    x: number;\r\n    y: number;\r\n    hasFocus: boolean;\r\n}\r\n\r\ninterface _ScreenSelectProps extends StaticSelectProps {\r\n    x?: number;\r\n    y?: number;\r\n}\r\n\r\nconst RenderScreenSelect = (props: ScreenSelectProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    useFocusEffect(props, inputEl);\r\n    const { navigation, setNavigation } = useNavigationContext();\r\n\r\n    return (\r\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\r\n            <div className=\"title\">\r\n                {props.label}: {props.values[props.value].label}\r\n            </div>\r\n            <div className=\"button\">\r\n                <button\r\n                    autoFocus={props.autoFocus}\r\n                    ref={inputEl}\r\n                    onClick={() => {\r\n                        props.callBack((props.value + 1 < props.values.length ? props.value + 1 : 0).toString());\r\n                        setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\r\n                    }}\r\n                    disabled={!!props.disabled}\r\n                    onFocus={() => {\r\n                        if (!props.hasFocus) {\r\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\r\n                        }\r\n                    }}\r\n                >\r\n                    🔁\r\n                </button>\r\n            </div>\r\n            <div className=\"description\">{props.description}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ScreenSelect = (props: _ScreenSelectProps) => {\r\n    const { navigation } = useNavigationContext();\r\n    if (typeof props.x === \"undefined\" || typeof props.y === \"undefined\") {\r\n        return null;\r\n    }\r\n    const hasFocus = (y: number, x: number) => navigation.focus === \"screen\" && navigation.screen.x === x && navigation.screen.y === y;\r\n    const pos = { x: props.x || 0, y: props.y || 0 };\r\n    return (\r\n        <RenderScreenSelect\r\n            x={pos.x}\r\n            y={pos.y}\r\n            disabled={!!props.disabled}\r\n            hasFocus={hasFocus(pos.y, pos.x)}\r\n            label={props.label}\r\n            description={props.description}\r\n            value={props.value}\r\n            values={props.values}\r\n            callBack={props.callBack}\r\n            autoFocus={props.autoFocus}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ScreenSelect;\r\n","import CloseButton from \"../Common/CloseButton\";\r\nimport CookieBanner from \"../Common/CookieBanner\";\r\nimport EntropyLevels from \"../../../../Model/Game/Settings/EntropyLevels\";\r\nimport React from \"react\";\r\nimport Row from \"../Navigation/Row\";\r\nimport ScreenContent from \"../Navigation/ScreenContent\";\r\nimport ScreenSelect from \"../Common/ScreenSelect\";\r\nimport useCookieContext from \"../../CookieContext\";\r\nimport useStartScreenContext from \"../StartScreenContext\";\r\n\r\nconst QuickStart = () => {\r\n    const { state, setState } = useStartScreenContext();\r\n    const { consented } = useCookieContext();\r\n\r\n    const setBaseEntropy = (value: string) =>\r\n        setState({ ...state, entropySettings: { ...state.entropySettings, baseEntropy: parseInt(value) } });\r\n\r\n    const setInteractionEntropy = (value: string) =>\r\n        setState({ ...state, entropySettings: { ...state.entropySettings, interactionEntropy: parseInt(value) } });\r\n\r\n    return (\r\n        <div className=\"quickstart startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Entropy</div>\r\n            <ScreenContent id=\"settings\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n\r\n                <Row>\r\n                    <ScreenSelect\r\n                        label=\"Base Entropy\"\r\n                        description=\"How much chaos will the stacks on the board contain by themselves?\"\r\n                        value={state.entropySettings.baseEntropy || 0}\r\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\r\n                        callBack={setBaseEntropy}\r\n                        autoFocus={true}\r\n                    />\r\n                    <ScreenSelect\r\n                        label=\"Interaction Entropy\"\r\n                        description=\"How much chaos will each interaction add to a stack on the board?\"\r\n                        value={state.entropySettings.interactionEntropy || 0}\r\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\r\n                        callBack={setInteractionEntropy}\r\n                    />\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\nexport default QuickStart;\r\n","import useStartScreenContext, { StartScreenState } from \"../StartScreenContext\";\r\n\r\nimport CloseButton from \"../Common/CloseButton\";\r\nimport CookieBanner from \"../Common/CookieBanner\";\r\nimport RatingPresets from \"../RatingOptions\";\r\nimport { RatingSettings } from \"../../../../Common\";\r\nimport React from \"react\";\r\nimport Row from \"../Navigation/Row\";\r\nimport ScreenContent from \"../Navigation/ScreenContent\";\r\nimport ScreenMainButton from \"../Common/ScreenMainButton\";\r\nimport ScreenToggle from \"../Common/ScreenToggle\";\r\nimport SuggestionModes from \"../../../../Model/Game/Settings/SuggestionModes\";\r\nimport { XY } from \"../../XY\";\r\nimport useCookieContext from \"../../CookieContext\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\n\r\nconst Rating = () => {\r\n    const { state, setState } = useStartScreenContext();\r\n    const { navigation } = useNavigationContext();\r\n    const applyPreset = (id: number) => {\r\n        const next = { ...state };\r\n        RatingPresets.ALL[id].apply(next);\r\n        setState(next);\r\n    };\r\n\r\n    const isActive = (id: number) => state.ratingPreset === id;\r\n\r\n    const getButtonClass = (id: number, pos: XY) => {\r\n        let name = isActive(id) ? `active active-${id}` : `inactive-${id}`;\r\n        name += navigation.screen.x === pos.x && navigation.screen.y === pos.y ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\r\n        const next = { ...state };\r\n        modifier(next.ratingSettings);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setState(next);\r\n    };\r\n\r\n    const customizeRating2 = (ratingModifier: (context: RatingSettings) => void, modifier: (context: StartScreenState) => void) => {\r\n        const next = { ...state };\r\n        ratingModifier(next.ratingSettings);\r\n        modifier(next);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setState(next);\r\n    };\r\n\r\n    const setMissPenalty = (value: boolean) =>\r\n        customizeRating((r) => {\r\n            r.missPenalty = value;\r\n        });\r\n\r\n    const setTimeRating = (value: boolean) =>\r\n        customizeRating((r) => {\r\n            r.timedMode = value;\r\n        });\r\n\r\n    const setUndoPenalty = (value: boolean) =>\r\n        customizeRating((r) => {\r\n            r.undoPenalty = value;\r\n        });\r\n\r\n    const setHintPenalty = (value: boolean) => {\r\n        customizeRating2(\r\n            (r) => {\r\n                r.hintPenalty = value;\r\n            },\r\n            (s) => {\r\n                s.suggestionMode = value ? SuggestionModes.NONE : SuggestionModes.REGULAR;\r\n            }\r\n        );\r\n    };\r\n\r\n    const { consented } = useCookieContext();\r\n\r\n    return (\r\n        <div className=\"rating startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Penalties</div>\r\n            <ScreenContent id=\"penalties\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    {RatingPresets.ALL.map((preset) => (\r\n                        <ScreenMainButton\r\n                            key={preset.id}\r\n                            icon={preset.icon}\r\n                            id={preset.id}\r\n                            autoFocus={isActive(preset.id) || (state.ratingPreset === -1 && preset.id === 0)}\r\n                            className={(pos: XY) => getButtonClass(preset.id, pos)}\r\n                            onClick={() => applyPreset(preset.id)}\r\n                            lines={[preset.label]}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                        icon={\"\"}\r\n                        label=\"Undo Penalty\"\r\n                        description=\"Undo is enabled, but excessive use will be painful. This penalty starts with 2 and increases exponentially.\"\r\n                        value={!!state.ratingSettings.undoPenalty}\r\n                        callBack={setUndoPenalty}\r\n                    />\r\n                    <ScreenToggle\r\n                    icon={\"\"}\r\n                        label=\"Time Penalty\"\r\n                        description=\"Fast players are rewarded with a time bonus, slow players will be punished.\"\r\n                        value={!!state.ratingSettings.timedMode}\r\n                        callBack={setTimeRating}\r\n                    />\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                    icon={\"\"}\r\n                        label=\"Hint Penalty\"\r\n                        description=\"Each manual hint will reduce the number of points by 10. This setting disables automatic suggestions. \"\r\n                        value={!!state.ratingSettings.hintPenalty}\r\n                        callBack={setHintPenalty}\r\n                    />\r\n                    <ScreenToggle\r\n                    icon={\"\"}\r\n                        label=\"Miss Penalty\"\r\n                        description=\"Be careful where you click, as each invalid action will lead to a penalty of 10 points.\"\r\n                        value={!!state.ratingSettings.missPenalty}\r\n                        callBack={setMissPenalty}\r\n                    />\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","import SuggestionModes, { SuggestionMode } from \"../../../../Model/Game/Settings/SuggestionModes\";\r\n\r\nimport CloseButton from \"../Common/CloseButton\";\r\nimport CookieBanner from \"../Common/CookieBanner\";\r\nimport React from \"react\";\r\nimport Row from \"../Navigation/Row\";\r\nimport ScreenContent from \"../Navigation/ScreenContent\";\r\nimport ScreenToggle from \"../Common/ScreenToggle\";\r\nimport useCookieContext from \"../../CookieContext\";\r\nimport useStartScreenContext from \"../StartScreenContext\";\r\n\r\nconst Suggestions = () => {\r\n    const { consented } = useCookieContext();\r\n    const { state, setState } = useStartScreenContext();\r\n\r\n    const suggestionModes = SuggestionModes.allSuggestionModes();\r\n\r\n    const isActive = (id: string) => state.suggestionMode === id;\r\n\r\n    const isDisabled = (id: string) => id !== SuggestionModes.NONE && state.ratingSettings.hintPenalty;\r\n\r\n    const renderToggle = (mode: SuggestionMode, index: number) => (\r\n        <ScreenToggle\r\n            value={isActive(mode.key)}\r\n            disabled={isDisabled(mode.key)}\r\n            label={mode.label}\r\n            icon={mode.icon}\r\n            callBack={() => setState({ ...state, suggestionMode: mode.key })}\r\n            description={mode.description}\r\n            key={index}\r\n            autoFocus={isActive(mode.key)}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className=\"suggestions startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Suggestions</div>\r\n            <ScreenContent id=\"settings\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>{suggestionModes.slice(0, 2).map(renderToggle)}</Row>\r\n                <Row>{suggestionModes.slice(2).map(renderToggle)}</Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Suggestions;\r\n","import CloseButton from \"../Common/CloseButton\";\r\nimport CookieBanner from \"../Common/CookieBanner\";\r\nimport React from \"react\";\r\nimport Row from \"../Navigation/Row\";\r\nimport ScreenContent from \"../Navigation/ScreenContent\";\r\nimport ScreenToggle from \"../Common/ScreenToggle\";\r\nimport useCookieContext from \"../../CookieContext\";\r\nimport useStartScreenContext from \"../StartScreenContext\";\r\n\r\nconst Support = () => {\r\n    const { state, setState } = useStartScreenContext();\r\n    const { consented } = useCookieContext();\r\n    const setAutoResolve = (val: boolean) => setState({ ...state, autoResolve: val });\r\n    const setQuickDeal = (value: boolean) => setState({ ...state, quickDeal: value });\r\n    const setAutoUncover = (value: boolean) => setState({ ...state, autoUncover: value });\r\n    const setSpeed = (value: boolean) => setState({ ...state, speed: value });\r\n    return (\r\n        <div className=\"quickstart startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Support</div>\r\n            <ScreenContent id=\"support\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                    icon={\"\"}\r\n                        label=\"Auto Resolve\"\r\n                        description=\"Enable this to automatically resolve the board once all cards are uncovered and moved to the tableau.\"\r\n                        value={state.autoResolve}\r\n                        callBack={setAutoResolve}\r\n                        autoFocus={true}\r\n                    />\r\n                    <ScreenToggle\r\n                    icon={\"\"}\r\n                        label=\"Auto Uncover\"\r\n                        description=\"Should the game automatically uncover cards for you?\"\r\n                        value={state.autoUncover}\r\n                        callBack={setAutoUncover}\r\n                    />\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                    icon={\"\"}\r\n                        label=\"Instant Deal\"\r\n                        description=\"Should the deal animation at the beginning of the game be skipped?\"\r\n                        value={state.quickDeal}\r\n                        callBack={setQuickDeal}\r\n                    />\r\n                    <ScreenToggle\r\n                    icon={\"\"}\r\n                        label=\"Auto Draw\"\r\n                        description=\"Should the game automatically draw from the stock every 10 seconds?\"\r\n                        value={state.speed}\r\n                        callBack={setSpeed}\r\n                    />\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\nexport default Support;\r\n","import Controls from \"./Controls\";\r\nimport Difficulty from \"./Difficulty\";\r\nimport Performance from \"./Performance\";\r\nimport QuickStart from \"./QuickStart\";\r\nimport Rating from \"./Rating\";\r\nimport React from \"react\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Support from \"./Support\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\n\r\nconst Screen = () => {\r\n    //@todo load this screen after 1st selection incl. toggles and gamepads as asynchronous components\r\n    const { navigation } = useNavigationContext();\r\n    return <RenderScreen screen={navigation.screeen} />;\r\n    //@todo monitor gamepad connections, show toast when pad is connected\r\n};\r\n\r\nconst RenderScreen = (props: { screen: string }) => {\r\n    //@todo add credits page\r\n    return (\r\n        <div className=\"startscreen-layout\">\r\n            <div className=\"startscreen-jail\">\r\n                {props.screen === \"rating\" ? <Rating /> : null}\r\n                {props.screen === \"difficulty\" ? <Difficulty /> : null}\r\n                {props.screen === \"settings\" ? <QuickStart /> : null}\r\n                {props.screen === \"suggestions\" ? <Suggestions /> : null}\r\n                {props.screen === \"support\" ? <Support /> : null}\r\n                {props.screen === \"controls0\" ? <Controls player={0} /> : null}\r\n                {props.screen === \"controls1\" ? <Controls player={1} /> : null}\r\n                {props.screen === \"performance\" ? <Performance /> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Screen;\r\n","import \"./Overlay.css\";\r\n\r\nimport React from \"react\";\r\nimport { useEffectOnce } from \"react-use\";\r\n\r\ninterface IOverlayContext {\r\n    overlayActive: boolean;\r\n    toggleOverlay: (content?: React.ReactNode, before?: () => void, after?: () => void) => void;\r\n}\r\n\r\nconst OverlayContext = React.createContext<IOverlayContext>({\r\n    overlayActive: false,\r\n    toggleOverlay: () => {},\r\n});\r\n\r\nexport const useOverlayContext = () => React.useContext(OverlayContext);\r\n\r\nconst Overlay = (props: { children: React.ReactNode; before?: () => void; after?: () => void }) => {\r\n    useEffectOnce(() => {\r\n        props.before && props.before();\r\n        return () => {\r\n            props.after && props.after();\r\n        };\r\n    });\r\n\r\n    return <div className=\"overlay\">{props.children}</div>;\r\n};\r\ntype callable = { call: () => void };\r\nconst defaultCallable = { call: () => {} };\r\nexport const OverlayContextProvider = (props: { children: React.ReactNode }) => {\r\n    const [overlayActive, setActive] = React.useState<boolean>(false);\r\n    const [content, setContent] = React.useState<React.ReactNode>(null);\r\n    const [_after, setAfter] = React.useState<callable>(defaultCallable);\r\n    const [_before, setBefore] = React.useState<callable>(defaultCallable);\r\n    const context = {\r\n        overlayActive,\r\n        toggleOverlay: (content?: React.ReactNode, before?: () => void, after?: () => void) => {\r\n            setActive(!!content);\r\n            setContent(content);\r\n            if (before) {\r\n                setBefore({ call: before });\r\n            }\r\n            if (after) {\r\n                setAfter({ call: after });\r\n            }\r\n        },\r\n    };\r\n    return (\r\n        <OverlayContext.Provider value={context}>\r\n            {overlayActive && (\r\n                <Overlay before={_before.call} after={_after.call}>\r\n                    {content}\r\n                </Overlay>\r\n            )}\r\n            {props.children}\r\n        </OverlayContext.Provider>\r\n    );\r\n};\r\n","import { mdiCookie, mdiThumbDown, mdiThumbUp } from \"@mdi/js\";\r\n\r\nimport MenuButton from \"./Menu/MenuButton\";\r\nimport MenuTitle from \"./Menu/MenuTitle\";\r\nimport MenuTree from \"./Menu/MenuTree\";\r\nimport { NavigationProvider } from \"./Navigation/NavigationContext\";\r\nimport React from \"react\";\r\nimport StorageManager from \"../StorageManager\";\r\nimport { Universal } from \"../../../common/KeyboardLayouts\";\r\nimport useCookieContext from \"../CookieContext\";\r\nimport { useOverlayContext } from \"../../../common/Overlay\";\r\n\r\nconst ConsentDialog = () => {\r\n    const { setConsented, consented } = useCookieContext();\r\n    const storage = StorageManager.getInstance();\r\n    const consent = storage.getDialog();\r\n    const { toggleOverlay } = useOverlayContext();\r\n    //@todo depending on state, use different colors and order of items.\r\n    //also show different labels on buttons\r\n    return (\r\n        <NavigationProvider>\r\n            <div className=\"gamemenu menu dialog\">\r\n                <div className=\"startscreen-jail\">\r\n                    <div className=\"innermenu\">\r\n                        <MenuTitle icon={mdiCookie  } />\r\n                        <div className=\"announcement\">{consent.prompt}</div>\r\n                        <MenuTree keyboardLayout={Universal}>\r\n                            <MenuButton\r\n                                icon={mdiThumbUp}\r\n                                title={consented ? \"Delete cookie\": \"Allow cookie\"}\r\n                                onClick={() => {\r\n                                    setConsented(consent.confirm());\r\n                                    toggleOverlay();\r\n                                    //@todo @bug after closing overlay, up & down nav works but not the action button\r\n                                }}\r\n                            />\r\n                            <MenuButton icon={mdiThumbDown } title=\"Cancel\" onClick={() => toggleOverlay()} />\r\n                        </MenuTree>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </NavigationProvider>\r\n    );\r\n};\r\nexport default ConsentDialog;\r\n","import React from \"react\";\r\n\r\nconst VerticalMenu = (props: any) => {\r\n    return (\r\n        <div className=\"ui start menu\">\r\n            <div className=\"startscreen-jail\">\r\n                <div className=\"innermenu\">{props.children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default VerticalMenu;\r\n","import \"../Menu.scss\";\r\n\r\nimport {\r\n    mdiArmFlex,\r\n    mdiCardsDiamond,\r\n    mdiCardsPlayingOutline,\r\n    mdiCog,\r\n    mdiControllerClassic,\r\n    mdiCookie,\r\n    mdiLightbulb,\r\n    mdiPoll,\r\n    mdiRobot,\r\n    mdiScaleBalance,\r\n    mdiSwordCross,\r\n    mdiWeatherTornado,\r\n} from \"@mdi/js\";\r\n\r\nimport ConsentDialog from \"../ConsentDialog\";\r\nimport GameModes from \"../../../../GameModes\";\r\nimport MenuButton from \"./MenuButton\";\r\nimport MenuTitle from \"./MenuTitle\";\r\nimport MenuTree from \"./MenuTree\";\r\nimport React from \"react\";\r\nimport { Universal } from \"../../../../common/KeyboardLayouts\";\r\nimport VerticalMenu from \"./VerticalMenu\";\r\nimport { XY } from \"../../XY\";\r\nimport useCookieContext from \"../../CookieContext\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\nimport { useOverlayContext } from \"../../../../common/Overlay\";\r\n\r\nconst StartMenu = (props: { start: (boardMode: string) => void }) => {\r\n    const { navigation, setNavigation } = useNavigationContext();\r\n    const { consented } = useCookieContext();\r\n\r\n    const switchToScreen = (s: string, pos: XY) =>\r\n        setNavigation({\r\n            ...navigation,\r\n            focus: \"screen\",\r\n            screeen: s,\r\n            screen: { x: -1, y: -1 },\r\n            menu: { ...pos },\r\n        });\r\n\r\n    const switchToMenu = (menu: string, pos: XY) =>\r\n        setNavigation({\r\n            ...navigation,\r\n            focus: \"menu\",\r\n            screeen: \"\",\r\n            mainMenu: menu,\r\n            menu: { ...pos },\r\n        });\r\n\r\n    const toggleScreen = (s: string, pos: XY) => {\r\n        if (navigation.screeen !== s) {\r\n            switchToScreen(s, pos);\r\n        } else {\r\n            switchToMenu(navigation.mainMenu, pos);\r\n        }\r\n    };\r\n\r\n    const toggleMainMenu = (val: string, pos: XY) => switchToMenu(navigation.mainMenu !== val ? val : \"\", pos);\r\n\r\n    const { toggleOverlay, overlayActive } = useOverlayContext();\r\n    const _toggleOverlay = (children: React.ReactNode) => {\r\n        toggleOverlay(\r\n            children,\r\n            () => {\r\n                setNavigation({ ...navigation, focus: \"dialog\" });\r\n            },\r\n            () => {\r\n                setNavigation({ ...navigation, focus: \"menu\" });\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <VerticalMenu>\r\n            <MenuTitle icon={mdiCardsDiamond} label=\"Solitaire\" />\r\n            <MenuTree keyboardLayout={Universal} disabled={overlayActive}>\r\n                <MenuButton icon={mdiCardsPlayingOutline} title=\"Single Player\" onClick={() => props.start(GameModes.SINGLEPLAYER)} />\r\n                <MenuButton\r\n                    icon={mdiSwordCross}\r\n                    title=\"Versus\"\r\n                    onClick={(pos: XY) => toggleMainMenu(\"versus\", pos)}\r\n                    toggled={navigation.mainMenu === \"versus\"}\r\n                >\r\n                    <MenuButton\r\n                        icon={mdiControllerClassic}\r\n                        title=\"Player 1\"\r\n                        onClick={(pos: XY) => toggleScreen(\"controls0\", pos)}\r\n                        toggled={navigation.screeen === \"controls0\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon={mdiControllerClassic}\r\n                        title=\"Player 2\"\r\n                        onClick={(pos: XY) => toggleScreen(\"controls1\", pos)}\r\n                        toggled={navigation.screeen === \"controls1\"}\r\n                    />\r\n                    <MenuButton icon={mdiCardsPlayingOutline} title=\"Start\" onClick={() => props.start(GameModes.VERSUS)} />\r\n                </MenuButton>\r\n                <MenuButton\r\n                    icon={mdiCog}\r\n                    title=\"Options\"\r\n                    onClick={(pos: XY) => toggleMainMenu(\"custom\", pos)}\r\n                    toggled={navigation.mainMenu === \"custom\"}\r\n                >\r\n                    <MenuButton\r\n                        icon={mdiArmFlex}\r\n                        title=\"Difficulty\"\r\n                        onClick={(pos: XY) => toggleScreen(\"difficulty\", pos)}\r\n                        toggled={navigation.screeen === \"difficulty\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon={mdiScaleBalance}\r\n                        title=\"Penalties\"\r\n                        onClick={(pos: XY) => toggleScreen(\"rating\", pos)}\r\n                        toggled={navigation.screeen === \"rating\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon={mdiLightbulb}\r\n                        title=\"Suggestions\"\r\n                        onClick={(pos: XY) => toggleScreen(\"suggestions\", pos)}\r\n                        toggled={navigation.screeen === \"suggestions\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon={mdiRobot}\r\n                        title=\"Support\"\r\n                        onClick={(pos: XY) => toggleScreen(\"support\", pos)}\r\n                        toggled={navigation.screeen === \"support\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon={mdiWeatherTornado}\r\n                        title=\"Entropy\"\r\n                        onClick={(pos: XY) => toggleScreen(\"settings\", pos)}\r\n                        toggled={navigation.screeen === \"settings\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon={mdiPoll}\r\n                        title=\"Performance\"\r\n                        onClick={(pos: XY) => toggleScreen(\"performance\", pos)}\r\n                        toggled={navigation.screeen === \"performance\"}\r\n                    />\r\n                </MenuButton>\r\n                <MenuButton\r\n                    icon={mdiCookie}\r\n                    title={consented ? \"Delete Cookie\" : \"Allow Cookie\"}\r\n                    onClick={() => _toggleOverlay(<ConsentDialog />)}\r\n                />\r\n            </MenuTree>\r\n        </VerticalMenu>\r\n    );\r\n};\r\nexport default StartMenu;\r\n","import { StartScreenProvider, StartScreenState, defaultStartScreenState } from \"./StartScreenContext\";\r\n\r\nimport AspectRatio from \"../../../common/AspectRatio/AspectRatio\";\r\nimport DifficultyOptions from \"./DifficultyOptions\";\r\nimport { LaunchSettings } from \"../../../Common\";\r\nimport { NavigationProvider } from \"./Navigation/NavigationContext\";\r\nimport Ratios from \"../../../common/AspectRatio/Ratios\";\r\nimport React from \"react\";\r\nimport Screen from \"./Screens/Screen\";\r\nimport StartMenu from \"./Menu/StartMenu\";\r\nimport StorageManager from \"../StorageManager\";\r\n\r\nconst Home = (props: { start: (settings: LaunchSettings) => void }) => {\r\n    const storage = StorageManager.getInstance();\r\n    const previous = storage.getPreviousState();\r\n    const [state, setState] = React.useState<StartScreenState>(previous ? previous : defaultStartScreenState);\r\n    const startScreenContext = {\r\n        state,\r\n        setState: (s: StartScreenState) => {\r\n            setState(s);\r\n            storage.store(s);\r\n        },\r\n    };\r\n\r\n    const start = (boardMode: string) => {\r\n        const settings = {\r\n            ...DifficultyOptions[state.difficultySettings].settings,\r\n            ...state.ratingSettings,\r\n            baseEntropy: state.entropySettings.baseEntropy || 0,\r\n            interactionEntropy: state.entropySettings.interactionEntropy || 0,\r\n            players: { ...state.players },\r\n            quickDeal: state.quickDeal,\r\n            speed: state.speed,\r\n            autoUncover: state.autoUncover,\r\n            autoResolve: state.autoResolve,\r\n            boardMode: boardMode,\r\n            initialized: true,\r\n            suggestionMode: state.suggestionMode,\r\n            inputMode: \"\",\r\n            featureSwitches: { ...state.featureSwitches },\r\n        };\r\n        props.start(settings);\r\n    };\r\n\r\n    return (\r\n        <AspectRatio ratio={Ratios._16to9}>\r\n            <StartScreenProvider value={startScreenContext}>\r\n                <NavigationProvider>\r\n                    <StartMenu start={start} />\r\n                    <Screen />\r\n                </NavigationProvider>\r\n            </StartScreenProvider>\r\n        </AspectRatio>\r\n    );\r\n};\r\nexport default Home;\r\n","import \"./App.css\";\r\n\r\nimport { LaunchSettings, defaultPlayerSettings } from \"./Common\";\r\n\r\nimport { CookieContextProvider } from \"./View/UI/CookieContext\";\r\nimport Deck from \"./Model/Deck/Deck\";\r\nimport GameModes from \"./GameModes\";\r\nimport Home from \"./View/UI/StartScreen/Home\";\r\nimport { OverlayContextProvider } from \"./common/Overlay\";\r\nimport React from \"react\";\r\nimport StorageManager from \"./View/UI/StorageManager\";\r\nimport SuggestionModes from \"./Model/Game/Settings/SuggestionModes\";\r\n\r\nconst Game = React.lazy(() => import(\"./View/Game/Game\"));\r\n\r\nconst App = () => {\r\n    const storage = StorageManager.getInstance();\r\n    const [consented, setConsented] = React.useState<boolean>(!!storage.hasConsent());\r\n    const cookieContext = {\r\n        consented,\r\n        setConsented,\r\n    };\r\n\r\n    const defaultState = {\r\n        boardMode: GameModes.SINGLEPLAYER,\r\n        inputMode: \"mouse\",\r\n        initialized: false,\r\n        players: defaultPlayerSettings,\r\n        drawMode: \"\",\r\n        recyclingMode: \"\",\r\n        interactionEntropy: 0,\r\n        baseEntropy: 0,\r\n        suggestionMode: SuggestionModes.NONE,\r\n        featureSwitches: { undo: true, confetti: true, shuffle: true },\r\n    };\r\n\r\n    const [launchState, setLaunchState] = React.useState<LaunchSettings>(defaultState);\r\n\r\n    const start = (settings: LaunchSettings) => setLaunchState({ ...settings, initialized: true });\r\n    const restart = () => setLaunchState(defaultState);\r\n\r\n    const previous = storage.getPreviousState();\r\n    const deck = !previous || previous.featureSwitches.shuffle ? new Deck().shuffle() : new Deck();\r\n\r\n    return (\r\n        <CookieContextProvider value={cookieContext}>\r\n            <OverlayContextProvider>\r\n                {launchState?.initialized ? <Game {...{ launchState, deck, restart }} /> : <Home start={start} />}\r\n            </OverlayContextProvider>\r\n        </CookieContextProvider>\r\n    );\r\n};\r\nexport default App;\r\n","export default class GameModes {\r\n    static SINGLEPLAYER = \"singleplayer\";\r\n    static VERSUS = \"splitscreen\";\r\n}\r\n","import Model from \"../Model\";\r\nimport { Suit } from \"./Suits\";\r\n\r\nexport default class Card {\r\n    denomination: string;\r\n    //remove type & replace with suit = type.icon; color=type.color\r\n    // or icon=suit.icon; color=suit.color\r\n    //@todo add rank ?\r\n    type: Suit;\r\n    isHidden: boolean;\r\n    entropyStyle: any;\r\n    source: string;\r\n    suggestion: boolean;\r\n    success: number;\r\n    canClick: () => boolean;\r\n    onClick: (_p: any) => (s: Model) => void;\r\n    constructor(denomination: string, type: Suit, isHidden: boolean) {\r\n        this.denomination = denomination;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.source = \"\";\r\n        this.suggestion = false;\r\n        this.success = 0;\r\n        this.canClick = () => false;\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        this.onClick = (_p) => (s: Model) => {};\r\n    }\r\n\r\n    setSuccess = (s: number) => {\r\n        this.success = s;\r\n    };\r\n\r\n    causeEntropy = (lvl: number) => {\r\n        if (lvl === 0) {\r\n            this.entropyStyle = {};\r\n            return;\r\n        }\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min: number, max: number) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 20) + \"vw\";\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 20) + \"vw\";\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other: Card | null) => {\r\n        return (other && Card.equals(this, other)) || false;\r\n    };\r\n\r\n    static equals(card: Card | null, otherCard: Card | null) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.denomination === card.denomination && otherCard.type.icon === card.type.icon);\r\n    }\r\n\r\n    static copy = (orig: Card) => {\r\n        const copy = new Card(orig.denomination, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        copy.canClick = orig.canClick;\r\n        copy.onClick = orig.onClick;\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards: Card[]) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","import { mdiCardsClub, mdiCardsDiamond, mdiCardsHeart, mdiCardsSpade } from \"@mdi/js\";\r\n\r\nexport interface Suit {\r\n    icon: string;\r\n    color: string;\r\n    name: string;\r\n}\r\n\r\nconst Suits: { [id: string]: Suit } = {\r\n    heart: {\r\n        icon: mdiCardsHeart,\r\n        color: \"red\",\r\n        name: \"heart\",\r\n    },\r\n    club: {\r\n        icon: mdiCardsClub,\r\n        color: \"black\",\r\n        name: \"club\",\r\n    },\r\n    diamond: {\r\n        icon: mdiCardsDiamond,\r\n        color: \"red\",\r\n        name: \"diamond\",\r\n    },\r\n    spade: {\r\n        icon: mdiCardsSpade,\r\n        color: \"black\",\r\n        name: \"spade\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","const EntropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\nexport default EntropyLevels;","import { mdiClose, mdiLightbulb, mdiSchool, mdiTimerSand, mdiTrophy } from '@mdi/js';\r\n\r\nexport class SuggestionMode {\r\n    key: string;\r\n    label: string;\r\n    isTemporary: boolean;\r\n    supportsHints: boolean;\r\n    next: string | undefined;\r\n    icon: string;\r\n    description: string;\r\n    constructor(key: string, obj: ISuggestionMode) {\r\n        this.key = key;\r\n        this.label = obj.label;\r\n        this.icon = obj.icon;\r\n        this.description = obj.description;\r\n        this.isTemporary = !!obj.isTemporary;\r\n        this.supportsHints = !!obj.supportsHints;\r\n        this.next = obj.next;\r\n    }\r\n}\r\n\r\nexport type ISuggestionMode = {\r\n    label: string;\r\n    icon: string;\r\n    description: string;\r\n    isTemporary?: boolean;\r\n    supportsHints?: boolean;\r\n    next?: string;\r\n};\r\n\r\nexport default class SuggestionModes {\r\n    static NONE = \"NONE\";\r\n    static SCORED = \"SCORED\";\r\n    static REGULAR = \"REGULAR\";\r\n    static FULL = \"FULL\";\r\n    static ONCE = \"ONCE\";\r\n    static TWICE = \"TWICE\";\r\n    static raw: { [id: string]: ISuggestionMode } = {\r\n        NONE: {\r\n            label: \"None\",\r\n            description: \"No distractions. This enables one-time hints.\",\r\n            supportsHints: true,\r\n            icon: mdiClose,\r\n        },\r\n        SCORED: {\r\n            label: \"Scored\",\r\n            description: \"Shows all actions that increase the score.\",\r\n            icon: mdiTrophy,\r\n        },\r\n        REGULAR: {\r\n            label: \"Regular\",\r\n            description: \"Shows all possible actions except circular\",\r\n            icon: mdiLightbulb ,\r\n        },\r\n        FULL: {\r\n            label: \"Full\",\r\n            description: \"Shows all possible actions, even if they are circular\",\r\n            icon: mdiSchool ,\r\n        },\r\n        ONCE: {\r\n            label: \"Single Action\",\r\n            description: \"triggered by manual hint in game\",\r\n            isTemporary: true,\r\n            next: \"NONE\",\r\n            icon: mdiTimerSand ,\r\n        },\r\n    };\r\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\r\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\r\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\r\n    static default = () => SuggestionModes.get(SuggestionModes.REGULAR);\r\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\r\n    static next = (current: SuggestionMode) => {\r\n        const all = SuggestionModes.allSuggestionModes();\r\n        if (all[all.length - 1].key === current.key) {\r\n            return all[0];\r\n        }\r\n        for (let i = 0; i < all.length; i++) {\r\n            if (all[i].key === current.key) {\r\n                return all[i + 1];\r\n            }\r\n        }\r\n        return all[0];\r\n    };\r\n}\r\n","import Icon from \"@mdi/react\";\r\nimport React from \"react\";\r\nimport { TreeNavigator } from \"./TreeNavigator\";\r\nimport { XY } from \"../../XY\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\n\r\ninterface _MenuButtonProps extends StaticMenuButtonProps {\r\n    x?: number;\r\n    y?: number;\r\n    navigator?: TreeNavigator;\r\n}\r\n\r\nexport interface StaticMenuButtonProps {\r\n    icon: string;\r\n    title: string;\r\n    onClick: (pos: XY) => void;\r\n    toggled?: boolean;\r\n    children?: any[];\r\n    disabled?: boolean;\r\n    skip?: boolean;\r\n}\r\ninterface MenuButtonProps extends StaticMenuButtonProps {\r\n    x: number;\r\n    y: number;\r\n    menuX: number;\r\n    menuY: number;\r\n    menuFocus: string;\r\n    active: boolean;\r\n    toggled: boolean;\r\n    onFocus: (pos: XY) => void;\r\n}\r\nconst MenuButton = (props: _MenuButtonProps) => {\r\n    const { navigation, setNavigation } = useNavigationContext();\r\n\r\n    if (typeof props.x === \"undefined\" || typeof props.y === \"undefined\") {\r\n        return null;\r\n    }\r\n\r\n    const onFocus = (pos: XY) => setNavigation({ ...navigation, menu: pos });\r\n\r\n    const addItem = (child: any, index: number) => {\r\n        const assign = (n: any[]) => {\r\n            n[props.x || 0].buttons[index + 1] = { ...props, x: props.x, y: index + 1 };\r\n        };\r\n        assign(props.navigator?.rows || []);\r\n\r\n        return React.cloneElement(child, { key: index, x: props.x, y: index + 1, navigator: props.navigator });\r\n    };\r\n\r\n    return (\r\n        <RenderMenuButton\r\n            title={props.title}\r\n            x={props.x || 0}\r\n            y={props.y || 0}\r\n            icon={props.icon}\r\n            menuX={navigation.menu.x}\r\n            menuY={navigation.menu.y}\r\n            menuFocus={navigation.focus}\r\n            disabled={props.disabled}\r\n            active={false}\r\n            onFocus={onFocus}\r\n            onClick={props.onClick}\r\n            toggled={!!props.toggled}\r\n            skip={props.skip}\r\n        >\r\n            {props.children?.map(addItem)}\r\n        </RenderMenuButton>\r\n    );\r\n};\r\nconst RenderMenuButton = (props: MenuButtonProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n\r\n    let className = \"\";\r\n\r\n    if (props.y > 0) {\r\n        className += \" indented\";\r\n    }\r\n\r\n    const shouldBeFocus = props.menuX === props.x && props.menuY === props.y && props.menuFocus === \"menu\";\r\n\r\n    if (shouldBeFocus && !props.skip) {\r\n        className += \" highlight\";\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (\r\n            props.menuX === props.x &&\r\n            props.menuY === props.y &&\r\n            props.menuFocus === \"menu\" &&\r\n            inputEl.current &&\r\n            inputEl.current !== document.activeElement\r\n        ) {\r\n            setClicking(true);\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    }, [props.menuFocus, props.menuX, props.menuY, props.x, props.y]);\r\n\r\n    if (props.active) {\r\n        className += \" active\";\r\n    }\r\n\r\n    //omg this is the worst but it works (5h lost)\r\n    const [isClicking, setClicking] = React.useState(false);\r\n\r\n    const focus = () => {\r\n        if (!isClicking && !(props.menuX === props.x && props.menuY === props.y) && props.menuFocus === \"menu\") {\r\n            props.onFocus({ x: props.x, y: props.y });\r\n            setClicking(false);\r\n        }\r\n    };\r\n\r\n    const click = () => {\r\n        setClicking(false);\r\n        props.onClick({ x: props.x, y: props.y });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                ref={inputEl}\r\n                className={className}\r\n                title={props.title}\r\n                onFocus={focus}\r\n                onClick={click}\r\n                disabled={props.skip}\r\n                onMouseDown={() => setClicking(true)}\r\n            >\r\n                <div className=\"icon\"><Icon path={props.icon} size=\"1em\" /></div>\r\n                <div className=\"label\">{props.title}</div>\r\n            </button>\r\n            <div>{!props.toggled ? null : props.children}</div>\r\n        </>\r\n    );\r\n};\r\nexport default MenuButton;\r\n","import Icon from \"@mdi/react\";\r\nimport React from \"react\";\r\n\r\nconst MenuTitle = (props: { label?: string, icon: string }) => {\r\n    return <div className=\"title maintitle\"><Icon size=\".8em\" path={props.icon} />{props.label}</div>;\r\n};\r\nexport default MenuTitle;\r\n","import GamePad from \"../../../../common/GamePad\";\r\nimport GamepadLayout from \"../../../../common/GamepadLayout\";\r\nimport Keyboard from \"../../../../common/Keyboard\";\r\nimport KeyboardLayout from \"../../../../common/KeyboardLayouts\";\r\nimport React from \"react\";\r\nimport { TreeNavigator } from \"../Menu/TreeNavigator\";\r\nimport { XY } from \"../../XY\";\r\nimport useNavigationContext from \"../Navigation/NavigationContext\";\r\n\r\nconst TreeNavWrapper = (props: { navigator: TreeNavigator; keyboardLayout: KeyboardLayout; disabled?: boolean }) => {\r\n    const { navigator } = props;\r\n    const { navigation, setNavigation } = useNavigationContext();\r\n\r\n    const assignState = (result: XY) => {\r\n        if (navigation.focus === \"menu\") {\r\n            setNavigation({ ...navigation, menu: result });\r\n        }\r\n    };\r\n\r\n    const inputHandlers = {\r\n        onCancel: () =>\r\n            setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } }),\r\n        onUp: () => assignState(navigator.moveUp(navigation.menu.x, navigation.menu.y)),\r\n        onDown: () => assignState(navigator.moveDown(navigation.menu.x, navigation.menu.y)),\r\n        onLeft: () => assignState(navigator.moveLeft(navigation.menu.x, navigation.menu.y)),\r\n        onRight: () => assignState(navigator.moveRight(navigation.menu.x, navigation.menu.y)),\r\n        onAction: () => navigator.action(navigation.menu),\r\n    };\r\n\r\n    return navigation.focus === \"menu\" && !props.disabled ? (\r\n        <>\r\n            <Keyboard layout={props.keyboardLayout} {...inputHandlers} />\r\n            <GamePad layout={GamepadLayout} {...inputHandlers} />\r\n        </>\r\n    ) : null;\r\n};\r\n\r\nexport default TreeNavWrapper;\r\n","import AbstractNavigator from \"../Navigation/AbstractNavigator\";\r\nimport { NavHandler } from \"../Navigation/NavHandler\";\r\nimport { XY } from \"../../XY\";\r\n\r\nexport class TreeNavigator extends AbstractNavigator implements NavHandler {\r\n    moveUp: (x: number, y: number) => XY = (x, y) => {\r\n        if (x === 0) {\r\n            return { x: this.rows.length - 1, y: 0 };\r\n        }\r\n\r\n        if (y > 0) {\r\n            return { x: x, y: y - 1 };\r\n        }\r\n\r\n        if (y === 0) {\r\n            const row = this.getRow(x - 1);\r\n            if (row.toggled) {\r\n                return { x: x - 1, y: row.buttons.length - 1 };\r\n            } else {\r\n                return { x: x - 1, y: y };\r\n            }\r\n        }\r\n\r\n        return { x: x - 1, y: y };\r\n    };\r\n\r\n    moveDown: (x: number, y: number) => XY = (x, y) => {\r\n        const row = this.getRow(x);\r\n        if (y === 0 && row.toggled) {\r\n            return { x: x, y: 1 };\r\n        }\r\n\r\n        if (y > 0 && y < row.buttons.length - 1) {\r\n            return { x: x, y: y + 1 };\r\n        }\r\n\r\n        if (y > 0) {\r\n            return { x: x + 1, y: 0 };\r\n        }\r\n\r\n        if (x < this.rows.length - 1) {\r\n            return { x: x + 1, y: y };\r\n        }\r\n\r\n        return { x: 0, y: 0 };\r\n    };\r\n\r\n    moveLeft: (x: number, y: number) => XY = (x, y) => ({ x: x, y: y });\r\n\r\n    moveRight: (x: number, y: number) => XY = (x, y) => ({ x: x, y: y });\r\n\r\n    action: (xy: XY) => void = () => {\r\n        const activeElement: any = document.activeElement;\r\n        activeElement && activeElement.click();\r\n    };\r\n}\r\n","import KeyboardLayout from \"../../../../common/KeyboardLayouts\";\r\nimport React from \"react\";\r\nimport TreeNavWrapper from \"./TreeNavWrapper\";\r\nimport { TreeNavigator } from \"./TreeNavigator\";\r\n\r\nconst MenuTree = (props: { children: any[]; keyboardLayout: KeyboardLayout; disabled?: boolean }) => {\r\n    const navigator = new TreeNavigator();\r\n    navigator.rows = [];\r\n    let index = -1;\r\n    let _i = -1;\r\n    const addItem = (child: any) => {\r\n        _i++;\r\n        if (!child.props.skip) {\r\n            index++;\r\n            navigator.rows[index] = { x: index, y: 0, ...child.props, buttons: [] };\r\n        }\r\n        return React.cloneElement(child, { key: _i, x: index, y: 0, navigator: navigator });\r\n    };\r\n    return (\r\n        <>\r\n            {props.children.map(addItem)}\r\n            <TreeNavWrapper disabled={props.disabled} navigator={navigator} keyboardLayout={props.keyboardLayout} />\r\n        </>\r\n    );\r\n};\r\nexport default MenuTree;\r\n","import { XY } from \"../../XY\";\r\n\r\nexport default class AbstractNavigator {\r\n    rows: any[];\r\n    constructor() {\r\n        this.rows = [];\r\n    }\r\n    getRows = () => this.rows;\r\n    getRow = (x: number) => this.getRows()[x];\r\n    goToRow = (pos: XY) => {\r\n        const rows = this.getRows();\r\n        const row = rows[pos.y];\r\n        if (row.buttons.length - 1 < pos.x) {\r\n            return { ...pos, x: row.buttons.length - 1 };\r\n        }\r\n\r\n        return pos;\r\n    };\r\n}\r\n","import React from \"react\";\r\n\r\nexport interface NavigationState {\r\n    menu: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    screen: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    focus: string;\r\n    mainMenu: string;\r\n    screeen: string;\r\n}\r\ninterface INavigationContext {\r\n    navigation: NavigationState;\r\n    setNavigation: (n: NavigationState) => void;\r\n    closeScreen: () => void;\r\n}\r\n\r\nconst startPos = { x: 0, y: 0 };\r\nconst defaultNavigationState = {\r\n    menu: { ...startPos },\r\n    screen: { ...startPos },\r\n    focus: \"menu\",\r\n    mainMenu: \"\",\r\n    screeen: \"\",\r\n};\r\n\r\nconst NavigationContext = React.createContext<INavigationContext>({\r\n    navigation: defaultNavigationState,\r\n    setNavigation: () => {},\r\n    closeScreen: () => {},\r\n});\r\n\r\nexport const NavigationProvider = (props: { children: any }) => {\r\n    const [navigation, setNavigation] = React.useState(defaultNavigationState);\r\n    const closeScreen = () =>\r\n        setNavigation({\r\n            ...navigation,\r\n            focus: \"menu\",\r\n            screeen: \"\",\r\n            mainMenu: navigation.mainMenu,\r\n            menu: { ...navigation.menu },\r\n        });\r\n    return <NavigationContext.Provider value={{ navigation, setNavigation, closeScreen }}>{props.children}</NavigationContext.Provider>;\r\n};\r\n\r\nconst useNavigationContext = () => React.useContext(NavigationContext);\r\n\r\nexport default useNavigationContext;\r\n","import \"./16to9.css\";\r\nimport \"./4to3.css\";\r\nimport \"./aspectratio.css\";\r\n\r\nimport { Ratio } from \"./Ratios\";\r\nimport React from \"react\";\r\n\r\nexport const WindowDimensionContext = React.createContext<{ width: number; height: number }>({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n});\r\n\r\nexport default class AspectRatio extends React.Component<{ ratio: Ratio }, { width: number; height: number }> {\r\n    constructor(props: { ratio: Ratio; children: React.ReactNode }) {\r\n        super(props);\r\n        this.state = { width: 0, height: 0 };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    render() {\r\n        const suffix = this.state.width >= this.state.height * this.props.ratio.multiplier ? \"landscape\" : \"portrait\";\r\n        return (\r\n            <WindowDimensionContext.Provider value={this.state}>\r\n                <div className=\"appwrapper\">\r\n                    <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix}>\r\n                        <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix + \"-inner\"}>\r\n                            <div className=\"appwrapper-jail\">{this.props.children}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </WindowDimensionContext.Provider>\r\n        );\r\n    }\r\n}\r\n","export interface Ratio {\r\n    prefix: string;\r\n    multiplier: number;\r\n}\r\nexport default class Ratios {\r\n    static _16to9: Ratio = {\r\n        prefix: \"16-to-9\",\r\n        multiplier: 1.7778,\r\n    };\r\n    static _4to3: Ratio = {\r\n        prefix: \"4-to-3\",\r\n        multiplier: 1.3333,\r\n    };\r\n}\r\n","import { IGamepadLayout } from \"../common/GamepadLayout\";\r\nimport { InputProps } from \"./InputProps\";\r\nimport React from \"react\";\r\nimport ReactGamePad from \"react-gamepad\";\r\nimport RenderAfter from \"./RenderAfter\";\r\n\r\ninterface GamePadProps extends InputProps {\r\n    gamepadIndex?: number;\r\n    layout: IGamepadLayout;\r\n}\r\nconst GamePad = (props: GamePadProps) => {\r\n    const { layout } = props;\r\n    const handlers = {\r\n        onButtonDown: (e: string) => {\r\n            if (layout.cancel(e)) {\r\n                props.onCancel && props.onCancel();\r\n            }\r\n            if (layout.left(e)) {\r\n                props.onLeft && props.onLeft();\r\n            }\r\n            if (layout.right(e)) {\r\n                props.onRight && props.onRight();\r\n            }\r\n            if (layout.up(e)) {\r\n                props.onUp && props.onUp();\r\n            }\r\n            if (layout.down(e)) {\r\n                props.onDown && props.onDown();\r\n            }\r\n            if (layout.action(e)) {\r\n                props.onAction && props.onAction();\r\n            }\r\n            if (layout.undo(e)) {\r\n                props.onUndo && props.onUndo();\r\n            }\r\n            if (layout.hint(e)) {\r\n                props.onHint && props.onHint();\r\n            }\r\n            if (layout.pause(e)) {\r\n                props.onPause && props.onPause();\r\n            }\r\n            if (layout.menu(e)) {\r\n                props.onMenu && props.onMenu();\r\n            }\r\n        },\r\n\r\n        onConnect: (e: number) => {\r\n            console.debug(\"connected\", e);\r\n        },\r\n\r\n        onDisconnect: (e: number) => {\r\n            console.debug(\"disconnected\", e);\r\n        },\r\n    };\r\n\r\n    return (\r\n        <RenderAfter delay={125}>\r\n            <ReactGamePad gamepadIndex={props.gamepadIndex} {...handlers}>\r\n                <React.Fragment />\r\n            </ReactGamePad>\r\n        </RenderAfter>\r\n    );\r\n};\r\n\r\nexport default GamePad;\r\n","export interface IGamepadLayout {\r\n    up: (e: string) => boolean;\r\n    down: (e: string) => boolean;\r\n    right: (e: string) => boolean;\r\n    left: (e: string) => boolean;\r\n    cancel: (e: string) => boolean;\r\n    action: (e: string) => boolean;\r\n    undo: (e: string) => boolean;\r\n    hint: (e: string) => boolean;\r\n    pause: (e: string) => boolean;\r\n    menu: (e: string) => boolean;\r\n}\r\n\r\nconst GamepadLayout: IGamepadLayout = {\r\n    up: (e) => e === \"DPadUp\",\r\n    down: (e) => e === \"DPadDown\",\r\n    right: (e) => e === \"DPadRight\",\r\n    left: (e) => e === \"DPadLeft\",\r\n    cancel: (e) => e === \"B\",\r\n    action: (e) => e === \"A\",\r\n    undo: (e) => e === \"Y\",\r\n    hint: (e) => e === \"X\",\r\n    pause: (e) => e === \"Start\",\r\n    menu: (e) => e === \"Back\",\r\n};\r\n\r\nexport default GamepadLayout;\r\n","import { InputProps } from \"./InputProps\";\r\nimport KeyboardLayout from \"./KeyboardLayouts\";\r\nimport React from \"react\";\r\n\r\ninterface KeyboardProps extends InputProps {\r\n    layout: KeyboardLayout;\r\n}\r\nconst Keyboard = (props: KeyboardProps) => {\r\n    React.useEffect(() => {\r\n        const navListener = (e: any) => {\r\n            // eslint-disable-next-line no-restricted-globals\r\n            const evtobj = window.event ? event : e;\r\n            const { layout } = props;\r\n            if (layout.cancel(evtobj)) {\r\n                props.onCancel && props.onCancel();\r\n                e.preventDefault();\r\n            }\r\n            if (layout.left(evtobj)) {\r\n                props.onLeft && props.onLeft();\r\n                e.preventDefault();\r\n            }\r\n            if (layout.right(evtobj)) {\r\n                props.onRight && props.onRight();\r\n                e.preventDefault();\r\n            }\r\n            if (layout.up(evtobj)) {\r\n                props.onUp && props.onUp();\r\n                e.preventDefault();\r\n            }\r\n            if (layout.down(evtobj)) {\r\n                props.onDown && props.onDown();\r\n                e.preventDefault();\r\n            }\r\n            if (layout.action(evtobj)) {\r\n                props.onAction && props.onAction();\r\n                e.preventDefault();\r\n            }\r\n            if (layout.undo(evtobj)) {\r\n                props.onUndo && props.onUndo();\r\n                e.preventDefault();\r\n            }\r\n            if (layout.hint(evtobj)) {\r\n                props.onHint && props.onHint();\r\n                e.preventDefault();\r\n            }\r\n            if (layout.pause(evtobj)) {\r\n                props.onPause && props.onPause();\r\n                e.preventDefault();\r\n            }\r\n            if (layout.menu(evtobj)) {\r\n                props.onMenu && props.onMenu();\r\n                e.preventDefault();\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", navListener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", navListener);\r\n        };\r\n    }, [props]);\r\n    return null;\r\n};\r\nexport default Keyboard;\r\n","interface KeyboardLayout {\r\n    up: (e: KeyboardEvent) => boolean;\r\n    down: (e: KeyboardEvent) => boolean;\r\n    right: (e: KeyboardEvent) => boolean;\r\n    left: (e: KeyboardEvent) => boolean;\r\n    cancel: (e: KeyboardEvent) => boolean;\r\n    action: (e: KeyboardEvent) => boolean;\r\n    undo: (e: KeyboardEvent) => boolean;\r\n    hint: (e: KeyboardEvent) => boolean;\r\n    pause: (e: KeyboardEvent) => boolean;\r\n    menu: (e: KeyboardEvent) => boolean;\r\n}\r\n\r\nexport default KeyboardLayout;\r\n\r\nexport const getKeyboardLayout = (id: number) => {\r\n    if (id === 0) return Wasd;\r\n    if (id === 1) return Arrows;\r\n    if (id === 2) return NumPad;\r\n    throw new Error(\"Unknown keyboard layout ID\");\r\n};\r\n\r\nexport const Arrows: KeyboardLayout = {\r\n    up: (e) => e.keyCode === 38,\r\n    down: (e) => e.keyCode === 40,\r\n    right: (e) => e.keyCode === 39,\r\n    left: (e) => e.keyCode === 37,\r\n    cancel: (e) => e.keyCode === 27,\r\n    action: (e) => e.keyCode === 96,\r\n    undo: (e) => e.keyCode === 90 && e.ctrlKey,\r\n    hint: (e) => e.keyCode === 72,\r\n    pause: (e) => e.keyCode === 80,\r\n    menu: (e) => e.keyCode === 77,\r\n};\r\n\r\nexport const Wasd: KeyboardLayout = {\r\n    up: (e) => e.keyCode === 87,\r\n    down: (e) => e.keyCode === 83,\r\n    right: (e) => e.keyCode === 68,\r\n    left: (e) => e.keyCode === 65,\r\n    cancel: (e) => e.keyCode === 69,\r\n    action: (e) => e.keyCode === 81,\r\n    undo: (e) => e.keyCode === 88,\r\n    hint: (e) => e.keyCode === 90,\r\n    pause: (e) => e.keyCode === 999,\r\n    menu: (e) => e.keyCode === 27,\r\n};\r\n\r\nexport const NumPad: KeyboardLayout = {\r\n    up: (e) => e.keyCode === 104,\r\n    down: (e) => e.keyCode === 101,\r\n    right: (e) => e.keyCode === 102,\r\n    left: (e) => e.keyCode === 100,\r\n    cancel: (e) => e.keyCode === 105,\r\n    action: (e) => e.keyCode === 103,\r\n    undo: (e) => e.keyCode === 98,\r\n    hint: (e) => e.keyCode === 97,\r\n    pause: (e) => e.keyCode === 999,\r\n    menu: (e) => e.keyCode === 99,\r\n};\r\n\r\nexport const Universal: KeyboardLayout = {\r\n    up: (e) => NumPad.up(e) || Wasd.up(e) || Arrows.up(e),\r\n    down: (e) => NumPad.down(e) || Wasd.down(e) || Arrows.down(e),\r\n    right: (e) => NumPad.right(e) || Wasd.right(e) || Arrows.right(e),\r\n    left: (e) => NumPad.left(e) || Wasd.left(e) || Arrows.left(e),\r\n    cancel: (e) => NumPad.cancel(e) || Wasd.cancel(e) || Arrows.cancel(e),\r\n    action: (e) => NumPad.action(e) || Wasd.action(e) || Arrows.action(e),\r\n    undo: (e) => NumPad.undo(e) || Wasd.undo(e) || Arrows.undo(e),\r\n    hint: (e) => NumPad.hint(e) || Wasd.hint(e) || Arrows.hint(e),\r\n    pause: (e) => NumPad.pause(e) || Wasd.pause(e) || Arrows.pause(e),\r\n    menu: (e) => NumPad.menu(e) || Wasd.menu(e) || Arrows.menu(e),\r\n};\r\n"],"names":["defaultPlayerSettings","id","name","inputMethod","inputLayout","CookieContext","React","consented","setConsented","CookieContextProvider","Provider","useCookieContext","Deck","cards","keys","Object","Suits","this","getFoundationOrder","map","deckSize","key","Card","flat","reverse","shuffle","shuffleArray","array","i","length","j","Math","floor","random","copy","result","apply","after","s","ratingSettings","hintPenalty","suggestionMode","SuggestionModes","ratingPreset","RatingPresets","CHILL","timedMode","missPenalty","undoPenalty","REGULAR","COMPETITIVE","ALL","icon","mdiBeach","label","settings","mdiScaleBalance","mdiTrophy","matchPreset","filterd","filter","preset","equals","s1","s2","TouchDetector","prefixes","split","window","DocumentTouch","document","mq","query","matchMedia","matches","join","e","console","error","defaultStartScreenState","difficultySettings","quickDeal","autoResolve","autoUncover","speed","entropySettings","baseEntropy","interactionEntropy","featureSwitches","undo","confetti","players","StartScreenContext","state","setState","StartScreenProvider","useStartScreenContext","drawMode","recyclingMode","mdiDuck","lines","mdiKangaroo","mdiShark","mdiRodent","mdiSnake","mdiGoogleDownasaur","ControlPresets","mdiMouse","mdiControllerClassic","mdiKeyboard","CloseButton","closeScreen","useNavigationContext","className","onClick","StorageManager","hasConsent","consent","localStorage","getItem","parseInt","giveConsent","prompt","confirm","setItem","getDialog","revokeConsent","clear","store","value","JSON","stringify","getPreviousState","parse","instance","getInstance","getScreenElementClassName","base","props","hasFocus","disabled","useFocusEffect","inputEl","current","activeElement","focus","RenderCookieBanner","navigation","y","x","screen","ref","CookieBanner","Row","navigator","addElement","child","index","skip","assign","n","buttons","rows","children","Array","isArray","ScreenNavWrapper","setNavigation","assignState","inputHandlers","onCancel","screeen","mainMenu","menu","onUp","moveUp","onDown","moveDown","onLeft","moveLeft","onRight","moveRight","onAction","action","Keyboard","layout","Universal","GamePad","GamepadLayout","ScreenNavigator","getRows","goToRow","row","getRow","click","AbstractNavigator","ScreenContent","_index","_i","addRow","ScreenMainButton","autoFocus","pos","onFocus","path","size","line","Controls","found","buttonPressed","pads","setPads","press","log","player","playerHasSettings","playerId","isActive","applyPreset","nextPlayer","getButtonClass","blockedByOtherPlayers","otherPlayers","p","getLines","slice","gamepadIndex","Difficulty","renderButton","button","DifficultyOptions","RenderScreenToggle","useInitialFocus","checked","onChange","change","val","callBack","description","ScreenToggle","Performance","setUndoFs","setConfettiFs","RenderScreenSelect","values","toString","ScreenSelect","QuickStart","EntropyLevels","setBaseEntropy","setInteractionEntropy","Rating","customizeRating","modifier","next","setUndoPenalty","r","setTimeRating","setHintPenalty","customizeRating2","ratingModifier","setMissPenalty","Suggestions","suggestionModes","isDisabled","renderToggle","mode","Support","setAutoResolve","setAutoUncover","setQuickDeal","setSpeed","RenderScreen","Screen","OverlayContext","overlayActive","toggleOverlay","useOverlayContext","Overlay","useEffectOnce","before","defaultCallable","call","OverlayContextProvider","setActive","content","setContent","_after","setAfter","_before","setBefore","context","ConsentDialog","MenuTitle","mdiCookie","MenuTree","keyboardLayout","MenuButton","mdiThumbUp","title","mdiThumbDown","VerticalMenu","StartMenu","switchToMenu","toggleScreen","switchToScreen","toggleMainMenu","mdiCardsDiamond","mdiCardsPlayingOutline","start","GameModes","mdiSwordCross","toggled","mdiCog","mdiArmFlex","mdiLightbulb","mdiRobot","mdiWeatherTornado","mdiPoll","_toggleOverlay","Home","storage","previous","startScreenContext","AspectRatio","ratio","Ratios","boardMode","initialized","inputMode","Game","App","cookieContext","defaultState","launchState","setLaunchState","deck","restart","SINGLEPLAYER","VERSUS","denomination","type","isHidden","entropyStyle","source","suggestion","success","canClick","setSuccess","causeEntropy","lvl","level","randomInt","min","max","other","_p","card","otherCard","orig","copyAll","DeckSize","getTableauOrder","heart","mdiCardsHeart","color","club","mdiCardsClub","diamond","spade","mdiCardsSpade","SuggestionMode","obj","isTemporary","supportsHints","NONE","SCORED","FULL","ONCE","TWICE","raw","mdiClose","mdiSchool","mdiTimerSand","get","all","allSuggestionModes","default","getHintMode","RenderMenuButton","menuX","menuY","menuFocus","setClicking","active","isClicking","onMouseDown","addItem","TreeNavWrapper","TreeNavigator","startPos","defaultNavigationState","NavigationContext","NavigationProvider","WindowDimensionContext","width","innerWidth","height","innerHeight","updateWindowDimensions","bind","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","suffix","multiplier","prefix","_16to9","_4to3","handlers","onButtonDown","cancel","left","right","up","down","onUndo","hint","onHint","pause","onPause","onMenu","onConnect","debug","onDisconnect","delay","navListener","evtobj","event","preventDefault","getKeyboardLayout","Wasd","Arrows","NumPad","Error","keyCode","ctrlKey"],"sourceRoot":""}