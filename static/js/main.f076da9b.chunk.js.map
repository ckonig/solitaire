{"version":3,"sources":["View/Context.ts","View/Game/Dealer.js","View/UI/EndScreen.js","View/Game/BlinkingComponent.js","View/Game/Card.js","View/Game/MouseHand.js","View/Game/TouchHand.js","View/Game/Hand.js","View/Game/StackBase.js","View/Game/Foundation.js","View/UI/Header/Clock.js","View/UI/Header/EndGame.js","View/UI/Header/Hearts.js","View/UI/Header/Hint.js","View/UI/Header/Points.js","View/UI/RestartGame.js","View/UI/Header/ToggleMenu.js","View/UI/Header/Undo.js","View/UI/Header/Header.js","View/UI/Menu.js","View/Game/Stock.js","View/Game/Tableau.js","View/Game/Waste.js","View/Game/Board.js","Business/Dealer.ts","Business/Dispatcher.ts","Business/Blinker.ts","Business/Foundation.ts","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","Model/Game/Foundation.js","Model/Game/Rating.js","Model/Game/TimeMachine.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings/SuggestionModes.ts","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.ts","Model/Game/Waste.js","Model/Model.ts","Business/Stock.ts","Business/Tableau.ts","Business/Waste.ts","Business/Suggestions.ts","Business/BusinessModel.ts","View/Game/BoardWrap.tsx","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/Context.ts","View/UI/StartScreen/Difficulty.tsx","View/UI/StartScreen/QuickStart.tsx","View/UI/StartScreen/RatingOptions.ts","View/UI/StartScreen/Rating.tsx","View/UI/StartScreen/TouchDetector.js","View/UI/StartScreen/StartScreen.tsx","App.tsx","index.tsx"],"names":["defaultValue","state","replaceContext","updateContext","updateGameContext","restart","GlobalContext","React","createContext","Provider","Dealer","useContext","timeouts","settings","launchSettings","quickDeal","dealer","isDealt","dealAll","deal","dealt","push","setTimeout","dealOne","useEffect","forEach","timeout","clearTimeout","EndScreen","game","isEnded","className","points","getElapsed","onClick","BlinkingComponent","selector","this","context","blinkFor","unblink","Component","contextType","Card","props","e","ele","target","includes","offsetParent","rect","getBoundingClientRect","position","click","x","clientX","ownerDocument","defaultView","pageXOffset","y","clientY","pageYOffset","element","model","style","pointerEvents","zIndex","offsetTop","top","entropyStyle","offsetLeft","left","getCardStyle","hasSuggestion","isSuggested","suggestion","type","icon","isSelected","source","blink","getClassName","isHidden","face","MouseHand","onMouseMove","positionFixed","setState","updateDisplay","myRef","createRef","bind","onKeyDown","document","addEventListener","putBack","removeEventListener","node","current","hand","parent","window","event","keyCode","getOffsetTop","index","ref","stack","map","card","TouchHand","c","Hand","p","length","mouseMode","StackBase","classname","visible","suggested","children","Foundation","s","foundation","stacks","Stacks","i","Clock","useState","elapsed","setElapsed","interval","setInterval","started","clearInterval","EndGame","title","Hearts","recyclingMode","passes","createString","Array","from","keys","join","stock","getHearts","Hint","isVisible","suggestionMode","supportsHints","isTemporary","isDisabled","suggestOnce","enableHint","listenForH","disabled","Points","rating","RestartGame","timemachine","previousStates","ToggleMenu","menu","showMenu","Undo","undo","_state","previous","popPreviousState","penalize","ctrlZ","evtobj","ctrlKey","Math","pow","multiplicator","Header","Menu","onChange","sm","value","setSuggestionMode","key","suggestionModes","label","mm","mouseModes","lvl","setEntropy","baseEntropy","entropyLevels","entropyLevel","interactionEntropy","Stock","Tableau","tableau","getOffset","Waste","waste","drawMode","isHoldingCard","isFromWaste","additionalOffset","Board","dealingAt","callback","Date","now","newCard","pop","isFirst","Dispatcher","clickHandler","getHandler","dispatchPutDown","dispatchPickup","Blinker","startBlink","registerBlink","stopBlink","wouldAccept","src","add","putDown","registerMove","tryDetectEnd","_card","getTop","getPreviousUsed","pickUp","remove","registerPickup","countCards","end","causeEntropy","level","random","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","DeckSize","Suits","heart","color","club","diamond","spade","Deck","Object","deckSize","flat","reverse","shuffleArray","array","j","floor","getCurrentAccepted","currentFoundation","acceptedCards","hasMoreThanOneCard","accepts","currentCard","currentAccepted","usedCards","f","parseInt","reduce","a","b","suit","slice","origStack","Rating","currentMove","rateMove","registerRecycle","console","debug","registerUncover","penalty","on","missPenalty","move","isTableau","obj","substr","isFoundation","TimeMachine","memorable","modified","pushPreviousState","modelEquals","id","isRequested","popPrevious","stackEquals","every","stacksEqual","Game","disableHint","padleft","msec","hh","ss","splice","isHoldingKing","isFromCurrentSource","isFromFoundation","isFromTableau","isFromAnyTableau","substring","getTableauIndex","SuggestionMode","next","SuggestionModes","NONE","SCORED","REGULAR","FULL","ONCE","TWICE","raw","get","all","allSuggestionModes","filter","mode","default","getHintMode","Settings","isTouch","hintMode","recycle","setCardProperties","recyclings","isOnTop","popTop","result","getStack","canPutDown","range","indexOf","getCard","popWithFollowing","stackEntropy","uncover","entropy","concat","offset","tryPutDown","canAdd","addAll","_a","_b","_c","Model","getInitialState","deck","shuffle","_position","moveToWaste","recycleWaste","canRecycle","tryUncover","Suggestions","evaluateOptions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","isMoveOfKingBetweenEmptySlots","isMoveBetweenSimilarParentCards","isNotLoop","foundAny","wasteState","BusinessModel","cardIndex","tableauState","filtered","_stack","disableSuggestion","suggestor","withSuggestions","withHandlers","BoardWrap","modifier","render","DifficultyOptions","lines","StartScreenContext","difficultySettings","ratingPreset","ratingSettings","Difficulty","updateDifficulty","getButtonClass","option","line","QuickStart","start","RatingPresets","timedMode","undoPenalty","hintPenalty","matchPreset","filterd","preset","s1","s2","ctx","setContext","toggle","setToggle","customizeRating","r","String","href","rel","TouchDetector","prefixes","split","DocumentTouch","query","matchMedia","matches","error","StartScreen","App","appState","setAppState","initialized","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f076da9b.chunk.js","sourcesContent":["import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\r\n\r\nimport BusinessModel from \"../Business/BusinessModel\";\r\nimport React from \"react\";\r\n\r\ninterface IGlobalContext {\r\n    state: BusinessModel | null;\r\n    replaceContext: StateReplaceFunction;\r\n    updateContext: StateUpdateFunction;\r\n    updateGameContext: StateUpdateFunction;\r\n    restart: () => void;\r\n}\r\n\r\nconst defaultValue = {\r\n    state: null,\r\n    replaceContext: () => {},\r\n    updateContext: () => {},\r\n    updateGameContext: () => {},\r\n    restart: () => {},\r\n};\r\n\r\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\r\n\r\nexport const Provider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Dealer = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const timeouts = [];\r\n    //@todo implement launch setting UI for quick dealing\r\n    if (state.settings.launchSettings.quickDeal) {\r\n        if (state && state.dealer && !state.dealer.isDealt) {\r\n            replaceContext(state.dealer.dealAll(state));\r\n        }\r\n    } else {\r\n        const deal = (dealt) => {\r\n            timeouts.push(\r\n                setTimeout(() => {\r\n                    if (state && state.dealer && !state.dealer.isDealt) {\r\n                        replaceContext(state.dealer.dealOne(dealt, deal));\r\n                    }\r\n                }, 35)\r\n            );\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            deal(state.dealer.dealt);\r\n            return () => timeouts.forEach((timeout) => clearTimeout(timeout));\r\n        }, []);\r\n    }\r\n    return null;\r\n};\r\nexport default Dealer;\r\n","import \"../Style/Screens.scss\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndScreen = () => {\r\n    const { state, restart } = React.useContext(GlobalContext);\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    return !state.game.isEnded ? null : (\r\n        <div className=\"ui center endscreen\">\r\n            <div className=\"title\">🥳</div>\r\n            <div className=\"content\">\r\n                <div>Points: {state.game.points}</div>\r\n                <div>Time: {state.game.getElapsed()}</div>\r\n                <div>\r\n                    <button onClick={restart}>\r\n                        🗑️<div>New Game</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndScreen;\r\n","import { Component } from \"react\";\r\nimport GlobalContext from \"../Context\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    constructor(selector) {\r\n        super();\r\n        this.timeout = null;\r\n        this.selector = selector;\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    componentDidUpdate() {\r\n        if (this.selector(this.context.state).blinkFor) {\r\n            this.timeout = setTimeout(\r\n                () =>\r\n                    this.context.updateGameContext((state) => {\r\n                        this.selector(state).unblink(state);\r\n                    }),\r\n                200\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const onClick = (e) => {\r\n        let ele = e.target;\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            click: {\r\n                x: e.clientX - ele.ownerDocument.defaultView.pageXOffset,\r\n                y: e.clientY - ele.ownerDocument.defaultView.pageYOffset,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n\r\n        props.onClick({ ...props.model }, position);\r\n    };\r\n\r\n    const getClassName = () => {\r\n        const hasSuggestion = props.isSuggested || props.model.suggestion;\r\n        let className = `card card-base suit-${props.model.type.icon}`;\r\n        className += !props.isSelected && !hasSuggestion ? ` card-stack-${props.model.source}` : \"\";\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack (preview what happens if picked up)\r\n        className += hasSuggestion ? \" card-suggested\" : \"\";\r\n\r\n        return className;\r\n    };\r\n\r\n    const getCardStyle = () => {\r\n        const style = {\r\n            zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };\r\n\r\n        //move to left on waste (triple draw)\r\n        if (props.offsetLeft) {\r\n            style.left = props.offsetLeft * 4 + \"vw\";\r\n        }\r\n\r\n        if (!props.onClick) {\r\n            style.pointerEvents = \"none\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    const getStackbaseStyle = () => {\r\n        if (!props.onClick) {\r\n            return { pointerEvents: \"none\" };\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    // @todo 3d flip https://3dtransforms.desandro.com/card-flip on unhide\r\n    // https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n\r\n    return (\r\n        <div style={getStackbaseStyle()} className=\"stack-base\">\r\n            <div style={getCardStyle()} className={getClassName()} onClick={onClick ? onClick : null}>\r\n                {props.model.isHidden ? (\r\n                    <div className=\"card-back\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        if (this.props.putBack) {\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card key={index} model={card} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends React.Component {\r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.props.hand &&\r\n                this.props.hand.stack &&\r\n                this.props.hand.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={this.props.offsetTop + index * 24}\r\n                        offsetLeft={this.props.offsetLeft}\r\n                        zIndex={1000 + index * 20}\r\n                        isSelected={true}\r\n                        onClick={(c) => this.props.onClick(c)}\r\n                    />\r\n                )),\r\n        ];\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    if (!state.hand || props.parent !== state.hand.source) {\r\n        return null;\r\n    }\r\n    const putBack = (c, p) => props.onClick(props.stack[props.stack.length - 1], p, props.stack.length - 1);\r\n    if (state.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parent} hand={state.hand} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (state.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <TouchHand\r\n                parent={props.parent}\r\n                hand={state.hand}\r\n                offsetTop={props.offsetTop}\r\n                offsetLeft={props.offsetLeft}\r\n                onClick={putBack}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base\";\r\n\r\n    if (props.visible) {\r\n        if (props.blink) {\r\n            classname += \" socket-blink\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n\r\n    if (props.suggested) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n\r\n    return (\r\n        <div className={classname} onClick={() => props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.foundation.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state, updateGameContext } = React.useContext(GlobalContext);\r\n        const onClick = (c, p, i) => updateGameContext(state.foundation.onClick(c, p, i));\r\n        return state.foundation.stacks.map((foundation, index) => (\r\n            <Foundation key={index} model={foundation} index={index} onClick={onClick} />\r\n        ));\r\n    };\r\n\r\n    render() {\r\n        const model = this.props.model;\r\n        return (\r\n            <div key={this.props.index}>\r\n                <StackBase\r\n                    suggested={model.suggestion && !model.stack.length}\r\n                    blink={model.blinkFor}\r\n                    onClick={() => this.props.onClick(null, null, this.props.index)}\r\n                    visible={!model.stack.length}\r\n                >\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                        onClick={(c, p) => this.props.onClick(c, p, this.props.index)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parent={\"foundation-\" + this.props.index}\r\n                    onClick={(c, p) => this.props.onClick(model.stack[model.stack.length - 1], p, this.props.index)}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Clock = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const [elapsed, setElapsed] = React.useState(0);\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (state.game.started) {\r\n                setElapsed(state.game.getElapsed());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return !state.game.started || !elapsed ? null : (\r\n        <div className=\"header-clock\">\r\n            <div className=\"icon-container\">🕒</div>\r\n            {elapsed}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndGame = () => {\r\n    const { restart } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"End Game\" onClick={restart}>\r\n                🗑️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default EndGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hearts = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const getHearts = () => {\r\n        if (state.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            return state.game.passes > 0 ? \"❤️\" : \"💔\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            const createString = (length, icon) =>\r\n                Array.from(new Array(length).keys())\r\n                    .map(() => icon)\r\n                    .join(\"\");\r\n\r\n            return createString(state.stock.passes, \"❤️\") + createString(3 - state.stock.passes, \"💔\");\r\n        }\r\n        return null;\r\n    };\r\n    return <div className=\"heart-container\">{getHearts()}</div>;\r\n};\r\nexport default Hearts;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hint = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    \r\n    //@todo update\r\n    \r\n    const isVisible = (state) => state.settings.suggestionMode.supportsHints || state.settings.suggestionMode.isTemporary;\r\n    const isDisabled = (state) => state.settings.suggestionMode.isTemporary;\r\n\r\n    const suggestOnce = () => {\r\n        updateContext((state) => {\r\n            if (isVisible(state) && !isDisabled(state)) {\r\n                state.settings.enableHint();\r\n            }\r\n        });\r\n    };\r\n\r\n    const listenForH = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 72) {\r\n            suggestOnce();\r\n        }\r\n    };\r\n\r\n    if (isVisible(state) && !isDisabled(state)) {\r\n        React.useEffect(() => {\r\n            document.addEventListener(\"keydown\", listenForH);\r\n            return () => document.removeEventListener(\"keydown\", listenForH);\r\n        }, []);\r\n    }\r\n\r\n    return !isVisible(state) ? null : (\r\n        <div>\r\n            <button title=\"Hint\" onClick={() => suggestOnce()} disabled={isDisabled(state)}>\r\n                💡\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Hint;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Points = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"icon-container\">🏆</div> {state.game.rating.points}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Points;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst RestartGame = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n\r\n    const reset = () =>\r\n        replaceContext((state) => (state.game.timemachine.previousStates ? state.game.timemachine.previousStates[0] : null));\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Restart\" disabled={!state.game.timemachine.previousStates.length} onClick={reset}>\r\n                ♻️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestartGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst ToggleMenu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Settings\" onClick={() => toggleMenu(state.settings.showMenu)}>\r\n                ⚙️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleMenu;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Undo = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const undo = () =>\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    const ctrlZ = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 90 && evtobj.ctrlKey) {\r\n            undo();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", ctrlZ);\r\n        return () => document.removeEventListener(\"keydown\", ctrlZ);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                disabled={!state.game.timemachine.previousStates.length}\r\n                title={\"Undo (Penalty:\" + Math.pow(2, state.game.rating.multiplicator) + \")\"}\r\n                onClick={undo}\r\n            >\r\n                ⏪\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Undo;\r\n","import \"../../Style/Header.css\";\r\n\r\nimport Clock from \"./Clock\";\r\nimport EndGame from \"./EndGame\";\r\nimport Hearts from \"./Hearts\";\r\nimport Hint from \"./Hint\";\r\nimport Points from \"./Points\";\r\nimport React from \"react\";\r\nimport RestartGame from \"../RestartGame\";\r\nimport ToggleMenu from \"./ToggleMenu\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <div className=\"header-title\">\r\n            <Hearts />\r\n            <Points />\r\n        </div>\r\n        <Clock />\r\n        <div className=\"header-buttons\">\r\n            <Hint />\r\n            <Undo />\r\n            <RestartGame />\r\n            <EndGame />\r\n            <ToggleMenu />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import \"../Style/Menu.css\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Menu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    //@todo persist game settings in local storage too and use for initialization\r\n    const setSuggestionMode = (sm) => updateContext((state) => state.settings.setSuggestionMode(sm));\r\n    const setBaseEntropy = (lvl) => updateContext((state) => state.setEntropy(lvl));\r\n    const setInteractionEntropy = (lvl) => updateContext((state) => (state.settings.interactionEntropy = lvl));\r\n    const setMouseMode = (mm) => updateContext((state) => (state.settings.mouseMode = mm));\r\n\r\n    //@todo review duplication with ToggleMenu Component from Header\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!state.settings.showMenu) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui right menu\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => toggleMenu(state.settings.showMenu)}>🗙</button>\r\n            </div>\r\n            <div className=\"title\">Settings</div>\r\n            <div className=\"content\">\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Suggestions</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much help - if any - should the game offer by displaying suggestions?</div>\r\n                        <select onChange={(e) => setSuggestionMode(e.target.value)} value={state.settings.suggestionMode.key}>\r\n                            {state.settings.suggestionModes.map((suggestionMode) => (\r\n                                <option key={suggestionMode.key} value={suggestionMode.key}>\r\n                                    {suggestionMode.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Active Card</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">Should the selected card follow the cursor or remain on the stack?</div>\r\n                        <select onChange={(e) => setMouseMode(e.target.value)} value={state.settings.mouseMode}>\r\n                            {state.settings.mouseModes.map((mouseMode) => (\r\n                                <option key={mouseMode} value={mouseMode}>\r\n                                    {mouseMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Base Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                        <select onChange={(e) => setBaseEntropy(e.target.value)} value={state.settings.baseEntropy}>\r\n                            {state.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Interaction Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will each interaction add to a stack on the board?</div>\r\n                        <select onChange={(e) => setInteractionEntropy(e.target.value)} value={state.settings.interactionEntropy}>\r\n                            {state.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Menu;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.stock);\r\n    }\r\n\r\n    render() {\r\n        const { state, updateGameContext } = this.context;\r\n        const onClick = (c, p, i) => updateGameContext(state.stock.onClick(c, p, i));\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={state.stock.blinkFor}\r\n                    onClick={onClick}\r\n                    suggested={state.stock.suggestion && !state.stock.stack.length}\r\n                    visible={!state.stock.stack.length}\r\n                />\r\n                {state.stock.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        blink={state.stock.blinkFor}\r\n                        isSuggested={state.stock.suggestion && index == state.stock.stack.length - 1}\r\n                        onClick={onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.tableau.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state, updateGameContext } = React.useContext(GlobalContext);\r\n        const onClick = (c, p, i) => updateGameContext(state.tableau.onClick(c, p, i));\r\n        return state.tableau.stacks.map((tableau, index) => <Tableau key={index} index={index} model={tableau} onClick={onClick} />);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, props.index)}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={(card, p) => props.onClick(card, p, props.index)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parent={\"tableau-\" + props.index}\r\n                    onClick={(card, p) => props.onClick(card, p, props.index)}\r\n                    stack={props.model.stack}\r\n                    offsetTop={getOffset(props.model.stack.length)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.waste);\r\n    }\r\n\r\n    render() {\r\n        const { state, updateGameContext } = this.context;\r\n        const onClick = (c, p, i) => updateGameContext(state.waste.onClick(c, p, i));\r\n        const getOffset = (index) => {\r\n            if (state.settings.launchSettings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length =\r\n                state.waste.settings.mouseMode == \"remain-on-stack\" && state.hand.isHoldingCard() && state.hand.isFromWaste()\r\n                    ? state.waste.stack.length + 1\r\n                    : state.waste.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={state.waste.blinkFor}\r\n                    onClick={() => onClick(null, null)}\r\n                    suggested={state.waste.suggestion && !state.waste.stack.length}\r\n                    visible={!state.waste.stack.length}\r\n                />\r\n                {state.waste.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        blink={state.waste.blinkFor}\r\n                        isSuggested={state.waste.suggestion && index == state.waste.stack.length - 1}\r\n                        onClick={(c, p) => onClick(c, p)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    offsetTop={(state.waste.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(state.waste.stack.length)}\r\n                    parent=\"waste\"\r\n                    onClick={onClick}\r\n                    stack={state.waste.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"../Style/Board.scss\";\r\n\r\nimport Dealer from \"./Dealer\";\r\nimport EndScreen from \"../UI/EndScreen\";\r\nimport Foundation from \"./Foundation\";\r\nimport Header from \"../UI/Header/Header\";\r\nimport Menu from \"../UI/Menu\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = () => (\r\n    <>\r\n        <div className=\"layout-grid-container\">\r\n            <Header />\r\n            <div className=\"board-grid-container\">\r\n                <Stock />\r\n                <Waste />\r\n                <div className=\"spacer\">&nbsp;</div>\r\n                <Foundation.Stacks />\r\n                <Tableau.Stacks />\r\n            </div>\r\n        </div>\r\n        <Menu />\r\n        <EndScreen />\r\n        <Dealer />\r\n    </>\r\n);\r\n\r\nexport default Board;\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Tableau from \"../Model/Game/Tableau\";\r\n\r\nexport default class Dealer {\r\n    dealt: number;\r\n    dealingAt: number;\r\n    isDealt: boolean;\r\n\r\n    constructor() {\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    dealOne = (dealt: number, callback: any) => (state: BusinessModel) => {\r\n        if (dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n\r\n        state.dealer.deal(state.stock, state.tableau);\r\n        if (state.dealer.isDealt) {\r\n            state.game.started = Date.now();\r\n        }\r\n\r\n        if (!state.dealer.isDealt) {\r\n            callback(state.dealer.dealt);\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    dealAll = () => (state: BusinessModel) => {\r\n        if (this.dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n        while (!state.dealer.isDealt) {\r\n            state.dealer.deal(state.stock, state.tableau);\r\n        }\r\n        state.game.started = Date.now();\r\n        return state;\r\n    };\r\n\r\n    deal = (stock: Stock, tableau: Tableau) => {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = stock.stack.pop();\r\n                newCard.source = \"tableau-\" + i;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                stack.push(newCard);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Hand from \"../Model/Game/Hand\";\r\n\r\nexport default class Dispatcher {\r\n    clickHandler: ClickHandler;\r\n\r\n    constructor(clickHandler: ClickHandler) {\r\n        this.clickHandler = clickHandler;\r\n    }\r\n\r\n    getHandler = (hand: Hand) => {\r\n        if (hand && hand.isHoldingCard()) {\r\n            return this.dispatchPutDown;\r\n        } else {\r\n            return this.dispatchPickup;\r\n        }\r\n    };\r\n\r\n    dispatchPutDown = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPutDown(card, position, state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPickup(card, position, state, index);\r\n        }\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Waste from \"../Model/Game/Waste\";\r\n\r\nexport type BlinkSelector = (state: BusinessModel) => Waste | Stock | any;\r\n\r\nexport interface IBlinker {\r\n    startBlink: (selector: BlinkSelector, state: BusinessModel) => void;\r\n}\r\n\r\nexport default class Blinker implements IBlinker {\r\n    startBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        if (selector(state).blinkFor < 10) {\r\n            selector(state).blinkFor = 10;\r\n            state.game.registerBlink(true);\r\n            selector(state).unblink = (s: BusinessModel) => this.stopBlink(selector, s);\r\n        }\r\n    };\r\n\r\n    stopBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        selector(state).blinkFor = 0;\r\n        state.game.registerBlink(false);\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Foundation implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.foundation.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.foundation.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (_card: Card, position: any, state: BusinessModel, index: number) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    //@todo move this to a generic place, also detect failure\r\n    tryDetectEnd(state: BusinessModel) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.source = \"\";\r\n        this.suggestion = false;\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\r\n            .flat()\r\n            .reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n            blinkFor: 0,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (a, b, c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => !hand.hasMoreThanOneCard() && this.accepts(index, hand.currentCard());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = \"foundation-\" + index;\r\n        card.suggestion = false;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => [...this.stacks[index].usedCards].pop();\r\n\r\n    countCards = () => this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n\r\n    getTop = (index) => this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation(orig.settings);\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","export default class Rating {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        this.points += this.rateMove(currentMove);\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        if (this.settings.launchSettings.drawMode == \"single\" && this.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n    };\r\n\r\n    registerBlink(on) {\r\n        if (on && this.settings.launchSettings.missPenalty) {\r\n            this.points -= 10;\r\n            console.debug(\"RATING: subtract 10 points for invalid action\");\r\n        }\r\n        //@todo support optionally penalizing invalid moves\r\n    }\r\n\r\n    penalize = (other) => {\r\n        const penalty = Math.pow(2, other.multiplicator);\r\n        console.debug(`RATING: applying penalty of ${penalty} points for UNDO`);\r\n        this.points = Math.min(this.points, other.points) - penalty;\r\n        this.multiplicator = other.multiplicator + 1;\r\n    };\r\n\r\n    rateMove(move) {\r\n        console.debug(\"RATING  A MOVEW\", this.settings.launchSettings);\r\n        const isTableau = (obj) => obj.substr(0, 7) == \"tableau\";\r\n        const isFoundation = (obj) => obj.substr(0, 10) == \"foundation\";\r\n        if (isTableau(move.source)) {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (isFoundation(move.source)) {\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Rating(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.multiplicator = orig.multiplicator;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class TimeMachine {\r\n    constructor() {\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n    };\r\n\r\n    pushPreviousState = (state) => {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    };\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.timemachine.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        return true;\r\n    };\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    }\r\n\r\n    stackEquals = (a, b) => {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    };\r\n\r\n    stacksEqual = (a, b) => {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    };\r\n\r\n    modelEquals = (a, b) => {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new TimeMachine();\r\n        copy.previousStates = [...orig.previousStates];\r\n        copy.memorable = orig.memorable;\r\n        copy.modified = orig.modified;\r\n        return copy;\r\n    };\r\n}\r\n","import Rating from \"./Rating\";\r\nimport TimeMachine from \"./TimeMachine\";\r\n\r\nexport default class Game {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.rating = new Rating(settings);\r\n        this.timemachine = new TimeMachine();\r\n        this.started = 0;\r\n        this.isEnded = false;\r\n        this.end = 0;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.settings.disableHint();\r\n        this.rating.registerMove(target, source);\r\n        this.timemachine.registerMove(target, source);\r\n        return true;\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.timemachine.registerPickup();\r\n        return true;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.settings.disableHint();\r\n        this.rating.registerRecycle();\r\n        this.timemachine.registerRecycle();\r\n        return true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.settings.disableHint();\r\n        this.rating.registerUncover();\r\n        this.timemachine.registerUncover();\r\n        return true;\r\n    };\r\n\r\n    registerBlink(on) {\r\n        this.rating.registerBlink(on);\r\n        this.timemachine.registerBlink(on);\r\n        return true;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.started = orig.started;\r\n        copy.timemachine = TimeMachine.copy(orig.timemachine);\r\n        copy.rating = Rating.copy(orig.rating);\r\n        return copy;\r\n    };\r\n\r\n    getElapsed = () => {\r\n        const padleft = (i) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = (this.end || Date.now()) - this.started;\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp = (stack, source, position) => {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    };\r\n\r\n    putDown = () => {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    };\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    isHoldingKing = () => this.isHoldingCard() && this.currentCard().face == 'K';\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    isFromWaste = () => this.source && this.source == \"waste\";\r\n\r\n    isFromFoundation = (index) => this.source && this.source == `foundation-${index}`\r\n\r\n    isFromTableau = (index) => this.source && this.source == `tableau-${index}`\r\n\r\n    isFromAnyTableau = () => this.source && this.source.substring(0,8) == \"tableau-\";\r\n\r\n    getTableauIndex = () => this.source && this.source.substring(8);\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","class SuggestionMode {\r\n    key: string;\r\n    label: string;\r\n    isTemporary: boolean;\r\n    supportsHints: boolean;\r\n    next: string | undefined;\r\n    constructor(key: string, obj: ISuggestionMode) {\r\n        this.key = key;\r\n        this.label = obj.label;\r\n        this.isTemporary = !!obj.isTemporary;\r\n        this.supportsHints = !!obj.supportsHints;\r\n        this.next = obj.next;\r\n    }\r\n}\r\n\r\ntype ISuggestionMode = {\r\n    label: string;\r\n    isTemporary?: boolean;\r\n    supportsHints?: boolean;\r\n    next?: string;\r\n};\r\n\r\nexport default class SuggestionModes {\r\n    static NONE: string = \"NONE\";\r\n    static SCORED: string = \"SCORED\";\r\n    static REGULAR: string = \"REGULAR\";\r\n    static FULL: string = \"FULL\";\r\n    static ONCE: string = \"ONCE\";\r\n    static TWICE: string = \"TWICE\";\r\n    static raw: { [id: string]: ISuggestionMode } = {\r\n        NONE: {\r\n            label: \"None\",\r\n            supportsHints: true,\r\n        },\r\n        SCORED: {\r\n            label: \"Scored\",\r\n        },\r\n        REGULAR: {\r\n            label: \"Regular\",\r\n        },\r\n        FULL: {\r\n            label: \"Full\",\r\n        },\r\n        ONCE: {\r\n            label: \"Single Action\",\r\n            isTemporary: true,\r\n            next: \"NONE\",\r\n        },\r\n    };\r\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\r\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\r\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\r\n    static default = () => SuggestionModes.get(SuggestionModes.NONE);\r\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\r\n}\r\n","import SuggestionModes from \"./Settings/SuggestionModes\";\r\n\r\nexport default class Settings {\r\n    constructor(launchSettings) {\r\n        this.launchSettings = launchSettings;\r\n        const isTouch = launchSettings.isTouch;\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = isTouch ? \"remain-on-stack\" : \"follow-cursor\";\r\n\r\n        this.entropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\n        this.baseEntropy = isTouch ? 1 : 2;\r\n        this.interactionEntropy = isTouch ? 1 : 2;\r\n\r\n        this.suggestionModes = SuggestionModes.allSuggestionModes();\r\n        this.suggestionMode = SuggestionModes.default();\r\n    }\r\n\r\n    setSuggestionMode = (sm) => {\r\n        if (this.suggestionMode.key !== sm) {\r\n            this.suggestionMode = SuggestionModes.get(sm);\r\n        }\r\n    };\r\n\r\n    enableHint = () => {\r\n        this.suggestionMode = SuggestionModes.getHintMode();\r\n    };\r\n\r\n    disableHint = () => {\r\n        if (this.suggestionMode.isTemporary && this.suggestionMode.next) {\r\n            this.suggestionMode = SuggestionModes.get(this.suggestionMode.next);\r\n        }\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings(orig.launchSettings);\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        copy.hintMode = orig.hintMode;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack, settings) {\r\n        this.settings = settings;\r\n        this.stack = stack.map(this.setCardProperties);\r\n        this.recyclings = 0;\r\n        this.passes = -1;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (a, b, c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n        if (this.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            this.passes = 1;\r\n        }\r\n        if (this.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            this.passes = 3;\r\n        }\r\n    }\r\n\r\n    canRecycle() {\r\n        return (\r\n            this.settings.launchSettings.recyclingMode == \"infinite\" ||\r\n            (this.settings.launchSettings.recyclingMode == \"3-pass\" && this.recyclings < 2)\r\n        );\r\n    }\r\n\r\n    recycle = (waste) => {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map(this.setCardProperties);\r\n            this.recyclings++;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setCardProperties = (card) => {\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        card.isHidden = true;\r\n        card.source = \"stock\";\r\n        return card;\r\n    };\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    popTop = () => {\r\n        let result = [];\r\n        if (this.settings.launchSettings.drawMode == \"single\") {\r\n            result = [this.stack.pop()];\r\n        }\r\n        if (this.settings.launchSettings.drawMode == \"triple\") {\r\n            result = this.stack.splice(this.stack.length - 3);\r\n        }\r\n        if (this.stack.length == 0) {\r\n            this.passes--;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        copy.passes = orig.passes;\r\n        copy.recyclings = orig.recyclings;\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Hand from \"./Hand\";\r\nimport Settings from \"./Settings\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    stacks: { stack: Card[]; id: number; suggestion?: boolean }[];\r\n    settings: Settings;\r\n    onClick: (a: any, b: any, c: any) => void;\r\n\r\n    constructor(settings: Settings) {\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => ({\r\n            stack: [],\r\n            blinkFor: 0,\r\n            id,\r\n        }));\r\n        this.settings = settings;\r\n        this.onClick = () => {};\r\n    }\r\n\r\n    getStack = (index: number) => this.stacks[index];\r\n\r\n    wouldAccept = (index: number, hand: Hand) => this.canPutDown(this.getTop(index), hand, index);\r\n\r\n    canPutDown = (card: Card, hand: Hand, index: number) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.isFromTableau(index));\r\n\r\n    accepts = (index: number, current: Card) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index: number, card: Card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card: Card, i: number) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index: number) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index: number, cards: Card[]) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card: Card, index: number) => {\r\n        card.source = \"tableau-\" + index;\r\n        return card;\r\n    };\r\n\r\n    getTop = (index: number, offset?: number) => this.stacks[index].stack[this.stacks[index].stack.length - 1 - (offset || 0)];\r\n\r\n    static copy = (orig: Tableau) => {\r\n        const copy = new Tableau(orig.settings);\r\n        copy.stacks = orig.stacks.map((stack, index) => ({ id: index, stack: Card.copyAll(stack.stack) }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.stack = [];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (_a, _b, _c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAccept = (hand) => hand.isFromWaste() && this.canAdd(hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste(orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Model {\r\n    stock: Stock;\r\n    waste: Waste;\r\n    foundation: Foundation;\r\n    tableau: Tableau;\r\n    hand: Hand;\r\n    game: Game;\r\n    settings: Settings;\r\n\r\n    constructor(obj: any) {\r\n        this.stock = obj.stock;\r\n        this.waste = obj.waste;\r\n        this.foundation = obj.foundation;\r\n        this.tableau = obj.tableau;\r\n        this.hand = obj.hand;\r\n        this.game = obj.game;\r\n        this.settings = obj.settings;\r\n    }\r\n\r\n    static getInitialState = (launchSettings: AppState) => {\r\n        const deck = new Deck().shuffle();\r\n        const settings = new Settings(launchSettings);\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings),\r\n            waste: new Waste(settings),\r\n            foundation: new Foundation(settings),\r\n            tableau: new Tableau(settings),\r\n            hand: new Hand(),\r\n            game: new Game(settings),\r\n            settings: settings,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n        };\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Stock implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.stock, state);\r\n\r\n    dispatchPutDown = (_card: Card, _position: any, state: BusinessModel) => this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, _position: any, state: BusinessModel) =>\r\n        card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state);\r\n\r\n    moveToWaste = (card: Card, state: BusinessModel) =>\r\n        state.stock.isOnTop(card) && state.waste.addAll(state.stock.popTop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    recycleWaste = (_card: Card, state: BusinessModel) =>\r\n        (!state.stock.getTop() &&\r\n            !!state.waste.getTop() &&\r\n            state.stock.canRecycle() &&\r\n            state.stock.recycle(state.waste.recycle()) &&\r\n            state.game.registerRecycle()) ||\r\n        this.blink(state, 0);\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Tableau implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.tableau.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.tableau.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card: Card, index: number, state: BusinessModel) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Waste implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.waste, state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel) =>\r\n        (state.waste.wouldAccept(state.hand) &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state, 0);\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport SuggestionModes from \"../Model/Game/Settings/SuggestionModes\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Suggestions {\r\n    tableau: Tableau;\r\n    waste: Waste;\r\n\r\n    constructor() {\r\n        this.tableau = new Tableau();\r\n        this.waste = new Waste();\r\n    }\r\n\r\n    evaluateOptions = (state: BusinessModel) => {\r\n        this.disableAllSuggestions(state);\r\n        if (\r\n            state.settings.suggestionMode.key !== SuggestionModes.NONE &&\r\n            !this.getUncoverOptions(state) &&\r\n            !this.getPutdownSuggestions(state) &&\r\n            !state.hand.isHoldingCard() &&\r\n            (!this.getPickupOptions(state) || state.settings.suggestionMode.key == SuggestionModes.FULL) &&\r\n            (state.stock.getTop() || state.stock.canRecycle()) &&\r\n            state.settings.suggestionMode.key !== SuggestionModes.SCORED\r\n        ) {\r\n            state.stock.suggestion = true;\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state: BusinessModel, onlyUseful?: boolean) => {\r\n        if (!state.hand.isHoldingCard() || state.settings.suggestionMode.key == SuggestionModes.NONE) {\r\n            return 0;\r\n        }\r\n\r\n        const accepted = [];\r\n        if (state.waste.wouldAccept(state.hand)) {\r\n            if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromWaste()) {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.foundation.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromFoundation(index)) {\r\n                    const move = { target: \"foundation-\" + index, source: state.hand.source };\r\n                    if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.tableau.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromTableau(index)) {\r\n                    const isMoveOfKingBetweenEmptySlots =\r\n                        state.hand.isHoldingKing() &&\r\n                        stack.stack.length == 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length == 0;\r\n\r\n                    const isMoveBetweenSimilarParentCards =\r\n                        stack.stack.length > 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length > 0 &&\r\n                        stack.stack[stack.stack.length - 1].face ==\r\n                            state.tableau.stacks[state.hand.getTableauIndex()].stack[\r\n                                state.tableau.stacks[state.hand.getTableauIndex()].stack.length - 1\r\n                            ].face &&\r\n                        !state.tableau.getTop(state.hand.getTableauIndex()).isHidden;\r\n\r\n                    const isNotLoop = !isMoveOfKingBetweenEmptySlots && !isMoveBetweenSimilarParentCards;\r\n\r\n                    if (!onlyUseful || state.settings.suggestionMode.key === SuggestionModes.FULL || isNotLoop) {\r\n                        const move = { target: \"tableau-\" + index, source: state.hand.source };\r\n                        if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state: BusinessModel) => {\r\n        let foundAny = false;\r\n        const wasteState = BusinessModel.copy(state);\r\n        this.waste.dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.timemachine.modified) {\r\n            if (this.getPutdownSuggestions(wasteState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) =>\r\n            tableau.stack\r\n                .map((card, cardIndex) => ({ cardIndex, card }))\r\n                .filter(({ card }) => !card.isHidden)\r\n                .forEach(({ card, cardIndex }) => {\r\n                    const tableauState = BusinessModel.copy(state);\r\n                    this.tableau.dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.timemachine.modified) {\r\n                        if (this.getPutdownSuggestions(tableauState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                })\r\n        );\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            const filtered = state.tableau.stacks\r\n                .map((_stack, index) => index)\r\n                .filter((index) => state.tableau.getTop(index) && state.tableau.getTop(index).isHidden);\r\n            filtered.forEach((index) => {\r\n                state.tableau.getTop(index).suggestion = true;\r\n            });\r\n            return filtered.length;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    disableAllSuggestions = (state: BusinessModel) => {\r\n        const disableSuggestion = (obj: any) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Dealer from \"./Dealer\";\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Foundation from \"./Foundation\";\r\nimport Model from \"../Model/Model\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class BusinessModel extends Model {\r\n    suggestor: Suggestions;\r\n    dealer: Dealer;\r\n\r\n    constructor(obj: any) {\r\n        super(obj);\r\n        this.suggestor = new Suggestions();\r\n        this.dealer = new Dealer();\r\n    }\r\n\r\n    withSuggestions = () => {\r\n        this.suggestor.evaluateOptions(this)\r\n        return this;\r\n    }\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.settings.baseEntropy = lvl;\r\n        this.stock.setEntropy(lvl);\r\n        this.waste.setEntropy(lvl);\r\n        this.foundation.setEntropy(lvl);\r\n        this.tableau.setEntropy(lvl);\r\n    };\r\n\r\n    withHandlers = () => {\r\n        const getHandler = (clickHandler: ClickHandler) => new Dispatcher(clickHandler).getHandler(this.hand);\r\n        this.stock.onClick = getHandler(new Stock());\r\n        this.waste.onClick = getHandler(new Waste());\r\n        this.foundation.onClick = getHandler(new Foundation());\r\n        this.tableau.onClick = getHandler(new Tableau());\r\n        return this;\r\n    };\r\n\r\n    static getInitialState = (launchSettings: AppState) => {\r\n        return new BusinessModel(Model.getInitialState(launchSettings));\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return new BusinessModel(Model.copy(state));\r\n    };\r\n}\r\n","import { AppState, StateReplacer, StateUpdater } from \"../../Common\";\r\n\r\nimport Board from \"./Board\";\r\nimport BusinessModel from \"../../Business/BusinessModel\";\r\nimport { Provider } from \"../Context\";\r\nimport React from \"react\";\r\n\r\ninterface BoardWrapProps {\r\n    settings: AppState;\r\n    restart: () => void;\r\n}\r\n\r\nexport default class BoardWrap extends React.Component<BoardWrapProps, BusinessModel> {\r\n    constructor(props: BoardWrapProps) {\r\n        super(props);\r\n        this.state = BusinessModel.getInitialState(props.settings);\r\n    }\r\n\r\n    replaceContext = (modifier: StateReplacer) => this.setState(modifier);\r\n\r\n    updateContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            modifier(state);\r\n            return state;\r\n        });\r\n\r\n    updateGameContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            state.game.timemachine.modified = false;\r\n            const previous = BusinessModel.copy(state);\r\n            modifier(state);\r\n            if (state.game.timemachine.modified) {\r\n                state.game.timemachine.pushPreviousState(previous);\r\n                return state;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    render = () => {\r\n        const context = {\r\n            state: this.state.withHandlers().withSuggestions(),\r\n            replaceContext: this.replaceContext,\r\n            updateContext: this.updateContext,\r\n            updateGameContext: this.updateGameContext,\r\n            restart: this.props.restart,\r\n        };\r\n        return (\r\n            <Provider value={context}>\r\n                <Board />\r\n            </Provider>\r\n        );\r\n    };\r\n}\r\n","const DifficultyOptions = [\r\n    {\r\n        id: 0,\r\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\r\n        icon: \"🐭\",\r\n        lines: [\"Turn 1 card at once.\", \"No limit on passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐹\",\r\n        lines: [\"Turn 1 card at once.\", \"Three passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐰\",\r\n        lines: [\"Turn 1 card at once.\", \"Only a single pass\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\r\n        icon: \"🐨\",\r\n        lines: [\"Turn 3 cards at once\", \"No limit on passes\", \"through the deck\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐼\",\r\n        lines: [\"Turn 3 cards at once.\", \"Three passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐻\",\r\n        lines: [\"Turn 3 cards at once.\", \"Only a single pass\", \"through the deck.\"],\r\n    },\r\n];\r\n\r\nexport default DifficultyOptions;\r\n","import React from \"react\";\r\nimport { StartScreenState } from \"../../../Common\";\r\n\r\nexport interface IStartScreenContext {\r\n    state: StartScreenState;\r\n    setState: (s: StartScreenState) => void;\r\n}\r\n\r\nconst StartScreenContext = React.createContext<IStartScreenContext>({\r\n    state: {\r\n        difficultySettings: 0,\r\n        ratingPreset: 0,\r\n        ratingSettings: {},\r\n        isTouch: false,\r\n    },\r\n    setState: () => {},\r\n});\r\n\r\nexport const Provider = StartScreenContext.Provider;\r\nexport default StartScreenContext;\r\n","import DifficultyOptions from \"./DifficultyOptions\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst Difficulty = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const updateDifficulty = (settings: number) => setState({ ...state, difficultySettings: settings });\r\n    const getButtonClass = (index: number) => (state.difficultySettings == index ? `active active-${index}` : \"\");\r\n    return (\r\n        <div className=\"ui center quickstart\">\r\n            <div className=\"title\">Difficulty</div>\r\n            <div className=\"content\">\r\n                <div className=\"left\">\r\n                    {DifficultyOptions.slice(0, 3).map((option) => (\r\n                        <button key={option.id} className={getButtonClass(option.id)} onClick={() => updateDifficulty(option.id)}>\r\n                            {option.icon}\r\n                            {option.lines.map((line, i) => (\r\n                                <div key={i}>{line}</div>\r\n                            ))}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {DifficultyOptions.slice(3).map((option) => (\r\n                        <button key={option.id} className={getButtonClass(option.id)} onClick={() => updateDifficulty(option.id)}>\r\n                            {option.icon}\r\n                            {option.lines.map((line, i) => (\r\n                                <div key={i}>{line}</div>\r\n                            ))}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Difficulty;\r\n","import React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst QuickStart = (props: { start: () => void }) => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    return (\r\n        <div className=\"ui right quickstart\">\r\n            <div className=\"title\">Quickstart</div>\r\n            <div className=\"content center\">\r\n                <div>\r\n                    <button disabled={!state.isTouch} className={!state.isTouch ? \"active active-0\" : \"\"} onClick={() => setState({...state, isTouch: false})}>\r\n                        🖥️\r\n                        <div>{!state.isTouch ? \"Optimized\": \"Optimize\"} for Desktop</div>\r\n                        <div>with Mouse Support</div>\r\n                    </button>\r\n                    <button disabled={state.isTouch} className={state.isTouch ? \"active active-0\" : \"\"} onClick={() => setState({...state, isTouch: true})}>\r\n                        📱\r\n                        <div>{state.isTouch ? \"Optimized\": \"Optimize\"} for Mobile</div>\r\n                        <div>with Touch Support</div>\r\n                    </button>\r\n                    <button className=\"blinking\" onClick={props.start}>\r\n                        🎲\r\n                        <div>Start a new Game</div>\r\n                        <div>using the settings</div>\r\n                        <div>shown on this screen.</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default QuickStart;\r\n","export default class RatingPresets {\r\n    static all = [\r\n        {\r\n            id: 0,\r\n            icon: \"🌴\",\r\n            label: \"Chill\",\r\n            settings: {\r\n                timedMode: false,\r\n                missPenalty: false,\r\n                undoPenalty: false,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 1,\r\n            icon: \"⚖️\",\r\n            label: \"Regular\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: false,\r\n                undoPenalty: true,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: \"🏆\",\r\n            label: \"Competitive\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: true,\r\n                undoPenalty: true,\r\n                hintPenalty: true,\r\n            },\r\n        },\r\n    ];\r\n    static matchPreset = (settings: any) => {\r\n        const filterd = RatingPresets.all.filter((preset) => RatingPresets.equals(preset.settings, settings));\r\n        if (filterd.length > 0) {\r\n            return filterd[0].id;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    static equals = (s1: any, s2: any) =>\r\n        s1.timedMode === s2.timedMode &&\r\n        s1.missPenalty === s2.missPenalty &&\r\n        s1.undoPenalty === s2.undoPenalty &&\r\n        s1.hintPenalty === s2.hintPenalty;\r\n}\r\n","import RatingPresets from \"./RatingOptions\";\r\nimport { RatingSettings } from \"../../../Common\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst Rating = () => {\r\n    const ctx = React.useContext(StartScreenContext);\r\n    const context = ctx.state;\r\n    const setContext = ctx.setState;\r\n    const [toggle, setToggle] = React.useState<boolean>(false);\r\n\r\n    const applyPreset = (id: number) => setContext({ ...context, ratingSettings: { ...RatingPresets.all[id].settings }, ratingPreset: id });\r\n    const getButtonClass = (index: number) => (context.ratingPreset == index ? `active active-${index}` : \"\");\r\n\r\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\r\n        const next = { ...context };\r\n        modifier(next.ratingSettings);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setContext(next);\r\n    };\r\n    const setMissPenalty = (value: string) => customizeRating((r) => (r.missPenalty = value == \"true\"));\r\n    const setTimeRating = (value: string) => customizeRating((r) => (r.timedMode = value == \"true\"));\r\n    const setUndoPenalty = (value: string) => customizeRating((r) => (r.undoPenalty = value == \"true\"));\r\n    const setHintPenalty = (value: string) => customizeRating((r) => (r.hintPenalty = value == \"true\"));\r\n\r\n    return (\r\n        <div className=\"ui left quickstart\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => setToggle(!toggle)}>{toggle ? \"🗙\" : \"☰\"}</button>\r\n            </div>\r\n            <div className=\"title\">{toggle ? \"Customize Rating\" : \"Rating\"}</div>\r\n            {toggle ? (\r\n                <div className=\"content\">\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Undo Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">\r\n                                Should there be a penalty for the UNDO operation? This penalty increases exponentially.\r\n                            </div>\r\n                            <select onChange={(e) => setUndoPenalty(e.target.value)} value={String(!!context.ratingSettings.undoPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Time Rating</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">\r\n                                Should the performance be part of the final rating, according to the rules described{\" \"}\r\n                                <a href=\"https://en.wikipedia.org/wiki/Klondike_(solitaire)#Scoring\" rel=\"noreferrer\" target=\"_blank\">\r\n                                    here\r\n                                </a>\r\n                                ?\r\n                            </div>\r\n                            <select onChange={(e) => setTimeRating(e.target.value)} value={String(!!context.ratingSettings.timedMode)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Hint Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should there be a penalty for the HINT operation? This penalty does not increase.</div>\r\n                            <select onChange={(e) => setHintPenalty(e.target.value)} value={String(!!context.ratingSettings.hintPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Miss Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should there be a penalty for attempting to perform invalid actions?</div>\r\n                            <select onChange={(e) => setMissPenalty(e.target.value)} value={String(!!context.ratingSettings.missPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"content center\">\r\n                    <div>\r\n                        {RatingPresets.all.map((preset) => (\r\n                            <button className={getButtonClass(preset.id)} key={preset.id} onClick={() => applyPreset(preset.id)}>\r\n                                {preset.icon}\r\n                                <div>{preset.label}</div>\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","const TouchDetector = ()  => {\r\n    try {\r\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n        const mq = (query) => window.matchMedia(query).matches;\r\n\r\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n            return true;\r\n        }\r\n\r\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n    } catch (e) {\r\n        console.error(\"(Touch detect failed)\", e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default TouchDetector;","import \"../../Style/Screens.scss\";\r\nimport \"../../Style/Menu.css\";\r\n\r\nimport { AppState, StartScreenState } from \"../../../Common\";\r\n\r\nimport Difficulty from \"./Difficulty\";\r\nimport DifficultyOptions from \"./DifficultyOptions\";\r\nimport { Provider } from \"./Context\";\r\nimport QuickStart from \"./QuickStart\";\r\nimport Rating from \"./Rating\";\r\nimport RatingPresets from \"./RatingOptions\";\r\nimport React from \"react\";\r\nimport TouchDetector from \"./TouchDetector\";\r\n\r\ninterface StartScreenProps {\r\n    start: (settings: AppState) => void;\r\n}\r\n\r\nconst StartScreen = (props: StartScreenProps) => {\r\n    const start = () => {\r\n        const settings = {\r\n            ...DifficultyOptions[state.difficultySettings].settings,\r\n            ...state.ratingSettings,\r\n            isTouch: state.isTouch,\r\n        };\r\n        props.start(settings);\r\n    };\r\n    const [state, setState] = React.useState<StartScreenState>({\r\n        ratingSettings: { ...RatingPresets.all[1].settings },\r\n        difficultySettings: 1,\r\n        ratingPreset: 1,\r\n        isTouch: TouchDetector(),\r\n    });\r\n    return !props || !props.start ? null : (\r\n        <Provider value={{ state, setState }}>\r\n            <div>\r\n                <Rating />\r\n                <Difficulty />\r\n                <QuickStart start={start} />\r\n            </div>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default StartScreen;\r\n","import \"./View/Style/App.css\";\r\nimport \"./View/Style/UI.css\";\r\n\r\nimport { AppState } from \"./Common\";\r\nimport BoardWrap from \"./View/Game/BoardWrap\";\r\nimport React from \"react\";\r\nimport StartScreen from \"./View/UI/StartScreen/StartScreen\";\r\n\r\nconst App = () => {\r\n    const [appState, setAppState] = React.useState<AppState>({});\r\n    const start = (settings: AppState) =>\r\n        setAppState({\r\n            ...settings,\r\n            initialized: true,\r\n        });\r\n    const restart = () => setAppState({});\r\n    return !appState.initialized ? <StartScreen start={start} /> : <BoardWrap settings={appState} restart={restart} />;\r\n};\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}