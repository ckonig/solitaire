{"version":3,"sources":["View/Clock.js","View/Footer.js","View/BlinkingComponent.js","View/Card.js","View/StackBase.js","View/TouchAwareComponent.js","View/TouchHand.js","View/Foundation.js","Model/Deck/CardRange.js","Model/Deck/Deck.js","Model/Deck/CardTools.js","Model/Game/MultiStackHolder.js","Model/Game/Foundation.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/StackHolder.js","Model/Game/Stock.js","Model/Deck/Suits.js","Model/Game/Tableau.js","Model/Game/Waste.js","Model/Factory.js","Service/BaseService.js","Service/Foundation.js","Service/Stock.js","Service/TableauStack.js","Service/Waste.js","Service/Facade.js","View/MouseHand.js","View/Stock.js","View/TableauStack.js","View/Waste.js","App.js","index.js"],"names":["Clock","props","state","timeElapsed","setInterval","setState","msec","end","Date","now","started","hh","Math","floor","mm","ss","className","this","Component","Footer","model","points","isEnded","onClick","reset","href","BlinkingComponent","blinkFor","unblink","Card","type","icon","isSelected","blink","style","zIndex","offsetTop","top","isHidden","face","StackBase","classname","children","TouchAwareComponent","isTouch","is_touch_device","prefixes","split","window","DocumentTouch","document","query","join","matchMedia","matches","e","console","error","source","hand","isHoldingCard","TouchHand","parent","stack","map","card","index","offset","c","Foundation","length","CardRange","Deck","cards","shuffleArray","array","i","j","random","CardTools","otherCard","stacks","filterNotEqual","filter","value","cardNotEquals","MultiStackHolder","filterOut","getCurrentAccepted","currentFoundation","acceptedCards","accepts","currentAccepted","add","push","usedCards","pop","remove","getPreviousUsed","countCards","f","parseInt","reduce","a","b","Game","moves","currentMove","target","rateMove","debug","move","sourceIsTableau","substr","targetIsTableau","sourceIsFoundation","targetIsFoundation","Hand","isHoldingKing","currentCard","isCurrentCard","hasMoreThanOneCard","containsCurrentCard","indexOf","isFromCurrentSource","StackHolder","Stock","waste","reverse","element","cardEquals","getTop","Suits","heart","color","diamond","club","spade","Tableau","getStack","current","range","popWithFollowing","splice","uncover","concat","Waste","canAdd","ret","Factory","deck","keys","Object","suit","key","slice","TableauGenerator","getStacks","getInitialState","stock","foundation","generateFoundations","tableau","generateTableau","game","pointer","oldpointer","ids","id","template","forEach","generateStack","getRndInteger","min","max","Service","stateholder","dispatchPutDown","_setState","_dispatchPutDown","dispatchPickup","_dispatchPickup","_blink","selector","startBlink","setTimeout","toggleBlink","_card","registerMove","putDown","tryDetectEnd","pickUp","s","moveToWaste","recycleWaste","isOnTop","recycle","registerRecycle","TableauStack","canPutDown","tryUncover","registerUncover","tryPutDown","popTop","Facade","generateDeck","shuffle","services","tableauStack","handler","clickTableauStack","clickFoundation","clickStock","clickWaste","MouseHand","myRef","React","createRef","node","addEventListener","x","clientX","y","clientY","left","position","ref","getOffset","App","handlers","getHandlers","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.37dac794.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeElapsed: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            this.setState((state) => {\r\n                //@todo padleft or string format : 00:01\r\n                let msec = (this.props.end || Date.now()) - this.props.started;\r\n                const hh = Math.floor(msec / 1000 / 60 / 60);\r\n                msec -= hh * 1000 * 60 * 60;\r\n                const mm = Math.floor(msec / 1000 / 60);\r\n                msec -= mm * 1000 * 60;\r\n                const ss = Math.floor(msec / 1000);\r\n                msec -= ss * 1000;\r\n                state.timeElapsed = hh ? hh + \":\" + mm + \":\" + ss : mm + \":\" + ss;\r\n                return { ...state };\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return <span className={this.props.className}>Time Elapsed: {this.state.timeElapsed}</span>;\r\n    }\r\n}\r\n","import Clock from \"./Clock\";\r\nimport React from \"react\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-grid-container\">\r\n                <span>Points: {props.model.points}</span>\r\n                <Clock className=\"clock\" started={props.model.started} end={props.model.end} />\r\n                <span>Is Ended: {props.model.isEnded ? \"Y\" : \"N\"}</span>\r\n                <button onClick={props.reset}>reset</button>\r\n                <span className=\"report\">\r\n                    Report Issues <a href=\"https://github.com/ckonig/solitaire/issues\">here</a>.\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Footer;\r\n","import { Component } from \"react\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    componentDidUpdate() {\r\n        if (this.props.model.blinkFor) {\r\n            this.props.model.unblink();\r\n        }\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const model = props.model;\r\n    let className = \"card card-base suit-\" + model.type.icon;\r\n    className += props.isSelected ? \" card-selected\" : \"\";\r\n    className += props.blink ? \" blink\" : \"\";\r\n    const style = {\r\n        zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n        top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n    };\r\n    return (\r\n        <div className=\"stack-base\">\r\n            <div style={style} className={className} onClick={() => props.onClick({ ...props, ...model })}> \r\n                {model.isHidden ? (\r\n                    <div className=\"card-back quarot\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base socket-empty\";\r\n    if (props.blink) {\r\n        classname += \" blink\";\r\n    }\r\n    return (\r\n        <div className={classname} onClick={() => props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import { Component } from \"react\";\r\n\r\nexport default class TouchAwareComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isTouch = this.is_touch_device();\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = (query) => window.matchMedia(query).matches;\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    shouldShowHand(source) {\r\n        return this.isTouch && this.props.hand.isHoldingCard() && this.props.hand.source === source;\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport TouchAwareComponent from \"./TouchAwareComponent\";\r\n\r\nexport default class TouchHand extends TouchAwareComponent {\r\n    render() {\r\n        if (!this.isTouch || !this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card\r\n                            model={card}\r\n                            key={index}\r\n                            offsetTop={this.props.offset + index * 20}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                            onClick={(c) => this.props.onClick(c)}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick()}>\r\n                    <div className={\"align-center foundation-base suit-\" + props.model.icon}>{props.model.icon}</div>\r\n                </StackBase>\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} blink={props.model.blinkFor} onClick={props.onClick} />\r\n                ))}\r\n                <TouchHand\r\n                    parent={\"foundation-\" + props.index}\r\n                    hand={props.hand}\r\n                    onClick={() => props.onClick(props.model.stack[props.model.stack.length - 1])}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const CardRange = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getTargetOrder = () => {\r\n    return [\"A\", ...CardRange.slice(0, CardRange.length - 1)].reverse();\r\n};\r\n","export default class Deck {\r\n    constructor(cards) {\r\n        this.cards = cards;\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","export default class CardTools {\r\n    static cardEquals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static cardNotEquals(card, otherCard) {\r\n        return otherCard.face !== card.face || otherCard.type.icon !== card.type.icon;\r\n    }\r\n\r\n    static filterOut(stacks, card) {\r\n        for (let i = 0; i < stacks.length; i++) {\r\n            stacks[i].stack = CardTools.filterNotEqual(stacks[i].stack, card);\r\n        }\r\n\r\n        return stacks;\r\n    }\r\n\r\n    static filterNotEqual(stack, card) {\r\n        return stack.filter((value) => {\r\n            return CardTools.cardNotEquals(value, card);\r\n        });\r\n    }\r\n}\r\n","export default class MultiStackHolder {\r\n    constructor(stacks) {\r\n        this.stacks = stacks;\r\n    }\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n}","import CardTools from \"../Deck/CardTools\";\r\nimport MultiStackHolder from \"./MultiStackHolder\";\r\n\r\nexport default class Foundation extends MultiStackHolder {\r\n    filterOut = (card) => {\r\n        this.stacks = CardTools.filterOut(this.stacks, card);\r\n    };\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, card) => {\r\n        //@todo also set in constructor\r\n        card.source = \"foundation-\" + index;\r\n        this.stacks[index].stack.push(card);\r\n        this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.filterOut(card);\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n    };\r\n\r\n    getPreviousUsed = (index) => {\r\n        return [...this.stacks[index].usedCards].pop();\r\n    };\r\n\r\n    countCards = () => {\r\n        this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n    };\r\n}\r\n","export default class Game {\r\n    constructor() {\r\n        this.moves = [];\r\n        this.currentMove = null;\r\n        this.points = 0;\r\n        this.started = Date.now();\r\n    }\r\n\r\n    registerMove(target, card) {\r\n        const currentMove = {\r\n            source: card.source,\r\n            card: card,\r\n            target: target,\r\n        };\r\n\r\n        this.points += this.rateMove(currentMove);\r\n        this.moves.push({ ...currentMove });\r\n        return true;\r\n    }\r\n\r\n    registerRecycle() {\r\n        this.moves.push({ source: \"waste\", target: \"stock\", card: null });\r\n        this.points -= 100;\r\n        if (this.points < 0) {\r\n            this.points = 0;\r\n        }\r\n        console.debug(\"RATING: subtract 100 points for RECYCLE\");\r\n    }\r\n\r\n    registerUncover(card) {\r\n        this.moves.push({ source: null, target: null, card: card });\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n        return true;\r\n    }\r\n\r\n    rateMove(move) {\r\n        const sourceIsTableau = move.source.substr(0, 7) == \"tableau\";\r\n        const targetIsTableau = move.target.substr(0, 7) == \"tableau\";\r\n        const sourceIsFoundation = move.source.substr(0, 10) == \"foundation\";\r\n        const targetIsFoundation = move.target.substr(0, 10) == \"foundation\";\r\n        if (sourceIsTableau) {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (sourceIsFoundation) {\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n        console.debug(\"tried to rate move\", move);\r\n\r\n        return 0;\r\n    }\r\n}\r\n","export default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n    }\r\n\r\n    pickUp(stack, source) {\r\n        if (stack) {\r\n            this.stack = stack;\r\n            this.source = source;\r\n        }\r\n\r\n        return stack;\r\n    }\r\n\r\n    putDown() {\r\n        const cards = [...this.stack];\r\n        this.stack = [];\r\n        this.source = null;\r\n        return cards;\r\n    }\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    isHoldingKing = () => this.currentCard() && this.currentCard().face == \"K\";\r\n\r\n    isCurrentCard = (card) => card && this.currentCard() == card;\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    containsCurrentCard = (stack) => stack && stack.indexOf(this.currentCard()) !== -1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n}\r\n","export default class StackHolder {\r\n    constructor(stack) {\r\n        this.stack = [...stack];\r\n    }\r\n\r\n    getTop() {\r\n        return this.stack[this.stack.length - 1];\r\n    }\r\n}","import CardTools from \"../Deck/CardTools\";\r\nimport StackHolder from \"./StackHolder\";\r\n\r\nexport default class Stock extends StackHolder {\r\n    recycle(waste) {\r\n        if (waste.length) {\r\n            this.stack = [...waste].reverse().map((element) => {\r\n                return { ...element, isHidden: true };\r\n            });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isOnTop(card) {\r\n        return CardTools.cardEquals(card, this.getTop());\r\n    }\r\n}\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import { CardRange } from \"../Deck/CardRange\";\r\nimport CardTools from \"../Deck/CardTools\";\r\nimport MultiStackHolder from \"./MultiStackHolder\";\r\n\r\nexport default class Tableau extends MultiStackHolder {\r\n    getStack = (index) => {\r\n        return this.stacks[index];\r\n    };\r\n\r\n    accepts = (index, current) => {\r\n        const top = this.getTop(index);\r\n        const range = [...CardRange];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color != top.type.color;\r\n    };\r\n\r\n    popWithFollowing = (card, i) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && CardTools.cardEquals(this.stacks[i].stack[j], card)) {\r\n                return this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index, card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && CardTools.cardEquals(card, this.getTop(index))) {\r\n            top.isHidden = false;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        //@todo unify allocation of source\r\n        const mapper = (c) => {\r\n            c.source = \"tableau-\" + index;\r\n            return c;\r\n        };\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map(mapper));\r\n    };\r\n}\r\n","import CardTools from \"../Deck/CardTools\";\r\nimport StackHolder from \"./StackHolder\";\r\n\r\nexport default class Waste extends StackHolder {\r\n    constructor() {\r\n        super([]);\r\n    }\r\n\r\n    tryPutDown(card) {\r\n        return this.canAdd(card) && (this.add(card) || true);\r\n    }\r\n\r\n    add(card) {\r\n        if (card) {\r\n            card.source = \"waste\";\r\n            card.isHidden = false;\r\n            this.stack.push(card);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    canAdd(card) {\r\n        const top = this.getTop();\r\n        return card && (!top || CardTools.cardNotEquals(card, top));\r\n    }\r\n\r\n    popTop(card) {\r\n        if (CardTools.cardEquals(card, this.getTop())) {\r\n            return this.stack.pop();\r\n        }\r\n    }\r\n\r\n    recycle() {\r\n        const ret = [...this.stack];\r\n        this.stack = [];\r\n        return ret;\r\n    }\r\n}\r\n","import { CardRange, getTargetOrder } from \"./Deck/CardRange\";\r\n\r\nimport Deck from \"./Deck/Deck\";\r\nimport Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Suits from \"./Deck/Suits\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Factory {\r\n    static getInitialState = (deck) => ({\r\n        stock: new Stock([...deck.cards.slice(28)]),\r\n        waste: new Waste(),\r\n        foundation: Factory.generateFoundations(),\r\n        tableau: Factory.generateTableau([...deck.cards.slice(0, 28)]),\r\n        hand: new Hand(),\r\n        game: new Game(),\r\n    });\r\n\r\n    static generateDeck() {\r\n        const deck = [];\r\n        const keys = Object.keys(Suits);\r\n        for (let i = 0; i < CardRange.length; i++) {\r\n            for (let j = 0; j < keys.length; j++) {\r\n                const suit = Suits[keys[j]];\r\n                deck.push({\r\n                    face: CardRange[i],\r\n                    type: suit,\r\n                    isHidden: true,\r\n                });\r\n            }\r\n        }\r\n        return new Deck(deck);\r\n    }\r\n\r\n    static generateFoundations() {\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getTargetOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n        });\r\n        return new Foundation(\r\n            Object.keys(Suits)\r\n                .map((key) => Suits[key])\r\n                .map((suit) => ({ ...template(), ...suit }))\r\n        );\r\n    }\r\n\r\n    static generateTableau(cards) {\r\n        return new Tableau(new TableauGenerator().getStacks(cards));\r\n    }\r\n}\r\n\r\nclass TableauGenerator {\r\n    getStacks = (deck) => {\r\n        this.deck = deck;\r\n        this.pointer = 0;\r\n        this.oldpointer = this.pointer;\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        const template = (id) => ({\r\n            stack: [],\r\n            id,\r\n        });\r\n        this.stacks = ids.map((id) => template(id));\r\n        ids.reverse().forEach((id) => {\r\n            this.generateStack(id);\r\n        });\r\n        return this.stacks;\r\n    };\r\n\r\n    generateStack = (id) => {\r\n        this.pointer += 6 - id + 1;\r\n        this.stacks[id].stack = this.deck\r\n            .slice(this.oldpointer, this.pointer)\r\n            .map((c) => ({\r\n                ...c,\r\n                isHidden: true,\r\n                source: \"tableau-\" + id,\r\n            }))\r\n            .reverse();\r\n        if (this.stacks[id].stack[this.stacks[id].stack.length - 1]) {\r\n            this.stacks[id].stack[this.stacks[id].stack.length - 1].isHidden = false;\r\n        }\r\n        this.oldpointer = this.pointer;\r\n    };\r\n\r\n    getRndInteger = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    };\r\n}\r\n","export default class Service {\r\n    constructor(stateholder) {\r\n        this._setState = (a, b) =>\r\n            stateholder.setState((state) => {\r\n                a(state);\r\n                return { ...state };\r\n            }, b);\r\n    }\r\n\r\n    dispatchPutDown = (card, index) => {\r\n        this._setState((state) => {\r\n            if (state.hand.isHoldingCard()) {\r\n                this._dispatchPutDown(card, state, index);\r\n            } else {\r\n                console.debug(\"partially avoided double execution putdown (thx 2 strict mode)\");\r\n            }\r\n        });\r\n    };\r\n\r\n    dispatchPickup = (card, index) => {\r\n        this._setState((state) => {\r\n            if (!state.hand.isHoldingCard()) {\r\n                this._dispatchPickup(card, state, index);\r\n            } else {\r\n                console.debug(\"partially avoided double execution pickup (thx 2 strict mode)\");\r\n            }\r\n        });\r\n    };\r\n\r\n    _blink = (selector, state) => this.startBlink(selector, 10, state);\r\n\r\n    startBlink = (selector, blinkFor, state) => {\r\n        selector(state).blinkFor = blinkFor;\r\n        selector(state).unblink = () => setTimeout(() => this.toggleBlink(selector, 0), 100);\r\n    };\r\n    \r\n    toggleBlink = (selector, blinkFor) =>\r\n        this._setState((state) => {\r\n            selector(state).blinkFor = blinkFor;\r\n        });\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Foundation extends Service {\r\n    _dispatchPutDown = (_card, state, index) => {\r\n        if (!state.hand.hasMoreThanOneCard() && state.foundation.accepts(index, state.hand.currentCard())) {\r\n            state.game.registerMove(\"foundation-\" + index, state.hand.currentCard());\r\n            state.foundation.add(index, state.hand.currentCard());\r\n            state.hand.putDown();\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (_card, state, index) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.foundation.remove(index, card);\r\n            state.hand.pickUp([card], card.source);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryDetectEnd(state) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n\r\n    blink = (index, state) => this._blink((s) => s.foundation.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Stock extends Service {\r\n    _dispatchPutDown = (card, state) => this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, state) => (card ? this.moveToWaste(card, state) : this.recycleWaste(card, state));\r\n\r\n    moveToWaste = (card, state) =>\r\n        state.stock.isOnTop(card) && state.waste.add(state.stock.stack.pop()) && state.game.registerMove(\"stock\", state.waste.getTop());\r\n\r\n    recycleWaste = (_card, state) =>\r\n        !state.stock.getTop() && !!state.waste.getTop() && state.stock.recycle(state.waste.recycle()) && state.game.registerRecycle(state);\r\n\r\n    blink = (_card, state) => this._blink((s) => s.stock, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class TableauStack extends Service {\r\n    _dispatchPutDown = (card, state, index) => {\r\n        if (this.canPutDown(card, state, index)) {\r\n            state.game.registerMove(\"tableau-\" + index, state.hand.currentCard());\r\n            state.tableau.add(index, state.hand.putDown());\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    canPutDown = (card, state, index) =>\r\n        !state.hand.containsCurrentCard(state.tableau.stacks[index].stack) &&\r\n        ((card && state.hand.isFromCurrentSource(card) && card.isHidden) ||\r\n            (card && state.tableau.accepts(index, state.hand.currentCard())) ||\r\n            (!card && (state.hand.isHoldingKing() || state.hand.source == \"tableau-\" + index)));\r\n\r\n    _dispatchPickup = (card, state, index) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source);\r\n        } else if (!card) {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card, index, state) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover(card, state);\r\n\r\n    blink = (index, state) => this._blink((s) => s.tableau.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Waste extends Service {\r\n    _dispatchPutDown = (card, state) =>\r\n        (state.hand.source == \"waste\" &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.game.registerMove(\"waste\", state.hand.currentCard()) &&\r\n            state.hand.putDown()) ||\r\n        this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, state) => (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\")) || this.blink(card, state);\r\n\r\n    blink = (card, state) => this._blink((s) => s.waste, state);\r\n}\r\n","import Factory from \"../Model/Factory\";\r\nimport Foundation from \"./Foundation\";\r\nimport Stock from \"./Stock\";\r\nimport TableauStack from \"./TableauStack\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Facade {\r\n    constructor(stateholder) {\r\n        this.stateholder = stateholder;\r\n        this.deck = Factory.generateDeck();\r\n        this.deck.shuffle();\r\n        this.services = {\r\n            tableauStack: new TableauStack(stateholder),\r\n            foundation: new Foundation(stateholder),\r\n            stock: new Stock(stateholder),\r\n            waste: new Waste(stateholder),\r\n        };\r\n    }\r\n\r\n    getInitialState = () => Factory.getInitialState(this.deck);\r\n\r\n    getHandlers() {\r\n        let handler = \"dispatchPickup\";\r\n        if (this.stateholder.state && this.stateholder.state.hand && this.stateholder.state.hand.isHoldingCard()) {\r\n            handler = \"dispatchPutDown\";\r\n        }\r\n        return {\r\n            clickTableauStack: this.services.tableauStack[handler],\r\n            clickFoundation: this.services.foundation[handler],\r\n            clickStock: this.services.stock[handler],\r\n            clickWaste: this.services.waste[handler],\r\n        };\r\n    }\r\n\r\n    reset = () => {\r\n        this.stateholder.setState(() => ({ ...this.getInitialState() }));\r\n    };\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport TouchAwareComponent from \"./TouchAwareComponent\";\r\n\r\nexport default class MouseHand extends TouchAwareComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.isTouch) {\r\n            const node = this.myRef.current;\r\n            document.addEventListener(\"mousemove\", (e) => {\r\n                const x = e.clientX,\r\n                    y = e.clientY;\r\n                node.style.top = y + 25 +\"px\";\r\n                node.style.left = x + 25 +\"px\";\r\n                node.style.position = \"relative\";\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.isTouch ? null : (\r\n            <div ref={this.myRef}>\r\n                {this.props.stack &&\r\n                    this.props.stack.map((card, index) => (\r\n                        <Card\r\n                            model={card}\r\n                            key={\"H\" + index}\r\n                            onClick={() => {\r\n                                console.error(\"clicked card in mouse hand\");\r\n                            }}\r\n                            offsetTop={index * 20}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} blink={props.model.blinkFor} source=\"main\" onClick={props.onClick} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class TableauStack extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            let i = 0;\r\n            while (i <= index) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n                i++;\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick(null, \"tableau-\" + props.index)} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} blink={props.model.blinkFor} offsetTop={getOffset(index)} onClick={props.onClick} />\r\n                ))}\r\n                <TouchHand\r\n                    parent={\"tableau-\" + props.index}\r\n                    hand={props.hand}\r\n                    offset={getOffset(props.model.stack.length)}\r\n                    onClick={() => props.onClick(props.model.stack[props.model.stack.length - 1])}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} blink={props.model.blinkFor} onClick={(c) => props.onClick(c)} />\r\n                ))}\r\n                <TouchHand parent=\"waste\" hand={props.hand} onClick={(c) => props.onClick(c, \"waste\")} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport { Component } from \"react\";\r\nimport Footer from \"./View/Footer\";\r\nimport Foundation from \"./View/Foundation\";\r\nimport Game from \"./Service/Facade\";\r\nimport Hand from \"./View/MouseHand\";\r\nimport React from \"react\";\r\nimport Stock from \"./View/Stock\";\r\nimport TableauStack from \"./View/TableauStack\";\r\nimport Waste from \"./View/Waste\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.game = new Game(this);\r\n        this.state = this.game.getInitialState();\r\n    }\r\n\r\n    render() {\r\n        const handlers = this.game.getHandlers();\r\n        return (\r\n            <div>\r\n                <Hand stack={this.state.hand.stack} />\r\n                <div className=\"layout-grid-container\">\r\n                    <Stock model={this.state.stock} onClick={handlers.clickStock} />\r\n                    <Waste model={this.state.waste} hand={this.state.hand} onClick={handlers.clickWaste} />\r\n                    <div className=\"spacer\">&nbsp;</div>\r\n                    {this.state.foundation.stacks.map((foundation, index) => (\r\n                        <Foundation\r\n                            key={\"f\" + index}\r\n                            index={index}\r\n                            model={foundation}\r\n                            hand={this.state.hand}\r\n                            onClick={(c) => handlers.clickFoundation(c, index)}\r\n                        />\r\n                    ))}\r\n                    {this.state.tableau.stacks.map((stack, index) => (\r\n                        <TableauStack\r\n                            key={\"t\" + index}\r\n                            index={index}\r\n                            model={stack}\r\n                            hand={this.state.hand}\r\n                            onClick={(card) => handlers.clickTableauStack(card, index)}\r\n                        />\r\n                    ))}\r\n                    <Footer reset={this.game.reset} model={this.state.game} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}