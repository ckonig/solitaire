{"version":3,"sources":["View/GameModes.tsx","View/Context.ts","View/Game/GamePad.js","View/Game/BoardGamePad.js","View/Game/Keyboard.js","View/Game/BoardKeyboard.js","View/Navigator.js","View/PauseContext.tsx","View/Game/BoardNavigator.js","View/Game/Dealer.js","View/Game/BlinkingComponent.js","View/Game/Card.js","View/Game/MouseHand.js","View/Game/TouchHand.js","View/Game/Hand.js","View/Game/StackBase.js","View/Game/Foundation.js","View/UI/Header/Clock.js","View/UI/Header/EndGame.js","View/UI/Header/Hearts.js","View/UI/Header/Hint.js","View/UI/Header/InputMethod.js","View/UI/Header/Pause.js","View/UI/Header/Points.js","View/UI/RestartGame.js","View/UI/Header/ToggleMenu.js","View/UI/Header/Undo.js","View/UI/Header/Header.js","Model/Game/EntropyLevels.js","View/UI/Menu.js","View/UI/PauseScreen.js","View/Game/Stock.js","View/Game/Tableau.js","View/Game/Waste.js","View/Game/Board.js","Business/Blinker.ts","Business/Tableau.ts","Business/Dealer.ts","Business/Dispatcher.ts","Business/Foundation.ts","Model/Deck/Card.js","Model/Game/Focus.js","Model/Game/BasicStack.js","Model/Deck/Suits.js","Model/Deck/DeckSize.js","Model/Game/Foundation.js","Model/Game/Rating.js","Model/Game/TimeMachine.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings/SuggestionModes.ts","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.ts","Model/Game/Waste.js","Model/Model.ts","Business/Navigator.ts","Business/Stock.ts","Business/Waste.ts","Business/Suggestions.ts","Business/BusinessModel.ts","View/UI/EndScreen.js","View/Game/BoardWrap.tsx","Model/Deck/Deck.js","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/Context.ts","View/UI/Menu/MenuButton.js","View/UI/Menu/MenuTitle.js","View/UI/StartScreen/RatingOptions.ts","View/UI/StartScreen/Controls.tsx","View/UI/StartScreen/Navigation.ts","View/UI/StartScreen/Difficulty.tsx","View/UI/StartScreen/QuickStart.tsx","View/UI/StartScreen/Rating.tsx","View/UI/StartScreen/Screen.tsx","View/UI/StartScreen/TouchDetector.js","View/UI/Menu/VerticalMenu.js","App.tsx","index.tsx"],"names":["GameModes","QUICK","key","title","boardMode","autoConfig","CUSTOM","VERSUS","NULL","defaultValue","state","replaceContext","updateContext","updateGameContext","restart","GlobalContext","React","createContext","Provider","GamePad","props","gamepadIndex","onButtonDown","e","console","debug","onLeft","onRight","onUp","onDown","onAction","onCancel","onHint","onUndo","onPause","onMenu","onConnect","onDisconnect","BoardGamePad","useContext","isGamePadDriven","settings","launchSettings","inputMode","isSinglePlayer","gameMode","switchToGamePad","ctx","focus","isKeyBoard","mouseMode","Keyboard","navListener","evtobj","window","event","keyCode","preventDefault","ctrlKey","useEffect","document","addEventListener","removeEventListener","BoardKeyboard","isKeyboardDriven","switchToKeyboard","Navigator","defaultPauseState","started","end","paused","pauses","pauseStartedAt","allowed","isSilent","defaultPauseContext","togglePause","PauseContext","PauseContextProvider","PauseProvider","useState","setPaused","context","isPaused","Date","now","length","getElapsed","padleft","i","msec","reduce","a","b","getElapsedMs","hh","Math","floor","mm","ss","value","children","BoardNavigator","before","x","navigator","currentIndex","y","z","menuToggle","showMenu","modifier","moveLeft","moveRight","moveUp","moveDown","pressCurrent","hand","stack","onClick","isKeyboard","suggestionMode","supportsHints","isTemporary","isVisible","isDisabled","enableHint","_state","previous","game","timemachine","popPreviousState","previousStates","rating","penalize","player","Dealer","timeouts","quickDeal","dealer","isDealt","dealAll","deal","dealt","push","setTimeout","dealOne","forEach","timeout","clearTimeout","BlinkingComponent","selector","this","blinkFor","unblink","Component","contextType","Card","pause","inputEl","useRef","isFocused","hasCard","model","current","card","clientX","clientY","ele","target","className","includes","offsetParent","rect","getBoundingClientRect","position","click","ownerDocument","defaultView","pageXOffset","pageYOffset","element","names","map","id","label","split","source","isHidden","type","icon","face","style","pointerEvents","onFocus","onBlur","zIndex","offsetTop","top","entropyStyle","offsetLeft","left","getCardStyle","ref","hasSuggestion","isSuggested","suggestion","isSelected","blink","canClick","getClassName","disabled","tabIndex","aria-label","MouseHand","onMouseMove","positionFixed","setState","updateDisplay","myRef","createRef","bind","node","parent","putBack","getOffsetTop","index","TouchHand","enableKeyNav","mode","parentModel","_c","p","Hand","getTop","clickEmpty","StackBase","classname","hasStack","suggestions","Foundation","s","foundation","stacks","Stacks","Clock","elapsed","setElapsed","interval","setInterval","clearInterval","EndGame","Hearts","recyclingMode","passes","createString","Array","from","keys","join","stock","getHearts","Hint","InputMethod","Pause","Points","points","RestartGame","ToggleMenu","menu","Undo","pow","multiplicator","Header","EntropyLevels","Menu","onChange","sm","setSuggestionMode","hintPenalty","suggestionModes","mouseModes","lvl","setEntropy","baseEntropy","entropyLevel","interactionEntropy","PauseScreen","globalCtx","remaining","announcement","_toggle","Renderer","InnerRenderer","usePrevious","speed","waste","isFromWaste","putDownHand","addAll","popTop","canRecycle","recycle","Stock","Tableau","tableau","getOffset","Waste","drawMode","isHoldingCard","additionalOffset","Board","Blinker","startBlink","registerBlink","stopBlink","dispatchPutDown","wouldAcceptHand","src","registerMove","dispatchPickup","pickUp","popWithFollowing","registerPickup","TableauHidden","tryUncover","uncover","registerUncover","dealingAt","callback","newCard","popOne","isFirst","Dispatcher","clickHandler","getHandler","tryDetectEnd","_card","getPreviousUsed","remove","countCards","isEnded","causeEntropy","level","random","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","Focus","validSettings","keyboard","setCard","unsetCard","unsetStack","setStack","BasicStack","getClickable","filter","HandHoldingStack","getHandContent","Suits","heart","color","club","diamond","spade","DeckSize","setOnClick","sindex","getCurrentAccepted","currentFoundation","acceptedCards","hasMoreThanOneCard","accepts","currentCard","add","putDown","currentAccepted","usedCards","pop","f","parseInt","template","slice","reverse","Object","suit","origStack","Rating","currentMove","rateMove","registerRecycle","undoPenalty","penalty","registerHint","done","getTimePenalty","start","secondsToFinish","trunc","getBonusPoints","round","getTotal","on","missPenalty","move","isTableau","obj","substr","isFoundation","TimeMachine","memorable","modified","pushPreviousState","modelEquals","isRequested","popPrevious","stackEquals","every","stacksEqual","Game","disableHint","c","splice","_onClick","isHoldingKing","isFromCurrentSource","isFromFoundation","isFromTableau","isFromAnyTableau","substring","getTableauIndex","SuggestionMode","next","SuggestionModes","NONE","SCORED","REGULAR","FULL","ONCE","TWICE","raw","get","all","allSuggestionModes","default","getHintMode","Settings","hintMode","setCardProperties","recyclings","isOnTop","result","TableauStack","onClickhidden","canUncover","getStack","canPutDown","range","indexOf","getCard","j","stackEntropy","entropy","concat","offset","canAdd","Model","getInitialState","deck","rows","getZindex","elem","targets","update","pos","row","finishNav","valid","direction","undefined","toggleRow","clickable","pickLast","last","_position","moveToWaste","recycleWaste","Suggestions","evaluateOptions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","isMoveOfKingBetweenEmptySlots","isMoveBetweenSimilarParentCards","isNotLoop","foundAny","wasteState","BusinessModel","cardIndex","tableauState","filtered","_stack","disableSuggestion","suggestor","withSuggestions","withHandlers","EndScreen","BoardWrap","render","Deck","deckSize","flat","shuffleArray","array","DifficultyOptions","lines","StartScreenContext","difficultySettings","ratingPreset","ratingSettings","entropySettings","screen","MenuButton","active","toggled","MenuTitle","RatingPresets","timedMode","matchPreset","filterd","preset","s1","s2","Controls","head","ScreenButton","ScreenRow","buttons","mapOption","option","getDifficultyRows","Difficulty","getButtonClass","hasFocus","name","button","bi","line","optimizeOptions","getSettingRows","QuickStart","toggle","setToggle","lindex","getRatingRows","setContext","customizeRating","r","String","href","rel","ri","Screen","mainMenu","getScreen","TouchDetector","prefixes","DocumentTouch","query","matchMedia","matches","error","VerticalMenu","Button","isRoot","MenuLeafButton","updateMap","MenuNodeButton","child","MenuSectionButton","currentGameMode","toggleMainMenu","MenuPageButton","setScreen","MenuRootButton","escape","withMap","Error","action","ScreenNavigator","getRows","getRow","MenuStartButton","getTitle","App","setStarted","defaultState","initialized","appState","setAppState","setMainMenu","val","shuffle","board","switchToScreen","switchToMenu","getNavigator","assignState","currentButton","getPos","ButtonRenderer","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0a0c1937.chunk.js","sourcesContent":["export interface GameMode {\r\n    key: string;\r\n    title: string;\r\n    boardMode: string;\r\n    autoConfig: boolean;\r\n}\r\n\r\nexport default class GameModes {\r\n    static QUICK: GameMode = {\r\n        key: \"QUICK\",\r\n        title: \"Quick Game\",\r\n        boardMode: \"singleplayer\",\r\n        autoConfig: true,\r\n    };\r\n    static CUSTOM: GameMode = {\r\n        key: \"CUSTOM\",\r\n        title: \"Custom Game\",\r\n        boardMode: \"singleplayer\",\r\n        autoConfig: false,\r\n    };\r\n    static VERSUS: GameMode = {\r\n        key: \"VERSUS\",\r\n        title: \"Versus\",\r\n        boardMode: \"splitscreen\",\r\n        autoConfig: false,\r\n    };\r\n    static NULL: GameMode = {\r\n        key: \"\",\r\n        title: \"\",\r\n        boardMode: \"\",\r\n        autoConfig: false,\r\n    };\r\n}\r\n","import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\r\n\r\nimport BusinessModel from \"../Business/BusinessModel\";\r\nimport React from \"react\";\r\n\r\ninterface IGlobalContext {\r\n    state: BusinessModel | null;\r\n    replaceContext: StateReplaceFunction;\r\n    updateContext: StateUpdateFunction;\r\n    updateGameContext: StateUpdateFunction;\r\n    restart: () => void;\r\n}\r\n\r\nconst defaultValue = {\r\n    state: null,\r\n    replaceContext: () => {},\r\n    updateContext: () => {},\r\n    updateGameContext: () => {},\r\n    restart: () => {},\r\n};\r\n\r\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\r\n\r\nexport const Provider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n","import React from \"react\";\r\nimport ReactGamePad from \"react-gamepad\";\r\n\r\nconst GamePad = (props) => {\r\n    const buttonHandler = (e) => {\r\n        console.debug(e);\r\n        if (e == \"DPadLeft\") {\r\n            props.onLeft && props.onLeft();\r\n        }\r\n        if (e == \"DPadRight\") {\r\n            props.onRight && props.onRight();\r\n        }\r\n        if (e == \"DPadUp\") {\r\n            props.onUp && props.onUp();\r\n        }\r\n        if (e == \"DPadDown\") {\r\n            props.onDown && props.onDown();\r\n        }\r\n        if (e == \"A\") {\r\n            props.onAction && props.onAction();\r\n        }\r\n        if (e == \"B\") {\r\n            props.onCancel && props.onCancel();\r\n        }\r\n        if (e == \"X\") {\r\n            props.onHint && props.onHint();\r\n        }\r\n        if (e == \"Y\") {\r\n            props.onUndo && props.onUndo();\r\n        }\r\n        if (e == \"Start\") {\r\n            props.onPause && props.onPause();\r\n        }\r\n        if (e == \"Back\") {\r\n            props.onPause && props.onMenu();\r\n        }\r\n    };\r\n    const connectHandler = (e) => {\r\n        console.debug(\"connected\", e);\r\n    };\r\n    const disconnectHandler = (e) => {\r\n        console.debug(\"disconnected\", e);\r\n    };\r\n\r\n    //@todo pick ID of gamepad dynamically\r\n    //allow switching PS4 and XBOX layouts\r\n    //also support splitscreen battle mode\r\n    return (\r\n        <ReactGamePad gamepadIndex={props.gamepadIndex} onButtonDown={buttonHandler} onConnect={connectHandler} onDisconnect={disconnectHandler}>\r\n            <span></span>\r\n        </ReactGamePad>\r\n    );\r\n};\r\n\r\nexport default GamePad;\r\n","import GamePad from \"./GamePad\";\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst BoardGamePad = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const isGamePadDriven = state.settings.launchSettings.inputMode == \"gamepad\";\r\n    const isSinglePlayer = state.settings.launchSettings.gameMode === \"singleplayer\";\r\n    const switchToGamePad = (ctx) => {\r\n        ctx.focus.isKeyBoard(true);\r\n        if (isSinglePlayer) {\r\n            ctx.settings.mouseMode = \"remain-on-stack\";\r\n            ctx.settings.launchSettings.inputMode = \"gamepad\";\r\n        }\r\n    };\r\n\r\n    //@todo pick ID of gamepad dynamically\r\n    //allow switching PS4 and XBOX layouts\r\n    //also support splitscreen battle mode\r\n    return isSinglePlayer || isGamePadDriven ? (\r\n        <GamePad\r\n            gamepadIndex={0}\r\n            onLeft={() => props.onLeft && props.onLeft(switchToGamePad)}\r\n            onRight={() => props.onRight && props.onRight(switchToGamePad)}\r\n            onUp={() => props.onUp && props.onUp(switchToGamePad)}\r\n            onDown={() => props.onDown && props.onDown(switchToGamePad)}\r\n            onAction={() => props.onAction && props.onAction(switchToGamePad)}\r\n            onCancel={() => props.onCancel && props.onCancel(switchToGamePad)}\r\n            onHint={() => props.onHint && props.onHint(switchToGamePad)}\r\n            onUndo={() => props.onUndo && props.onUndo()}\r\n            onPause={() => props.onPause && props.onPause(switchToGamePad)}\r\n            onMenu={() => props.onPause && props.onMenu(switchToGamePad)}\r\n            \r\n        >\r\n            <span></span>\r\n        </GamePad>\r\n    ) : null;\r\n};\r\n\r\nexport default BoardGamePad;\r\n","import React from \"react\";\r\n\r\nconst Keyboard = (props) => {\r\n    const navListener = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27) {\r\n            props.onCancel && props.onCancel();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 37) {\r\n            props.onLeft && props.onLeft();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 39) {\r\n            props.onRight && props.onRight();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 38) {\r\n            props.onUp && props.onUp();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 40) {\r\n            props.onDown && props.onDown();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 96) {\r\n            props.onAction && props.onAction();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 90 && evtobj.ctrlKey) {\r\n            props.onUndo && props.onUndo();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 72) {\r\n            props.onHint && props.onHint();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 80) {\r\n            props.onPause && props.onPause();\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 77) {\r\n            props.onPause && props.onMenu();\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", navListener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", navListener);\r\n        };\r\n    }, [props]);\r\n    return null;\r\n};\r\nexport default Keyboard;\r\n","import GlobalContext from \"../Context\";\r\nimport Keyboard from \"./Keyboard\";\r\nimport React from \"react\";\r\n\r\nconst BoardKeyboard = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const isKeyboardDriven = state.settings.launchSettings.inputMode === \"keyboard\";\r\n    const isSinglePlayer = state.settings.launchSettings.gameMode === \"singleplayer\";\r\n\r\n    const switchToKeyboard = (ctx) => {\r\n        ctx.focus.isKeyBoard(true);\r\n        if (isSinglePlayer) {\r\n            ctx.settings.mouseMode = \"remain-on-stack\";\r\n            ctx.settings.launchSettings.inputMode = \"keyboard\";\r\n        }\r\n    };\r\n\r\n    return isKeyboardDriven || isSinglePlayer ? (\r\n        <Keyboard\r\n            onLeft={() => props.onLeft && props.onLeft(switchToKeyboard)}\r\n            onRight={() => props.onRight && props.onRight(switchToKeyboard)}\r\n            onUp={() => props.onUp && props.onUp(switchToKeyboard)}\r\n            onDown={() => props.onDown && props.onDown(switchToKeyboard)}\r\n            onAction={() => props.onAction && props.onAction(switchToKeyboard)}\r\n            onCancel={() => props.onCancel && props.onCancel(switchToKeyboard)}\r\n            onHint={() => props.onHint && props.onHint(switchToKeyboard)}\r\n            onUndo={() => props.onUndo && props.onUndo()}\r\n            onPause={() => props.onPause && props.onPause(switchToKeyboard)}\r\n            onMenu={() => props.onMenu && props.onMenu(switchToKeyboard)}\r\n        />\r\n    ) : null;\r\n};\r\n\r\nexport default BoardKeyboard;\r\n","import BoardGamePad from \"./Game/BoardGamePad\";\r\nimport BoardKeyboard from \"./Game/BoardKeyboard\";\r\nimport React from \"react\";\r\n\r\nconst Navigator = (props) => {\r\n    return (\r\n        <>\r\n            <BoardKeyboard\r\n                onLeft={props.onLeft}\r\n                onRight={props.onRight}\r\n                onUp={props.onUp}\r\n                onDown={props.onDown}\r\n                onAction={props.onAction}\r\n                onCancel={props.onCancel}\r\n                onHint={props.onHint}\r\n                onUndo={props.onUndo}\r\n                onPause={props.onPause}\r\n                onMenu={props.onMenu}\r\n            />\r\n            <BoardGamePad\r\n                onLeft={props.onLeft}\r\n                onRight={props.onRight}\r\n                onUp={props.onUp}\r\n                onDown={props.onDown}\r\n                onAction={props.onAction}\r\n                onCancel={props.onCancel}\r\n                onHint={props.onHint}\r\n                onUndo={props.onUndo}\r\n                onPause={props.onPause}\r\n                onMenu={props.onMenu}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\r\n\r\nexport interface IPauseState {\r\n    started: number;\r\n    end: number;\r\n    paused: boolean;\r\n    pauses: number[];\r\n    pauseStartedAt: number;\r\n    allowed: number;\r\n    isSilent: string;\r\n}\r\nexport interface IPauseContext {\r\n    state: IPauseState;\r\n    togglePause: (isPaused: boolean) => void;\r\n}\r\nexport const defaultPauseState = { started: 0, end: 0, paused: false, pauses: [], pauseStartedAt: 0, allowed: 5, isSilent: \"\" };\r\nexport const defaultPauseContext = {\r\n    state: defaultPauseState,\r\n    togglePause: () => {},\r\n};\r\n\r\nconst PauseContext = React.createContext<IPauseContext>(defaultPauseContext);\r\nconst PauseContextProvider = PauseContext.Provider;\r\n\r\nexport const PauseProvider = (props: any) => {\r\n    const [paused, setPaused] = React.useState<IPauseState>({ ...defaultPauseState });\r\n    const getElapsedMs = () => {\r\n        const pauses = paused.pauses.reduce((a, b) => a + b, 0);\r\n        return (paused.end || paused.pauseStartedAt || Date.now()) - props.started - pauses;\r\n    };\r\n\r\n    const getElapsed = () => {\r\n        const padleft = (i: number) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = getElapsedMs();\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n    const togglePause = (isPaused: boolean, isSilent?: string) => {\r\n        if (paused.paused == isPaused) {\r\n            if (paused.paused) {\r\n                setPaused({\r\n                    ...paused,\r\n                    pauses: [...paused.pauses, Date.now() - paused.pauseStartedAt],\r\n                    pauseStartedAt: 0,\r\n                    paused: false,\r\n                    isSilent: isSilent ? isSilent : \"\",\r\n                });\r\n            } else if (paused.pauses.length < paused.allowed) {\r\n                setPaused({\r\n                    ...paused,\r\n                    pauseStartedAt: Date.now(),\r\n                    paused: true,\r\n                    isSilent: isSilent ? isSilent : \"\",\r\n                });\r\n            }\r\n        }\r\n    };\r\n    const context = {\r\n        state: { ...paused, started: props.started },\r\n        togglePause,\r\n        getElapsed,\r\n    };\r\n\r\n    return <PauseContextProvider value={context}>{props.children}</PauseContextProvider>;\r\n};\r\n\r\nexport default PauseContext;\r\n","import GlobalContext from \"../Context\";\r\nimport Navigator from \"../Navigator\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst BoardNavigator = () => {\r\n    const { state, updateContext, updateGameContext, replaceContext } = React.useContext(GlobalContext);\r\n    const paused = React.useContext(PauseContext);\r\n    const before = { x: state.navigator.currentIndex.x, y: state.navigator.currentIndex.y, z: state.navigator.currentIndex.z };\r\n    const isPaused = !!paused.state.paused;\r\n\r\n    const onLeft = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveLeft(before);\r\n        });\r\n\r\n    const onRight = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveRight(before);\r\n        });\r\n\r\n    const onUp = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveUp(before);\r\n        });\r\n\r\n    const onDown = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveDown(before);\r\n        });\r\n\r\n    const onAction = (modifier) =>\r\n        updateGameContext((ctx) => {\r\n            modifier(ctx);\r\n            state.navigator.pressCurrent()(ctx);\r\n        });\r\n\r\n    const onCancel = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.hand.stack.length && ctx.hand.stack[0].onClick({ isKeyboard: true })(ctx);\r\n        });\r\n\r\n    const onPause = () => paused.togglePause(isPaused);\r\n\r\n    const isVisible = (state) => state.settings.suggestionMode.supportsHints || state.settings.suggestionMode.isTemporary;\r\n    const isDisabled = (state) => state.settings.suggestionMode.isTemporary;\r\n\r\n    const onHint = (modifier) => {\r\n        updateContext((state) => {\r\n            modifier(state);\r\n            if (isVisible(state) && !isDisabled(state)) {\r\n                state.settings.enableHint();\r\n            }\r\n        });\r\n    };\r\n\r\n    const onUndo = () => {\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n    };\r\n    const menuToggle = state.settings.showMenu;\r\n    const onMenu = (modifier) => {\r\n        updateContext((state) => {\r\n            modifier(state);\r\n            state.settings.showMenu = !menuToggle;\r\n        });\r\n        paused.togglePause(!state.settings.showMenu, state.player);\r\n    };\r\n\r\n    return isPaused ? null : (\r\n        <Navigator\r\n            onLeft={onLeft}\r\n            onRight={onRight}\r\n            onUp={onUp}\r\n            onDown={onDown}\r\n            onAction={onAction}\r\n            onCancel={onCancel}\r\n            onHint={onHint}\r\n            onUndo={onUndo}\r\n            onPause={onPause}\r\n            onMenu={onMenu}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BoardNavigator;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Dealer = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const timeouts = [];\r\n\r\n    //@todo implement launch setting UI for quick dealing\r\n    if (state.settings.launchSettings.quickDeal) {\r\n        if (state && state.dealer && !state.dealer.isDealt) {\r\n            replaceContext(state.dealer.dealAll(state));\r\n        }\r\n    } else {\r\n        const deal = (dealt) => {\r\n            timeouts.push(\r\n                setTimeout(() => {\r\n                    if (state && state.dealer && !state.dealer.isDealt) {\r\n                        replaceContext(state.dealer.dealOne(dealt, deal));\r\n                    }\r\n                }, 35)\r\n            );\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            deal(state.dealer.dealt);\r\n            return () =>\r\n                timeouts.forEach((timeout) => {\r\n                    clearTimeout(timeout);\r\n                });\r\n        }, []);\r\n        React.useEffect(() => {\r\n            \r\n        }, [state.dealer.isDealt]);\r\n    }\r\n    return null;\r\n};\r\nexport default Dealer;\r\n","import { Component } from \"react\";\r\nimport GlobalContext from \"../Context\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    constructor(selector) {\r\n        super();\r\n        this.timeout = null;\r\n        this.selector = selector;\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    componentDidUpdate() {\r\n        if (this.selector(this.context.state).blinkFor) {\r\n            this.timeout = setTimeout(\r\n                () =>\r\n                    this.context.updateGameContext((state) => {\r\n                        this.selector(state).unblink(state);\r\n                    }),\r\n                200\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const { state, updateGameContext } = React.useContext(GlobalContext);\r\n    const pause = React.useContext(PauseContext);\r\n    const inputEl = React.useRef(null);\r\n    const isFocused = state.focus.hasCard(props.model);\r\n    React.useEffect(() => {\r\n        if (isFocused && state.settings.launchSettings.gameMode == \"singleplayer\") {\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    }, [isFocused, state.focus.card]);\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        const isKeyBoard = e.clientX == 0 && e.clientY == 0;\r\n        let ele = e.target;\r\n\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            isKeyBoard,\r\n            click: {\r\n                x: e.clientX - ele.ownerDocument.defaultView.pageXOffset,\r\n                y: e.clientY - ele.ownerDocument.defaultView.pageYOffset,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n        const isSinglePlayer = state.settings.launchSettings.gameMode === \"singleplayer\";\r\n        //@todo A11Y allow keyboard actions in singleplayer\r\n        if (props.model.onClick && !position.isKeyBoard) {\r\n            updateGameContext((context) => {\r\n                props.model.onClick(position)(context);\r\n                if (isSinglePlayer) {\r\n                    context.settings.launchSettings.inputMode = \"mouse\";\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const getClassName = () => {\r\n        const hasSuggestion = props.isSuggested || props.model.suggestion;\r\n        let className = `card card-base suit-${props.model.type.icon}`;\r\n        className += !props.isSelected && !isFocused && !hasSuggestion ? ` card-stack-${props.model.source}` : \"\";\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        className += props.model.canClick() ? \" clickable\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack (preview what happens if picked up)\r\n        className += hasSuggestion && !isFocused ? \" card-suggested\" : \"\";\r\n        className += isFocused ? \" card-focused\" : \"\";\r\n        return className;\r\n    };\r\n\r\n    const getCardStyle = () => {\r\n        const style = {\r\n            zIndex: (props.zIndex ? props.zIndex : !!props.offsetTop * 20)+1,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };\r\n\r\n        //move to left on waste (triple draw)\r\n        if (props.offsetLeft) {\r\n            style.left = props.offsetLeft * 4 + \"vw\";\r\n        }\r\n\r\n        if (!props.model.onClick) {\r\n            style.pointerEvents = \"none\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    const getStackbaseStyle = () => {\r\n        if (!props.model.onClick) {\r\n            return { pointerEvents: \"none\" };\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    const names = [0, 1, 2, 3, 4, 5, 6].map((id) => \" stack \" + (id + 1));\r\n    let label = \"\";\r\n    const split = props.model.source.split(\"-\");\r\n    label += split[0];\r\n    if (split.length > 1) {\r\n        label += names[split[1]]\r\n    }\r\n    label += \": \"\r\n\r\n    label += props.model.isHidden ? \"hidden card\" : props.model.type.icon + props.model.face;\r\n\r\n    // @todo 3d flip https://3dtransforms.desandro.com/card-flip on unhide\r\n    // https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n\r\n    return (\r\n        <div style={getStackbaseStyle()} className=\"stack-base\">\r\n            <button\r\n                onFocus={() => {\r\n                    // updateContext((ctx) => {\r\n                    //     ctx.navigator.update(props.model.source, props.model);\r\n                    // });\r\n                }}\r\n                onBlur={() => {\r\n                    //updateContext((ctx) => ctx.focus.unsetCard(props.model));\r\n                }}\r\n                style={getCardStyle()}\r\n                ref={inputEl}\r\n                className={getClassName()}\r\n                onClick={onClick ? onClick : null}\r\n                disabled={!props.model.canClick() || pause.state.paused}\r\n                tabIndex={props.model.canClick() ? 0 : -1}\r\n                aria-label={label}\r\n                title={label}\r\n            >\r\n                <div className=\"card-content\">\r\n                    {props.model.isHidden || pause.state.paused ? (\r\n                        <div className=\"card-back\">&nbsp;</div>\r\n                    ) : (\r\n                        <div className=\"card-grid-container\">\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-left\">{props.model.face}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                            <div className=\"mainface\">\r\n                                <div className=\"align-center\">{props.model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-right\">{props.model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source)\r\n            this.props.putBack(null, { isKeyboard: false });\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card key={index} model={card} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    enableKeyNav = (context, mode) => {\r\n        const isSinglePlayer = context.settings.launchSettings.gameMode === \"singleplayer\";\r\n        context.focus.isKeyBoard(true);\r\n        if (isSinglePlayer) {\r\n            context.settings.mouseMode = \"remain-on-stack\";\r\n            context.settings.launchSettings.inputMode = mode;\r\n        }\r\n    };\r\n   \r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parentModel.source !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {[\r\n                    this.props.hand &&\r\n                        this.props.hand.stack &&\r\n                        this.props.hand.stack.map((card, index) => (\r\n                            <Card\r\n                                key={index}\r\n                                model={card}\r\n                                offsetTop={this.props.offsetTop + index * 24}\r\n                                offsetLeft={this.props.offsetLeft}\r\n                                zIndex={1000 + index * 20}\r\n                                isSelected={true}\r\n                                onClick={(_c, p) => this.props.onClick(p)}\r\n                            />\r\n                        )),\r\n                ]}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    const { state, updateGameContext } = React.useContext(GlobalContext);\r\n    if (!state.hand || props.parentModel.source !== state.hand.source) {\r\n        return null;\r\n    }\r\n    const putBack = (p) => {\r\n        if (props.parentModel.stack.length) {\r\n            updateGameContext(props.parentModel.getTop().onClick(p));\r\n        } else {\r\n            updateGameContext(props.parentModel.clickEmpty(p));\r\n        }\r\n    };\r\n    if (state.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parentModel.source} hand={state.hand} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (state.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <>\r\n                <TouchHand\r\n                    parentModel={props.parentModel}\r\n                    hand={state.hand}\r\n                    offsetTop={props.offsetTop}\r\n                    offsetLeft={props.offsetLeft}\r\n                />\r\n            </>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base socket\";\r\n    const inputEl = React.useRef(null);\r\n    const { state, updateGameContext } = React.useContext(GlobalContext);\r\n    React.useEffect(() => {\r\n        if (state.focus.hasStack(props.model.parent) && state.settings.launchSettings.gameMode == \"singleplayer\") {\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    });\r\n    if (!props.model.stack.length) {\r\n        if (props.model.blinkFor) {\r\n            classname += \" socket-blink\";\r\n        } else if (state.focus.hasStack(props.model.source)) {\r\n            classname += \" socket-focused\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n\r\n    if (props.model.suggestions && !props.model.stack.length) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        const isKeyBoard = e.clientX == 0 && e.clientY == 0;\r\n        if (!isKeyBoard) {\r\n            updateGameContext(props.model.clickEmpty({ isKeyBoard }));\r\n        }\r\n    };\r\n\r\n    const names = [0, 1, 2, 3, 4, 5, 6].map((id) => \" stack \" + (id + 1));\r\n    let label = \"\";\r\n    const split = props.model.source.split(\"-\");\r\n    label += split[0];\r\n    if (split.length > 1) {\r\n        label += names[split[1]]\r\n    }\r\n    label += \": empty socket\"\r\n\r\n    return (\r\n        <button\r\n            onFocus={() => {\r\n                // updateContext((ctx) => {\r\n                //     ctx.navigator.update(props.model.parent);\r\n                // });\r\n            }}\r\n            onBlur={() => {\r\n                // updateContext((ctx) => ctx.focus.unsetStack(props.model.parent));\r\n            }}\r\n            ref={inputEl}\r\n            className={classname}\r\n            onClick={onClick}\r\n            disabled={props.model.stack.length}\r\n            tabIndex={!props.model.stack.length ? 0 : -1}\r\n            aria-label={label}\r\n            title={label}\r\n\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.foundation.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state } = React.useContext(GlobalContext);\r\n        return state.foundation.stacks.map((foundation, index) => <Foundation key={index} model={foundation} index={index} />);\r\n    };\r\n\r\n    render() {\r\n        const model = this.props.model;\r\n        return (\r\n            <div className=\"board-field\" key={this.props.index}>\r\n                <StackBase model={model}>\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                parentModel={model}\r\n                    //onClick={(c, p) => onClick(model.stack[model.stack.length - 1], p, this.props.index)}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import PauseContext from \"../../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst Clock = () => {\r\n    const { state, getElapsed } = React.useContext(PauseContext);\r\n    const [elapsed, setElapsed] = React.useState(0);\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (state.started && !state.paused) {\r\n                setElapsed(getElapsed());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [state.started, state.paused]);\r\n\r\n    return !state.started || elapsed <= 0 ? null : (\r\n        <div className=\"header-clock\">\r\n            <div className=\"icon-container\">🕒</div>\r\n            {elapsed}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndGame = () => {\r\n    const { restart } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"End Game\" onClick={restart}>\r\n                🗑️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default EndGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hearts = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const getHearts = () => {\r\n        if (state.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            return state.game.passes > 0 ? \"❤️\" : \"💔\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            const createString = (length, icon) =>\r\n                Array.from(new Array(length).keys())\r\n                    .map(() => icon)\r\n                    .join(\"\");\r\n\r\n            return createString(state.stock.passes, \"❤️\") + createString(3 - state.stock.passes, \"💔\");\r\n        }\r\n        return null;\r\n    };\r\n    return <div className=\"heart-container\">{getHearts()}</div>;\r\n};\r\nexport default Hearts;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hint = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    const isVisible = (state) => state.settings.suggestionMode.supportsHints || state.settings.suggestionMode.isTemporary;\r\n    const isDisabled = (state) => state.settings.suggestionMode.isTemporary;\r\n\r\n    const suggestOnce = () => {\r\n        updateContext((state) => {\r\n            if (isVisible(state) && !isDisabled(state)) {\r\n                state.settings.enableHint();\r\n            }\r\n        });\r\n    };\r\n\r\n    return !isVisible(state) ? null : (\r\n        <div>\r\n            <button title=\"Hint\" onClick={() => suggestOnce()} disabled={isDisabled(state)}>\r\n                💡\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Hint;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst InputMethod = () => {\r\n    //⌨️\r\n    //🎮\r\n    //\r\n    const { state } = React.useContext(GlobalContext);\r\n    let icon = \"🖱️\";\r\n    icon = state.settings.launchSettings.inputMode == \"keyboard\" ? \"⌨️\" : icon;\r\n    icon = state.settings.launchSettings.inputMode == \"gamepad\" ? \"🎮\" : icon;\r\n\r\n    return <div><button>{icon}</button></div>;\r\n};\r\n\r\nexport default InputMethod;\r\n","import PauseContext from \"../../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst Pause = () => {\r\n    const { state, togglePause } = React.useContext(PauseContext);\r\n\r\n    return state.pauses.length < state.allowed ? (\r\n        <div>\r\n            <button title={`Pause - ${state.allowed-state.pauses.length} remaining`} disabled={state.paused} onClick={() => togglePause(state.paused)}>{state.paused ? \"▶️\" : \"⏸️\"}</button>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default Pause;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Points = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"icon-container\">🏆</div> {state.game.rating.points}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Points;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst RestartGame = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n\r\n    const reset = () =>\r\n        replaceContext((state) => (state.game.timemachine.previousStates ? state.game.timemachine.previousStates[0] : null));\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Restart\" disabled={!state.game.timemachine.previousStates.length} onClick={reset}>\r\n                ♻️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestartGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport PauseContext from \"../../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst ToggleMenu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    const pause = React.useContext(PauseContext);\r\n\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n                pause.togglePause(!state.settings.showMenu, state.player);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button disabled={pause.state.pauses.length >= pause.state.allowed} title=\"Settings\" onClick={() => toggleMenu(state.settings.showMenu)}>\r\n                ⚙️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleMenu;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Undo = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const undo = () =>\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                disabled={!state.game.timemachine.previousStates.length}\r\n                title={\"Undo (Penalty:\" + Math.pow(2, state.game.rating.multiplicator) + \")\"}\r\n                onClick={undo}\r\n            >\r\n                ⏪\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Undo;\r\n","import \"../../Style/Header.css\";\r\n\r\nimport Clock from \"./Clock\";\r\nimport EndGame from \"./EndGame\";\r\nimport Hearts from \"./Hearts\";\r\nimport Hint from \"./Hint\";\r\nimport InputMethod from \"./InputMethod\";\r\nimport Pause from \"./Pause\";\r\nimport Points from \"./Points\";\r\nimport React from \"react\";\r\nimport RestartGame from \"../RestartGame\";\r\nimport ToggleMenu from \"./ToggleMenu\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = (props) => (\r\n    <div className={\"header \" + props.mode}>\r\n        <div className=\"header-title\">\r\n            <Hearts />\r\n            <Points />\r\n        </div>\r\n        <Clock />\r\n        <div className=\"header-buttons\">\r\n            <InputMethod />\r\n            <Hint />\r\n            <Undo />\r\n            <Pause />\r\n            <RestartGame />\r\n            <EndGame />\r\n            <ToggleMenu />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","const EntropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\nexport default EntropyLevels;","import \"../Style/Menu.css\";\r\n\r\nimport EntropyLevels from \"../../Model/Game/EntropyLevels\";\r\nimport GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst Menu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    const { togglePause } = React.useContext(PauseContext);\r\n\r\n    //@todo persist game settings in local storage too and use for initialization\r\n    const setSuggestionMode = (sm) => updateContext((state) => state.settings.setSuggestionMode(sm));\r\n    const setBaseEntropy = (lvl) => updateContext((state) => state.setEntropy(lvl));\r\n    const setInteractionEntropy = (lvl) => updateContext((state) => (state.settings.interactionEntropy = lvl));\r\n    const setMouseMode = (mm) => updateContext((state) => (state.settings.mouseMode = mm));\r\n\r\n    //@todo review duplication with ToggleMenu Component from Header\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n                togglePause(!state.settings.showMenu, state.player);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!state.settings.showMenu) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui neutral menu\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => toggleMenu(state.settings.showMenu)}>🗙</button>\r\n            </div>\r\n            <div className=\"title\">Settings</div>\r\n            <div className=\"content\">\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Suggestions</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much help - if any - should the game offer by displaying suggestions?</div>\r\n                        <select\r\n                            onChange={(e) => setSuggestionMode(e.target.value)}\r\n                            value={state.settings.suggestionMode.key}\r\n                            disabled={state.settings.launchSettings.hintPenalty}\r\n                        >\r\n                            {state.settings.suggestionModes.map((suggestionMode) => (\r\n                                <option key={suggestionMode.key} value={suggestionMode.key}>\r\n                                    {suggestionMode.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Active Card</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">Should the selected card follow the cursor or remain on the stack?</div>\r\n                        <select onChange={(e) => setMouseMode(e.target.value)} value={state.settings.mouseMode}>\r\n                            {state.settings.mouseModes.map((mouseMode) => (\r\n                                <option key={mouseMode} value={mouseMode}>\r\n                                    {mouseMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Base Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                        <select onChange={(e) => setBaseEntropy(e.target.value)} value={state.settings.baseEntropy}>\r\n                            {EntropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Interaction Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will each interaction add to a stack on the board?</div>\r\n                        <select onChange={(e) => setInteractionEntropy(e.target.value)} value={state.settings.interactionEntropy}>\r\n                            {EntropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Menu;\r\n","import \"../Style/Screens.scss\";\r\n\r\nimport GamePad from \"../Game/GamePad\";\r\nimport GlobalContext from \"../Context\";\r\nimport Keyboard from \"../Game/Keyboard\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst PauseScreen = () => {\r\n    const globalCtx = React.useContext(GlobalContext);\r\n    const { state, togglePause } = React.useContext(PauseContext);\r\n    const remaining = state.allowed - state.pauses.length - 1;\r\n\r\n    //@todo proper I18N\r\n    let announcement = `You can pause the game ${remaining} more times.`;\r\n    if (remaining == 1) {\r\n        announcement = `You can pause the game ${remaining} more time.`;\r\n    }\r\n    if (remaining == 0) {\r\n        announcement = \"This is the last remaining pause. If you continue, no more pause will be possible.\";\r\n    }\r\n\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    const _toggle = () => togglePause(state.paused);\r\n    return !state.paused || (state.isSilent && state.isSilent == globalCtx.state.player) ? null : (\r\n        <div className=\"ui neutral endscreen\">\r\n            <div className=\"title\">😴</div>\r\n            <div className=\"content\">\r\n                <div>{announcement}</div>\r\n                <div>\r\n                    {state.isSilent ? (\r\n                        \"Wait for Player \" + state.isSilent + \" to continue.\"\r\n                    ) : (\r\n                        <button onClick={_toggle}>\r\n                            ▶️<div>Continue</div>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <Keyboard onAction={_toggle} onCancel={_toggle} />\r\n            <GamePad onAction={_toggle} onCancel={_toggle} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PauseScreen;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nconst usePrevious = (value) => {\r\n    const ref = React.useRef();\r\n    React.useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n};\r\n\r\nconst Renderer = (props) => {\r\n    const { state } = React.useContext(PauseContext);\r\n    const { paused, started } = state;\r\n    return <InnerRenderer length={props.length} paused={paused} started={started} />;\r\n};\r\n\r\nconst InnerRenderer = (props) => {\r\n    const context = React.useContext(GlobalContext);\r\n    const { length, started, paused } = props;\r\n    const previous = usePrevious({ length, paused, started });\r\n    React.useEffect(() => {\r\n        let timeout = null;\r\n        if (context.state.settings.launchSettings.speed && previous && started && !paused && (previous.length != length || previous.started != started || previous.paused != paused)) {\r\n            timeout = setTimeout(() => {\r\n                context.updateContext((state) => {\r\n                    if (length == state.stock.stack.length && state.stock.passes > 0 && (state.stock.stack.length || state.waste.stack.length)) {\r\n                        if (state.hand.isFromWaste()) {\r\n                            state.waste.putDownHand();\r\n                        }\r\n                        if (state.stock.stack.length) {\r\n                            state.waste.addAll(state.stock.popTop());\r\n                        } else if (state.stock.canRecycle()) {\r\n                            state.stock.recycle(state.waste.recycle());\r\n                        }\r\n                    }\r\n                });\r\n            }, 10000);\r\n        }\r\n        return () => clearTimeout(timeout);\r\n    }, [length, paused, started]);\r\n\r\n    return (\r\n        <div className=\"board-field stock\">\r\n            <StackBase model={context.state.stock} />\r\n            {context.state.stock.stack.map((card, index) => (\r\n                <Card\r\n                    key={index}\r\n                    model={card}\r\n                    offsetTop={(index / 2) * -1}\r\n                    zIndex={index}\r\n                    blink={context.state.stock.blinkFor}\r\n                    isSuggested={context.state.stock.suggestion && index == context.state.stock.stack.length - 1}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n//Can't use multiple contexts in one React class, need two renderer functions to feed two contexts into props for reliable detection of changes\r\nexport default class Stock extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.stock);\r\n    }\r\n\r\n    render() {\r\n        return <Renderer length={this.context.state.stock.stack.length} />;\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.tableau.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state } = React.useContext(GlobalContext);\r\n        return state.tableau.stacks.map((tableau, index) => <Tableau key={index} index={index} model={tableau} parent={state.tableau} />);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 1;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div className=\"board-field\">\r\n                <StackBase model={props.model} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        offsetTop={getOffset(index)}\r\n                    />\r\n                ))}\r\n                <Hand  parentModel={props.model} stack={props.model.stack} offsetTop={getOffset(props.model.stack.length)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.waste);\r\n    }\r\n\r\n    render() {\r\n        const { state } = this.context;\r\n        const getOffset = (index) => {\r\n            if (state.settings.launchSettings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length =\r\n                state.waste.settings.mouseMode == \"remain-on-stack\" && state.hand.isHoldingCard() && state.hand.isFromWaste()\r\n                    ? state.waste.stack.length + 1\r\n                    : state.waste.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div className=\"board-field\">\r\n                <StackBase model={state.waste} />\r\n                {state.waste.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        blink={state.waste.blinkFor}\r\n                        isSuggested={state.waste.suggestion && index == state.waste.stack.length - 1}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    offsetTop={(state.waste.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(state.waste.stack.length)}\r\n                    parentModel={state.waste}\r\n                    stack={state.waste.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"../Style/Board.scss\";\r\n\r\nimport BoardNavigator from \"./BoardNavigator\";\r\nimport Dealer from \"./Dealer\";\r\nimport Foundation from \"./Foundation\";\r\nimport Header from \"../UI/Header/Header\";\r\nimport Menu from \"../UI/Menu\";\r\nimport PauseScreen from \"../UI/PauseScreen\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = (props) => (\r\n    <div className={\"layout-grid-container \" + props.mode}>\r\n        <Header mode={props.mode} />\r\n        <div className={\"board-jail \" + props.mode}>\r\n            <div className={\"board-grid-container \" + props.mode}>\r\n                <Stock />\r\n                <Waste />\r\n                <div className=\"spacer\">&nbsp;</div>\r\n                <Foundation.Stacks />\r\n                <Tableau.Stacks />\r\n            </div>\r\n            <Menu />\r\n            <PauseScreen />\r\n        </div>\r\n        <Dealer />\r\n        <BoardNavigator />\r\n    </div>\r\n);\r\n\r\nexport default Board;\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Waste from \"../Model/Game/Waste\";\r\n\r\nexport type BlinkSelector = (state: BusinessModel) => Waste | Stock | any;\r\n\r\nexport interface IBlinker {\r\n    startBlink: (selector: BlinkSelector, state: BusinessModel) => void;\r\n}\r\n\r\nexport default class Blinker implements IBlinker {\r\n    startBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        if (selector(state).blinkFor < 10) {\r\n            selector(state).blinkFor = 10;\r\n            state.game.registerBlink(true);\r\n            selector(state).unblink = (s: BusinessModel) => this.stopBlink(selector, s);\r\n        }\r\n    };\r\n\r\n    stopBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        selector(state).blinkFor = 0;\r\n        state.game.registerBlink(false);\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Tableau implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.tableau.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.tableau.wouldAcceptHand(index)) {\r\n            const src = state.hand.source;\r\n            state.tableau.putDownHand(index) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (card) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n}\r\n\r\nexport class TableauHidden extends Tableau {\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (card) {\r\n            this.tryUncover(card, index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card: Card, index: number, state: BusinessModel) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Tableau from \"../Model/Game/Tableau\";\r\n\r\nexport default class Dealer {\r\n    dealt: number;\r\n    dealingAt: number;\r\n    isDealt: boolean;\r\n\r\n    constructor() {\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    dealOne = (dealt: number, callback: any) => (state: BusinessModel) => {\r\n        if (dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n\r\n        state.dealer.deal(state.stock, state.tableau);\r\n        if (state.dealer.isDealt) {\r\n            state.game.started = Date.now();\r\n        }\r\n\r\n        if (!state.dealer.isDealt) {\r\n            callback(state.dealer.dealt);\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    dealAll = () => (state: BusinessModel) => {\r\n        if (this.dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n        while (!state.dealer.isDealt) {\r\n            state.dealer.deal(state.stock, state.tableau);\r\n        }\r\n        state.game.started = Date.now();\r\n        return state;\r\n    };\r\n\r\n    deal = (stock: Stock, tableau: Tableau) => {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = stock.popOne();\r\n                newCard.source = tableau.stacks[i].source;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                tableau.deal(newCard, i);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Hand from \"../Model/Game/Hand\";\r\n\r\nexport default class Dispatcher {\r\n    clickHandler: ClickHandler;\r\n\r\n    constructor(clickHandler: ClickHandler) {\r\n        this.clickHandler = clickHandler;\r\n    }\r\n\r\n    getHandler = (hand: Hand) => {\r\n        if (hand && hand.isHoldingCard()) {\r\n            return this.dispatchPutDown;\r\n        } else {\r\n            return this.dispatchPickup;\r\n        }\r\n    };\r\n\r\n    dispatchPutDown = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPutDown(card, position, state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPickup(card, position, state, index);\r\n        }\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Foundation implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.foundation.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.foundation.wouldAcceptHand(index)) {\r\n            const src = state.hand.source;\r\n            state.foundation.putDownHand(index) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (_card: Card, position: any, state: BusinessModel, index: number) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    //@todo move this to a generic place, also detect failure\r\n    tryDetectEnd(state: BusinessModel) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.source = \"\";\r\n        this.suggestion = false;\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 20) + \"vw\";\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 20) + \"vw\";\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        copy.canClick = orig.canClick;\r\n        copy.onClick = orig.onClick;\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Focus {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.card = null;\r\n        this.stack = null;\r\n        this.keyboard = false;\r\n    }\r\n\r\n    validSettings = () => this.settings.launchSettings.inputMode !== \"mouse\";\r\n\r\n    isKeyBoard = (isKeyboard) => {\r\n        this.keyboard = isKeyboard;\r\n    }\r\n\r\n    setCard = (card) => {\r\n        this.card = card;\r\n        this.stack = null;\r\n    };\r\n\r\n    unsetCard = (card) => {\r\n        if (this.card && card && Card.equals(this.card, card)) {\r\n            this.card = null;\r\n        }\r\n    };\r\n\r\n    unsetStack = (stack) => {\r\n        if (this.stack && stack && this.stack == stack) {\r\n            this.stack = null;\r\n        }\r\n    }\r\n\r\n    setStack = (stack) => {\r\n        this.card = null;\r\n        this.stack = stack;\r\n    };\r\n\r\n    hasCard = (card) => this.keyboard && this.validSettings() && this.card && card && Card.equals(this.card, card);\r\n\r\n    hasStack = (stack) => this.keyboard && this.validSettings() && this.stack && stack && this.stack == stack;\r\n}\r\n","export default class BasicStack {\r\n    constructor(source) {\r\n        this.source = source;\r\n    }\r\n    stack = [];\r\n    getTop = () => this.stack && this.stack.length && this.stack[this.stack.length - 1];\r\n    suggestion = false;\r\n    getClickable = () => this.stack.filter((card) => card.canClick());\r\n}\r\n\r\nexport class HandHoldingStack extends BasicStack {\r\n    constructor(source, hand) {\r\n        super(source);\r\n        this.hand = hand;\r\n    }\r\n    getHandContent = () => this.hand.source == this.source ? this.hand.stack : [];\r\n    getClickable = () => [...this.stack.filter((card) => card.canClick()), ...this.getHandContent().filter((card) => card.canClick())];\r\n}\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","import Card from \"../Deck/Card\";\r\nimport { HandHoldingStack } from \"./BasicStack\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings, hand) {\r\n        this.settings = settings;\r\n        this.hand = hand;\r\n        const template = (index) => {\r\n            const s = new HandHoldingStack(\"foundation-\" + index, hand);\r\n            s.stack = [];\r\n            s.acceptedCards = [...getFoundationOrder()];\r\n            s.usedCards = [];\r\n            s.icon = null;\r\n            s.color = null;\r\n            s.blinkFor = 0;\r\n            return s;\r\n        };\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit, index) => ({ ...template(index), ...suit }));\r\n        this.stacks = [...stacks];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n    }\r\n\r\n    setOnClick = (onClick) => {\r\n        this.stacks.forEach((stack, index) => {\r\n            stack.clickEmpty = (p) => onClick(null, p, index);\r\n            stack.stack.forEach((card, sindex) => {\r\n                card.onClick = (p) => onClick({ ...card }, p, index);\r\n                card.canClick = () => sindex == stack.stack.length - 1;\r\n            });\r\n            this.hand.setOnClick(stack);\r\n        });\r\n    };\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAcceptHand = (index) => !this.hand.hasMoreThanOneCard() && this.accepts(index, this.hand.currentCard());\r\n\r\n    putDownHand = (index) => this.add(index, this.hand.putDown());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = this.stacks[index].source;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => [...this.stacks[index].usedCards].pop();\r\n\r\n    countCards = () => this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n\r\n    getTop = (index) => this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n\r\n    static copy = (orig, hand) => {\r\n        const copy = new Foundation(orig.settings, hand);\r\n        copy.stacks = orig.stacks.map((origStack) => {\r\n            const s = new HandHoldingStack(origStack.source, hand);\r\n            s.stack = Card.copyAll(origStack.stack);\r\n            s.acceptedCards = [...origStack.acceptedCards];\r\n            s.usedCards = [...origStack.usedCards];\r\n            s.icon = origStack.icon;\r\n            s.color = origStack.color;\r\n            return s;\r\n        });\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","export default class Rating {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        this.points += this.rateMove(currentMove);\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        if (this.settings.launchSettings.drawMode == \"single\" && this.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n    };\r\n\r\n    registerBlink(on) {\r\n        if (on && this.settings.launchSettings.missPenalty) {\r\n            this.points -= 10;\r\n            console.debug(\"RATING: subtract 10 points for invalid action\");\r\n        }\r\n    }\r\n\r\n    penalize = (other) => {\r\n        if (this.settings.launchSettings.undoPenalty) {\r\n            const penalty = Math.pow(2, other.multiplicator);\r\n            console.debug(`RATING: applying penalty of ${penalty} points for UNDO`);\r\n            this.points = Math.min(this.points, other.points) - penalty;\r\n            this.multiplicator = other.multiplicator + 1;\r\n        }\r\n    };\r\n\r\n    registerHint = (done) => {\r\n        if (done && this.settings.launchSettings.hintPenalty) {\r\n            this.points -= 10;\r\n            console.debug(`RATING: applying penalty of 10 points for HINT`);\r\n        }\r\n    };\r\n\r\n    rateMove(move) {\r\n        const isTableau = (obj) => obj.substr(0, 7) == \"tableau\";\r\n        const isFoundation = (obj) => obj.substr(0, 10) == \"foundation\";\r\n        if (isTableau(move.source)) {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (isFoundation(move.source)) {\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getTimePenalty = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        return Math.trunc(secondsToFinish / 5) * -2;\r\n    };\r\n\r\n    getBonusPoints = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        if (secondsToFinish < 30) {\r\n            return 0;\r\n        }\r\n        return Math.round((20000 / secondsToFinish) * 35);\r\n    };\r\n\r\n    getTotal = (start, end) => {\r\n        return this.points + this.getBonusPoints(start, end) - this.getTimePenalty(start, end);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Rating(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.multiplicator = orig.multiplicator;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class TimeMachine {\r\n    constructor() {\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n    };\r\n\r\n    pushPreviousState = (state) => {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    };\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.timemachine.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        return true;\r\n    };\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    }\r\n\r\n    stackEquals = (a, b) => {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    };\r\n\r\n    stacksEqual = (a, b) => {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    };\r\n\r\n    modelEquals = (a, b) => {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new TimeMachine();\r\n        copy.previousStates = [...orig.previousStates];\r\n        copy.memorable = orig.memorable;\r\n        copy.modified = orig.modified;\r\n        return copy;\r\n    };\r\n}\r\n","import Rating from \"./Rating\";\r\nimport TimeMachine from \"./TimeMachine\";\r\n\r\nexport default class Game {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.rating = new Rating(settings);\r\n        this.timemachine = new TimeMachine();\r\n        this.started = 0;\r\n        this.isEnded = false;\r\n        this.end = 0;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerMove(target, source);\r\n        this.timemachine.registerMove(target, source);\r\n        return true;\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.timemachine.registerPickup();\r\n        return true;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerRecycle();\r\n        this.timemachine.registerRecycle();\r\n        return true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerUncover();\r\n        this.timemachine.registerUncover();\r\n        return true;\r\n    };\r\n\r\n    registerBlink(on) {\r\n        this.rating.registerBlink(on);\r\n        this.timemachine.registerBlink(on);\r\n        return true;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.timemachine = TimeMachine.copy(orig.timemachine);\r\n        copy.rating = Rating.copy(orig.rating);\r\n        copy.paused = orig.paused;\r\n        return copy;\r\n    };\r\n\r\n    \r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp = (stack, source, position) => {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    };\r\n\r\n    putDown = () => {\r\n        this.source = null;\r\n        const result = this.stack.splice(0, this.stack.length);\r\n        return result;\r\n    };\r\n\r\n    setOnClick = (model) => {\r\n        if (this.source && this.source == model.source) {\r\n            let _onClick = model.clickEmpty;\r\n            if (model.stack.length) {\r\n                _onClick = model.stack[model.stack.length - 1].onClick;\r\n            }\r\n            this.stack.forEach((card) => {\r\n                card.onClick = _onClick;\r\n                card.canClick = () => true;\r\n            });\r\n        }\r\n    };\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    isHoldingKing = () => this.isHoldingCard() && this.currentCard().face == \"K\";\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    isFromWaste = () => this.source && this.source == \"waste\";\r\n\r\n    isFromFoundation = (index) => this.source && this.source == `foundation-${index}`;\r\n\r\n    isFromTableau = (index) => this.source && this.source == `tableau-${index}`;\r\n\r\n    isFromAnyTableau = () => this.source && this.source.substring(0, 8) == \"tableau-\";\r\n\r\n    getTableauIndex = () => this.source && this.source.substring(8);\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand(orig.focus);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","class SuggestionMode {\r\n    key: string;\r\n    label: string;\r\n    isTemporary: boolean;\r\n    supportsHints: boolean;\r\n    next: string | undefined;\r\n    constructor(key: string, obj: ISuggestionMode) {\r\n        this.key = key;\r\n        this.label = obj.label;\r\n        this.isTemporary = !!obj.isTemporary;\r\n        this.supportsHints = !!obj.supportsHints;\r\n        this.next = obj.next;\r\n    }\r\n}\r\n\r\ntype ISuggestionMode = {\r\n    label: string;\r\n    isTemporary?: boolean;\r\n    supportsHints?: boolean;\r\n    next?: string;\r\n};\r\n\r\nexport default class SuggestionModes {\r\n    static NONE: string = \"NONE\";\r\n    static SCORED: string = \"SCORED\";\r\n    static REGULAR: string = \"REGULAR\";\r\n    static FULL: string = \"FULL\";\r\n    static ONCE: string = \"ONCE\";\r\n    static TWICE: string = \"TWICE\";\r\n    static raw: { [id: string]: ISuggestionMode } = {\r\n        NONE: {\r\n            label: \"None\",\r\n            supportsHints: true,\r\n        },\r\n        SCORED: {\r\n            label: \"Scored\",\r\n        },\r\n        REGULAR: {\r\n            label: \"Regular\",\r\n        },\r\n        FULL: {\r\n            label: \"Full\",\r\n        },\r\n        ONCE: {\r\n            label: \"Single Action\",\r\n            isTemporary: true,\r\n            next: \"NONE\",\r\n        },\r\n    };\r\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\r\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\r\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\r\n    static default = () => SuggestionModes.get(SuggestionModes.REGULAR);\r\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\r\n}\r\n","import SuggestionModes from \"./Settings/SuggestionModes\";\r\n\r\nexport default class Settings {\r\n    constructor(launchSettings) {\r\n        this.launchSettings = launchSettings;\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = \"remain-on-stack\";\r\n\r\n        this.baseEntropy = launchSettings.baseEntropy;\r\n        this.interactionEntropy = launchSettings.interactionEntropy;\r\n\r\n        this.suggestionModes = SuggestionModes.allSuggestionModes();\r\n        this.suggestionMode = SuggestionModes.default();\r\n    }\r\n\r\n    setSuggestionMode = (sm) => {\r\n        if (this.suggestionMode.key !== sm) {\r\n            this.suggestionMode = SuggestionModes.get(sm);\r\n        }\r\n    };\r\n\r\n    enableHint = () => {\r\n        this.suggestionMode = SuggestionModes.getHintMode();\r\n    };\r\n\r\n    disableHint = () => {\r\n        if (this.suggestionMode.isTemporary && this.suggestionMode.next) {\r\n            this.suggestionMode = SuggestionModes.get(this.suggestionMode.next);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings(orig.launchSettings);\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        copy.hintMode = orig.hintMode;\r\n        return copy;\r\n    };\r\n}\r\n","import BasicStack from \"./BasicStack\";\r\nimport Card from \"../Deck/Card\";\r\n\r\nexport default class Stock extends BasicStack {\r\n    constructor(stack, settings) {\r\n        super(\"stock\");\r\n        this.settings = settings;\r\n        this.stack = stack.map(this.setCardProperties);\r\n        this.recyclings = 0;\r\n        this.passes = -1;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        if (this.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            this.passes = 1;\r\n        }\r\n        if (this.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            this.passes = 3;\r\n        }\r\n    }\r\n\r\n    setOnClick = (onClick) => {\r\n        this.clickEmpty = (p) => onClick(null, p);\r\n        this.stack.forEach((card,index) => {\r\n            card.onClick = (p) => onClick({...card}, p);\r\n            card.canClick = () => index == this.stack.length-1;\r\n        });\r\n    };\r\n\r\n    popOne = () => {\r\n        const result = this.stack.pop();\r\n        return result;\r\n    };\r\n\r\n    canRecycle() {\r\n        return (\r\n            this.settings.launchSettings.recyclingMode == \"infinite\" ||\r\n            (this.settings.launchSettings.recyclingMode == \"3-pass\" && this.recyclings < 2)\r\n        );\r\n    }\r\n\r\n    recycle = (waste) => {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map(this.setCardProperties);\r\n            this.recyclings++;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setCardProperties = (card) => {\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        card.isHidden = true;\r\n        card.source = this.source;\r\n        return card;\r\n    };\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    popTop = () => {\r\n        let result = [];\r\n        if (this.settings.launchSettings.drawMode == \"single\") {\r\n            result = [this.stack.pop()];\r\n        }\r\n        if (this.settings.launchSettings.drawMode == \"triple\") {\r\n            result = this.stack.splice(this.stack.length - 3);\r\n        }\r\n        if (this.stack.length == 0) {\r\n            this.passes--;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings, orig.focus);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        copy.passes = orig.passes;\r\n        copy.recyclings = orig.recyclings;\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Hand from \"./Hand\";\r\nimport { HandHoldingStack } from \"./BasicStack\";\r\nimport Settings from \"./Settings\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nclass TableauStack extends HandHoldingStack {\r\n    blinkFor = 0;\r\n    id = 0;\r\n    // eslint-disable-next-line no-unused-vars\r\n    onClick = (a: any, b: any) => {};\r\n    // eslint-disable-next-line no-unused-vars\r\n    clickEmpty = (a: any, b: any) => {};\r\n}\r\nexport default class Tableau {\r\n    stacks: TableauStack[];\r\n    settings: Settings;\r\n    hand: Hand;\r\n\r\n    constructor(settings: Settings, hand: Hand) {\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.hand = hand;\r\n        this.stacks = ids.map((id) => {\r\n            const s = new TableauStack(\"tableau-\" + id, hand);\r\n            s.stack = [];\r\n            s.blinkFor = 0;\r\n            s.id = id;\r\n            return s;\r\n        });\r\n        this.settings = settings;\r\n    }\r\n\r\n    setOnClick = (onClick: (a: any, b: any, index: number) => void, onClickhidden: (a: any, b: any, index: number) => void, hand: Hand) => {\r\n        this.stacks.forEach((stack, index) => {\r\n            stack.clickEmpty = (p: any) => onClick(null, p, index);\r\n            stack.stack.forEach((card, sindex) => {\r\n                const click = card.isHidden && sindex == stack.stack.length-1 ? onClickhidden : onClick;\r\n                card.onClick = (p: any) => click({ ...card }, p, index);\r\n                card.canClick = () => !card.isHidden || this.canUncover(index, card);\r\n            });\r\n            hand.setOnClick(stack);\r\n        });\r\n    };\r\n\r\n    getStack = (index: number) => this.stacks[index];\r\n\r\n    wouldAcceptHand = (index: number) => this.canPutDown(this.getTop(index), this.hand, index);\r\n\r\n    putDownHand = (index: number) => this.add(index, this.hand.putDown()); \r\n\r\n    canPutDown = (card: Card, hand: Hand, index: number) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.isFromTableau(index));\r\n\r\n    accepts = (index: number, current: Card) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index: number, card: Card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card: Card, i: number) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    deal = (card: Card, index: number) => {\r\n        this.stacks[index].stack.push(card);\r\n    };\r\n\r\n    canUncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        return top.isHidden && card && card.equals(this.getTop(index));\r\n    };\r\n\r\n    uncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        if (this.canUncover(index, card)) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index: number) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index: number, cards: Card[]) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card: Card, index: number) => {\r\n        card.source = this.stacks[index].source;\r\n        return card;\r\n    };\r\n\r\n    getTop = (index: number, offset?: number) => this.stacks[index].stack[this.stacks[index].stack.length - 1 - (offset || 0)];\r\n\r\n    static copy = (orig: Tableau, hand: Hand) => {\r\n        const copy = new Tableau(orig.settings, hand);\r\n        copy.stacks = orig.stacks.map((stack, index) => {\r\n            const s = new TableauStack(stack.source, hand);\r\n            s.id = index;\r\n            s.stack = Card.copyAll(stack.stack);\r\n            return s;\r\n        });\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { HandHoldingStack } from \"./BasicStack\";\r\n\r\nexport default class Waste extends HandHoldingStack {\r\n    constructor(settings, hand) {\r\n        super(\"waste\", hand);\r\n        this.settings = settings;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n    }\r\n\r\n    setOnClick = (onClick) => {\r\n        this.clickEmpty = (p) => onClick(null, p);\r\n        this.stack.forEach((card, index) => {\r\n            card.onClick = (p) => onClick({...card}, p);\r\n            card.canClick = () => index == this.stack.length-1;\r\n        });\r\n        this.hand.setOnClick(this);  \r\n    };\r\n\r\n    putDownHand = () => this.addAll(this.hand.putDown());\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = this.source;\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAcceptHand = () => this.hand.isFromWaste() && this.canAdd(this.hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    static copy = (orig, hand) => {\r\n        const copy = new Waste(orig.settings, hand);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport Focus from \"./Game/Focus\";\r\nimport Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Model {\r\n    stock: Stock;\r\n    waste: Waste;\r\n    foundation: Foundation;\r\n    tableau: Tableau;\r\n    hand: Hand;\r\n    game: Game;\r\n    settings: Settings;\r\n    focus: Focus;\r\n    player: string;\r\n\r\n    constructor(obj: any) {\r\n        this.stock = obj.stock;\r\n        this.waste = obj.waste;\r\n        this.foundation = obj.foundation;\r\n        this.tableau = obj.tableau;\r\n        this.hand = obj.hand;\r\n        this.game = obj.game;\r\n        this.settings = obj.settings;\r\n        this.focus = obj.focus;\r\n        this.player = obj.player;\r\n    }\r\n\r\n    static getInitialState = (launchSettings: AppState, deck: Deck, player: string) => {\r\n        const settings = new Settings(launchSettings);\r\n        const hand = new Hand();\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings),\r\n            waste: new Waste(settings, hand),\r\n            foundation: new Foundation(settings, hand),\r\n            tableau: new Tableau(settings, hand),\r\n            hand: hand,\r\n            game: new Game(settings),\r\n            settings: settings,\r\n            focus: new Focus(settings),\r\n            player,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        const hand = Hand.copy(state.hand);\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste, hand),\r\n            foundation: Foundation.copy(state.foundation, hand),\r\n            tableau: Tableau.copy(state.tableau, hand),\r\n            hand: hand,\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n            focus: state.focus,\r\n            player: state.player,\r\n        };\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\nimport { IStack } from \"../Model/Game/IStack\";\r\nimport Model from \"../Model/Model\";\r\n\r\ninterface NavIndex {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\nexport default class Navigator {\r\n    model: Model;\r\n    currentIndex: NavIndex;\r\n    rows: IStack[][];\r\n    constructor(model: Model) {\r\n        this.model = model;\r\n        this.currentIndex = { x: 0, y: 0, z: 0 };\r\n        this.rows = [[this.model.stock, this.model.waste, undefined, ...this.model.foundation.stacks], [...this.model.tableau.stacks]];\r\n    }\r\n\r\n    getZindex = (elem: IStack, card: Card) => {\r\n        const targets = elem.getClickable();\r\n        for (let i = 0; i < targets.length; i++) {\r\n            if (Card.equals(card, targets[i])) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    update = (pos: string, card: Card) => {\r\n        for (let i = 0; i < this.rows.length; i++) {\r\n            const row = this.rows[i];\r\n            for (let j = 0; j < row.length; j++) {\r\n                const elem = row[j];\r\n                if (elem && elem.source == pos) {\r\n                    const zIndex = this.getZindex(elem, card);\r\n                    this.currentIndex = { x: j, y: i, z: zIndex };\r\n                    this.finishNav();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    valid = (pos: NavIndex) => pos.x === this.currentIndex.x && pos.y === this.currentIndex.y && pos.z === this.currentIndex.z;\r\n\r\n    moveLeft = (pos: NavIndex) =>\r\n        this.move(pos, () => {\r\n            this.currentIndex.x--;\r\n            if (this.currentIndex.x == -1) {\r\n                this.currentIndex.x = 6;\r\n            }\r\n        });\r\n\r\n    moveRight = (pos: NavIndex) =>\r\n        this.move(pos, () => {\r\n            this.currentIndex.x++;\r\n            if (this.currentIndex.x == 7) {\r\n                this.currentIndex.x = 0;\r\n            }\r\n        });\r\n\r\n    move = (pos: NavIndex, direction: () => void) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        direction();\r\n        if (this.current() == undefined) {\r\n            this.move(this.currentIndex, direction);\r\n        } else {\r\n            this.currentIndex.z = this.current().getClickable().length - 1;\r\n            this.finishNav();\r\n        }\r\n    };\r\n\r\n    moveUp = (pos: NavIndex) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        const clickable = this.current().getClickable();\r\n        if (clickable.length && this.currentIndex.z > 0) {\r\n            this.currentIndex.z--;\r\n            this.finishNav();\r\n        } else {\r\n            this.toggleRow(true);\r\n        }\r\n    };\r\n\r\n    moveDown = (pos: NavIndex) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        const clickable = this.current().getClickable();\r\n        if (clickable.length && this.currentIndex.z < clickable.length - 1) {\r\n            this.currentIndex.z++;\r\n            this.finishNav();\r\n        } else {\r\n            this.toggleRow(false);\r\n        }\r\n    };\r\n\r\n    toggleRow = (pickLast: boolean) => {\r\n        if (this.currentIndex.y == 0) {\r\n            this.currentIndex.y = 1;\r\n        } else {\r\n            this.currentIndex.y = 0;\r\n        }\r\n        const last = this.current() ? this.current().getClickable().length - 1 : 0;\r\n        this.currentIndex.z = pickLast ? last : 0;\r\n        if (this.current() == undefined) {\r\n            this.moveLeft(this.currentIndex);\r\n        } else {\r\n            this.finishNav();\r\n        }\r\n    };\r\n\r\n    finishNav = () => {\r\n        const clickable = this.current().getClickable();\r\n        if (clickable && clickable[this.currentIndex.z]) {\r\n            this.model.focus.setCard(clickable[this.currentIndex.z]);\r\n        } else {\r\n            this.model.focus.setStack(this.current().source);\r\n        }\r\n    };\r\n\r\n    current = () => {\r\n        return this.rows[this.currentIndex.y][this.currentIndex.x];\r\n    };\r\n\r\n    pressCurrent = () => {\r\n        if (this.model.focus.card && this.model.focus.card.canClick()) {\r\n            return this.model.focus.card.onClick({ isKeyboard: true });\r\n        } else if (this.model.focus.stack) {\r\n            return this.current().clickEmpty({ isKeyboard: true });\r\n        } else {\r\n            return (ctx: BusinessModel) => {\r\n                ctx.navigator.finishNav();\r\n                ctx.game.timemachine.modified = true;\r\n            };\r\n        }\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Stock implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.stock, state);\r\n\r\n    dispatchPutDown = (_card: Card, _position: any, state: BusinessModel) => this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, _position: any, state: BusinessModel) =>{\r\n        return card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state);\r\n    }\r\n\r\n    moveToWaste = (card: Card, state: BusinessModel) =>\r\n    {\r\n        return state.stock.isOnTop(card) && state.waste.addAll(state.stock.popTop()) && state.game.registerMove(\"waste\", \"stock\");\r\n    }\r\n\r\n    recycleWaste = (_card: Card, state: BusinessModel) => {\r\n        if (!state.stock.getTop()) {\r\n            return (\r\n                (!!state.waste.getTop() &&\r\n                    state.stock.canRecycle() &&\r\n                    state.stock.recycle(state.waste.recycle()) &&\r\n                    state.game.registerRecycle()) ||\r\n                this.blink(state, 0)\r\n            );\r\n        }\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Waste implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.waste, state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel) =>\r\n        (state.waste.wouldAcceptHand() &&\r\n            state.waste.putDownHand() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state, 0);\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport SuggestionModes from \"../Model/Game/Settings/SuggestionModes\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Suggestions {\r\n    tableau: Tableau;\r\n    waste: Waste;\r\n\r\n    constructor() {\r\n        this.tableau = new Tableau();\r\n        this.waste = new Waste();\r\n    }\r\n\r\n    evaluateOptions = (state: BusinessModel) => {\r\n        this.disableAllSuggestions(state);\r\n        if (\r\n            state.settings.suggestionMode.key !== SuggestionModes.NONE &&\r\n            !this.getUncoverOptions(state) &&\r\n            !this.getPutdownSuggestions(state) &&\r\n            !state.hand.isHoldingCard() &&\r\n            (!this.getPickupOptions(state) || state.settings.suggestionMode.key == SuggestionModes.FULL) &&\r\n            (state.stock.getTop() || state.stock.canRecycle()) &&\r\n            state.settings.suggestionMode.key !== SuggestionModes.SCORED\r\n        ) {\r\n            state.stock.suggestion = true;\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state: BusinessModel, onlyUseful?: boolean) => {\r\n        if (!state.hand.isHoldingCard() || state.settings.suggestionMode.key == SuggestionModes.NONE) {\r\n            return 0;\r\n        }\r\n\r\n        const accepted = [];\r\n        if (state.waste.wouldAcceptHand()) {\r\n            if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromWaste()) {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.foundation.wouldAcceptHand(index)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromFoundation(index)) {\r\n                    const move = { target: stack.source, source: state.hand.source };\r\n                    if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.tableau.wouldAcceptHand(index)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromTableau(index)) {\r\n                    const isMoveOfKingBetweenEmptySlots =\r\n                        state.hand.isHoldingKing() &&\r\n                        stack.stack.length == 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length == 0;\r\n\r\n                    const isMoveBetweenSimilarParentCards =\r\n                        stack.stack.length > 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length > 0 &&\r\n                        stack.stack[stack.stack.length - 1].face ==\r\n                            state.tableau.stacks[state.hand.getTableauIndex()].stack[\r\n                                state.tableau.stacks[state.hand.getTableauIndex()].stack.length - 1\r\n                            ].face &&\r\n                        !state.tableau.getTop(state.hand.getTableauIndex()).isHidden;\r\n\r\n                    const isNotLoop = !isMoveOfKingBetweenEmptySlots && !isMoveBetweenSimilarParentCards;\r\n\r\n                    if (!onlyUseful || state.settings.suggestionMode.key === SuggestionModes.FULL || isNotLoop) {\r\n                        const move = { target: stack.source, source: state.hand.source };\r\n                        if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state: BusinessModel) => {\r\n        let foundAny = false;\r\n        const wasteState = BusinessModel.copy(state);\r\n        this.waste.dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.timemachine.modified) {\r\n            if (this.getPutdownSuggestions(wasteState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) =>\r\n            tableau.stack\r\n                .map((card, cardIndex) => ({ cardIndex, card }))\r\n                .filter(({ card }) => !card.isHidden)\r\n                .forEach(({ card, cardIndex }) => {\r\n                    const tableauState = BusinessModel.copy(state);\r\n                    this.tableau.dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.timemachine.modified) {\r\n                        if (this.getPutdownSuggestions(tableauState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                })\r\n        );\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            const filtered = state.tableau.stacks\r\n                .map((_stack, index) => index)\r\n                .filter((index) => state.tableau.getTop(index) && state.tableau.getTop(index).isHidden);\r\n            filtered.forEach((index) => {\r\n                state.tableau.getTop(index).suggestion = true;\r\n            });\r\n            return filtered.length;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    disableAllSuggestions = (state: BusinessModel) => {\r\n        const disableSuggestion = (obj: any) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import Tableau, { TableauHidden } from \"./Tableau\";\r\n\r\nimport { AppState } from \"../Common\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Dealer from \"./Dealer\";\r\nimport Deck from \"../Model/Deck/Deck\";\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Foundation from \"./Foundation\";\r\nimport Model from \"../Model/Model\";\r\nimport Navigator from \"./Navigator\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class BusinessModel extends Model {\r\n    suggestor: Suggestions;\r\n    dealer: Dealer;\r\n    navigator: Navigator;\r\n\r\n    constructor(obj: any) {\r\n        super(obj);\r\n        this.suggestor = new Suggestions();\r\n        this.dealer = new Dealer();\r\n        this.navigator = new Navigator(this);\r\n    }\r\n\r\n    withSuggestions = () => {\r\n        this.suggestor.evaluateOptions(this);\r\n        return this;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.settings.baseEntropy = lvl;\r\n        this.stock.setEntropy(lvl);\r\n        this.waste.setEntropy(lvl);\r\n        this.foundation.setEntropy(lvl);\r\n        this.tableau.setEntropy(lvl);\r\n    };\r\n\r\n    withHandlers = () => {\r\n        const getHandler = (clickHandler: ClickHandler) => new Dispatcher(clickHandler).getHandler(this.hand);\r\n        this.stock.setOnClick(getHandler(new Stock()));\r\n        this.waste.setOnClick(getHandler(new Waste()));\r\n        this.foundation.setOnClick(getHandler(new Foundation()));\r\n        this.tableau.setOnClick(getHandler(new Tableau()),getHandler(new TableauHidden()), this.hand);\r\n        return this;\r\n    };\r\n\r\n    static getInitialState = (launchSettings: AppState, deck: Deck, player: string) => {\r\n        return new BusinessModel(Model.getInitialState(launchSettings, deck, player));\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return new BusinessModel(Model.copy(state));\r\n    };\r\n}\r\n","import \"../Style/Screens.scss\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst EndScreen = () => {\r\n    const { state, restart } = React.useContext(GlobalContext);\r\n    const pause = React.useContext(PauseContext);\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    return !state.game.isEnded ? null : (\r\n        <div className=\"ui neutral endscreen\">\r\n            <div className=\"title\">🥳</div>\r\n            <div className=\"content\">\r\n                <div>Time: {pause.getElapsed()}</div>\r\n                <div>Points: {state.game.rating.points}</div>\r\n                <div>Time Penalty: {state.game.rating.getTimePenalty(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Bonus Points: {state.game.rating.getBonusPoints(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Total Points: {state.game.rating.getTotal(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>\r\n                    <button onClick={restart}>\r\n                        🗑️<div>New Game</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndScreen;\r\n","import { AppState, StateReplacer, StateUpdater } from \"../../Common\";\r\n\r\nimport Board from \"./Board\";\r\nimport BusinessModel from \"../../Business/BusinessModel\";\r\nimport Deck from \"../../Model/Deck/Deck\";\r\nimport EndScreen from \"../UI/EndScreen\";\r\nimport { Provider } from \"../Context\";\r\nimport React from \"react\";\r\n\r\ninterface BoardWrapProps {\r\n    settings: AppState;\r\n    restart: () => void;\r\n    deck: Deck;\r\n    player: string;\r\n}\r\n\r\nexport default class BoardWrap extends React.Component<BoardWrapProps, BusinessModel> {\r\n    constructor(props: BoardWrapProps) {\r\n        super(props);\r\n        this.state = BusinessModel.getInitialState(props.settings, props.deck, props.player);\r\n    }\r\n\r\n    replaceContext = (modifier: StateReplacer) => this.setState(modifier);\r\n\r\n    updateContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            modifier(state);\r\n            return state;\r\n        });\r\n\r\n    updateGameContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            state.game.timemachine.modified = false;\r\n            const previous = BusinessModel.copy(state);\r\n            modifier(state);\r\n            if (state.game.timemachine.modified) {\r\n                state.game.timemachine.pushPreviousState(previous);\r\n                return state;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    render = () => {\r\n        const context = {\r\n            state: this.state.withHandlers().withSuggestions(),\r\n            replaceContext: this.replaceContext,\r\n            updateContext: this.updateContext,\r\n            updateGameContext: this.updateGameContext,\r\n            restart: this.props.restart,\r\n        };\r\n        return (\r\n            <Provider value={context}>\r\n                <Board mode={this.props.settings.gameMode} />\r\n                <EndScreen />\r\n            </Provider>\r\n        );\r\n    };\r\n}\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\r\n            .flat()\r\n            .reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    copy() {\r\n        const result = new Deck();\r\n        result.cards = Card.copyAll(this.cards);\r\n        return result;\r\n    }\r\n}\r\n","const DifficultyOptions = [\r\n    {\r\n        id: 0,\r\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\r\n        icon: \"🐭\",\r\n        lines: [\"Turn 1 card at once.\", \"No limit on passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐹\",\r\n        lines: [\"Turn 1 card at once.\", \"Three passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐰\",\r\n        lines: [\"Turn 1 card at once.\", \"Only a single pass\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\r\n        icon: \"🐨\",\r\n        lines: [\"Turn 3 cards at once\", \"No limit on passes\", \"through the deck\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐼\",\r\n        lines: [\"Turn 3 cards at once.\", \"Three passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐻\",\r\n        lines: [\"Turn 3 cards at once.\", \"Only a single pass\", \"through the deck.\"],\r\n    },\r\n];\r\n\r\nexport default DifficultyOptions;\r\n","import React from \"react\";\r\nimport { StartScreenState } from \"../../../Common\";\r\n\r\nexport interface IStartScreenContext {\r\n    state: StartScreenState;\r\n    setState: (s: StartScreenState) => void;\r\n}\r\n\r\nconst StartScreenContext = React.createContext<IStartScreenContext>({\r\n    state: {\r\n        difficultySettings: 0,\r\n        ratingPreset: 0,\r\n        ratingSettings: {},\r\n        entropySettings: {},\r\n        quickDeal: false,\r\n        menu: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        screen: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        focus: \"menu\"\r\n    },\r\n    setState: () => {},\r\n});\r\n\r\nexport const Provider = StartScreenContext.Provider;\r\nexport default StartScreenContext;\r\n","import React from \"react\";\r\nimport StartScreenContext from \"../StartScreen/Context\";\r\n\r\nconst MenuButton = (props) => {\r\n    let className = \"\";\r\n    if (props.blink) {\r\n        className += \" blinking\";\r\n    }\r\n\r\n    const { state } = React.useContext(StartScreenContext);\r\n\r\n    if (props.y > 0) {\r\n        className += \" indented\";\r\n    }\r\n\r\n    if (state.menu.x == props.x && state.menu.y == props.y && state.focus == \"menu\") {\r\n        className += \" highlight\";\r\n    }\r\n    if (props.active || props.toggled) {\r\n        className += \" active\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button className={className} title={props.title} onClick={props.onClick}>\r\n                <div className=\"icon\">{props.icon}</div>\r\n                <div className=\"label\">{props.title}</div>\r\n            </button>\r\n        </>\r\n    );\r\n};\r\nexport default MenuButton;\r\n","import React from \"react\";\r\n\r\nconst MenuTitle = (props) => {\r\n    return <div className=\"title\">{props.label}</div>;\r\n};\r\nexport default MenuTitle;\r\n","export default class RatingPresets {\r\n    static all = [\r\n        {\r\n            id: 0,\r\n            icon: \"🌴\",\r\n            label: \"Chill\",\r\n            settings: {\r\n                timedMode: false,\r\n                missPenalty: false,\r\n                undoPenalty: false,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 1,\r\n            icon: \"⚖️\",\r\n            label: \"Regular\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: false,\r\n                undoPenalty: true,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: \"🏆\",\r\n            label: \"Competitive\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: true,\r\n                undoPenalty: true,\r\n                hintPenalty: true,\r\n            },\r\n        },\r\n    ];\r\n    static matchPreset = (settings: any) => {\r\n        const filterd = RatingPresets.all.filter((preset) => RatingPresets.equals(preset.settings, settings));\r\n        if (filterd.length > 0) {\r\n            return filterd[0].id;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    static equals = (s1: any, s2: any) =>\r\n        s1.timedMode === s2.timedMode &&\r\n        s1.missPenalty === s2.missPenalty &&\r\n        s1.undoPenalty === s2.undoPenalty &&\r\n        s1.hintPenalty === s2.hintPenalty;\r\n}\r\n","import React from \"react\";\r\n\r\nconst Controls = (props: { head: string }) => {\r\n    return (\r\n        <div className=\"controls startdetails\">\r\n            <div className=\"title\">{props.head}: Controls</div>\r\n            <div className=\"content center\">\r\n                <div className=\"left\">\r\n                    <div className=\"title\">Player 1</div>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"title\">Player 2</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Controls;\r\n","export class ScreenButton<T> {\r\n    icon: string;\r\n    lines: string[];\r\n    id: number;\r\n    model: T;\r\n    constructor(id: number, icon: string, lines: string[], model: T) {\r\n        this.id = id;\r\n        this.icon = icon;\r\n        this.lines = lines;\r\n        this.model= model;\r\n    }\r\n}\r\nexport class ScreenRow<T> {\r\n    buttons: ScreenButton<T>[];\r\n    constructor(buttons: ScreenButton<T>[]) {\r\n        this.buttons = buttons;\r\n    }\r\n}\r\n","import { ScreenButton, ScreenRow } from \"./Navigation\";\r\n\r\nimport DifficultyOptions from \"./DifficultyOptions\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst mapOption = (option: any) => new ScreenButton(option.id, option.icon, option.lines, option);\r\nexport const getDifficultyRows = () => {\r\n    return [new ScreenRow(DifficultyOptions.slice(0, 3).map(mapOption)), new ScreenRow(DifficultyOptions.slice(3).map(mapOption))];\r\n};\r\nconst Difficulty = (props: { head: string }) => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const updateDifficulty = (settings: number) => setState({ ...state, difficultySettings: settings });\r\n    const getButtonClass = (index: number, y: number, x: number) => {\r\n        const hasFocus = state.focus == \"screen\"&&state.screen.x == x && state.screen.y == y;\r\n        let name = state.difficultySettings == index ? `active active-${index}` : `inactive-${index}`;\r\n        name += hasFocus ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n    return (\r\n        <div className=\"quickstart startdetails\">\r\n            <div className=\"title\">{props.head}: Difficulty</div>\r\n            <div className=\"content center\">\r\n                {getDifficultyRows().map((row, index) => (\r\n                    <div key={index}>\r\n                        {row.buttons.map((button, bi) => (\r\n                            <button key={button.id} className={getButtonClass(button.id, index, bi)} onClick={() => updateDifficulty(button.id)}>\r\n                                {button.icon}\r\n                                {button.lines.map((line, i) => (\r\n                                    <div key={i}>{line}</div>\r\n                                ))}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Difficulty;\r\n","import { ScreenButton, ScreenRow } from \"./Navigation\";\r\n\r\nimport EntropyLevels from \"../../../Model/Game/EntropyLevels\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\nimport { StartScreenState } from \"../../../Common\";\r\n\r\nconst optimizeOptions = (state: StartScreenState) => [\r\n    {\r\n        entropy: 2,\r\n        quickDeal: false,\r\n        lines: [(!state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Desktop\", \"with Mouse Support\"],\r\n        icon: \"🖥️\",\r\n    },\r\n    {\r\n        entropy: 1,\r\n        quickDeal: true,\r\n        lines: [(state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Mobile\", \"with Touch Support\"],\r\n        icon: \"📱\",\r\n    },\r\n];\r\n\r\nexport const getSettingRows = (state: StartScreenState) => {\r\n    return [new ScreenRow(optimizeOptions(state).map((option) => new ScreenButton(option.entropy, option.icon, option.lines, option)))];\r\n};\r\n\r\nconst QuickStart = (props: { head: string }) => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const [toggle, setToggle] = React.useState<boolean>(false);\r\n\r\n    const setBaseEntropy = (value: string) => {\r\n        setState({ ...state, entropySettings: { ...state.entropySettings, baseEntropy: parseInt(value) } });\r\n    };\r\n    const setInteractionEntropy = (value: string) => {\r\n        setState({ ...state, entropySettings: { ...state.entropySettings, interactionEntropy: parseInt(value) } });\r\n    };\r\n    const setQuickDeal = (value: string) => {\r\n        setState({ ...state, quickDeal: !!parseInt(value) });\r\n    };\r\n    const getClassName = (button: ScreenButton<any>, y: number, x: number) => {\r\n        const hasFocus = state.focus == \"screen\"&& state.screen.x == x && state.screen.y == y;\r\n        let name = state.quickDeal == button.model.quickDeal ? \"active active-0\" : \"inactive-0\";\r\n        name += hasFocus ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    return (\r\n        <div className=\"ui quickstart startdetails\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => setToggle(!toggle)}>{toggle ? \"🗙\" : \"☰\"}</button>\r\n            </div>\r\n            <div className=\"title\">{props.head}: Settings</div>\r\n\r\n            {toggle ? (\r\n                <div className=\"content\">\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Base Entropy</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                            <select onChange={(e) => setBaseEntropy(e.target.value)} value={state.entropySettings.baseEntropy}>\r\n                                {EntropyLevels.map((entropyLevel, index) => (\r\n                                    <option key={entropyLevel} value={index}>\r\n                                        {entropyLevel}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Interaction Entropy</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">How much chaos will each interaction add to a stack on the board?</div>\r\n                            <select\r\n                                onChange={(e) => setInteractionEntropy(e.target.value)}\r\n                                value={state.entropySettings.interactionEntropy}\r\n                            >\r\n                                {EntropyLevels.map((entropyLevel, index) => (\r\n                                    <option key={entropyLevel} value={index}>\r\n                                        {entropyLevel}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Instant Deal</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should the deal animation at the beginning of the game be skipped?</div>\r\n                            <select onChange={(e) => setQuickDeal(e.target.value)} value={state.quickDeal ? \"1\" : \"0\"}>\r\n                                <option key={0} value=\"1\">\r\n                                    Yes\r\n                                </option>\r\n                                <option key={1} value=\"0\">\r\n                                    No\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"content center\">\r\n                    {getSettingRows(state).map((row, index) => (\r\n                        <div key={index}>\r\n                            {row.buttons.map((button, bi) => (\r\n                                <button\r\n                                    key={button.id}\r\n                                    disabled={state.quickDeal == button.model.quickDeal}\r\n                                    className={getClassName(button, index, bi)}\r\n                                    onClick={() =>\r\n                                        setState({\r\n                                            ...state,\r\n                                            quickDeal: button.model.quickDeal,\r\n                                            entropySettings: {\r\n                                                baseEntropy: button.model.entropy,\r\n                                                interactionEntropy: button.model.entropy,\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    {button.icon}\r\n                                    {button.lines.map((line, lindex) => (\r\n                                        <div key={lindex}>{line}</div>\r\n                                    ))}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default QuickStart;\r\n","import { ScreenButton, ScreenRow } from \"./Navigation\";\r\n\r\nimport RatingPresets from \"./RatingOptions\";\r\nimport { RatingSettings } from \"../../../Common\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nexport const getRatingRows = () => [\r\n    new ScreenRow(RatingPresets.all.map((preset) => new ScreenButton(preset.id, preset.icon, [preset.label], preset))),\r\n];\r\n\r\nconst Rating = (props: { head: string }) => {\r\n    const ctx = React.useContext(StartScreenContext);\r\n    const context = ctx.state;\r\n    const setContext = ctx.setState;\r\n    const [toggle, setToggle] = React.useState<boolean>(false);\r\n\r\n    const applyPreset = (id: number) => setContext({ ...context, ratingSettings: { ...RatingPresets.all[id].settings }, ratingPreset: id });\r\n    const getButtonClass = (index: number, y: number, x: number) => {\r\n        const hasFocus = context.focus == \"screen\" && context.screen.x == x && context.screen.y == y;\r\n        let name = context.ratingPreset == index ? `active active-${index}` : `inactive-${index}`;\r\n        name += hasFocus ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\r\n        const next = { ...context };\r\n        modifier(next.ratingSettings);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setContext(next);\r\n    };\r\n    const setMissPenalty = (value: string) => customizeRating((r) => (r.missPenalty = value == \"true\"));\r\n    const setTimeRating = (value: string) => customizeRating((r) => (r.timedMode = value == \"true\"));\r\n    const setUndoPenalty = (value: string) => customizeRating((r) => (r.undoPenalty = value == \"true\"));\r\n    const setHintPenalty = (value: string) => customizeRating((r) => (r.hintPenalty = value == \"true\"));\r\n\r\n    return (\r\n        <div className=\"ui rating startdetails quickstart\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => setToggle(!toggle)}>{toggle ? \"🗙\" : \"☰\"}</button>\r\n            </div>\r\n            <div className=\"title\">{props.head}: Rating</div>\r\n            {toggle ? (\r\n                <div className=\"content\">\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Undo Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">\r\n                                Should there be a penalty for the UNDO operation? This penalty increases exponentially.\r\n                            </div>\r\n                            <select onChange={(e) => setUndoPenalty(e.target.value)} value={String(!!context.ratingSettings.undoPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Time Rating</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">\r\n                                Should the performance be part of the final rating, according to the rules described{\" \"}\r\n                                <a href=\"https://en.wikipedia.org/wiki/Klondike_(solitaire)#Scoring\" rel=\"noreferrer\" target=\"_blank\">\r\n                                    here\r\n                                </a>\r\n                                ?\r\n                            </div>\r\n                            <select onChange={(e) => setTimeRating(e.target.value)} value={String(!!context.ratingSettings.timedMode)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Hint Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should there be a penalty for the HINT operation? This penalty does not increase.</div>\r\n                            <select onChange={(e) => setHintPenalty(e.target.value)} value={String(!!context.ratingSettings.hintPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Miss Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should there be a penalty for attempting to perform invalid actions?</div>\r\n                            <select onChange={(e) => setMissPenalty(e.target.value)} value={String(!!context.ratingSettings.missPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"content center\">\r\n                    {getRatingRows().map((row, ri) => (\r\n                        <div key={ri}>\r\n                            {row.buttons.map((preset, bi) => (\r\n                                <button\r\n                                    key={preset.id}\r\n                                    className={getButtonClass(preset.id, ri, bi)}\r\n                                    onClick={() => applyPreset(preset.id)}\r\n                                >\r\n                                    {preset.icon}\r\n                                    <div>{preset.lines[0]}</div>\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","import Controls from \"./Controls\";\r\nimport Difficulty from \"./Difficulty\";\r\nimport { GameMode } from \"../../GameModes\";\r\nimport QuickStart from \"./QuickStart\";\r\nimport Rating from \"./Rating\";\r\nimport React from \"react\";\r\n\r\nconst Screen = (props: { screen: string; mainMenu: GameMode }) => {\r\n    const getScreen = () => {\r\n        switch (props.screen) {\r\n            case \"rating\":\r\n                return <Rating head={props.mainMenu.title} />;\r\n            case \"difficulty\":\r\n                return <Difficulty head={props.mainMenu.title} />;\r\n            case \"settings\":\r\n                return <QuickStart head={props.mainMenu.title} />;\r\n            case \"controls\":\r\n                return <Controls head={props.mainMenu.title} />;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return props.screen ? (\r\n        <div className=\"startscreen-layout\">\r\n            <div className=\"startscreen-jail\">\r\n                {getScreen()}\r\n            </div>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default Screen;\r\n","const TouchDetector = ()  => {\r\n    try {\r\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n        const mq = (query) => window.matchMedia(query).matches;\r\n\r\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n            return true;\r\n        }\r\n\r\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n    } catch (e) {\r\n        console.error(\"(Touch detect failed)\", e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default TouchDetector;","import React from \"react\";\r\n\r\nconst VerticalMenu = (props) => {\r\n    return <div className=\"ui menu\">{props.children}</div>;\r\n};\r\nexport default VerticalMenu;\r\n","import \"./View/Style/App.css\";\r\nimport \"./View/Style/UI.css\";\r\n\r\nimport { AppState, StartScreenState } from \"./Common\";\r\nimport GameModes, { GameMode } from \"./View/GameModes\";\r\n\r\nimport BoardWrap from \"./View/Game/BoardWrap\";\r\nimport Deck from \"./Model/Deck/Deck\";\r\nimport DifficultyOptions from \"./View/UI/StartScreen/DifficultyOptions\";\r\nimport GamePad from \"./View/Game/GamePad\";\r\nimport Keyboard from \"./View/Game/Keyboard\";\r\nimport MenuButton from \"./View/UI/Menu/MenuButton\";\r\nimport MenuTitle from \"./View/UI/Menu/MenuTitle\";\r\nimport { PauseProvider } from \"./View/PauseContext\";\r\nimport { Provider } from \"./View/UI/StartScreen/Context\";\r\nimport RatingPresets from \"./View/UI/StartScreen/RatingOptions\";\r\nimport React from \"react\";\r\nimport Screen from \"./View/UI/StartScreen/Screen\";\r\nimport TouchDetector from \"./View/UI/StartScreen/TouchDetector\";\r\nimport VerticalMenu from \"./View/UI/Menu/VerticalMenu\";\r\nimport { getDifficultyRows } from \"./View/UI/StartScreen/Difficulty\";\r\nimport { getRatingRows } from \"./View/UI/StartScreen/Rating\";\r\nimport { getSettingRows } from \"./View/UI/StartScreen/QuickStart\";\r\n\r\ninterface IButton {\r\n    getClickable: () => IButton[];\r\n    updateMap: (x: number, y: number) => void;\r\n    onClick: () => void;\r\n}\r\n\r\nclass Button {\r\n    isRoot: any;\r\n    id: any;\r\n    active: any;\r\n    icon: any;\r\n    title: any;\r\n    onClick: () => void;\r\n    blink: boolean;\r\n    toggled: boolean;\r\n    children: Button[];\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor() {\r\n        this.isRoot = false;\r\n        this.id = \"not null\";\r\n        this.active = false;\r\n        this.icon = \"\";\r\n        this.title = \"\";\r\n        this.onClick = () => {};\r\n        this.blink = false;\r\n        this.toggled = false;\r\n        this.children = [];\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n}\r\n\r\nclass MenuLeafButton extends Button implements IButton {\r\n    constructor(id: string, icon: string, title: string) {\r\n        super();\r\n        this.id = id;\r\n        this.icon = icon;\r\n        this.title = title;\r\n    }\r\n    updateMap: (x: number, y: number) => void = (x: number, y: number) => {\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n    getClickable: () => IButton[] = () => {\r\n        return [this];\r\n    };\r\n}\r\n\r\nclass MenuNodeButton extends Button implements IButton {\r\n    children: any;\r\n    toggled: any;\r\n    constructor(children: IButton[]) {\r\n        super();\r\n        this.children = children;\r\n        this.toggled = false;\r\n    }\r\n    updateMap: (x: number, y: number) => void = (x: number, y: number) => {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.children.forEach((child: IButton, index: number) => child.updateMap(x, index + 1));\r\n    };\r\n    getClickable: () => IButton[] = () => {\r\n        return !this.toggled ? [this] : [this, ...this.children.map((child: IButton) => child.getClickable())].flat();\r\n    };\r\n}\r\n\r\nclass MenuSectionButton extends MenuNodeButton {\r\n    gameMode: GameMode;\r\n    constructor(\r\n        id: string,\r\n        icon: string,\r\n        title: string,\r\n        gameMode: GameMode,\r\n        currentGameMode: string,\r\n        toggleMainMenu: (val: GameMode) => void,\r\n        children: IButton[]\r\n    ) {\r\n        super(children);\r\n        this.id = id;\r\n        this.icon = icon;\r\n        this.title = title;\r\n        this.gameMode = gameMode;\r\n        this.onClick = () => toggleMainMenu(gameMode);\r\n        this.toggled = gameMode.key == currentGameMode;\r\n    }\r\n    moveDown = (x: number, y: number, next: number) => {\r\n        //const current = this.children[y];\r\n        if (this.children.length > y) {\r\n            return { x: x, y: y + 1 };\r\n        } else {\r\n            return { x: next, y: 0 };\r\n        }\r\n    };\r\n    moveUp = (x: number, y: number, previous: number) => {\r\n        //const current = this.children[y];\r\n        if (y > 1) {\r\n            return { x: x, y: y - 1 };\r\n        } else {\r\n            return { x: previous, y: 0 };\r\n        }\r\n    };\r\n}\r\n\r\nclass MenuPageButton extends MenuLeafButton {\r\n    constructor(id: string, icon: string, title: string, screen: string, setScreen: (s: string) => void) {\r\n        super(id, icon, title);\r\n        this.active = id == screen;\r\n        this.onClick = () => setScreen(this.id);\r\n    }\r\n}\r\n\r\ninterface XY {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ninterface NavHandler {\r\n    moveUp: (x: number, y: number) => XY;\r\n    moveDown: (x: number, y: number) => XY;\r\n    moveLeft: (x: number, y: number) => XY;\r\n    moveRight: (x: number, y: number) => XY;\r\n    action: (x: number, y: number) => void;\r\n}\r\n\r\nclass MenuRootButton extends MenuNodeButton implements NavHandler {\r\n    escape: () => void;\r\n    constructor(escape: () => void, children: IButton[]) {\r\n        super(children);\r\n        this.isRoot = true;\r\n        this.children = children;\r\n        this.escape = escape;\r\n    }\r\n    getClickable: () => IButton[] = () => [...this.children.map((child: IButton) => child.getClickable())].flat();\r\n    withMap = () => {\r\n        this.children.forEach((child: IButton, i: number) => child.updateMap(i, 0));\r\n        return this;\r\n    };\r\n    moveRight = () => {\r\n        //switch to screen handler if possible\r\n        throw new Error(\"cant go right\");\r\n    };\r\n    moveLeft = (x: number, y: number) => {\r\n        //ignore\r\n        return { x, y };\r\n    };\r\n    moveDown = (x: number, y: number) => {\r\n        const current = this.children[x];\r\n        if (y > 0) {\r\n            const next = this.children.length - 1 == x ? 0 : x + 1;\r\n            return current.moveDown(x, y, next);\r\n        }\r\n\r\n        if (current.getClickable().length > 1) {\r\n            return { x, y: y + 1 };\r\n        }\r\n\r\n        if (this.children.length > x + 1) {\r\n            return { x: x + 1, y: 0 };\r\n        } else {\r\n            return { x: 0, y: 0 };\r\n        }\r\n    };\r\n    moveUp = (x: number, y: number) => {\r\n        const current = this.children[x];\r\n        if (y > 0) {\r\n            const previous = x == 0 ? this.children.length : x;\r\n            return current.moveUp(x, y, previous);\r\n        }\r\n        const previous = x == 0 ? this.children.length - 1 : x - 1;\r\n        return { x: previous, y: this.children[previous].getClickable().length - 1 };\r\n    };\r\n    action = (x: number, y: number) => {\r\n        const current = this.children[x];\r\n        if (y > 0) {\r\n            current.children[y - 1].onClick();\r\n        } else {\r\n            current.onClick();\r\n        }\r\n    };\r\n}\r\n\r\nclass ScreenNavigator implements NavHandler {\r\n    escape: () => void;\r\n    screen: string;\r\n    state: StartScreenState;\r\n    constructor(escape: () => void, screen: string, state: StartScreenState) {\r\n        this.escape = escape;\r\n        this.screen = screen;\r\n        this.state = state;\r\n    }\r\n    getRows = () => {\r\n        if (this.screen == \"rating\") {\r\n            return getRatingRows();\r\n        }\r\n        if (this.screen == \"settings\") {\r\n            return getSettingRows(this.state);\r\n        }\r\n        if (this.screen == \"difficulty\") {\r\n            return getDifficultyRows();\r\n        }\r\n        return [];\r\n    };\r\n    getRow = (x: number) => this.getRows()[x];\r\n    moveUp: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const rows = this.getRows();\r\n        console.debug(rows, x, y);\r\n        if (rows.length < 2) {\r\n            return { x: x, y: y };\r\n        }\r\n        if (y == 0) {\r\n            return { x: x, y: rows.length - 1 };\r\n        }\r\n        return { x: x, y: y - 1 };\r\n    };\r\n    moveDown: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const rows = this.getRows();\r\n        console.debug(rows, x, y);\r\n        if (rows.length < 2) {\r\n            return { x: x, y: y };\r\n        }\r\n        if (y == rows.length - 1) {\r\n            return { x: x, y: 0 };\r\n        }\r\n        return { x: x, y: y + 1 };\r\n    };\r\n    moveLeft: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const row = this.getRow(y);\r\n        console.debug(row, x, y);\r\n        if (x == 0) {\r\n            throw new Error(\"cant go left\");\r\n        }\r\n        return { x: x - 1, y: y };\r\n    };\r\n    moveRight: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const row = this.getRow(y);\r\n        console.debug(row, x, y);\r\n        if (x == row.buttons.length - 1) {\r\n            return { x: 0, y: y };\r\n        }\r\n        return { x: x + 1, y: y };\r\n    };\r\n    action: (x: number, y: number) => void = () => {};\r\n}\r\n\r\nclass MenuStartButton extends MenuLeafButton {\r\n    static getTitle = (gameMode: GameMode) => {\r\n        if (gameMode.key == GameModes.CUSTOM.key) {\r\n            return \"Start Custom\";\r\n        }\r\n        if (gameMode.key == GameModes.VERSUS.key) {\r\n            return \"Start Versus\";\r\n        }\r\n        return \"Quick Start\";\r\n    };\r\n    constructor(gameMode: GameMode, start: () => void) {\r\n        super(\"start\", \"🎲\", MenuStartButton.getTitle(gameMode));\r\n        this.blink = true;\r\n        this.onClick = start;\r\n    }\r\n}\r\n\r\nconst App = () => {\r\n    const [started, setStarted] = React.useState<number>(0);\r\n    const [paused, setPaused] = React.useState<boolean>(false);\r\n    const defaultState = { gameMode: \"singleplayer\", inputMode: \"mouse\", paused, setPaused, initialized: false };\r\n    const [appState, setAppState] = React.useState<AppState>(defaultState);\r\n    const [mainMenu, setMainMenu] = React.useState<GameMode>(GameModes.QUICK);\r\n\r\n    const toggleMainMenu = (val: GameMode) => {\r\n        if (mainMenu.key !== val.key) {\r\n            setMainMenu(val);\r\n            if (!val.autoConfig) {\r\n                setScreen(\"rating\");\r\n                //@todo also move cursor to rating\r\n            }\r\n        } else {\r\n            setMainMenu(GameModes.QUICK);\r\n            setScreen(\"\");\r\n            //@todo also move cursor to QUICK\r\n            //? should screen, mainmenu and cursor be part of the same state object ?\r\n        }\r\n    };\r\n    const [screen, setScreen] = React.useState<string>(\"\");\r\n    const [state, setState] = React.useState<StartScreenState>({\r\n        ratingSettings: { ...RatingPresets.all[1].settings },\r\n        difficultySettings: 1,\r\n        ratingPreset: 1,\r\n        quickDeal: TouchDetector(),\r\n        entropySettings: {\r\n            baseEntropy: TouchDetector() ? 1 : 2,\r\n            interactionEntropy: TouchDetector() ? 1 : 2,\r\n        },\r\n        menu: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        screen: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        focus: \"menu\",\r\n    });\r\n    const restart = () => {\r\n        setAppState(defaultState);\r\n    };\r\n\r\n    const deck = new Deck().shuffle();\r\n    const start = () => {\r\n        deck.shuffle();\r\n        const settings = {\r\n            ...appState,\r\n            ...DifficultyOptions[state.difficultySettings].settings,\r\n            ...state.ratingSettings,\r\n            ...state.entropySettings,\r\n            quickDeal: state.quickDeal,\r\n            gameMode: mainMenu.boardMode,\r\n            initialized: true,\r\n        };\r\n        setAppState(settings);\r\n        setStarted(Date.now());\r\n    };\r\n\r\n    if (appState.initialized) {\r\n        let board = null;\r\n        if (mainMenu.boardMode == \"singleplayer\") {\r\n            board = (\r\n                <div className=\"game-layout-container singleplayer\">\r\n                    <BoardWrap player=\"1\" settings={appState} restart={restart} deck={deck} />\r\n                </div>\r\n            );\r\n        }\r\n        if (mainMenu.boardMode == \"splitscreen\") {\r\n            board = (\r\n                <div className=\"game-layout-container splitscreen\">\r\n                    <BoardWrap player=\"1\" settings={{ ...appState, inputMode: \"gamepad\" }} restart={restart} deck={deck.copy()} />\r\n                    <BoardWrap player=\"2\" settings={{ ...appState, inputMode: \"keyboard\" }} restart={restart} deck={deck.copy()} />\r\n                </div>\r\n            );\r\n        }\r\n        return <PauseProvider started={started}>{board}</PauseProvider>;\r\n    }\r\n\r\n    const switchToScreen = () => {\r\n        if (screen) {\r\n            setState({ ...state, focus: \"screen\" });\r\n        }\r\n    };\r\n\r\n    const switchToMenu = () => {\r\n        setState({ ...state, focus: \"menu\" });\r\n    };\r\n\r\n    const getNavigator = () => (state.focus == \"menu\" ? buttons() : new ScreenNavigator(switchToMenu, screen, state));\r\n    const assignState = (result: XY) => {\r\n        if (state.focus == \"menu\") {\r\n            setState({ ...state, menu: result });\r\n        }\r\n        if (state.focus == \"screen\") {\r\n            setState({\r\n                ...state,\r\n                screen: result,\r\n                currentButton: new ScreenNavigator(switchToMenu, screen, state).getRows()[state.screen.y].buttons[state.screen.x],\r\n            });\r\n        }\r\n    };\r\n\r\n    const getPos = () => (state.focus == \"menu\" ? state.menu : state.screen);\r\n    const onUp = () => {\r\n        const result = getNavigator().moveUp(getPos().x, getPos().y);\r\n        assignState(result);\r\n    };\r\n    const onDown = () => {\r\n        const result = getNavigator().moveDown(getPos().x, getPos().y);\r\n        assignState(result);\r\n    };\r\n\r\n    const onLeft = () => {\r\n        try {\r\n            const result = getNavigator().moveLeft(getPos().x, getPos().y);\r\n            assignState(result);\r\n        } catch (e) {\r\n            getNavigator().escape();\r\n        }\r\n    };\r\n\r\n    const onRight = () => {\r\n        try {\r\n            const result = getNavigator().moveRight(getPos().x, getPos().y);\r\n            assignState(result);\r\n        } catch (e) {\r\n            getNavigator().escape();\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    const onAction = () => {\r\n        getNavigator().action(getPos().x, getPos().y);\r\n    };\r\n\r\n    const buttons = (): MenuRootButton =>\r\n        new MenuRootButton(switchToScreen, [\r\n            new MenuStartButton(mainMenu, start),\r\n            new MenuSectionButton(\"custom\", \"⚙️\", \"Custom Game\", GameModes.CUSTOM, mainMenu.key, toggleMainMenu, [\r\n                new MenuPageButton(\"rating\", \"🎲\", \"Rating\", screen, setScreen),\r\n                new MenuPageButton(\"difficulty\", \"💪\", \"Difficulty\", screen, setScreen),\r\n                new MenuPageButton(\"settings\", \"🔧\", \"Settings\", screen, setScreen),\r\n            ]),\r\n            new MenuSectionButton(\"versus\", \"🏆\", \"Versus\", GameModes.VERSUS, mainMenu.key, toggleMainMenu, [\r\n                new MenuPageButton(\"rating\", \"🎲\", \"Rating\", screen, setScreen),\r\n                new MenuPageButton(\"difficulty\", \"💪\", \"Difficulty\", screen, setScreen),\r\n                new MenuPageButton(\"settings\", \"🔧\", \"Settings\", screen, setScreen),\r\n                new MenuPageButton(\"controls\", \"🎮\", \"Controls\", screen, setScreen),\r\n            ]),\r\n        ]).withMap();\r\n\r\n    const ButtonRenderer = (props: any) => {\r\n        const render = (c: Button) => {\r\n            return (\r\n                <MenuButton\r\n                    key={c.x + \"-\" + c.y}\r\n                    x={c.x}\r\n                    y={c.y}\r\n                    active={c.active}\r\n                    onClick={c.onClick}\r\n                    icon={c.icon}\r\n                    title={c.title}\r\n                    toggled={c.toggled}\r\n                    blink={c.blink}\r\n                ></MenuButton>\r\n            );\r\n        };\r\n\r\n        return <>{props.buttons.map(render)}</>;\r\n    };\r\n\r\n    return (\r\n        <Provider value={{ state, setState }}>\r\n            <VerticalMenu>\r\n                <MenuTitle label=\"Solitaire\" />\r\n                <ButtonRenderer buttons={buttons().getClickable()} />\r\n            </VerticalMenu>\r\n            <Screen screen={screen} mainMenu={mainMenu} />\r\n            <Keyboard onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} />\r\n            <GamePad onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} />\r\n        </Provider>\r\n    );\r\n};\r\nexport default App;\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}