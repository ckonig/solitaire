{"version":3,"file":"static/js/501.b2935966.chunk.js","mappings":"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","sources":["Common.ts","View/UI/CookieContext.ts","Model/Deck/Deck.ts","View/UI/StartScreen/RatingOptions.ts","common/TouchDetector.js","View/UI/StartScreen/StartScreenContext.ts","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/ControlsPresets.ts","View/UI/StartScreen/Screens/CloseButton.tsx","View/UI/StorageManager.ts","View/UI/StartScreen/Screens/ScreenElement.ts","View/UI/StartScreen/Screens/CookieBanner.tsx","View/UI/StartScreen/Screens/Row.tsx","View/UI/StartScreen/Screens/ScreenNavWrapper.tsx","View/UI/StartScreen/Screens/ScreenNavigator.ts","View/UI/StartScreen/Screens/ScreenContent.tsx","View/UI/StartScreen/Screens/ScreenMainButton.tsx","View/UI/StartScreen/Screens/Controls.tsx","View/UI/StartScreen/Screens/Difficulty.tsx","View/UI/StartScreen/Screens/ScreenSelect.tsx","View/UI/StartScreen/Screens/QuickStart.tsx","View/UI/StartScreen/Screens/ScreenToggle.tsx","View/UI/StartScreen/Screens/Rating.tsx","View/UI/StartScreen/Screens/Suggestions.tsx","View/UI/StartScreen/Screens/Support.tsx","View/UI/StartScreen/Screens/Screen.tsx","common/Overlay.tsx","View/UI/StartScreen/ConsentDialog.tsx","View/UI/StartScreen/Menu/VerticalMenu.tsx","View/UI/StartScreen/Menu/StartMenu.tsx","View/UI/StartScreen/Home.tsx","App.tsx","GameModes.tsx","Model/Deck/Card.ts","Model/Deck/DeckSize.ts","Model/Deck/Suits.ts","Model/Game/Settings/EntropyLevels.ts","Model/Game/Settings/SuggestionModes.ts","View/UI/StartScreen/AbstractNavigator.ts","View/UI/StartScreen/Menu/MenuButton.tsx","View/UI/StartScreen/Menu/MenuTitle.tsx","View/UI/StartScreen/Menu/TreeNavWrapper.tsx","View/UI/StartScreen/Menu/TreeNavigator.ts","View/UI/StartScreen/Menu/MenuTree.tsx","View/UI/StartScreen/NavigationContext.tsx","common/AspectRatio/AspectRatio.tsx","common/AspectRatio/Ratios.ts","common/GamePad.tsx","common/GamepadLayout.ts","common/Keyboard.ts","common/KeyboardLayouts.ts"],"sourcesContent":["import Card from \"./Model/Deck/Card\";\nimport Model from \"./Model/Model\";\n\nexport type StateReplacer = (state: Model) => Model | null;\nexport type StateUpdater = (state: Model) => void;\nexport type StateReplaceFunction = (modifier: StateReplacer) => void;\nexport type StateUpdateFunction = (modifier: StateUpdater) => void;\n\nexport const defaultPlayerSettings: PlayerSettings = {\n    0: {\n        id: 0,\n        name: \"Player 1\",\n        inputMethod: \"gamepad\",\n        inputLayout: 0,\n    },\n    1: {\n        id: 1,\n        name: \"Player 2\",\n        inputMethod: \"keyboard\",\n        inputLayout: 0,\n    },\n};\n\ninterface PlayerSetting {\n    id: number;\n    name: string;\n    inputMethod: string;\n    inputLayout: number;\n}\n\nexport interface PlayerSettings {\n    [id: number]: PlayerSetting;\n}\n\nexport interface LaunchSettings extends RatingSettings {\n    recyclingMode: string;\n    drawMode: string;\n    interactionEntropy: number;\n    baseEntropy: number;\n    suggestionMode: string;\n    players: PlayerSettings;\n    boardMode: string;\n    initialized?: boolean;\n    quickDeal?: boolean;\n    speed?: boolean;\n    autoUncover?: boolean;\n}\n\nexport interface ClickHandler {\n    dispatchPutDown: (card: Card, position: any, state: Model, index: number) => void;\n    dispatchPickup: (card: Card | null, position: any, state: Model, index: number) => void;\n}\n\nexport type BlinkFunction = (state: Model, index: number) => void;\n\nexport interface RatingSettings {\n    undoPenalty?: boolean;\n    hintPenalty?: boolean;\n    timedMode?: boolean;\n    missPenalty?: boolean;\n}\n\nexport interface EntropySettings {\n    baseEntropy?: number;\n    interactionEntropy?: number;\n}\n","import React from \"react\";\n\nexport interface ICookieContext {\n    consented: boolean;\n    setConsented: (c: boolean) => void;\n}\n\nconst CookieContext = React.createContext<ICookieContext>({ consented: false, setConsented: () => {} });\nexport const CookieContextProvider = CookieContext.Provider;\nconst useCookieContext = () => React.useContext(CookieContext);\nexport default useCookieContext;\n","import Card from \"./Card\";\nimport { DeckSize } from \"./DeckSize\";\nimport Suits from \"./Suits\";\n\nexport default class Deck {\n    cards: Card[];\n    constructor() {\n        const keys = Object.keys(Suits);\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\n            .flat()\n            .reverse();\n    }\n\n    shuffle() {\n        this.shuffleArray(this.cards);\n        return this;\n    }\n\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n    shuffleArray(array: any[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    copy() {\n        const result = new Deck();\n        result.cards = Card.copyAll(this.cards);\n        return result;\n    }\n}\n","import { RatingSettings } from \"../../../Common\";\nimport { StartScreenState } from \"./StartScreenContext\";\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\n\nexport interface RatingPreset {\n    id: number;\n    icon: string;\n    label: string;\n    settings: RatingSettings;\n    apply: (s: StartScreenState) => void;\n}\n\nconst apply = (after: RatingSettings, s: StartScreenState, id: number) => {\n    if (!s.ratingSettings.hintPenalty && after.hintPenalty) {\n        s.suggestionMode = SuggestionModes.NONE;\n    }\n    //@todo remember which suggestion mode was there before, and reset to that on next change of hint penalty\n    s.ratingSettings = { ...after };\n    s.ratingPreset = id;\n};\n\nexport default class RatingPresets {\n    static CHILL = {\n        timedMode: false,\n        missPenalty: false,\n        undoPenalty: false,\n        hintPenalty: false,\n    };\n\n    static REGULAR = {\n        timedMode: true,\n        missPenalty: false,\n        undoPenalty: true,\n        hintPenalty: false,\n    };\n\n    static COMPETITIVE = {\n        timedMode: true,\n        missPenalty: true,\n        undoPenalty: true,\n        hintPenalty: true,\n    };\n\n    static ALL: RatingPreset[] = [\n        {\n            id: 0,\n            icon: \"🌴\",\n            label: \"Chill\",\n            settings: { ...RatingPresets.CHILL },\n            apply: (s) => apply(RatingPresets.CHILL, s, 0),\n        },\n        {\n            id: 1,\n            icon: \"⚖️\",\n            label: \"Regular\",\n            settings: { ...RatingPresets.REGULAR },\n            apply: (s) => apply(RatingPresets.REGULAR, s, 1),\n        },\n        {\n            id: 2,\n            icon: \"🏆\",\n            label: \"Competitive\",\n            settings: { ...RatingPresets.COMPETITIVE },\n            apply: (s) => apply(RatingPresets.COMPETITIVE, s, 2),\n        },\n    ];\n\n    static matchPreset = (settings: any) => {\n        const filterd = RatingPresets.ALL.filter((preset) => RatingPresets.equals(preset.settings, settings));\n        if (filterd.length > 0) {\n            return filterd[0].id;\n        }\n        return -1;\n    };\n\n    static equals = (s1: any, s2: any) =>\n        s1.timedMode === s2.timedMode &&\n        s1.missPenalty === s2.missPenalty &&\n        s1.undoPenalty === s2.undoPenalty &&\n        s1.hintPenalty === s2.hintPenalty;\n}\n","//credit https://stackoverflow.com/a/60312025/1216242\nconst TouchDetector = () => {\n    try {\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\n\n        const mq = (query) => window.matchMedia(query).matches;\n\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\n            return true;\n        }\n\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\n    } catch (e) {\n        console.error(\"(Touch detect failed)\", e);\n        return false;\n    }\n};\n\nexport default TouchDetector;\n","import { EntropySettings, PlayerSettings, RatingSettings, defaultPlayerSettings } from \"../../../Common\";\n\nimport RatingPresets from \"./RatingOptions\";\nimport React from \"react\";\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\nimport TouchDetector from \"../../../common/TouchDetector\";\n\nexport interface IStartScreenContext {\n    state: StartScreenState;\n    setState: (s: StartScreenState) => void;\n}\n\nexport const defaultStartScreenState: StartScreenState = {\n    ratingSettings: { ...RatingPresets.REGULAR },\n    difficultySettings: 1,\n    ratingPreset: 1,\n    quickDeal: TouchDetector(),\n    autoResolve: true,\n    autoUncover: false,\n    speed: false,\n    entropySettings: {\n        baseEntropy: TouchDetector() ? 1 : 2,\n        interactionEntropy: TouchDetector() ? 1 : 2,\n    },\n    suggestionMode: SuggestionModes.REGULAR,\n    players: defaultPlayerSettings,\n};\n\nexport interface StartScreenState {\n    ratingSettings: RatingSettings;\n    difficultySettings: number;\n    ratingPreset: number;\n    quickDeal: boolean;\n    autoResolve: boolean;\n    autoUncover: boolean;\n    speed: boolean;\n    entropySettings: EntropySettings;\n    suggestionMode: string;\n    players: PlayerSettings;\n}\n\nconst StartScreenContext = React.createContext<IStartScreenContext>({\n    state: {\n        difficultySettings: 0,\n        ratingPreset: 0,\n        ratingSettings: {},\n        entropySettings: {},\n        quickDeal: false,\n        autoResolve: true,\n        autoUncover: false,\n        speed: false,\n        suggestionMode: SuggestionModes.REGULAR,\n        players: defaultPlayerSettings,\n    },\n    setState: () => {},\n});\n\nexport const StartScreenProvider = StartScreenContext.Provider;\n\nconst useStartScreenContext = () => React.useContext(StartScreenContext);\n\nexport default useStartScreenContext;\n","export interface DifficultyOption {\n    id: number;\n    settings: {\n        drawMode: string;\n        recyclingMode: string;\n    };\n    icon: string;\n    lines: string[];\n}\nconst DifficultyOptions: DifficultyOption[] = [\n    {\n        id: 0,\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\n        icon: \"🐭\",\n        lines: [\"Turn 1 card\", \"No Limit\"],\n    },\n    {\n        id: 1,\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\n        icon: \"🐹\",\n        lines: [\"Turn 1 card\", \"Three passes\"],\n    },\n    {\n        id: 2,\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\n        icon: \"🐰\",\n        lines: [\"Turn 1 card\", \"Only a single pass\"],\n    },\n    {\n        id: 3,\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\n        icon: \"🐨\",\n        lines: [\"Turn 3 cards\", \"No limit\"],\n    },\n    {\n        id: 4,\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\n        icon: \"🐼\",\n        lines: [\"Turn 3 cards \", \"Three passes\"],\n    },\n    {\n        id: 5,\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\n        icon: \"🐻\",\n        lines: [\"Turn 3 cards \", \"Only a single pass\"],\n    },\n];\n\nexport default DifficultyOptions;\n","export interface IControlPreset {\n    id: number;\n    icon: string;\n    inputMethod: string;\n    inputLayout: number;\n    lines: string[],\n}\nexport const ControlPresets: IControlPreset[] = [\n    {\n        id: 0,\n        icon: \"🖱️\",\n        inputMethod: \"mouse\",\n        inputLayout: 0,\n        lines: [\"Mouse or\", \"Touchpad\"],\n    },\n    {\n        id: 1,\n        icon: \"🎮\",\n        inputMethod: \"gamepad\",\n        inputLayout: 0,\n        lines: [\"Gamepad 1\"],\n    },\n    {\n        id: 2,\n        icon: \"🎮\",\n        inputMethod: \"gamepad\",\n        inputLayout: 1,\n        lines: [\"Gamepad 2\"],\n    },\n    {\n        id: 3,\n        icon: \"⌨️\",\n        inputMethod: \"keyboard\",\n        inputLayout: 0,\n        lines: [\"Keyboard\", \"WASD\"],\n    },\n    {\n        id: 4,\n        icon: \"⌨️\",\n        inputMethod: \"keyboard\",\n        inputLayout: 1,\n        lines: [\"Keyboard\", \"ARROWS\"],\n    },\n    {\n        id: 5,\n        icon: \"⌨️\",\n        inputMethod: \"keyboard\",\n        inputLayout: 2,\n        lines: [\"Keyboard\", \"NUMPAD\"],\n    },\n];\n","import React from \"react\";\nimport useNavigationContext from \"../NavigationContext\";\n\nconst CloseButton = () => {\n    const { closeScreen } = useNavigationContext();\n    return (\n        <div className=\"closer\">\n            <button onClick={closeScreen}>🗙</button>\n        </div>\n    );\n};\n\nexport default CloseButton;\n","import { StartScreenState } from \"./StartScreen/StartScreenContext\";\n\nexport interface ConsentObject {\n    prompt: string;\n    confirm: () => boolean;\n}\n\nexport default class StorageManager {\n    static instance: StorageManager;\n    static getInstance = () => {\n        if (!StorageManager.instance) {\n            StorageManager.instance = new StorageManager();\n        }\n        return StorageManager.instance;\n    };\n    hasConsent = () => {\n        const consent = localStorage.getItem(\"consent\");\n        return consent && !!parseInt(consent);\n    };\n\n    giveConsent: () => ConsentObject = () => ({\n        prompt: \"Allow this game to store settings, so your changes will stay. No data leaves your computer.\",\n        confirm: () => {\n            localStorage.setItem(\"consent\", \"1\");\n            return true;\n        },\n    });\n\n    getDialog = () => (this.hasConsent() ? this.revokeConsent() : this.giveConsent());\n\n    revokeConsent: () => ConsentObject = () => ({\n        prompt: \"Delete all local stored data? All settings will be lost.\",\n        confirm: () => {\n            localStorage.clear();\n            return false;\n        },\n    });\n\n    store = (value: StartScreenState) => {\n        if (this.hasConsent()) {\n            localStorage.setItem(\"state\", JSON.stringify(value));\n        }\n    };\n\n    getPreviousState = () => {\n        if (this.hasConsent()) {\n            const state = localStorage.getItem(\"state\");\n            return state != null ? JSON.parse(state) : null;\n        }\n        return null;\n    };\n}\n","import React from \"react\";\nimport { XY } from \"../../XY\";\n\nexport interface Focusable {\n    hasFocus: boolean;\n    autoFocus?: boolean;\n}\n\nexport interface MenuInpputElementProps extends Focusable {\n    disabled?: boolean;\n}\n\nexport const getScreenElementClassName = (base: string, props: MenuInpputElementProps) => {\n    let className = base;\n    if (props.hasFocus) {\n        className += \" focused\";\n    }\n    if (props.disabled) {\n        className += \" disabled\";\n    }\n    return className;\n};\n\nexport const useFocusEffect = (props: Focusable, inputEl: React.RefObject<HTMLElement>) => {\n    React.useEffect(() => {\n        if (props.hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\n            inputEl.current.focus();\n        }\n    }, [props.hasFocus, inputEl]);\n};\n\nexport const useInitialFocus = (props: Focusable, inputEl: React.RefObject<HTMLElement>, pos: XY) => {\n    React.useEffect(() => {\n        if (\n            props.autoFocus &&\n            !props.hasFocus &&\n            inputEl &&\n            inputEl.current &&\n            inputEl.current !== document.activeElement &&\n            pos.x === -1 &&\n            pos.y === -1\n        ) {\n            inputEl.current.focus();\n        }\n        //@todo how to one-time hook in valid way?\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [inputEl]);\n};\n","import useCookieContext, { ICookieContext } from \"../../CookieContext\";\n\nimport React from \"react\";\nimport StorageManager from \"../../StorageManager\";\nimport { XY } from \"../../XY\";\nimport { useFocusEffect } from \"./ScreenElement\";\nimport useNavigationContext from \"../NavigationContext\";\n\ninterface RenderCookieBannerProps extends ICookieContext, XY {}\n\nconst RenderCookieBanner = (props: RenderCookieBannerProps) => {\n    const { navigation } = useNavigationContext();\n    const hasFocus = (y: number, x: number) => navigation.focus === \"screen\" && navigation.screen.x === x && navigation.screen.y === y;\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    useFocusEffect({ hasFocus: hasFocus(props.y, props.x) }, inputEl);\n    let className = \"cookiebanner\";\n    if (hasFocus(props.y, props.x)) {\n        className += \" focused\";\n    }\n    return !props.consented ? (\n        <button\n            ref={inputEl}\n            className={className}\n            onClick={() => {\n                const storage = new StorageManager();\n                const consent = storage.giveConsent();\n                //@todo integrate with cookie dialog\n                // eslint-disable-next-line no-restricted-globals\n                if (!props.consented && confirm(consent.prompt)) {\n                    consent.confirm();\n                    props.setConsented(true);\n                }\n            }}\n        >\n            <div className=\"icon\">🍪</div>\n            <div className=\"message\">\n                <b>Changes on this page will be lost after each game</b>, until you allow this app to store data on your machine. Click here\n                to give consent.\n            </div>\n        </button>\n    ) : null;\n};\n\nconst CookieBanner = (props: { x?: number; y?: number }) => {\n    const { consented, setConsented } = useCookieContext();\n    if (typeof props.x === \"undefined\" || typeof props.y === \"undefined\") {\n        return null;\n    }\n    return <RenderCookieBanner x={props.x} y={props.y} consented={consented} setConsented={setConsented} />;\n};\n\nexport default CookieBanner;\n","import React from \"react\";\nimport { ScreenNavigator } from \"./ScreenNavigator\";\n\nconst Row = (props: { skip?: boolean; y?: number; navigator?: ScreenNavigator; children?: any[] | any | undefined }) => {\n    if (typeof props.y == \"undefined\" || typeof props.navigator == \"undefined\") {\n        return null;\n    }\n    const addElement = (child: any, index: number) => {\n        if (!child) return null;\n        const assign = (n: any[]) => {\n            n[props.y || 0].buttons[index || 0] = { x: index, y: props.y };\n        };\n        if (!props.skip) {\n            assign(props.navigator?.rows || []);\n        }\n        return React.cloneElement(child, { key: index, x: index, y: props.y });\n    };\n    return !props.children ? null : (\n        <div className=\"row\">{Array.isArray(props.children) ? props.children.map(addElement) : addElement(props.children, 0)}</div>\n    );\n};\nexport default Row;\n","import GamePad from \"../../../../common/GamePad\";\nimport GamepadLayout from \"../../../../common/GamepadLayout\";\nimport Keyboard from \"../../../../common/Keyboard\";\nimport React from \"react\";\nimport { ScreenNavigator } from \"./ScreenNavigator\";\nimport { Universal } from \"../../../../common/KeyboardLayouts\";\nimport { XY } from \"../../XY\";\nimport useNavigationContext from \"../NavigationContext\";\n\nconst ScreenNavWrapper = (props: { navigator: ScreenNavigator; screen: string }) => {\n    const { navigator } = props;\n    const { navigation, setNavigation } = useNavigationContext();\n\n    const assignState = (result: XY) => {\n        if (navigation.focus === \"screen\") {\n            setNavigation({ ...navigation, screen: result });\n        }\n    };\n\n    const inputHandlers = {\n        onCancel: () =>\n            setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } }),\n        onUp: () => assignState(navigator.moveUp(navigation.screen.x, navigation.screen.y)),\n        onDown: () => assignState(navigator.moveDown(navigation.screen.x, navigation.screen.y)),\n        onLeft: () => assignState(navigator.moveLeft(navigation.screen.x, navigation.screen.y)),\n        onRight: () => assignState(navigator.moveRight(navigation.screen.x, navigation.screen.y)),\n        onAction: () => navigator.action(navigation.screen),\n    };\n\n    return navigation.focus === \"screen\" ? (\n        <>\n            <Keyboard layout={Universal} {...inputHandlers} />\n            <GamePad layout={GamepadLayout} {...inputHandlers} />\n        </>\n    ) : null;\n};\nexport default ScreenNavWrapper;\n","import AbstractNavigator from \"../AbstractNavigator\";\nimport { NavHandler } from \"../../NavHandler\";\nimport { XY } from \"../../XY\";\n\nexport class ScreenNavigator extends AbstractNavigator implements NavHandler {\n    moveUp: (x: number, y: number) => XY = (x, y) => {\n        const rows = this.getRows();\n        if (y === 0) {\n            return this.goToRow({ x: x, y: rows.length - 1 });\n        }\n        return this.goToRow({ x: x, y: y - 1 });\n    };\n\n    moveDown: (x: number, y: number) => XY = (x, y) => {\n        const rows = this.getRows();\n        if (y === rows.length - 1) {\n            return this.goToRow({ x: x, y: 0 });\n        }\n        return this.goToRow({ x: x, y: y + 1 });\n    };\n\n    moveLeft: (x: number, y: number) => XY = (x, y) => {\n        const row = this.getRow(y);\n        if (x === 0) {\n            return { x: row.buttons.length - 1, y: y };\n        }\n        return { x: x - 1, y: y };\n    };\n\n    moveRight: (x: number, y: number) => XY = (x, y) => {\n        const row = this.getRow(y);\n        if (x === row.buttons.length - 1) {\n            return { x: 0, y: y };\n        }\n        return { x: x + 1, y: y };\n    };\n\n    action: (xy: XY) => void = () => {\n        const activeElement: any = document.activeElement;\n        activeElement && activeElement.click();\n    };\n}\n","import React from \"react\";\nimport ScreenNavWrapper from \"./ScreenNavWrapper\";\nimport { ScreenNavigator } from \"./ScreenNavigator\";\n\nconst ScreenContent = (props: { id: string; children: any[] }) => {\n    const navigator = new ScreenNavigator();\n    let _index = -1;\n    let _i = -1;\n    const addRow = (child: any) => {\n        _i++;\n        if (!child.props.skip) {\n            _index++;\n            navigator.rows[_index] = { buttons: [] };\n        }\n        return React.cloneElement(child, { key: _i, x: 0, y: _index, navigator: navigator });\n    };\n    return (\n        <div className=\"content\">\n            {props.children.map((child) => addRow(child))}\n            <ScreenNavWrapper navigator={navigator} screen=\"rating\" />\n        </div>\n    );\n};\n\nexport default ScreenContent;\n","import React from \"react\";\nimport { XY } from \"../../XY\";\nimport useNavigationContext from \"../NavigationContext\";\n\ninterface ScreenMainButtonProps {\n    x?: number;\n    y?: number;\n    id: number;\n    icon: string;\n    className: (pos: XY) => string;\n    lines: string[];\n    onClick: () => void;\n    autoFocus: boolean;\n    disabled?: boolean;\n}\nconst ScreenMainButton = (props: ScreenMainButtonProps) => {\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    const { navigation, setNavigation } = useNavigationContext();\n    const hasFocus = navigation.focus === \"screen\" && navigation.screen.x === props.x && navigation.screen.y === props.y;\n    React.useEffect(() => {\n        if (hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\n            inputEl.current.focus();\n        }\n    }, [inputEl, hasFocus]);\n\n    React.useEffect(() => {\n        if (\n            props.autoFocus &&\n            !hasFocus &&\n            inputEl &&\n            inputEl.current &&\n            inputEl.current !== document.activeElement &&\n            navigation.screen.x === -1 &&\n            navigation.screen.y === -1\n        ) {\n            inputEl.current.focus();\n        }\n    // limited dependencies are on purpose to trigger this only once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [inputEl]);\n    const focus = () => {\n        if (!hasFocus) {\n            setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\n        }\n    };\n    const click = () => {\n        props.onClick();\n        setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\n    };\n\n    if (typeof props.x === \"undefined\" || typeof props.y === \"undefined\") {\n        return null;\n    }\n\n    const pos = { x: props.x, y: props.y };\n\n    return (\n        <button onFocus={focus} ref={inputEl} key={props.id} disabled={props.disabled} className={props.className(pos)} onClick={click}>\n            {props.icon}\n            {props.lines.map((line: string, index: number) => (\n                <div key={index}>{line}</div>\n            ))}\n        </button>\n    );\n};\n\nexport default ScreenMainButton;\n","import { ControlPresets, IControlPreset } from \"../ControlsPresets\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport GamePad from \"../../../../common/GamePad\";\nimport GamepadLayout from \"../../../../common/GamepadLayout\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\nimport { XY } from \"../../XY\";\nimport useCookieContext from \"../../CookieContext\";\nimport useNavigationContext from \"../NavigationContext\";\nimport useStartScreenContext from \"../StartScreenContext\";\n\nconst Controls = (props: { player: number }) => {\n    //@todo support custom keyboard / gamepad layouts\n\n    const { state, setState } = useStartScreenContext();\n    const { navigation } = useNavigationContext();\n\n    const [pads, setPads] = React.useState([\n        {\n            found: false,\n            buttonPressed: false,\n        },\n        {\n            found: false,\n            buttonPressed: false,\n        },\n    ]);\n\n    const press = (i: number) => {\n        pads[i].found = true;\n        pads[i].buttonPressed = true;\n        setPads({ ...pads });\n        console.log(pads);\n    };\n\n    const { consented } = useCookieContext();\n    const player = state.players[props.player];\n    if (!player) {\n        return null;\n    }\n\n    const playerHasSettings = (id: number, playerId: number) =>\n        state.players[playerId].inputLayout === ControlPresets[id].inputLayout &&\n        state.players[playerId].inputMethod === ControlPresets[id].inputMethod;\n\n    const isActive = (id: number) => playerHasSettings(id, props.player);\n\n    const applyPreset = (id: number) => {\n        const nextPlayer = { ...state.players };\n        nextPlayer[props.player].inputMethod = ControlPresets[id].inputMethod;\n        nextPlayer[props.player].inputLayout = ControlPresets[id].inputLayout;\n        setState({ ...state, players: nextPlayer });\n    };\n\n    const getButtonClass = (id: number, pos: XY) => {\n        let className = pos.x + \"\" + pos.y + \" \" + navigation.screen.x + \"\" + navigation.screen.y + \" \";\n        className += navigation.screen.x === pos.x && navigation.screen.y === pos.y ? \" focused\" : \"\";\n        className += isActive(id) ? \" active-0\" : \" inactive-0\";\n        className += blockedByOtherPlayers(id) ? \" disabled\" : \"\";\n        return className;\n    };\n\n    const blockedByOtherPlayers = (id: number) => {\n        const otherPlayers = [0, 1].filter((p) => p !== props.player);\n        return playerHasSettings(id, otherPlayers[0]);\n    };\n\n    const getLines = (preset: IControlPreset) => {\n        if (preset.inputMethod === \"gamepad\") {\n            return [...preset.lines, pads[preset.inputLayout].found || pads[preset.inputLayout].buttonPressed ? \"Connected\" : \"Not Found\"];\n        }\n        return preset.lines;\n    };\n\n    return (\n        <div className=\"controls startdetails\">\n            <CloseButton />\n            <div className=\"title\">{player.name}</div>\n            <ScreenContent id=\"settings\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>\n                    {ControlPresets.slice(0, 3).map((preset) => (\n                        <ScreenMainButton\n                            key={preset.id}\n                            icon={preset.icon}\n                            id={preset.id}\n                            disabled={blockedByOtherPlayers(preset.id)}\n                            autoFocus={isActive(preset.id)}\n                            className={(pos: XY) => getButtonClass(preset.id, pos)}\n                            onClick={() => applyPreset(preset.id)}\n                            lines={getLines(preset)}\n                        />\n                    ))}\n                </Row>\n                <Row>\n                    {ControlPresets.slice(3).map((preset) => (\n                        <ScreenMainButton\n                            key={preset.id}\n                            icon={preset.icon}\n                            id={preset.id}\n                            disabled={blockedByOtherPlayers(preset.id)}\n                            autoFocus={isActive(preset.id)}\n                            className={(pos: XY) => getButtonClass(preset.id, pos)}\n                            onClick={() => applyPreset(preset.id)}\n                            lines={preset.lines}\n                        />\n                    ))}\n                </Row>\n                <Row skip={true}>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">@todo</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\n                    </div>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">@todo</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\n                    </div>\n                </Row>\n            </ScreenContent>\n            <GamePad\n                layout={GamepadLayout}\n                gamepadIndex={0}\n                onUp={() => press(0)}\n                onDown={() => press(0)}\n                onRight={() => press(0)}\n                onLeft={() => press(0)}\n                onAction={() => press(0)}\n            />\n            <GamePad\n                layout={GamepadLayout}\n                gamepadIndex={1}\n                onUp={() => press(1)}\n                onDown={() => press(1)}\n                onRight={() => press(1)}\n                onLeft={() => press(1)}\n                onAction={() => press(1)}\n            />\n        </div>\n    );\n};\n\nexport default Controls;\n","import DifficultyOptions, { DifficultyOption } from \"../DifficultyOptions\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\nimport { XY } from \"../../XY\";\nimport useCookieContext from \"../../CookieContext\";\nimport useNavigationContext from \"../NavigationContext\";\nimport useStartScreenContext from \"../StartScreenContext\";\n\nconst Difficulty = () => {\n    const { state, setState } = useStartScreenContext();\n    const { navigation } = useNavigationContext();\n\n    const isActive = (id: number) => state.difficultySettings === id;\n\n    const getButtonClass = (index: number, pos: XY) => {\n        const hasFocus = navigation.screen.x === pos.x && navigation.screen.y === pos.y;\n        let name = isActive(index) ? `active active-${index}` : `inactive-${index}`;\n        name += hasFocus ? \" focused\" : \"\";\n        return name;\n    };\n\n    const renderButton = (button: DifficultyOption) => (\n        <ScreenMainButton\n            key={button.id}\n            icon={button.icon}\n            id={button.id}\n            autoFocus={isActive(button.id)}\n            className={(pos) => getButtonClass(button.id, pos)}\n            onClick={() => setState({ ...state, difficultySettings: button.id })}\n            lines={button.lines}\n        />\n    );\n\n    const { consented } = useCookieContext();\n\n    return (\n        <div className=\"difficulty startdetails\">\n            <CloseButton />\n            <div className=\"title\">Difficulty</div>\n            <ScreenContent id=\"difficulty\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>{DifficultyOptions.slice(0, 3).map(renderButton)}</Row>\n                <Row>{DifficultyOptions.slice(3).map(renderButton)}</Row>\n                <Row skip={true}>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">Draw Mode</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode === \"triple\"\n                                ? \"Turn 3 cards at once from the Stock to the Waste.\"\n                                : null}\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode === \"single\"\n                                ? \"Turn 1 card after the other from the Stock to the Waste.\"\n                                : null}\n                        </div>\n                    </div>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">Pass Limit</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode === \"1-pass\"\n                                ? \"One pass through the deck. Waste can not be recycled to the Stock.\"\n                                : null}\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode === \"3-pass\"\n                                ? \"Three passes through the deck. Waste can be recycled to Stock two times.\"\n                                : null}\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode === \"infinite\"\n                                ? \"No limit on passes through the deck. Waste can be recycled to Stock endlessly.\"\n                                : null}\n                        </div>\n                    </div>\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\n\nexport default Difficulty;\n","import { getScreenElementClassName, useFocusEffect } from \"./ScreenElement\";\n\nimport React from \"react\";\nimport useNavigationContext from \"../NavigationContext\";\n\nexport type SelectItem = {\n    label: string;\n    id: string | number;\n};\n\ninterface StaticSelectProps {\n    disabled?: boolean;\n    value: number;\n    values: SelectItem[];\n    label: string;\n    description: string;\n    callBack: (s: string) => void;\n    autoFocus?: boolean;\n}\n\ninterface ScreenSelectProps extends StaticSelectProps {\n    x: number;\n    y: number;\n    hasFocus: boolean;\n}\n\ninterface _ScreenSelectProps extends StaticSelectProps {\n    x?: number;\n    y?: number;\n}\n\nconst RenderScreenSelect = (props: ScreenSelectProps) => {\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    useFocusEffect(props, inputEl);\n    const { navigation, setNavigation } = useNavigationContext();\n\n    return (\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\n            <div className=\"title\">\n                {props.label}: {props.values[props.value].label}\n            </div>\n            <div className=\"button\">\n                <button\n                    autoFocus={props.autoFocus}\n                    ref={inputEl}\n                    onClick={() => {\n                        props.callBack((props.value + 1 < props.values.length ? props.value + 1 : 0).toString());\n                        setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\n                    }}\n                    disabled={!!props.disabled}\n                    onFocus={() => {\n                        if (!props.hasFocus) {\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\n                        }\n                    }}\n                >\n                    🔁\n                </button>\n            </div>\n            <div className=\"description\">{props.description}</div>\n        </div>\n    );\n};\n\nconst ScreenSelect = (props: _ScreenSelectProps) => {\n    const { navigation } = useNavigationContext();\n    if (typeof props.x === \"undefined\" || typeof props.y === \"undefined\") {\n        return null;\n    }\n    const hasFocus = (y: number, x: number) => navigation.focus === \"screen\" && navigation.screen.x === x && navigation.screen.y === y;\n    const pos = { x: props.x || 0, y: props.y || 0 };\n    return (\n        <RenderScreenSelect\n            x={pos.x}\n            y={pos.y}\n            disabled={!!props.disabled}\n            hasFocus={hasFocus(pos.y, pos.x)}\n            label={props.label}\n            description={props.description}\n            value={props.value}\n            values={props.values}\n            callBack={props.callBack}\n            autoFocus={props.autoFocus}\n        />\n    );\n};\n\nexport default ScreenSelect;\n","import CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport EntropyLevels from \"../../../../Model/Game/Settings/EntropyLevels\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenSelect from \"./ScreenSelect\";\nimport useCookieContext from \"../../CookieContext\";\nimport useStartScreenContext from \"../StartScreenContext\";\n\nconst QuickStart = () => {\n    const { state, setState } = useStartScreenContext();\n    const { consented } = useCookieContext();\n\n    const setBaseEntropy = (value: string) =>\n        setState({ ...state, entropySettings: { ...state.entropySettings, baseEntropy: parseInt(value) } });\n\n    const setInteractionEntropy = (value: string) =>\n        setState({ ...state, entropySettings: { ...state.entropySettings, interactionEntropy: parseInt(value) } });\n\n    return (\n        <div className=\"quickstart startdetails\">\n            <CloseButton />\n            <div className=\"title\">Entropy</div>\n            <ScreenContent id=\"settings\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n\n                <Row>\n                    <ScreenSelect\n                        label=\"Base Entropy\"\n                        description=\"How much chaos will the stacks on the board contain by themselves?\"\n                        value={state.entropySettings.baseEntropy || 0}\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\n                        callBack={setBaseEntropy}\n                        autoFocus={true}\n                    />\n                    <ScreenSelect\n                        label=\"Interaction Entropy\"\n                        description=\"How much chaos will each interaction add to a stack on the board?\"\n                        value={state.entropySettings.interactionEntropy || 0}\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\n                        callBack={setInteractionEntropy}\n                    />\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\nexport default QuickStart;\n","import \"./react-toggle.css\";\n\nimport { getScreenElementClassName, useFocusEffect, useInitialFocus } from \"./ScreenElement\";\n\nimport React from \"react\";\nimport Toggle from \"react-toggle\";\nimport { XY } from \"../../XY\";\nimport useNavigationContext from \"../NavigationContext\";\n\ninterface StaticScreenToggleProps {\n    value: boolean;\n    label: string;\n    description: string;\n    disabled?: boolean;\n    callBack?: (s: boolean) => void;\n    autoFocus?: boolean;\n}\n\ninterface ToggleProps extends StaticScreenToggleProps {\n    x: number;\n    y: number;\n    hasFocus: boolean;\n}\n\ninterface _ScreenToggleProps extends StaticScreenToggleProps {\n    x?: number;\n    y?: number;\n}\n\nconst RenderScreenToggle = (props: ToggleProps) => {\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    useFocusEffect(props, inputEl);\n    const { navigation, setNavigation } = useNavigationContext();\n    const change = (val: boolean, pos: XY) => {\n        setNavigation({ ...navigation, screen: pos });\n        props.callBack && props.callBack(val);\n    };\n    useInitialFocus(props, inputEl, navigation.screen);\n    return (\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\n            <div className=\"title\">{props.label}</div>\n            <div className=\"toggle\">\n                <Toggle\n                    ref={inputEl}\n                    disabled={!!props.disabled}\n                    autoFocus={props.autoFocus}\n                    onFocus={() => {\n                        if (!props.hasFocus) {\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\n                        }\n                    }}\n                    checked={props.value}\n                    onChange={() => change(!props.value, { x: props.x, y: props.y })}\n                />\n            </div>\n            <div className=\"description\">{props.description}</div>\n        </div>\n    );\n};\n\nconst ScreenToggle = (props: _ScreenToggleProps) => {\n    const { navigation } = useNavigationContext();\n    if (typeof props.x === \"undefined\" || typeof props.y === \"undefined\") {\n        return null;\n    }\n    const hasFocus = (y: number, x: number) => navigation.focus === \"screen\" && navigation.screen.x === x && navigation.screen.y === y;\n    const pos = { x: props.x || 0, y: props.y || 0 };\n    return (\n        <RenderScreenToggle\n            x={pos.x}\n            y={pos.y}\n            disabled={!!props.disabled}\n            hasFocus={hasFocus(pos.y, pos.x)}\n            label={props.label}\n            description={props.description}\n            value={props.value}\n            callBack={props.callBack}\n            autoFocus={props.autoFocus}\n        />\n    );\n};\n\nexport default ScreenToggle;\n","import useStartScreenContext, { StartScreenState } from \"../StartScreenContext\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport RatingPresets from \"../RatingOptions\";\nimport { RatingSettings } from \"../../../../Common\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\nimport ScreenToggle from \"./ScreenToggle\";\nimport SuggestionModes from \"../../../../Model/Game/Settings/SuggestionModes\";\nimport { XY } from \"../../XY\";\nimport useCookieContext from \"../../CookieContext\";\nimport useNavigationContext from \"../NavigationContext\";\n\nconst Rating = () => {\n    const { state, setState } = useStartScreenContext();\n    const { navigation } = useNavigationContext();\n    const applyPreset = (id: number) => {\n        const next = { ...state };\n        RatingPresets.ALL[id].apply(next);\n        setState(next);\n    };\n\n    const isActive = (id: number) => state.ratingPreset === id;\n\n    const getButtonClass = (id: number, pos: XY) => {\n        let name = isActive(id) ? `active active-${id}` : `inactive-${id}`;\n        name += navigation.screen.x === pos.x && navigation.screen.y === pos.y ? \" focused\" : \"\";\n        return name;\n    };\n\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\n        const next = { ...state };\n        modifier(next.ratingSettings);\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\n        setState(next);\n    };\n\n    const customizeRating2 = (ratingModifier: (context: RatingSettings) => void, modifier: (context: StartScreenState) => void) => {\n        const next = { ...state };\n        ratingModifier(next.ratingSettings);\n        modifier(next);\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\n        setState(next);\n    };\n\n    const setMissPenalty = (value: boolean) =>\n        customizeRating((r) => {\n            r.missPenalty = value;\n        });\n\n    const setTimeRating = (value: boolean) =>\n        customizeRating((r) => {\n            r.timedMode = value;\n        });\n\n    const setUndoPenalty = (value: boolean) =>\n        customizeRating((r) => {\n            r.undoPenalty = value;\n        });\n\n    const setHintPenalty = (value: boolean) => {\n        customizeRating2(\n            (r) => {\n                r.hintPenalty = value;\n            },\n            (s) => {\n                s.suggestionMode = value ? SuggestionModes.NONE : SuggestionModes.REGULAR;\n            }\n        );\n    };\n\n    const { consented } = useCookieContext();\n\n    return (\n        <div className=\"rating startdetails\">\n            <CloseButton />\n            <div className=\"title\">Penalties</div>\n            <ScreenContent id=\"penalties\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>\n                    {RatingPresets.ALL.map((preset) => (\n                        <ScreenMainButton\n                            key={preset.id}\n                            icon={preset.icon}\n                            id={preset.id}\n                            autoFocus={isActive(preset.id) || (state.ratingPreset === -1 && preset.id === 0)}\n                            className={(pos: XY) => getButtonClass(preset.id, pos)}\n                            onClick={() => applyPreset(preset.id)}\n                            lines={[preset.label]}\n                        />\n                    ))}\n                </Row>\n                <Row>\n                    <ScreenToggle\n                        label=\"Undo Penalty\"\n                        description=\"Undo is enabled, but excessive use will be painful. This penalty starts with 2 and increases exponentially.\"\n                        value={!!state.ratingSettings.undoPenalty}\n                        callBack={setUndoPenalty}\n                    />\n                    <ScreenToggle\n                        label=\"Time Penalty\"\n                        description=\"Fast players are rewarded with a time bonus, slow players will be punished.\"\n                        value={!!state.ratingSettings.timedMode}\n                        callBack={setTimeRating}\n                    />\n                </Row>\n                <Row>\n                    <ScreenToggle\n                        label=\"Hint Penalty\"\n                        description=\"Each manual hint will reduce the number of points by 10. This setting disables automatic suggestions. \"\n                        value={!!state.ratingSettings.hintPenalty}\n                        callBack={setHintPenalty}\n                    />\n                    <ScreenToggle\n                        label=\"Miss Penalty\"\n                        description=\"Be careful where you click, as each invalid action will lead to a penalty of 10 points.\"\n                        value={!!state.ratingSettings.missPenalty}\n                        callBack={setMissPenalty}\n                    />\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\n\nexport default Rating;\n","import SuggestionModes, { SuggestionMode } from \"../../../../Model/Game/Settings/SuggestionModes\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenToggle from \"./ScreenToggle\";\nimport useCookieContext from \"../../CookieContext\";\nimport useStartScreenContext from \"../StartScreenContext\";\n\nconst Suggestions = () => {\n    const { consented } = useCookieContext();\n    const { state, setState } = useStartScreenContext();\n\n    const suggestionModes = SuggestionModes.allSuggestionModes();\n\n    const isActive = (id: string) => state.suggestionMode === id;\n\n    const isDisabled = (id: string) => id !== SuggestionModes.NONE && state.ratingSettings.hintPenalty;\n\n    const renderToggle = (mode: SuggestionMode, index: number) => (\n        <ScreenToggle\n            value={isActive(mode.key)}\n            disabled={isDisabled(mode.key)}\n            label={mode.icon + \" \" + mode.label}\n            callBack={() => setState({ ...state, suggestionMode: mode.key })}\n            description={mode.description}\n            key={index}\n            autoFocus={isActive(mode.key)}\n        />\n    );\n\n    return (\n        <div className=\"suggestions startdetails\">\n            <CloseButton />\n            <div className=\"title\">Suggestions</div>\n            <ScreenContent id=\"settings\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>{suggestionModes.slice(0, 2).map(renderToggle)}</Row>\n                <Row>{suggestionModes.slice(2).map(renderToggle)}</Row>\n            </ScreenContent>\n        </div>\n    );\n};\n\nexport default Suggestions;\n","import CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenToggle from \"./ScreenToggle\";\nimport useCookieContext from \"../../CookieContext\";\nimport useStartScreenContext from \"../StartScreenContext\";\n\nconst Support = () => {\n    const { state, setState } = useStartScreenContext();\n    const { consented } = useCookieContext();\n    const setAutoResolve = (val: boolean) => setState({ ...state, autoResolve: val });\n    const setQuickDeal = (value: boolean) => setState({ ...state, quickDeal: value });\n    const setAutoUncover = (value: boolean) => setState({ ...state, autoUncover: value });\n    const setSpeed = (value: boolean) => setState({ ...state, speed: value });\n    return (\n        <div className=\"quickstart startdetails\">\n            <CloseButton />\n            <div className=\"title\">Support</div>\n            <ScreenContent id=\"support\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>\n                    <ScreenToggle\n                        label=\"Auto Resolve\"\n                        description=\"Enable this to automatically resolve the board once all cards are uncovered and moved to the tableau.\"\n                        value={state.autoResolve}\n                        callBack={setAutoResolve}\n                        autoFocus={true}\n                    />\n                    <ScreenToggle\n                        label=\"Auto Uncover\"\n                        description=\"Should the game automatically uncover cards for you?\"\n                        value={state.autoUncover}\n                        callBack={setAutoUncover}\n                    />\n                </Row>\n                <Row>\n                    <ScreenToggle\n                        label=\"Instant Deal\"\n                        description=\"Should the deal animation at the beginning of the game be skipped?\"\n                        value={state.quickDeal}\n                        callBack={setQuickDeal}\n                    />\n                    <ScreenToggle\n                        label=\"Auto Draw\"\n                        description=\"Should the game automatically draw from the stock every 10 seconds?\"\n                        value={state.speed}\n                        callBack={setSpeed}\n                    />\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\nexport default Support;\n","import Controls from \"./Controls\";\nimport Difficulty from \"./Difficulty\";\nimport QuickStart from \"./QuickStart\";\nimport Rating from \"./Rating\";\nimport React from \"react\";\nimport Suggestions from \"./Suggestions\";\nimport Support from \"./Support\";\nimport useNavigationContext from \"../NavigationContext\";\n\nconst Screen = () => {\n    //@todo load this screen after 1st selection incl. toggles and gamepads as asynchronous components\n    const { navigation } = useNavigationContext();\n    return <RenderScreen screen={navigation.screeen} />;\n    //@todo monitor gamepad connections, show toast when pad is connected\n};\n\nconst RenderScreen = (props: { screen: string }) => {\n    //@todo add credits page\n    return (\n        <div className=\"startscreen-layout\">\n            <div className=\"startscreen-jail\">\n                {props.screen === \"rating\" ? <Rating /> : null}\n                {props.screen === \"difficulty\" ? <Difficulty /> : null}\n                {props.screen === \"settings\" ? <QuickStart /> : null}\n                {props.screen === \"suggestions\" ? <Suggestions /> : null}\n                {props.screen === \"support\" ? <Support /> : null}\n                {props.screen === \"controls0\" ? <Controls player={0} /> : null}\n                {props.screen === \"controls1\" ? <Controls player={1} /> : null}\n            </div>\n        </div>\n    );\n};\n\nexport default Screen;\n","import \"./Overlay.css\";\n\nimport React from \"react\";\n\ninterface IOverlayContext {\n    overlayActive: boolean;\n    toggleOverlay: (content?: React.ReactNode, before?: () => void, after?: () => void) => void;\n}\n\nconst OverlayContext = React.createContext<IOverlayContext>({\n    overlayActive: false,\n    toggleOverlay: () => {},\n});\n\nexport const useOverlayContext = () => React.useContext(OverlayContext);\n\nconst Overlay = (props: { children: React.ReactNode; before?: () => void; after?: () => void }) => {\n    React.useEffect(() => {\n        props.before && props.before();\n        return () => {\n            props.after && props.after();\n        };\n        //@todo once-time rendering\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <div className=\"overlay\">{props.children}</div>;\n};\ntype callable = { call: () => void };\nconst defaultCallable = { call: () => {} };\nexport const OverlayContextProvider = (props: { children: React.ReactNode }) => {\n    const [overlayActive, setActive] = React.useState<boolean>(false);\n    const [content, setContent] = React.useState<React.ReactNode>(null);\n    const [_after, setAfter] = React.useState<callable>(defaultCallable);\n    const [_before, setBefore] = React.useState<callable>(defaultCallable);\n    const context = {\n        overlayActive,\n        toggleOverlay: (content?: React.ReactNode, before?: () => void, after?: () => void) => {\n            setActive(!!content);\n            setContent(content);\n            if (before) {\n                setBefore({ call: before });\n            }\n            if (after) {\n                setAfter({ call: after });\n            }\n        },\n    };\n    return (\n        <OverlayContext.Provider value={context}>\n            {overlayActive && (\n                <Overlay before={_before.call} after={_after.call}>\n                    {content}\n                </Overlay>\n            )}\n            {props.children}\n        </OverlayContext.Provider>\n    );\n};\n","import MenuButton from \"./Menu/MenuButton\";\nimport MenuTitle from \"./Menu/MenuTitle\";\nimport MenuTree from \"./Menu/MenuTree\";\nimport { NavigationProvider } from \"./NavigationContext\";\nimport React from \"react\";\nimport StorageManager from \"../StorageManager\";\nimport { Universal } from \"../../../common/KeyboardLayouts\";\nimport useCookieContext from \"../CookieContext\";\nimport { useOverlayContext } from \"../../../common/Overlay\";\n\nconst ConsentDialog = () => {\n    const { setConsented, consented } = useCookieContext();\n    const storage = StorageManager.getInstance();\n    const consent = storage.getDialog();\n    const { toggleOverlay } = useOverlayContext();\n    //@todo depending on state, use different colors and order of items.\n    //also show different labels on buttons\n    return (\n        <NavigationProvider>\n            <div className=\"gamemenu menu dialog\">\n                <div className=\"startscreen-jail\">\n                    <div className=\"innermenu\">\n                        <MenuTitle label=\"🍪\" />\n                        <div className=\"announcement\">{consent.prompt}</div>\n                        <MenuTree keyboardLayout={Universal}>\n                            <MenuButton\n                                icon=\"👍\"\n                                title={consented ? \"Delete cookie\": \"Allow cookie\"}\n                                onClick={() => {\n                                    setConsented(consent.confirm());\n                                    toggleOverlay();\n                                    //@todo @bug after closing overlay, up & down nav works but not the action button\n                                }}\n                            />\n                            <MenuButton icon=\"👎\" title=\"Cancel\" onClick={() => toggleOverlay()} />\n                        </MenuTree>\n                    </div>\n                </div>\n            </div>\n        </NavigationProvider>\n    );\n};\nexport default ConsentDialog;\n","import React from \"react\";\n\nconst VerticalMenu = (props: any) => {\n    return (\n        <div className=\"ui start menu\">\n            <div className=\"startscreen-jail\">\n                <div className=\"innermenu\">{props.children}</div>\n            </div>\n        </div>\n    );\n};\nexport default VerticalMenu;\n","import \"../Menu.scss\";\n\nimport ConsentDialog from \"../ConsentDialog\";\nimport GameModes from \"../../../../GameModes\";\nimport MenuButton from \"./MenuButton\";\nimport MenuTitle from \"./MenuTitle\";\nimport MenuTree from \"./MenuTree\";\nimport React from \"react\";\nimport { Universal } from \"../../../../common/KeyboardLayouts\";\nimport VerticalMenu from \"./VerticalMenu\";\nimport { XY } from \"../../XY\";\nimport useCookieContext from \"../../CookieContext\";\nimport useNavigationContext from \"../NavigationContext\";\nimport { useOverlayContext } from \"../../../../common/Overlay\";\n\nconst StartMenu = (props: { start: (boardMode: string) => void }) => {\n    const { navigation, setNavigation } = useNavigationContext();\n    const { consented } = useCookieContext();\n\n    const switchToScreen = (s: string, pos: XY) =>\n        setNavigation({\n            ...navigation,\n            focus: \"screen\",\n            screeen: s,\n            screen: { x: -1, y: -1 },\n            menu: { ...pos },\n        });\n\n    const switchToMenu = (menu: string, pos: XY) =>\n        setNavigation({\n            ...navigation,\n            focus: \"menu\",\n            screeen: \"\",\n            mainMenu: menu,\n            menu: { ...pos },\n        });\n\n    const toggleScreen = (s: string, pos: XY) => {\n        if (navigation.screeen !== s) {\n            switchToScreen(s, pos);\n        } else {\n            switchToMenu(navigation.mainMenu, pos);\n        }\n    };\n\n    const toggleMainMenu = (val: string, pos: XY) => switchToMenu(navigation.mainMenu !== val ? val : \"\", pos);\n\n    const { toggleOverlay, overlayActive } = useOverlayContext();\n    const _toggleOverlay = (children: React.ReactNode) => {\n        toggleOverlay(\n            children,\n            () => {\n                setNavigation({ ...navigation, focus: \"dialog\" });\n            },\n            () => {\n                setNavigation({ ...navigation, focus: \"menu\" });\n            }\n        );\n    };\n\n    return (\n        <VerticalMenu>\n            <MenuTitle label=\"♦ Solitaire\" />\n            <MenuTree keyboardLayout={Universal} disabled={overlayActive}>\n                <MenuButton icon=\"🎲\" title=\"Single Player\" onClick={() => props.start(GameModes.SINGLEPLAYER)} />\n                <MenuButton\n                    icon=\"⚔️\"\n                    title=\"Versus\"\n                    onClick={(pos: XY) => toggleMainMenu(\"versus\", pos)}\n                    toggled={navigation.mainMenu === \"versus\"}\n                >\n                    <MenuButton\n                        icon=\"🎮\"\n                        title=\"Player 1\"\n                        onClick={(pos: XY) => toggleScreen(\"controls0\", pos)}\n                        toggled={navigation.screeen === \"controls0\"}\n                    />\n                    <MenuButton\n                        icon=\"🎮\"\n                        title=\"Player 2\"\n                        onClick={(pos: XY) => toggleScreen(\"controls1\", pos)}\n                        toggled={navigation.screeen === \"controls1\"}\n                    />\n                    <MenuButton icon=\"🎲\" title=\"Start\" onClick={() => props.start(GameModes.VERSUS)} />\n                </MenuButton>\n                <MenuButton\n                    icon=\"⚙️\"\n                    title=\"Options\"\n                    onClick={(pos: XY) => toggleMainMenu(\"custom\", pos)}\n                    toggled={navigation.mainMenu === \"custom\"}\n                >\n                    <MenuButton\n                        icon=\"💪\"\n                        title=\"Difficulty\"\n                        onClick={(pos: XY) => toggleScreen(\"difficulty\", pos)}\n                        toggled={navigation.screeen === \"difficulty\"}\n                    />\n                    <MenuButton\n                        icon=\"⚖️\"\n                        title=\"Penalties\"\n                        onClick={(pos: XY) => toggleScreen(\"rating\", pos)}\n                        toggled={navigation.screeen === \"rating\"}\n                    />\n                    <MenuButton\n                        icon=\"💡\"\n                        title=\"Suggestions\"\n                        onClick={(pos: XY) => toggleScreen(\"suggestions\", pos)}\n                        toggled={navigation.screeen === \"suggestions\"}\n                    />\n                    <MenuButton\n                        icon=\"🤖\"\n                        title=\"Support\"\n                        onClick={(pos: XY) => toggleScreen(\"support\", pos)}\n                        toggled={navigation.screeen === \"support\"}\n                    />\n                    <MenuButton\n                        icon=\"🌪️\"\n                        title=\"Entropy\"\n                        onClick={(pos: XY) => toggleScreen(\"settings\", pos)}\n                        toggled={navigation.screeen === \"settings\"}\n                    />\n                </MenuButton>\n                <MenuButton\n                    icon=\"🍪\"\n                    title={consented ? \"Delete Cookie\" : \"Allow Cookie\"}\n                    onClick={() => _toggleOverlay(<ConsentDialog />)}\n                />\n            </MenuTree>\n        </VerticalMenu>\n    );\n};\nexport default StartMenu;\n","import { StartScreenProvider, StartScreenState, defaultStartScreenState } from \"./StartScreenContext\";\n\nimport AspectRatio from \"../../../common/AspectRatio/AspectRatio\";\nimport DifficultyOptions from \"./DifficultyOptions\";\nimport { LaunchSettings } from \"../../../Common\";\nimport { NavigationProvider } from \"./NavigationContext\";\nimport Ratios from \"../../../common/AspectRatio/Ratios\";\nimport React from \"react\";\nimport Screen from \"./Screens/Screen\";\nimport StartMenu from \"./Menu/StartMenu\";\nimport StorageManager from \"../StorageManager\";\n\nconst Home = (props: { start: (settings: LaunchSettings) => void }) => {\n    const storage = StorageManager.getInstance();\n    const previous = storage.getPreviousState();\n    const [state, setState] = React.useState<StartScreenState>(previous ? previous : defaultStartScreenState);\n    const startScreenContext = {\n        state,\n        setState: (s: StartScreenState) => {\n            setState(s);\n            storage.store(s);\n        },\n    };\n\n    const start = (boardMode: string) => {\n        const settings = {\n            ...DifficultyOptions[state.difficultySettings].settings,\n            ...state.ratingSettings,\n            baseEntropy: state.entropySettings.baseEntropy || 0,\n            interactionEntropy: state.entropySettings.interactionEntropy || 0,\n            players: { ...state.players },\n            quickDeal: state.quickDeal,\n            speed: state.speed,\n            autoUncover: state.autoUncover,\n            autoResolve: state.autoResolve,\n            boardMode: boardMode,\n            initialized: true,\n            suggestionMode: state.suggestionMode,\n            inputMode: \"\",\n        };\n        props.start(settings);\n    };\n\n    return (\n        <AspectRatio ratio={Ratios._16to9}>\n            <StartScreenProvider value={startScreenContext}>\n                <NavigationProvider>\n                    <StartMenu start={start} />\n                    <Screen />\n                </NavigationProvider>\n            </StartScreenProvider>\n        </AspectRatio>\n    );\n};\nexport default Home;\n","import \"./App.css\";\n\nimport { LaunchSettings, defaultPlayerSettings } from \"./Common\";\n\nimport { CookieContextProvider } from \"./View/UI/CookieContext\";\nimport Deck from \"./Model/Deck/Deck\";\nimport GameModes from \"./GameModes\";\nimport Home from \"./View/UI/StartScreen/Home\";\nimport { OverlayContextProvider } from \"./common/Overlay\";\nimport React from \"react\";\nimport StorageManager from \"./View/UI/StorageManager\";\nimport SuggestionModes from \"./Model/Game/Settings/SuggestionModes\";\n\nconst Game = React.lazy(() => import(\"./View/Game/Game\"));\n\nconst App = () => {\n    const storage = StorageManager.getInstance();\n    const [consented, setConsented] = React.useState<boolean>(!!storage.hasConsent());\n    const cookieContext = {\n        consented,\n        setConsented,\n    };\n\n    const defaultState = {\n        boardMode: GameModes.SINGLEPLAYER,\n        inputMode: \"mouse\",\n        initialized: false,\n        players: defaultPlayerSettings,\n        drawMode: \"\",\n        recyclingMode: \"\",\n        interactionEntropy: 0,\n        baseEntropy: 0,\n        suggestionMode: SuggestionModes.NONE,\n    };\n\n    const [launchState, setLaunchState] = React.useState<LaunchSettings>(defaultState);\n\n    const start = (settings: LaunchSettings) => setLaunchState({ ...settings, initialized: true });\n    const restart = () => setLaunchState(defaultState);\n\n    const deck = new Deck().shuffle();\n\n    return (\n        <CookieContextProvider value={cookieContext}>\n            <OverlayContextProvider>\n                {launchState?.initialized ? <Game {...{ launchState, deck, restart }} /> : <Home start={start} />}\n            </OverlayContextProvider>\n        </CookieContextProvider>\n    );\n};\nexport default App;\n","export default class GameModes {\n    static SINGLEPLAYER = \"singleplayer\";\n    static VERSUS = \"splitscreen\";\n}\n","import Model from \"../Model\";\nimport { Suit } from \"./Suits\";\n\nexport default class Card {\n    denomination: string;\n    //remove type & replace with suit = type.icon; color=type.color\n    // or icon=suit.icon; color=suit.color\n    //@todo add rank ?\n    type: Suit;\n    isHidden: boolean;\n    entropyStyle: any;\n    source: string;\n    suggestion: boolean;\n    success: number;\n    canClick: () => boolean;\n    onClick: (_p: any) => (s: Model) => void;\n    constructor(denomination: string, type: Suit, isHidden: boolean) {\n        this.denomination = denomination;\n        this.type = type;\n        this.isHidden = isHidden;\n        this.entropyStyle = {};\n        this.source = \"\";\n        this.suggestion = false;\n        this.success = 0;\n        this.canClick = () => false;\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onClick = (_p) => (s: Model) => {};\n    }\n\n    setSuccess = (s: number) => {\n        this.success = s;\n    };\n\n    causeEntropy = (lvl: number) => {\n        if (lvl === 0) {\n            this.entropyStyle = {};\n            return;\n        }\n        const level = lvl * 2;\n        const random = () => Math.random() < 0.5;\n        const randomInt = (min: number, max: number) => Math.random() * (max - min) + min;\n        //shift\n        if (random()) {\n            if (random()) {\n                this.entropyStyle[\"left\"] = randomInt(0, level / 20) + \"vw\";\n            } else {\n                this.entropyStyle[\"right\"] = randomInt(0, level / 20) + \"vw\";\n            }\n        }\n        //rotate\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\n    };\n\n    equals = (other: Card | null) => {\n        return (other && Card.equals(this, other)) || false;\n    };\n\n    static equals(card: Card | null, otherCard: Card | null) {\n        return (!card && !otherCard) || (card && otherCard && otherCard.denomination === card.denomination && otherCard.type.icon === card.type.icon);\n    }\n\n    static copy = (orig: Card) => {\n        const copy = new Card(orig.denomination, orig.type, orig.isHidden);\n        copy.source = orig.source;\n        copy.entropyStyle = { ...orig.entropyStyle };\n        copy.canClick = orig.canClick;\n        copy.onClick = orig.onClick;\n        return copy;\n    };\n\n    static copyAll = (cards: Card[]) => cards.map((card) => Card.copy(card));\n}\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\n\nexport const getFoundationOrder = () => {\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\n};\n\nexport const getTableauOrder = () => {\n    return [...DeckSize];\n};\n","import { mdiCardsClub } from '@mdi/js';\nimport { mdiCardsDiamond } from '@mdi/js';\nimport { mdiCardsHeart } from '@mdi/js';\nimport { mdiCardsSpade } from '@mdi/js';\n\nexport interface Suit {\n    icon: string;\n    color: string;\n}\n\nconst Suits: { [id: string]: Suit } = {\n    heart: {\n        icon: mdiCardsHeart,\n        color: \"red\",\n    },\n    club: {\n        icon: mdiCardsClub,\n        color: \"black\",\n    },\n    diamond: {\n        icon: mdiCardsDiamond,\n        color: \"red\",\n    },\n    spade: {\n        icon: mdiCardsSpade,\n        color: \"black\",\n    },\n};\n\nexport default Suits;\n","const EntropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\nexport default EntropyLevels;","export class SuggestionMode {\n    key: string;\n    label: string;\n    isTemporary: boolean;\n    supportsHints: boolean;\n    next: string | undefined;\n    icon: string;\n    description: string;\n    constructor(key: string, obj: ISuggestionMode) {\n        this.key = key;\n        this.label = obj.label;\n        this.icon = obj.icon;\n        this.description = obj.description;\n        this.isTemporary = !!obj.isTemporary;\n        this.supportsHints = !!obj.supportsHints;\n        this.next = obj.next;\n    }\n}\n\nexport type ISuggestionMode = {\n    label: string;\n    icon: string;\n    description: string;\n    isTemporary?: boolean;\n    supportsHints?: boolean;\n    next?: string;\n};\n\nexport default class SuggestionModes {\n    static NONE = \"NONE\";\n    static SCORED = \"SCORED\";\n    static REGULAR = \"REGULAR\";\n    static FULL = \"FULL\";\n    static ONCE = \"ONCE\";\n    static TWICE = \"TWICE\";\n    static raw: { [id: string]: ISuggestionMode } = {\n        NONE: {\n            label: \"None\",\n            description: \"No distractions. This enables one-time hints.\",\n            supportsHints: true,\n            icon: \"❌\",\n        },\n        SCORED: {\n            label: \"Scored\",\n            description: \"Shows all actions that increase the score.\",\n            icon: \"🏆\",\n        },\n        REGULAR: {\n            label: \"Regular\",\n            description: \"Shows all possible actions except circular\",\n            icon: \"💡\",\n        },\n        FULL: {\n            label: \"Full\",\n            description: \"Shows all possible actions, even if they are circular\",\n            icon: \"🎓\",\n        },\n        ONCE: {\n            label: \"Single Action\",\n            description: \"triggered by manual hint in game\",\n            isTemporary: true,\n            next: \"NONE\",\n            icon: \"⏳\",\n        },\n    };\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\n    static default = () => SuggestionModes.get(SuggestionModes.REGULAR);\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\n    static next = (current: SuggestionMode) => {\n        const all = SuggestionModes.allSuggestionModes();\n        if (all[all.length - 1].key === current.key) {\n            return all[0];\n        }\n        for (let i = 0; i < all.length; i++) {\n            if (all[i].key === current.key) {\n                return all[i + 1];\n            }\n        }\n        return all[0];\n    };\n}\n","import { XY } from \"../XY\";\n\nexport default class AbstractNavigator {\n    rows: any[];\n    constructor() {\n        this.rows = [];\n    }\n    getRows = () => this.rows;\n    getRow = (x: number) => this.getRows()[x];\n    goToRow = (pos: XY) => {\n        const rows = this.getRows();\n        const row = rows[pos.y];\n        if (row.buttons.length - 1 < pos.x) {\n            return { ...pos, x: row.buttons.length - 1 };\n        }\n\n        return pos;\n    };\n}\n","import React from \"react\";\nimport { TreeNavigator } from \"./TreeNavigator\";\nimport { XY } from \"../../XY\";\nimport useNavigationContext from \"../NavigationContext\";\n\ninterface _MenuButtonProps extends StaticMenuButtonProps {\n    x?: number;\n    y?: number;\n    navigator?: TreeNavigator;\n}\n\nexport interface StaticMenuButtonProps {\n    icon: string;\n    title: string;\n    onClick: (pos: XY) => void;\n    toggled?: boolean;\n    children?: any[];\n    disabled?: boolean;\n    skip?: boolean;\n}\ninterface MenuButtonProps extends StaticMenuButtonProps {\n    x: number;\n    y: number;\n    menuX: number;\n    menuY: number;\n    menuFocus: string;\n    active: boolean;\n    toggled: boolean;\n    onFocus: (pos: XY) => void;\n}\nconst MenuButton = (props: _MenuButtonProps) => {\n    const { navigation, setNavigation } = useNavigationContext();\n\n    if (typeof props.x === \"undefined\" || typeof props.y === \"undefined\") {\n        return null;\n    }\n\n    const onFocus = (pos: XY) => setNavigation({ ...navigation, menu: pos });\n\n    const addItem = (child: any, index: number) => {\n        const assign = (n: any[]) => {\n            n[props.x || 0].buttons[index + 1] = { ...props, x: props.x, y: index + 1 };\n        };\n        assign(props.navigator?.rows || []);\n\n        return React.cloneElement(child, { key: index, x: props.x, y: index + 1, navigator: props.navigator });\n    };\n\n    return (\n        <RenderMenuButton\n            title={props.title}\n            x={props.x || 0}\n            y={props.y || 0}\n            icon={props.icon}\n            menuX={navigation.menu.x}\n            menuY={navigation.menu.y}\n            menuFocus={navigation.focus}\n            disabled={props.disabled}\n            active={false}\n            onFocus={onFocus}\n            onClick={props.onClick}\n            toggled={!!props.toggled}\n            skip={props.skip}\n        >\n            {props.children?.map(addItem)}\n        </RenderMenuButton>\n    );\n};\nconst RenderMenuButton = (props: MenuButtonProps) => {\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n\n    let className = \"\";\n\n    if (props.y > 0) {\n        className += \" indented\";\n    }\n\n    const shouldBeFocus = props.menuX === props.x && props.menuY === props.y && props.menuFocus === \"menu\";\n\n    if (shouldBeFocus && !props.skip) {\n        className += \" highlight\";\n    }\n\n    React.useEffect(() => {\n        if (\n            props.menuX === props.x &&\n            props.menuY === props.y &&\n            props.menuFocus === \"menu\" &&\n            inputEl.current &&\n            inputEl.current !== document.activeElement\n        ) {\n            setClicking(true);\n            inputEl && inputEl.current && inputEl.current.focus();\n        }\n    }, [props.menuFocus, props.menuX, props.menuY, props.x, props.y]);\n\n    if (props.active) {\n        className += \" active\";\n    }\n\n    //omg this is the worst but it works (5h lost)\n    const [isClicking, setClicking] = React.useState(false);\n\n    const focus = () => {\n        if (!isClicking && !(props.menuX === props.x && props.menuY === props.y) && props.menuFocus === \"menu\") {\n            props.onFocus({ x: props.x, y: props.y });\n            setClicking(false);\n        }\n    };\n\n    const click = () => {\n        setClicking(false);\n        props.onClick({ x: props.x, y: props.y });\n    };\n\n    return (\n        <>\n            <button\n                ref={inputEl}\n                className={className}\n                title={props.title}\n                onFocus={focus}\n                onClick={click}\n                disabled={props.skip}\n                onMouseDown={() => setClicking(true)}\n            >\n                <div className=\"icon\">{props.icon}</div>\n                <div className=\"label\">{props.title}</div>\n            </button>\n            <div>{!props.toggled ? null : props.children}</div>\n        </>\n    );\n};\nexport default MenuButton;\n","import React from \"react\";\n\nconst MenuTitle = (props: { label: string }) => {\n    return <div className=\"title maintitle\">{props.label}</div>;\n};\nexport default MenuTitle;\n","import GamePad from \"../../../../common/GamePad\";\nimport GamepadLayout from \"../../../../common/GamepadLayout\";\nimport Keyboard from \"../../../../common/Keyboard\";\nimport KeyboardLayout from \"../../../../common/KeyboardLayouts\";\nimport React from \"react\";\nimport { TreeNavigator } from \"../Menu/TreeNavigator\";\nimport { XY } from \"../../XY\";\nimport useNavigationContext from \"../NavigationContext\";\n\nconst TreeNavWrapper = (props: { navigator: TreeNavigator; keyboardLayout: KeyboardLayout; disabled?: boolean }) => {\n    const { navigator } = props;\n    const { navigation, setNavigation } = useNavigationContext();\n\n    const assignState = (result: XY) => {\n        if (navigation.focus === \"menu\") {\n            setNavigation({ ...navigation, menu: result });\n        }\n    };\n\n    const inputHandlers = {\n        onCancel: () =>\n            setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } }),\n        onUp: () => assignState(navigator.moveUp(navigation.menu.x, navigation.menu.y)),\n        onDown: () => assignState(navigator.moveDown(navigation.menu.x, navigation.menu.y)),\n        onLeft: () => assignState(navigator.moveLeft(navigation.menu.x, navigation.menu.y)),\n        onRight: () => assignState(navigator.moveRight(navigation.menu.x, navigation.menu.y)),\n        onAction: () => navigator.action(navigation.menu),\n    };\n\n    return navigation.focus === \"menu\" && !props.disabled ? (\n        <>\n            <Keyboard layout={props.keyboardLayout} {...inputHandlers} />\n            <GamePad layout={GamepadLayout} {...inputHandlers} />\n        </>\n    ) : null;\n};\n\nexport default TreeNavWrapper;\n","import AbstractNavigator from \"../AbstractNavigator\";\nimport { NavHandler } from \"../../NavHandler\";\nimport { XY } from \"../../XY\";\n\nexport class TreeNavigator extends AbstractNavigator implements NavHandler {\n    moveUp: (x: number, y: number) => XY = (x, y) => {\n        if (x === 0) {\n            return { x: this.rows.length - 1, y: 0 };\n        }\n\n        if (y > 0) {\n            return { x: x, y: y - 1 };\n        }\n\n        if (y === 0) {\n            const row = this.getRow(x - 1);\n            if (row.toggled) {\n                return { x: x - 1, y: row.buttons.length - 1 };\n            } else {\n                return { x: x - 1, y: y };\n            }\n        }\n\n        return { x: x - 1, y: y };\n    };\n\n    moveDown: (x: number, y: number) => XY = (x, y) => {\n        const row = this.getRow(x);\n        if (y === 0 && row.toggled) {\n            return { x: x, y: 1 };\n        }\n\n        if (y > 0 && y < row.buttons.length - 1) {\n            return { x: x, y: y + 1 };\n        }\n\n        if (y > 0) {\n            return { x: x + 1, y: 0 };\n        }\n\n        if (x < this.rows.length - 1) {\n            return { x: x + 1, y: y };\n        }\n\n        return { x: 0, y: 0 };\n    };\n\n    moveLeft: (x: number, y: number) => XY = (x, y) => ({ x: x, y: y });\n\n    moveRight: (x: number, y: number) => XY = (x, y) => ({ x: x, y: y });\n\n    action: (xy: XY) => void = () => {\n        const activeElement: any = document.activeElement;\n        activeElement && activeElement.click();\n    };\n}\n","import KeyboardLayout from \"../../../../common/KeyboardLayouts\";\nimport React from \"react\";\nimport TreeNavWrapper from \"./TreeNavWrapper\";\nimport { TreeNavigator } from \"./TreeNavigator\";\n\nconst MenuTree = (props: { children: any[]; keyboardLayout: KeyboardLayout; disabled?: boolean }) => {\n    const navigator = new TreeNavigator();\n    navigator.rows = [];\n    let index = -1;\n    let _i = -1;\n    const addItem = (child: any) => {\n        _i++;\n        if (!child.props.skip) {\n            index++;\n            navigator.rows[index] = { x: index, y: 0, ...child.props, buttons: [] };\n        }\n        return React.cloneElement(child, { key: _i, x: index, y: 0, navigator: navigator });\n    };\n    return (\n        <>\n            {props.children.map(addItem)}\n            <TreeNavWrapper disabled={props.disabled} navigator={navigator} keyboardLayout={props.keyboardLayout} />\n        </>\n    );\n};\nexport default MenuTree;\n","import React from \"react\";\n\nexport interface NavigationState {\n    menu: {\n        x: number;\n        y: number;\n    };\n    screen: {\n        x: number;\n        y: number;\n    };\n    focus: string;\n    mainMenu: string;\n    screeen: string;\n}\ninterface INavigationContext {\n    navigation: NavigationState;\n    setNavigation: (n: NavigationState) => void;\n    closeScreen: () => void;\n}\n\nconst startPos = { x: 0, y: 0 };\nconst defaultNavigationState = {\n    menu: { ...startPos },\n    screen: { ...startPos },\n    focus: \"menu\",\n    mainMenu: \"\",\n    screeen: \"\",\n};\n\nconst NavigationContext = React.createContext<INavigationContext>({\n    navigation: defaultNavigationState,\n    setNavigation: () => {},\n    closeScreen: () => {},\n});\n\nexport const NavigationProvider = (props: { children: any }) => {\n    const [navigation, setNavigation] = React.useState(defaultNavigationState);\n    const closeScreen = () =>\n        setNavigation({\n            ...navigation,\n            focus: \"menu\",\n            screeen: \"\",\n            mainMenu: navigation.mainMenu,\n            menu: { ...navigation.menu },\n        });\n    return <NavigationContext.Provider value={{ navigation, setNavigation, closeScreen }}>{props.children}</NavigationContext.Provider>;\n};\n\nconst useNavigationContext = () => React.useContext(NavigationContext);\n\nexport default useNavigationContext;\n","import \"./16to9.css\";\nimport \"./4to3.css\";\nimport \"./aspectratio.css\";\n\nimport { Ratio } from \"./Ratios\";\nimport React from \"react\";\n\nexport const WindowDimensionContext = React.createContext<{ width: number; height: number }>({\n    width: window.innerWidth,\n    height: window.innerHeight,\n});\n\nexport default class AspectRatio extends React.Component<{ ratio: Ratio }, { width: number; height: number }> {\n    constructor(props: { ratio: Ratio; children: React.ReactNode }) {\n        super(props);\n        this.state = { width: 0, height: 0 };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    render() {\n        const suffix = this.state.width >= this.state.height * this.props.ratio.multiplier ? \"landscape\" : \"portrait\";\n        return (\n            <WindowDimensionContext.Provider value={this.state}>\n                <div className=\"appwrapper\">\n                    <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix}>\n                        <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix + \"-inner\"}>\n                            <div className=\"appwrapper-jail\">{this.props.children}</div>\n                        </div>\n                    </div>\n                </div>\n            </WindowDimensionContext.Provider>\n        );\n    }\n}\n","export interface Ratio {\n    prefix: string;\n    multiplier: number;\n}\nexport default class Ratios {\n    static _16to9: Ratio = {\n        prefix: \"16-to-9\",\n        multiplier: 1.7778,\n    };\n    static _4to3: Ratio = {\n        prefix: \"4-to-3\",\n        multiplier: 1.3333,\n    };\n}\n","import { IGamepadLayout } from \"../common/GamepadLayout\";\nimport { InputProps } from \"./InputProps\";\nimport React from \"react\";\nimport ReactGamePad from \"react-gamepad\";\nimport RenderAfter from \"./RenderAfter\";\n\ninterface GamePadProps extends InputProps {\n    gamepadIndex?: number;\n    layout: IGamepadLayout;\n}\nconst GamePad = (props: GamePadProps) => {\n    const { layout } = props;\n    const handlers = {\n        onButtonDown: (e: string) => {\n            if (layout.cancel(e)) {\n                props.onCancel && props.onCancel();\n            }\n            if (layout.left(e)) {\n                props.onLeft && props.onLeft();\n            }\n            if (layout.right(e)) {\n                props.onRight && props.onRight();\n            }\n            if (layout.up(e)) {\n                props.onUp && props.onUp();\n            }\n            if (layout.down(e)) {\n                props.onDown && props.onDown();\n            }\n            if (layout.action(e)) {\n                props.onAction && props.onAction();\n            }\n            if (layout.undo(e)) {\n                props.onUndo && props.onUndo();\n            }\n            if (layout.hint(e)) {\n                props.onHint && props.onHint();\n            }\n            if (layout.pause(e)) {\n                props.onPause && props.onPause();\n            }\n            if (layout.menu(e)) {\n                props.onMenu && props.onMenu();\n            }\n        },\n\n        onConnect: (e: number) => {\n            console.debug(\"connected\", e);\n        },\n\n        onDisconnect: (e: number) => {\n            console.debug(\"disconnected\", e);\n        },\n    };\n\n    return (\n        <RenderAfter delay={125}>\n            <ReactGamePad gamepadIndex={props.gamepadIndex} {...handlers}>\n                <React.Fragment />\n            </ReactGamePad>\n        </RenderAfter>\n    );\n};\n\nexport default GamePad;\n","export interface IGamepadLayout {\n    up: (e: string) => boolean;\n    down: (e: string) => boolean;\n    right: (e: string) => boolean;\n    left: (e: string) => boolean;\n    cancel: (e: string) => boolean;\n    action: (e: string) => boolean;\n    undo: (e: string) => boolean;\n    hint: (e: string) => boolean;\n    pause: (e: string) => boolean;\n    menu: (e: string) => boolean;\n}\n\nconst GamepadLayout: IGamepadLayout = {\n    up: (e) => e === \"DPadUp\",\n    down: (e) => e === \"DPadDown\",\n    right: (e) => e === \"DPadRight\",\n    left: (e) => e === \"DPadLeft\",\n    cancel: (e) => e === \"B\",\n    action: (e) => e === \"A\",\n    undo: (e) => e === \"Y\",\n    hint: (e) => e === \"X\",\n    pause: (e) => e === \"Start\",\n    menu: (e) => e === \"Back\",\n};\n\nexport default GamepadLayout;\n","import { InputProps } from \"./InputProps\";\nimport KeyboardLayout from \"./KeyboardLayouts\";\nimport React from \"react\";\n\ninterface KeyboardProps extends InputProps {\n    layout: KeyboardLayout;\n}\nconst Keyboard = (props: KeyboardProps) => {\n    React.useEffect(() => {\n        const navListener = (e: any) => {\n            // eslint-disable-next-line no-restricted-globals\n            const evtobj = window.event ? event : e;\n            const { layout } = props;\n            if (layout.cancel(evtobj)) {\n                props.onCancel && props.onCancel();\n                e.preventDefault();\n            }\n            if (layout.left(evtobj)) {\n                props.onLeft && props.onLeft();\n                e.preventDefault();\n            }\n            if (layout.right(evtobj)) {\n                props.onRight && props.onRight();\n                e.preventDefault();\n            }\n            if (layout.up(evtobj)) {\n                props.onUp && props.onUp();\n                e.preventDefault();\n            }\n            if (layout.down(evtobj)) {\n                props.onDown && props.onDown();\n                e.preventDefault();\n            }\n            if (layout.action(evtobj)) {\n                props.onAction && props.onAction();\n                e.preventDefault();\n            }\n            if (layout.undo(evtobj)) {\n                props.onUndo && props.onUndo();\n                e.preventDefault();\n            }\n            if (layout.hint(evtobj)) {\n                props.onHint && props.onHint();\n                e.preventDefault();\n            }\n            if (layout.pause(evtobj)) {\n                props.onPause && props.onPause();\n                e.preventDefault();\n            }\n            if (layout.menu(evtobj)) {\n                props.onMenu && props.onMenu();\n                e.preventDefault();\n            }\n        };\n        document.addEventListener(\"keydown\", navListener);\n        return () => {\n            document.removeEventListener(\"keydown\", navListener);\n        };\n    }, [props]);\n    return null;\n};\nexport default Keyboard;\n","interface KeyboardLayout {\n    up: (e: KeyboardEvent) => boolean;\n    down: (e: KeyboardEvent) => boolean;\n    right: (e: KeyboardEvent) => boolean;\n    left: (e: KeyboardEvent) => boolean;\n    cancel: (e: KeyboardEvent) => boolean;\n    action: (e: KeyboardEvent) => boolean;\n    undo: (e: KeyboardEvent) => boolean;\n    hint: (e: KeyboardEvent) => boolean;\n    pause: (e: KeyboardEvent) => boolean;\n    menu: (e: KeyboardEvent) => boolean;\n}\n\nexport default KeyboardLayout;\n\nexport const getKeyboardLayout = (id: number) => {\n    if (id === 0) return Wasd;\n    if (id === 1) return Arrows;\n    if (id === 2) return NumPad;\n    throw new Error(\"Unknown keyboard layout ID\");\n};\n\nexport const Arrows: KeyboardLayout = {\n    up: (e) => e.keyCode === 38,\n    down: (e) => e.keyCode === 40,\n    right: (e) => e.keyCode === 39,\n    left: (e) => e.keyCode === 37,\n    cancel: (e) => e.keyCode === 27,\n    action: (e) => e.keyCode === 96,\n    undo: (e) => e.keyCode === 90 && e.ctrlKey,\n    hint: (e) => e.keyCode === 72,\n    pause: (e) => e.keyCode === 80,\n    menu: (e) => e.keyCode === 77,\n};\n\nexport const Wasd: KeyboardLayout = {\n    up: (e) => e.keyCode === 87,\n    down: (e) => e.keyCode === 83,\n    right: (e) => e.keyCode === 68,\n    left: (e) => e.keyCode === 65,\n    cancel: (e) => e.keyCode === 69,\n    action: (e) => e.keyCode === 81,\n    undo: (e) => e.keyCode === 88,\n    hint: (e) => e.keyCode === 90,\n    pause: (e) => e.keyCode === 999,\n    menu: (e) => e.keyCode === 27,\n};\n\nexport const NumPad: KeyboardLayout = {\n    up: (e) => e.keyCode === 104,\n    down: (e) => e.keyCode === 101,\n    right: (e) => e.keyCode === 102,\n    left: (e) => e.keyCode === 100,\n    cancel: (e) => e.keyCode === 105,\n    action: (e) => e.keyCode === 103,\n    undo: (e) => e.keyCode === 98,\n    hint: (e) => e.keyCode === 97,\n    pause: (e) => e.keyCode === 999,\n    menu: (e) => e.keyCode === 99,\n};\n\nexport const Universal: KeyboardLayout = {\n    up: (e) => NumPad.up(e) || Wasd.up(e) || Arrows.up(e),\n    down: (e) => NumPad.down(e) || Wasd.down(e) || Arrows.down(e),\n    right: (e) => NumPad.right(e) || Wasd.right(e) || Arrows.right(e),\n    left: (e) => NumPad.left(e) || Wasd.left(e) || Arrows.left(e),\n    cancel: (e) => NumPad.cancel(e) || Wasd.cancel(e) || Arrows.cancel(e),\n    action: (e) => NumPad.action(e) || Wasd.action(e) || Arrows.action(e),\n    undo: (e) => NumPad.undo(e) || Wasd.undo(e) || Arrows.undo(e),\n    hint: (e) => NumPad.hint(e) || Wasd.hint(e) || Arrows.hint(e),\n    pause: (e) => NumPad.pause(e) || Wasd.pause(e) || Arrows.pause(e),\n    menu: (e) => NumPad.menu(e) || Wasd.menu(e) || Arrows.menu(e),\n};\n"],"names":["defaultPlayerSettings","id","name","inputMethod","inputLayout","CookieContext","React","consented","setConsented","CookieContextProvider","Provider","useCookieContext","Deck","cards","keys","Object","Suits","this","DeckSize","deckSize","map","key","Card","flat","reverse","shuffle","shuffleArray","array","i","length","j","Math","floor","random","copy","result","apply","after","s","ratingSettings","hintPenalty","suggestionMode","SuggestionModes","ratingPreset","RatingPresets","CHILL","timedMode","missPenalty","undoPenalty","REGULAR","COMPETITIVE","ALL","icon","label","settings","matchPreset","filterd","filter","preset","equals","s1","s2","TouchDetector","prefixes","split","window","DocumentTouch","document","mq","query","matchMedia","matches","join","e","console","error","defaultStartScreenState","difficultySettings","quickDeal","autoResolve","autoUncover","speed","entropySettings","baseEntropy","interactionEntropy","players","StartScreenContext","state","setState","StartScreenProvider","useStartScreenContext","drawMode","recyclingMode","lines","ControlPresets","CloseButton","closeScreen","useNavigationContext","className","onClick","StorageManager","hasConsent","consent","localStorage","getItem","parseInt","giveConsent","prompt","confirm","setItem","getDialog","revokeConsent","clear","store","value","JSON","stringify","getPreviousState","parse","instance","getInstance","getScreenElementClassName","base","props","hasFocus","disabled","useFocusEffect","inputEl","current","activeElement","focus","RenderCookieBanner","navigation","y","x","screen","ref","CookieBanner","Row","navigator","addElement","child","index","skip","assign","n","buttons","rows","children","Array","isArray","ScreenNavWrapper","setNavigation","assignState","inputHandlers","onCancel","screeen","mainMenu","menu","onUp","moveUp","onDown","moveDown","onLeft","moveLeft","onRight","moveRight","onAction","action","Keyboard","layout","Universal","GamePad","GamepadLayout","ScreenNavigator","getRows","goToRow","row","getRow","click","AbstractNavigator","ScreenContent","_index","_i","addRow","ScreenMainButton","autoFocus","pos","onFocus","line","Controls","found","buttonPressed","pads","setPads","press","log","player","playerHasSettings","playerId","isActive","applyPreset","nextPlayer","getButtonClass","blockedByOtherPlayers","otherPlayers","p","getLines","slice","gamepadIndex","Difficulty","renderButton","button","DifficultyOptions","RenderScreenSelect","values","callBack","toString","description","ScreenSelect","QuickStart","EntropyLevels","setBaseEntropy","setInteractionEntropy","RenderScreenToggle","useInitialFocus","checked","onChange","change","val","ScreenToggle","Rating","customizeRating","modifier","next","setUndoPenalty","r","setTimeRating","setHintPenalty","customizeRating2","ratingModifier","setMissPenalty","Suggestions","suggestionModes","isDisabled","renderToggle","mode","Support","setAutoResolve","setAutoUncover","setQuickDeal","setSpeed","RenderScreen","Screen","OverlayContext","overlayActive","toggleOverlay","useOverlayContext","Overlay","before","defaultCallable","call","OverlayContextProvider","setActive","content","setContent","_after","setAfter","_before","setBefore","context","ConsentDialog","MenuTitle","MenuTree","keyboardLayout","MenuButton","title","VerticalMenu","StartMenu","switchToMenu","toggleScreen","switchToScreen","toggleMainMenu","start","GameModes","toggled","_toggleOverlay","Home","storage","previous","startScreenContext","AspectRatio","ratio","Ratios","boardMode","initialized","inputMode","Game","App","cookieContext","defaultState","launchState","setLaunchState","deck","restart","SINGLEPLAYER","VERSUS","denomination","type","isHidden","entropyStyle","source","suggestion","success","canClick","setSuccess","causeEntropy","lvl","level","randomInt","min","max","other","_p","card","otherCard","orig","copyAll","getFoundationOrder","getTableauOrder","heart","mdiCardsHeart","color","club","mdiCardsClub","diamond","mdiCardsDiamond","spade","mdiCardsSpade","SuggestionMode","obj","isTemporary","supportsHints","NONE","SCORED","FULL","ONCE","TWICE","raw","get","all","allSuggestionModes","default","getHintMode","RenderMenuButton","menuX","menuY","menuFocus","setClicking","active","isClicking","onMouseDown","addItem","TreeNavWrapper","TreeNavigator","startPos","defaultNavigationState","NavigationContext","NavigationProvider","WindowDimensionContext","width","innerWidth","height","innerHeight","updateWindowDimensions","bind","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","suffix","multiplier","prefix","_16to9","_4to3","handlers","onButtonDown","cancel","left","right","up","down","undo","onUndo","hint","onHint","pause","onPause","onMenu","onConnect","debug","onDisconnect","delay","navListener","evtobj","event","preventDefault","getKeyboardLayout","Wasd","Arrows","NumPad","Error","keyCode","ctrlKey"],"sourceRoot":""}