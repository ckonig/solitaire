{"version":3,"sources":["Common.ts","View/AspectRatio/AspectRatio.tsx","View/Game/GamePad.js","View/Context.ts","View/Game/BoardGamePad.js","View/Game/KeyboardLayouts.ts","View/Game/Keyboard.js","View/Game/BoardKeyboard.js","View/PauseContext.tsx","View/Game/BoardNavigator.js","View/Game/Dealer.js","View/Game/BlinkingComponent.js","View/Game/Card.js","View/Game/Hand.js","View/Game/StackBase.js","View/Game/Foundation.js","View/UI/Header/Clock.tsx","View/UI/Header/Hearts.tsx","View/UI/Header/Hint.tsx","View/UI/Header/Points.tsx","View/UI/Header/ToggleMenu.tsx","View/UI/Header/Undo.tsx","View/UI/Header/Header.tsx","Model/Game/Settings/SuggestionModes.ts","View/UI/StartScreen/RatingOptions.ts","View/UI/StartScreen/TouchDetector.js","View/UI/StartScreen/Context.ts","Model/Game/Settings/EntropyLevels.ts","View/UI/StartScreen/Menu/MenuButton.tsx","View/UI/StartScreen/Menu/MenuTitle.tsx","View/UI/StartScreen/Screens/NavWrapper.tsx","View/UI/StartScreen/Menu/TreeNavigator.ts","View/UI/StartScreen/Menu/MenuTree.tsx","View/UI/Menu.tsx","View/Game/Stock.js","View/Game/Tableau.js","View/Game/Waste.js","View/Game/Board.tsx","View/UI/EndScreen.js","Model/Business/Blinker.ts","Model/Business/Tableau.ts","Model/Business/Dealer.ts","Model/Business/Dispatcher.ts","Model/Deck/Card.js","Model/Game/Focus.ts","Model/Game/BasicStack.js","Model/Game/HandHoldingStack.js","Model/Deck/Suits.ts","Model/Deck/DeckSize.ts","Model/Game/Foundation.js","Model/Business/Foundation.ts","Model/Game/Rating.js","Model/Game/TimeMachine.js","Model/Game/Game.js","Model/Game/Hand.ts","Model/Business/Navigator.ts","Model/Game/Settings.ts","Model/Game/Stock.js","Model/Business/Stock.ts","Model/Business/Waste.ts","Model/Business/Suggestions.ts","Model/Game/Tableau.ts","Model/Game/Waste.js","Model/Model.ts","View/Game/BoardWrap.tsx","Model/Deck/Deck.js","GameModes.tsx","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/ControlsPresets.ts","View/UI/StartScreen/Screens/Context.ts","View/UI/StartScreen/Screens/CloseButton.tsx","View/UI/StorageManager.ts","View/UI/StartScreen/Screens/ScreenElement.ts","View/UI/StartScreen/Screens/CookieBanner.tsx","View/UI/StartScreen/Screens/Row.tsx","View/UI/StartScreen/Screens/ScreenNavigator.ts","View/UI/StartScreen/Screens/ScreenContent.tsx","View/UI/StartScreen/Screens/ScreenMainButton.tsx","View/UI/StartScreen/Screens/Controls.tsx","View/UI/StartScreen/Screens/Difficulty.tsx","View/UI/StartScreen/Screens/ScreenSelect.tsx","View/UI/StartScreen/Screens/ScreenToggle.tsx","View/UI/StartScreen/Screens/QuickStart.tsx","View/UI/StartScreen/Screens/Rating.tsx","View/UI/StartScreen/Screens/Suggestions.tsx","View/UI/StartScreen/Screens/Screen.tsx","View/UI/StartScreen/Menu/VerticalMenu.tsx","View/UI/StartScreen/Menu/StartMenu.tsx","View/UI/StartScreen/Home.tsx","View/AspectRatio/Ratios.ts","App.tsx","index.tsx"],"names":["defaultPlayerSettings","0","id","name","inputMethod","inputLayout","1","AspectRatio","props","state","width","height","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","suffix","ratio","multiplier","className","prefix","children","React","Component","GamePad","gamepadIndex","onButtonDown","e","console","debug","onLeft","onRight","onUp","onDown","onAction","onCancel","onHint","onUndo","onPause","onMenu","onConnect","onDisconnect","defaultValue","replaceContext","updateContext","updateGameContext","restart","GlobalContext","createContext","Provider","CookieContext","consented","setConsented","CookieContextProvider","BoardGamePad","useContext","player","BoardContext","isGamePadDriven","settings","launchSettings","inputMode","isSinglePlayer","boardMode","switchToGamePad","ctx","focus","isKeyBoard","players","getKeyboardLayout","Wasd","Arrows","NumPad","up","keyCode","down","right","left","cancel","action","undo","ctrlKey","hint","pause","menu","Universal","Keyboard","navListener","evtobj","event","layout","preventDefault","useEffect","document","BoardKeyboard","isKeyboardDriven","switchToKeyboard","defaultPauseState","started","end","paused","pauses","pauseStartedAt","allowed","pausedBy","showMenu","defaultPauseContext","togglePause","getElapsed","PauseContext","PauseContextProvider","PauseProvider","useState","setPaused","context","isPaused","Date","now","length","padleft","i","msec","reduce","a","b","getElapsedMs","hh","Math","floor","mm","ss","value","BoardNavigator","before","x","navigator","currentIndex","y","z","modifier","moveLeft","moveRight","moveUp","moveDown","pressCurrent","hand","stack","onClick","isKeyboard","suggestionMode","supportsHints","isTemporary","isVisible","isDisabled","enableHint","_state","previous","game","timemachine","popPreviousState","previousStates","rating","penalize","Dealer","timeouts","quickDeal","dealer","isDealt","dealAll","deal","dealt","push","setTimeout","dealOne","forEach","timeout","clearTimeout","BlinkingComponent","selector","blinkFor","unblink","contextType","Card","inputEl","useRef","isFocused","hasCard","model","current","card","clientX","clientY","ele","target","includes","offsetParent","rect","getBoundingClientRect","position","click","ownerDocument","defaultView","pageXOffset","pageYOffset","element","names","map","label","split","source","isHidden","type","icon","face","style","pointerEvents","onFocus","onBlur","zIndex","offsetTop","top","entropyStyle","offsetLeft","getCardStyle","ref","hasSuggestion","isSuggested","suggestion","isSelected","blink","canClick","getClassName","disabled","tabIndex","aria-label","title","Hand","parentModel","index","_c","p","StackBase","classname","hasStack","parent","clickEmpty","Foundation","s","foundation","stacks","Stacks","Clock","elapsed","setElapsed","interval","setInterval","clearInterval","Hearts","recyclingMode","stock","passes","createString","Array","from","keys","join","getHearts","Hint","Points","points","ToggleMenu","Undo","pow","multiplicator","Header","mode","SuggestionMode","key","obj","next","description","SuggestionModes","NONE","SCORED","REGULAR","FULL","ONCE","TWICE","raw","get","all","Object","allSuggestionModes","filter","default","getHintMode","apply","after","ratingSettings","hintPenalty","ratingPreset","RatingPresets","CHILL","timedMode","missPenalty","undoPenalty","COMPETITIVE","ALL","matchPreset","filterd","preset","equals","s1","s2","TouchDetector","prefixes","DocumentTouch","query","matchMedia","matches","error","defaultStartScreenState","difficultySettings","entropySettings","baseEntropy","interactionEntropy","NavigationContext","navigation","screen","mainMenu","screeen","setNavigation","StartScreenContext","NavigationProvider","EntropyLevels","_MenuButton","menuX","menuY","menuFocus","skip","activeElement","setClicking","active","isClicking","onMouseDown","toggled","MenuButton","child","rows","buttons","cloneElement","MenuTitle","NavWrapper","assignState","result","TreeNavWrapper","keyboardLayout","TreeNavigator","getRows","getRow","goToRow","pos","row","MenuTree","_i","Menu","switchToMenu","onfocus","remaining","announcement","sm","setSuggestionMode","val","toggleMainMenu","lvl","setEntropy","_Menu","navigationContext","Renderer","InnerRenderer","usePrevious","speed","waste","isFromWaste","putDownHand","addAll","popTop","canRecycle","recycle","Stock","Tableau","tableau","getOffset","Waste","drawMode","isHoldingCard","additionalOffset","Board","EndScreen","isEnded","getTimePenalty","getBonusPoints","getTotal","Blinker","startBlink","registerBlink","stopBlink","dispatchPutDown","wouldAcceptHand","src","registerMove","dispatchPickup","pickUp","popWithFollowing","registerPickup","TableauHidden","tryUncover","uncover","registerUncover","dealingAt","callback","newCard","popOne","isFirst","Dispatcher","clickHandler","getHandler","causeEntropy","level","random","randomInt","min","max","other","_p","otherCard","copy","orig","copyAll","cards","Focus","keyboard","validSettings","setCard","unsetCard","unsetStack","setStack","BasicStack","getTop","getClickable","HandHoldingStack","getHandContent","Suits","heart","color","club","diamond","spade","DeckSize","setOnClick","sindex","getCurrentAccepted","currentFoundation","acceptedCards","hasMoreThanOneCard","accepts","currentCard","add","putDown","currentAccepted","usedCards","pop","remove","getPreviousUsed","countCards","f","parseInt","template","slice","reverse","suit","origStack","tryDetectEnd","_card","Rating","registerHint","disableHint","currentMove","rateMove","registerRecycle","penalty","done","start","secondsToFinish","trunc","round","on","move","isTableau","substr","isFoundation","TimeMachine","memorable","modified","pushPreviousState","modelEquals","isRequested","popPrevious","stackEquals","every","stacksEqual","Game","c","splice","_onClick","isHoldingKing","isFromCurrentSource","isFromFoundation","isFromTableau","isFromAnyTableau","substring","getTableauIndex","Navigator","getZindex","elem","targets","update","j","finishNav","valid","direction","undefined","toggleRow","clickable","pickLast","last","Settings","suggestionModes","setCardProperties","recyclings","isOnTop","_position","moveToWaste","recycleWaste","Suggestions","evaluateOptions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","isMoveOfKingBetweenEmptySlots","isMoveBetweenSimilarParentCards","isNotLoop","foundAny","wasteState","Model","cardIndex","tableauState","filtered","_stack","disableSuggestion","TableauStack","onClickhidden","canUncover","getStack","canPutDown","range","indexOf","getCard","stackEntropy","entropy","concat","offset","canAdd","suggestor","withSuggestions","withHandlers","StockHandler","WasteHandler","FoundationHandler","TableauHandler","getInitialState","deck","BoardProvider","BoardWrap","render","Deck","deckSize","flat","shuffleArray","array","GameModes","QUICK","autoConfig","CUSTOM","VERSUS","NULL","DifficultyOptions","lines","ControlPresets","ScreenContext","closeScreen","CloseButton","StorageManager","hasConsent","consent","localStorage","getItem","giveConsent","prompt","confirm","setItem","revokeConsent","clear","store","JSON","stringify","getPreviousState","parse","getScreenElementClassName","base","hasFocus","useFocusEffect","RenderCookieBanner","CookieBanner","Row","addElement","isArray","ScreenNavigator","ScreenContent","_index","addRow","ScreenMainButton","autoFocus","line","Controls","found","buttonPressed","pads","setPads","connect","press","log","playerHasSettings","playerId","isActive","applyPreset","nextPlayer","getButtonClass","blockedByOtherPlayers","otherPlayers","getLines","Difficulty","renderButton","button","_ScreenSelect","values","callBack","toString","ScreenSelect","_ScreenToggle","useInitialFocus","checked","onChange","ScreenToggle","optimizeOptions","QuickStart","customizeRating","r","ratingModifier","customizeRating2","Screen","VerticalMenu","StartMenu","toggleScreen","switchToScreen","storage","revoke","Home","startPos","startScreenContext","cookieContext","initialized","Ratios","_16to9","_4to3","App","setStarted","defaultState","launchState","setLaunchState","shuffle","board","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd0ef7de.chunk.js","sourcesContent":["import Card from \"./Model/Deck/Card\";\r\nimport Model from \"./Model/Model\";\r\n\r\nexport type StateReplacer = (state: Model) => Model | null;\r\nexport type StateUpdater = (state: Model) => void;\r\nexport type StateReplaceFunction = (modifier: StateReplacer) => void;\r\nexport type StateUpdateFunction = (modifier: StateUpdater) => void;\r\n\r\nexport const defaultPlayerSettings: PlayerSettings = {\r\n    0: {\r\n        id: 0,\r\n        name: \"Player 1\",\r\n        inputMethod: \"gamepad\",\r\n        inputLayout: 0,\r\n    },\r\n    1: {\r\n        id: 1,\r\n        name: \"Player 2\",\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 0,\r\n    },\r\n};\r\n\r\ninterface PlayerSetting {\r\n    id: number;\r\n    name: string;\r\n    inputMethod: string;\r\n    inputLayout: number;\r\n}\r\n\r\nexport interface PlayerSettings {\r\n    [id: number]: PlayerSetting;\r\n}\r\n\r\nexport interface LaunchSettings {\r\n    recyclingMode: string;\r\n    drawMode: string;\r\n    inputMode: string;\r\n    interactionEntropy: number;\r\n    baseEntropy: number;\r\n    suggestionMode: string;\r\n    players: PlayerSettings;\r\n    boardMode: string;\r\n    initialized?: boolean;\r\n}\r\n\r\nexport interface ClickHandler {\r\n    dispatchPutDown: (card: Card, position: any, state: Model, index: number) => void;\r\n    dispatchPickup: (card: Card, position: any, state: Model, index: number) => void;\r\n}\r\n\r\nexport type BlinkFunction = (state: Model, index: number) => void;\r\n\r\nexport interface RatingSettings {\r\n    undoPenalty?: boolean;\r\n    hintPenalty?: boolean;\r\n    timedMode?: boolean;\r\n    missPenalty?: boolean;\r\n}\r\n\r\nexport interface EntropySettings {\r\n    baseEntropy?: number;\r\n    interactionEntropy?: number;\r\n}\r\n","import React from \"react\";\r\nimport \"./16to9.css\";\r\nimport \"./4to3.css\";\r\nimport \"./aspectratio.css\";\r\nimport { Ratio } from \"./Ratios\";\r\n\r\nexport default class AspectRatio extends React.Component<{ ratio: Ratio }, { width: number; height: number }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { width: 0, height: 0 };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    render() {\r\n        const suffix = this.state.width >= this.state.height * this.props.ratio.multiplier ? \"landscape\" : \"portrait\";\r\n        return (\r\n            <div className=\"appwrapper\">\r\n                <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix}>\r\n                    <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix + \"-inner\"}>\r\n                        <div className=\"appwrapper-jail\">{this.props.children}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactGamePad from \"react-gamepad\";\r\n\r\nconst GamePad = (props) => {\r\n    const buttonHandler = (e) => {\r\n        //@todo use layout abstraction like in keyboard\r\n        //@todo make layouts configurable (for visuals allow switching PS4 and XBOX layouts)\r\n        console.debug(e);\r\n        if (e == \"DPadLeft\") {\r\n            props.onLeft && props.onLeft();\r\n        }\r\n        if (e == \"DPadRight\") {\r\n            props.onRight && props.onRight();\r\n        }\r\n        if (e == \"DPadUp\") {\r\n            props.onUp && props.onUp();\r\n        }\r\n        if (e == \"DPadDown\") {\r\n            props.onDown && props.onDown();\r\n        }\r\n        if (e == \"A\") {\r\n            props.onAction && props.onAction();\r\n        }\r\n        if (e == \"B\") {\r\n            props.onCancel && props.onCancel();\r\n        }\r\n        if (e == \"X\") {\r\n            props.onHint && props.onHint();\r\n        }\r\n        if (e == \"Y\") {\r\n            props.onUndo && props.onUndo();\r\n        }\r\n        if (e == \"Start\") {\r\n            props.onPause && props.onPause();\r\n        }\r\n        if (e == \"Back\") {\r\n            props.onPause && props.onMenu();\r\n        }\r\n    };\r\n\r\n    const connectHandler = (e) => {\r\n        console.debug(\"connected\", e);\r\n    };\r\n\r\n    const disconnectHandler = (e) => {\r\n        console.debug(\"disconnected\", e);\r\n    };\r\n\r\n    return (\r\n        <ReactGamePad\r\n            gamepadIndex={props.gamepadIndex}\r\n            onButtonDown={buttonHandler}\r\n            onConnect={connectHandler}\r\n            onDisconnect={disconnectHandler}\r\n        >\r\n            <span></span>\r\n        </ReactGamePad>\r\n    );\r\n};\r\n\r\nexport default GamePad;\r\n","import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\r\n\r\nimport Model from \"../Model/Model\";\r\nimport React from \"react\";\r\n\r\ninterface IGlobalContext {\r\n    state: Model | null;\r\n    replaceContext: StateReplaceFunction;\r\n    updateContext: StateUpdateFunction;\r\n    updateGameContext: StateUpdateFunction;\r\n    restart: () => void;\r\n}\r\n\r\nconst defaultValue = {\r\n    state: null,\r\n    replaceContext: () => {},\r\n    updateContext: () => {},\r\n    updateGameContext: () => {},\r\n    restart: () => {},\r\n};\r\n\r\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\r\n\r\nexport const Provider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n\r\nexport interface ICookieContext {\r\n    consented: boolean;\r\n    setConsented: (c: boolean) => void;\r\n}\r\nexport const CookieContext = React.createContext<ICookieContext>({ consented: false, setConsented: () => {} });\r\nexport const CookieContextProvider = CookieContext.Provider;\r\n","import { BoardContext } from \"./BoardWrap\";\r\nimport GamePad from \"./GamePad\";\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst BoardGamePad = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const { player } = React.useContext(BoardContext);\r\n    const isGamePadDriven = state.settings.launchSettings.inputMode == \"gamepad\";\r\n    const isSinglePlayer = state.settings.launchSettings.boardMode === \"singleplayer\";\r\n    const switchToGamePad = (ctx) => {\r\n        ctx.focus.isKeyBoard(true);\r\n        if (isSinglePlayer) {\r\n            ctx.settings.launchSettings.inputMode = \"gamepad\";\r\n        }\r\n    };\r\n\r\n    return isSinglePlayer || isGamePadDriven ? (\r\n        <GamePad\r\n            gamepadIndex={state.settings.launchSettings.players[player].inputLayout}\r\n            onLeft={() => props.onLeft && props.onLeft(switchToGamePad)}\r\n            onRight={() => props.onRight && props.onRight(switchToGamePad)}\r\n            onUp={() => props.onUp && props.onUp(switchToGamePad)}\r\n            onDown={() => props.onDown && props.onDown(switchToGamePad)}\r\n            onAction={() => props.onAction && props.onAction(switchToGamePad)}\r\n            onCancel={() => props.onCancel && props.onCancel(switchToGamePad)}\r\n            onHint={() => props.onHint && props.onHint(switchToGamePad)}\r\n            onUndo={() => props.onUndo && props.onUndo()}\r\n            onPause={() => props.onPause && props.onPause(switchToGamePad)}\r\n            onMenu={() => props.onPause && props.onMenu(switchToGamePad)}\r\n        >\r\n            <span></span>\r\n        </GamePad>\r\n    ) : null;\r\n};\r\n\r\nexport default BoardGamePad;\r\n","interface KeyboardLayout {\r\n    up: (e: KeyboardEvent) => boolean;\r\n    down: (e: KeyboardEvent) => boolean;\r\n    right: (e: KeyboardEvent) => boolean;\r\n    left: (e: KeyboardEvent) => boolean;\r\n    cancel: (e: KeyboardEvent) => boolean;\r\n    action: (e: KeyboardEvent) => boolean;\r\n    undo: (e: KeyboardEvent) => boolean;\r\n    hint: (e: KeyboardEvent) => boolean;\r\n    pause: (e: KeyboardEvent) => boolean;\r\n    menu: (e: KeyboardEvent) => boolean;\r\n}\r\n\r\nexport default KeyboardLayout;\r\n\r\nexport const getKeyboardLayout = (id: number) => {\r\n    if (id == 0) return Wasd;\r\n    if (id == 1) return Arrows;\r\n    if (id == 2) return NumPad;\r\n    throw \"Unknown keyboard layout ID\";\r\n};\r\n\r\nexport const Arrows: KeyboardLayout = {\r\n    up: (e) => e.keyCode == 38,\r\n    down: (e) => e.keyCode == 40,\r\n    right: (e) => e.keyCode == 39,\r\n    left: (e) => e.keyCode == 37,\r\n    cancel: (e) => e.keyCode == 27,\r\n    action: (e) => e.keyCode == 96,\r\n    undo: (e) => e.keyCode == 90 && e.ctrlKey,\r\n    hint: (e) => e.keyCode == 72,\r\n    pause: (e) => e.keyCode == 80,\r\n    menu: (e) => e.keyCode == 77,\r\n};\r\n\r\nexport const Wasd: KeyboardLayout = {\r\n    up: (e) => e.keyCode == 87,\r\n    down: (e) => e.keyCode == 83,\r\n    right: (e) => e.keyCode == 68,\r\n    left: (e) => e.keyCode == 65,\r\n    cancel: (e) => e.keyCode == 69,\r\n    action: (e) => e.keyCode == 81,\r\n    undo: (e) => e.keyCode == 88,\r\n    hint: (e) => e.keyCode == 90,\r\n    pause: (e) => e.keyCode == 999,\r\n    menu: (e) => e.keyCode == 27,\r\n};\r\n\r\nexport const NumPad: KeyboardLayout = {\r\n    up: (e) => e.keyCode == 104,\r\n    down: (e) => e.keyCode == 101,\r\n    right: (e) => e.keyCode == 102,\r\n    left: (e) => e.keyCode == 100,\r\n    cancel: (e) => e.keyCode == 105,\r\n    action: (e) => e.keyCode == 103,\r\n    undo: (e) => e.keyCode == 98,\r\n    hint: (e) => e.keyCode == 97,\r\n    pause: (e) => e.keyCode == 999,\r\n    menu: (e) => e.keyCode == 99,\r\n};\r\n\r\nexport const Universal: KeyboardLayout = {\r\n    up: (e) => NumPad.up(e) || Wasd.up(e) || Arrows.up(e),\r\n    down: (e) => NumPad.down(e) || Wasd.down(e) || Arrows.down(e),\r\n    right: (e) => NumPad.right(e) || Wasd.right(e) || Arrows.right(e),\r\n    left: (e) => NumPad.left(e) || Wasd.left(e) || Arrows.left(e),\r\n    cancel: (e) => NumPad.cancel(e) || Wasd.cancel(e) || Arrows.cancel(e),\r\n    action: (e) => NumPad.action(e) || Wasd.action(e) || Arrows.action(e),\r\n    undo: (e) => NumPad.undo(e) || Wasd.undo(e) || Arrows.undo(e),\r\n    hint: (e) => NumPad.hint(e) || Wasd.hint(e) || Arrows.hint(e),\r\n    pause: (e) => NumPad.pause(e) || Wasd.pause(e) || Arrows.pause(e),\r\n    menu: (e) => NumPad.menu(e) || Wasd.menu(e) || Arrows.menu(e),\r\n};\r\n","import React from \"react\";\r\n\r\nconst Keyboard = (props) => {\r\n    const navListener = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        const { layout } = props;\r\n        if (layout.cancel(evtobj)) {\r\n            props.onCancel && props.onCancel();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.left(evtobj)) {\r\n            props.onLeft && props.onLeft();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.right(evtobj)) {\r\n            props.onRight && props.onRight();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.up(evtobj)) {\r\n            props.onUp && props.onUp();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.down(evtobj)) {\r\n            props.onDown && props.onDown();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.action(evtobj)) {\r\n            props.onAction && props.onAction();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.undo(evtobj)) {\r\n            props.onUndo && props.onUndo();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.hint(evtobj)) {\r\n            props.onHint && props.onHint();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.pause(evtobj)) {\r\n            props.onPause && props.onPause();\r\n            e.preventDefault();\r\n        }\r\n        if (layout.menu(evtobj)) {\r\n            props.onPause && props.onMenu();\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", navListener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", navListener);\r\n        };\r\n    }, [props]);\r\n    return null;\r\n};\r\nexport default Keyboard;\r\n","import { Universal, getKeyboardLayout } from \"./KeyboardLayouts\";\r\n\r\nimport { BoardContext } from \"./BoardWrap\";\r\nimport GlobalContext from \"../Context\";\r\nimport Keyboard from \"./Keyboard\";\r\nimport React from \"react\";\r\n\r\nconst BoardKeyboard = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const { player } = React.useContext(BoardContext);\r\n    const isKeyboardDriven = state.settings.launchSettings.inputMode === \"keyboard\";\r\n    const isSinglePlayer = state.settings.launchSettings.boardMode === \"singleplayer\";\r\n    const layout = isSinglePlayer ? Universal : getKeyboardLayout(state.settings.launchSettings.players[player].inputLayout);\r\n\r\n    const switchToKeyboard = (ctx) => {\r\n        ctx.focus.isKeyBoard(true);\r\n        if (isSinglePlayer) {\r\n            ctx.settings.launchSettings.inputMode = \"keyboard\";\r\n        }\r\n    };\r\n\r\n    return isKeyboardDriven || isSinglePlayer ? (\r\n        <Keyboard\r\n            layout={layout}\r\n            onLeft={() => props.onLeft && props.onLeft(switchToKeyboard)}\r\n            onRight={() => props.onRight && props.onRight(switchToKeyboard)}\r\n            onUp={() => props.onUp && props.onUp(switchToKeyboard)}\r\n            onDown={() => props.onDown && props.onDown(switchToKeyboard)}\r\n            onAction={() => props.onAction && props.onAction(switchToKeyboard)}\r\n            onCancel={() => props.onCancel && props.onCancel(switchToKeyboard)}\r\n            onHint={() => props.onHint && props.onHint(switchToKeyboard)}\r\n            onUndo={() => props.onUndo && props.onUndo()}\r\n            onPause={() => props.onPause && props.onPause(switchToKeyboard)}\r\n            onMenu={() => props.onMenu && props.onMenu(switchToKeyboard)}\r\n        />\r\n    ) : null;\r\n};\r\n\r\nexport default BoardKeyboard;\r\n","import React from \"react\";\r\n\r\nexport interface IPauseState {\r\n    started: number;\r\n    end: number;\r\n    paused: boolean;\r\n    pauses: number[];\r\n    pauseStartedAt: number;\r\n    allowed: number;\r\n    isSilent?: boolean;\r\n    pausedBy: number;\r\n    showMenu: boolean;\r\n}\r\nexport interface IPauseContext {\r\n    state: IPauseState;\r\n    togglePause: (isPaused: boolean, pausedBy: number) => void;\r\n    getElapsed: () => string,\r\n}\r\nexport const defaultPauseState = {\r\n    started: 0,\r\n    end: 0,\r\n    paused: false,\r\n    pauses: [],\r\n    pauseStartedAt: 0,\r\n    allowed: 5,\r\n    pausedBy: -1,\r\n    showMenu: false,\r\n};\r\nexport const defaultPauseContext = {\r\n    state: defaultPauseState,\r\n    togglePause: () => {},\r\n    getElapsed: () => \"\",\r\n};\r\n\r\nconst PauseContext = React.createContext<IPauseContext>(defaultPauseContext);\r\nconst PauseContextProvider = PauseContext.Provider;\r\n\r\nexport const PauseProvider = (props: any) => {\r\n    const [paused, setPaused] = React.useState<IPauseState>({ ...defaultPauseState });\r\n    const getElapsedMs = () => {\r\n        const pauses = paused.pauses.reduce((a, b) => a + b, 0);\r\n        return (paused.end || paused.pauseStartedAt || Date.now()) - props.started - pauses;\r\n    };\r\n\r\n    const getElapsed = () => {\r\n        const padleft = (i: number) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = getElapsedMs();\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n    const togglePause = (isPaused: boolean, pausedBy: number) => {\r\n        if (paused.showMenu) {\r\n            setPaused({\r\n                ...paused,\r\n                pausedBy: pausedBy,\r\n                pauses: [...paused.pauses, Date.now() - paused.pauseStartedAt],\r\n                pauseStartedAt: 0,\r\n                paused: false,\r\n                showMenu: false,\r\n            });\r\n        } else if (paused.pauses.length < paused.allowed) {\r\n            setPaused({\r\n                ...paused,\r\n                pausedBy: pausedBy,\r\n                pauseStartedAt: Date.now(),\r\n                paused: true,\r\n                showMenu: true,\r\n            });\r\n        } else {\r\n            setPaused({\r\n                ...paused,\r\n                pausedBy: pausedBy,\r\n                pauseStartedAt: 0,\r\n                paused: false,\r\n                showMenu: true,\r\n            });\r\n        }\r\n    };\r\n    const context = {\r\n        state: { ...paused, started: props.started },\r\n        togglePause,\r\n        getElapsed,\r\n    };\r\n\r\n    return <PauseContextProvider value={context}>{props.children}</PauseContextProvider>;\r\n};\r\n\r\nexport default PauseContext;\r\n","import { BoardContext } from \"./BoardWrap\";\r\nimport BoardGamePad from \"./BoardGamePad\";\r\nimport BoardKeyboard from \"./BoardKeyboard\";\r\nimport GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst BoardNavigator = () => {\r\n    const { state, updateContext, updateGameContext, replaceContext } = React.useContext(GlobalContext);\r\n    const paused = React.useContext(PauseContext);\r\n    const { player } = React.useContext(BoardContext);\r\n    const before = { x: state.navigator.currentIndex.x, y: state.navigator.currentIndex.y, z: state.navigator.currentIndex.z };\r\n    const isPaused = !!paused.state.paused;\r\n\r\n    const onLeft = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveLeft(before);\r\n        });\r\n\r\n    const onRight = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveRight(before);\r\n        });\r\n\r\n    const onUp = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveUp(before);\r\n        });\r\n\r\n    const onDown = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.navigator.moveDown(before);\r\n        });\r\n\r\n    const onAction = (modifier) =>\r\n        updateGameContext((ctx) => {\r\n            modifier(ctx);\r\n            state.navigator.pressCurrent()(ctx);\r\n        });\r\n\r\n    const onCancel = (modifier) =>\r\n        updateContext((ctx) => {\r\n            modifier(ctx);\r\n            ctx.hand.stack.length && ctx.hand.stack[0].onClick({ isKeyboard: true })(ctx);\r\n        });\r\n\r\n    const onPause = () => paused.togglePause(isPaused, player);\r\n\r\n    const isVisible = (state) => state.settings.suggestionMode.supportsHints || state.settings.suggestionMode.isTemporary;\r\n    const isDisabled = (state) => state.settings.suggestionMode.isTemporary;\r\n\r\n    const onHint = (modifier) => {\r\n        updateContext((state) => {\r\n            modifier(state);\r\n            if (isVisible(state) && !isDisabled(state)) {\r\n                state.settings.enableHint();\r\n            }\r\n        });\r\n    };\r\n\r\n    const onUndo = () => {\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n    };\r\n    const onMenu = (modifier) => {\r\n        updateContext((state) => {\r\n            modifier(state);\r\n        });\r\n        paused.togglePause(isPaused, player);\r\n    };\r\n\r\n    return isPaused ? null : (\r\n        <>\r\n            <BoardKeyboard\r\n                onLeft={onLeft}\r\n                onRight={onRight}\r\n                onUp={onUp}\r\n                onDown={onDown}\r\n                onAction={onAction}\r\n                onCancel={onCancel}\r\n                onHint={onHint}\r\n                onUndo={onUndo}\r\n                onPause={onPause}\r\n                onMenu={onMenu}\r\n            />\r\n            <BoardGamePad\r\n                onLeft={onLeft}\r\n                onRight={onRight}\r\n                onUp={onUp}\r\n                onDown={onDown}\r\n                onAction={onAction}\r\n                onCancel={onCancel}\r\n                onHint={onHint}\r\n                onUndo={onUndo}\r\n                onPause={onPause}\r\n                onMenu={onMenu}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BoardNavigator;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Dealer = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const timeouts = [];\r\n\r\n    if (state.settings.launchSettings.quickDeal) {\r\n        if (state && state.dealer && !state.dealer.isDealt) {\r\n            replaceContext(state.dealer.dealAll(state));\r\n        }\r\n    } else {\r\n        const deal = (dealt) => {\r\n            timeouts.push(\r\n                setTimeout(() => {\r\n                    if (state && state.dealer && !state.dealer.isDealt) {\r\n                        replaceContext(state.dealer.dealOne(dealt, deal));\r\n                    }\r\n                }, 35)\r\n            );\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            deal(state.dealer.dealt);\r\n            return () =>\r\n                timeouts.forEach((timeout) => {\r\n                    clearTimeout(timeout);\r\n                });\r\n        }, []);\r\n        React.useEffect(() => {}, [state.dealer.isDealt]);\r\n    }\r\n    return null;\r\n};\r\nexport default Dealer;\r\n","import { Component } from \"react\";\r\nimport GlobalContext from \"../Context\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    constructor(selector) {\r\n        super();\r\n        this.timeout = null;\r\n        this.selector = selector;\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    componentDidUpdate() {\r\n        if (this.selector(this.context.state).blinkFor) {\r\n            this.timeout = setTimeout(\r\n                () =>\r\n                    this.context.updateGameContext((state) => {\r\n                        this.selector(state).unblink(state);\r\n                    }),\r\n                200\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const { state, updateGameContext } = React.useContext(GlobalContext);\r\n    const pause = React.useContext(PauseContext);\r\n    const inputEl = React.useRef(null);\r\n    const isFocused = state.focus.hasCard(props.model);\r\n    React.useEffect(() => {\r\n        if (isFocused && state.settings.launchSettings.boardMode == \"singleplayer\") {\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    }, [isFocused, state.focus.card]);\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        const isKeyBoard = e.clientX == 0 && e.clientY == 0;\r\n        let ele = e.target;\r\n\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            isKeyBoard,\r\n            click: {\r\n                x: e.clientX - ele.ownerDocument.defaultView.pageXOffset,\r\n                y: e.clientY - ele.ownerDocument.defaultView.pageYOffset,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n        const isSinglePlayer = state.settings.launchSettings.boardMode === \"singleplayer\";\r\n        //@todo A11Y allow keyboard actions in singleplayer\r\n        if (props.model.onClick && !position.isKeyBoard) {\r\n            updateGameContext((context) => {\r\n                props.model.onClick(position)(context);\r\n                if (isSinglePlayer) {\r\n                    context.settings.launchSettings.inputMode = \"mouse\";\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const getClassName = () => {\r\n        const hasSuggestion = props.isSuggested || props.model.suggestion;\r\n        let className = `card card-base suit-${props.model.type.icon}`;\r\n        className += !props.isSelected && !isFocused && !hasSuggestion ? ` card-stack-${props.model.source}` : \"\";\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        className += props.model.canClick() ? \" clickable\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack (preview what happens if picked up)\r\n        className += hasSuggestion && !isFocused ? \" card-suggested\" : \"\";\r\n        className += isFocused ? \" card-focused\" : \"\";\r\n        return className;\r\n    };\r\n\r\n    const getCardStyle = () => {\r\n        const style = {\r\n            zIndex: (props.zIndex ? props.zIndex : !!props.offsetTop * 20) + 1,\r\n            top: props.offsetTop ? props.offsetTop / 15 + \"em\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };\r\n\r\n        //move to left on waste (triple draw)\r\n        if (props.offsetLeft) {\r\n            style.left = props.offsetLeft * 2 + \"em\";\r\n        }\r\n\r\n        if (!props.model.onClick) {\r\n            style.pointerEvents = \"none\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    const getStackbaseStyle = () => {\r\n        if (!props.model.onClick) {\r\n            return { pointerEvents: \"none\" };\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    const names = [0, 1, 2, 3, 4, 5, 6].map((id) => \" stack \" + (id + 1));\r\n    let label = \"\";\r\n    const split = props.model.source.split(\"-\");\r\n    label += split[0];\r\n    if (split.length > 1) {\r\n        label += names[split[1]];\r\n    }\r\n    label += \": \";\r\n\r\n    label += props.model.isHidden ? \"hidden card\" : props.model.type.icon + props.model.face;\r\n\r\n    // @todo 3d flip https://3dtransforms.desandro.com/card-flip on unhide\r\n    // https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n\r\n    return (\r\n        <div style={getStackbaseStyle()} className=\"stack-base\">\r\n            <button\r\n                onFocus={() => {\r\n                    // updateContext((ctx) => {\r\n                    //     ctx.navigator.update(props.model.source, props.model);\r\n                    // });\r\n                }}\r\n                onBlur={() => {\r\n                    //updateContext((ctx) => ctx.focus.unsetCard(props.model));\r\n                }}\r\n                style={getCardStyle()}\r\n                ref={inputEl}\r\n                className={getClassName()}\r\n                onClick={onClick ? onClick : null}\r\n                disabled={!props.model.canClick() || pause.state.paused}\r\n                tabIndex={props.model.canClick() ? 0 : -1}\r\n                aria-label={label}\r\n                title={label}\r\n            >\r\n                <div className=\"card-content\">\r\n                    {props.model.isHidden || pause.state.paused ? (\r\n                        <div className=\"card-back\">&nbsp;</div>\r\n                    ) : (\r\n                        <div className=\"card-grid-container\">\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-left\">{props.model.face}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                            <div className=\"mainface\">\r\n                                <div className=\"align-center\">{props.model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-right\">{props.model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{props.model.type.icon}</div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Hand = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    if (!state.hand || props.parentModel.source !== state.hand.source) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {[\r\n                state.hand &&\r\n                    state.hand.stack &&\r\n                    state.hand.stack.map((card, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            model={card}\r\n                            offsetTop={props.offsetTop + index * 24}\r\n                            offsetLeft={props.offsetLeft}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                            onClick={(_c, p) => props.onClick(p)}\r\n                        />\r\n                    )),\r\n            ]}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Hand;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base socket\";\r\n    const inputEl = React.useRef(null);\r\n    const { state, updateGameContext } = React.useContext(GlobalContext);\r\n    React.useEffect(() => {\r\n        if (state.focus.hasStack(props.model.parent) && state.settings.launchSettings.boardMode == \"singleplayer\") {\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    });\r\n    if (!props.model.stack.length) {\r\n        if (props.model.blinkFor) {\r\n            classname += \" socket-blink\";\r\n        } else if (state.focus.hasStack(props.model.source)) {\r\n            classname += \" socket-focused\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n\r\n    if (props.model.suggestion && !props.model.stack.length) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        const isKeyBoard = e.clientX == 0 && e.clientY == 0;\r\n        if (!isKeyBoard) {\r\n            updateGameContext(props.model.clickEmpty({ isKeyBoard }));\r\n        }\r\n    };\r\n\r\n    const names = [0, 1, 2, 3, 4, 5, 6].map((id) => \" stack \" + (id + 1));\r\n    let label = \"\";\r\n    const split = props.model.source.split(\"-\");\r\n    label += split[0];\r\n    if (split.length > 1) {\r\n        label += names[split[1]]\r\n    }\r\n    label += \": empty socket\"\r\n\r\n    return (\r\n        <button\r\n            onFocus={() => {\r\n                // updateContext((ctx) => {\r\n                //     ctx.navigator.update(props.model.parent);\r\n                // });\r\n            }}\r\n            onBlur={() => {\r\n                // updateContext((ctx) => ctx.focus.unsetStack(props.model.parent));\r\n            }}\r\n            ref={inputEl}\r\n            className={classname}\r\n            onClick={onClick}\r\n            disabled={props.model.stack.length}\r\n            tabIndex={!props.model.stack.length ? 0 : -1}\r\n            aria-label={label}\r\n            title={label}\r\n\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.foundation.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state } = React.useContext(GlobalContext);\r\n        return (\r\n            <>\r\n                {state.foundation.stacks.map((foundation, index) => (\r\n                    <Foundation key={index} model={foundation} index={index} />\r\n                ))}\r\n            </>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const model = this.props.model;\r\n        return (\r\n            <div className=\"board-field\" key={this.props.index}>\r\n                <StackBase model={model}>\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parentModel={model}\r\n                    //onClick={(c, p) => onClick(model.stack[model.stack.length - 1], p, this.props.index)}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import PauseContext from \"../../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst Clock = () => {\r\n    const { state, getElapsed } = React.useContext(PauseContext);\r\n    const [elapsed, setElapsed] = React.useState(\"\");\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (state.started && !state.paused) {\r\n                setElapsed(getElapsed());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [state.started, state.paused]);\r\n\r\n    return !state.started || !elapsed ? null : (\r\n        <div className=\"header-clock\">\r\n            <div className=\"icon-container\">🕒</div>\r\n            {elapsed}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hearts = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    if (!state) return null;\r\n    const getHearts = () => {\r\n        if (state.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            return state.stock.passes > 0 ? \"❤️\" : \"💔\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            const createString = (length: number, icon: string) =>\r\n                Array.from(new Array(length).keys())\r\n                    .map(() => icon)\r\n                    .join(\"\");\r\n\r\n            return createString(state.stock.passes, \"❤️\") + createString(3 - state.stock.passes, \"💔\");\r\n        }\r\n        return null;\r\n    };\r\n    return <div className=\"heart-container\">{getHearts()}</div>;\r\n};\r\nexport default Hearts;\r\n","import GlobalContext from \"../../Context\";\r\nimport Model from \"../../../Model/Model\";\r\nimport React from \"react\";\r\n\r\nconst Hint = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    if (!state) return null;\r\n    const isVisible = (state: Model) => state.settings.suggestionMode.supportsHints || state.settings.suggestionMode.isTemporary;\r\n\r\n    const isDisabled = (state: Model) => state.settings.suggestionMode.isTemporary;\r\n\r\n    const suggestOnce = () =>\r\n        updateContext((state) => {\r\n            if (isVisible(state) && !isDisabled(state)) {\r\n                state.settings.enableHint();\r\n            }\r\n        });\r\n\r\n    return !isVisible(state) ? null : (\r\n        <div>\r\n            <button title=\"Hint\" onClick={() => suggestOnce()} disabled={isDisabled(state)}>\r\n                <span className=\"icon\">💡</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Hint;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Points = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"icon-container\">🏆</div> {state?.game.rating.points}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Points;\r\n","import { BoardContext } from \"../../Game/BoardWrap\";\r\nimport PauseContext from \"../../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst ToggleMenu = () => {\r\n    const paused = React.useContext(PauseContext);\r\n    const { player } = React.useContext(BoardContext);\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Settings\" onClick={() => paused.togglePause(!paused.state.paused, player)}>\r\n                <span className=\"icon\">☰</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleMenu;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Undo = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    if (!state) return null;\r\n\r\n    const undo = () =>\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    if (!state.game.timemachine.previousStates.length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                disabled={!state.game.timemachine.previousStates.length}\r\n                title={\"Undo (Penalty:\" + Math.pow(2, state.game.rating.multiplicator) + \")\"}\r\n                onClick={undo}\r\n            >\r\n                <span className=\"icon\">⏪</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Undo;\r\n","import \"../../Style/Header.css\";\r\n\r\nimport Clock from \"./Clock\";\r\nimport Hearts from \"./Hearts\";\r\nimport Hint from \"./Hint\";\r\nimport Points from \"./Points\";\r\nimport React from \"react\";\r\nimport ToggleMenu from \"./ToggleMenu\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = (props: {mode: string}) => (\r\n    <div className={\"header \" + props.mode}>\r\n        <div className=\"header-title\">\r\n            <Hearts />\r\n            <Points />\r\n        </div>\r\n        <Clock />\r\n        <div className=\"header-buttons\">\r\n            <Hint />\r\n            <Undo />\r\n            <ToggleMenu />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","export class SuggestionMode {\r\n    key: string;\r\n    label: string;\r\n    isTemporary: boolean;\r\n    supportsHints: boolean;\r\n    next: string | undefined;\r\n    icon: string;\r\n    description: string;\r\n    constructor(key: string, obj: ISuggestionMode) {\r\n        this.key = key;\r\n        this.label = obj.label;\r\n        this.icon = obj.icon;\r\n        this.description = obj.description;\r\n        this.isTemporary = !!obj.isTemporary;\r\n        this.supportsHints = !!obj.supportsHints;\r\n        this.next = obj.next;\r\n    }\r\n}\r\n\r\nexport type ISuggestionMode = {\r\n    label: string;\r\n    icon: string;\r\n    description: string;\r\n    isTemporary?: boolean;\r\n    supportsHints?: boolean;\r\n    next?: string;\r\n};\r\n\r\nexport default class SuggestionModes {\r\n    static NONE: string = \"NONE\";\r\n    static SCORED: string = \"SCORED\";\r\n    static REGULAR: string = \"REGULAR\";\r\n    static FULL: string = \"FULL\";\r\n    static ONCE: string = \"ONCE\";\r\n    static TWICE: string = \"TWICE\";\r\n    static raw: { [id: string]: ISuggestionMode } = {\r\n        NONE: {\r\n            label: \"None\",\r\n            description: 'No distractions. This enables one-time hints.',\r\n            supportsHints: true,\r\n            icon: \"❌\",\r\n        },\r\n        SCORED: {\r\n            label: \"Scored\",\r\n            description: 'Shows all actions that increase the score.',\r\n            icon: \"🏆\",\r\n        },\r\n        REGULAR: {\r\n            label: \"Regular\",\r\n            description: 'Shows all possible actions except circular',\r\n            icon: \"💡\",\r\n        },\r\n        FULL: {\r\n            label: \"Full\",\r\n            description: 'Shows all possible actions, even if they are circular',\r\n            icon: \"🎓\",\r\n        },\r\n        ONCE: {\r\n            label: \"Single Action\",\r\n            description: 'triggered by manual hint in game',\r\n            isTemporary: true,\r\n            next: \"NONE\",\r\n            icon: \"⏳\",\r\n        },\r\n    };\r\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\r\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\r\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\r\n    static default = () => SuggestionModes.get(SuggestionModes.REGULAR);\r\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\r\n    static next = (current: SuggestionMode) => {\r\n        const all = SuggestionModes.allSuggestionModes();\r\n        if (all[all.length - 1].key == current.key) {\r\n            return all[0];\r\n        }\r\n        for (let i = 0; i < all.length; i++) {\r\n            if (all[i].key == current.key) {\r\n                return all[i + 1];\r\n            }\r\n        }\r\n        return all[0];\r\n    };\r\n}\r\n","import { RatingSettings } from \"../../../Common\";\r\nimport { StartScreenState } from \"./Context\";\r\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\r\n\r\nexport interface RatingPreset {\r\n    id: number;\r\n    icon: string;\r\n    label: string;\r\n    settings: RatingSettings;\r\n    apply: (s: StartScreenState) => void;\r\n}\r\n\r\nconst apply = (after: RatingSettings, s: StartScreenState, id: number) => {\r\n    if (!s.ratingSettings.hintPenalty && after.hintPenalty) {\r\n        s.suggestionMode = SuggestionModes.NONE;\r\n    }\r\n    //@todo remember which suggestion mode was there before, and reset to that on next change of hint penalty\r\n    s.ratingSettings = { ...after };\r\n    s.ratingPreset = id;\r\n};\r\n\r\nexport default class RatingPresets {\r\n    static CHILL = {\r\n        timedMode: false,\r\n        missPenalty: false,\r\n        undoPenalty: false,\r\n        hintPenalty: false,\r\n    };\r\n\r\n    static REGULAR = {\r\n        timedMode: true,\r\n        missPenalty: false,\r\n        undoPenalty: true,\r\n        hintPenalty: false,\r\n    };\r\n\r\n    static COMPETITIVE = {\r\n        timedMode: true,\r\n        missPenalty: true,\r\n        undoPenalty: true,\r\n        hintPenalty: true,\r\n    };\r\n\r\n    static ALL: RatingPreset[] = [\r\n        {\r\n            id: 0,\r\n            icon: \"🌴\",\r\n            label: \"Chill\",\r\n            settings: { ...RatingPresets.CHILL },\r\n            apply: (s) => apply(RatingPresets.CHILL, s, 0),\r\n        },\r\n        {\r\n            id: 1,\r\n            icon: \"⚖️\",\r\n            label: \"Regular\",\r\n            settings: { ...RatingPresets.REGULAR },\r\n            apply: (s) => apply(RatingPresets.REGULAR, s, 1),\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: \"🏆\",\r\n            label: \"Competitive\",\r\n            settings: { ...RatingPresets.COMPETITIVE },\r\n            apply: (s) => apply(RatingPresets.COMPETITIVE, s, 2),\r\n        },\r\n    ];\r\n\r\n    static matchPreset = (settings: any) => {\r\n        const filterd = RatingPresets.ALL.filter((preset) => RatingPresets.equals(preset.settings, settings));\r\n        if (filterd.length > 0) {\r\n            return filterd[0].id;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    static equals = (s1: any, s2: any) =>\r\n        s1.timedMode === s2.timedMode &&\r\n        s1.missPenalty === s2.missPenalty &&\r\n        s1.undoPenalty === s2.undoPenalty &&\r\n        s1.hintPenalty === s2.hintPenalty;\r\n}\r\n","const TouchDetector = ()  => {\r\n    try {\r\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n        const mq = (query) => window.matchMedia(query).matches;\r\n\r\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n            return true;\r\n        }\r\n\r\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n    } catch (e) {\r\n        console.error(\"(Touch detect failed)\", e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default TouchDetector;","import { EntropySettings, PlayerSettings, RatingSettings, defaultPlayerSettings } from \"../../../Common\";\r\n\r\nimport RatingPresets from \"./RatingOptions\";\r\nimport React from \"react\";\r\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\r\nimport TouchDetector from \"./TouchDetector\";\r\n\r\nexport interface IStartScreenContext {\r\n    state: StartScreenState;\r\n    setState: (s: StartScreenState) => void;\r\n}\r\n\r\nexport const defaultStartScreenState: StartScreenState = {\r\n    ratingSettings: { ...RatingPresets.REGULAR },\r\n    difficultySettings: 1,\r\n    ratingPreset: 1,\r\n    quickDeal: TouchDetector(),\r\n    entropySettings: {\r\n        baseEntropy: TouchDetector() ? 1 : 2,\r\n        interactionEntropy: TouchDetector() ? 1 : 2,\r\n    },\r\n    suggestionMode: SuggestionModes.REGULAR,\r\n    players: defaultPlayerSettings,\r\n};\r\n\r\nexport interface StartScreenState {\r\n    ratingSettings: RatingSettings;\r\n    difficultySettings: number;\r\n    ratingPreset: number;\r\n    quickDeal: boolean;\r\n    entropySettings: EntropySettings;\r\n    suggestionMode: string;\r\n    players: PlayerSettings;\r\n}\r\n\r\nexport interface NavigationState {\r\n    menu: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    screen: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    focus: string;\r\n    mainMenu: string;\r\n    screeen: string;\r\n}\r\ninterface INavigationContext {\r\n    navigation: NavigationState;\r\n    setNavigation: (n: NavigationState) => void;\r\n}\r\n\r\nexport const NavigationContext = React.createContext<INavigationContext>({\r\n    navigation: {\r\n        menu: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        screen: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        focus: \"menu\",\r\n        mainMenu: \"\",\r\n        screeen: \"\",\r\n    },\r\n    setNavigation: () => {},\r\n});\r\n\r\nconst StartScreenContext = React.createContext<IStartScreenContext>({\r\n    state: {\r\n        difficultySettings: 0,\r\n        ratingPreset: 0,\r\n        ratingSettings: {},\r\n        entropySettings: {},\r\n        quickDeal: false,\r\n        suggestionMode: SuggestionModes.REGULAR,\r\n        players: defaultPlayerSettings,\r\n    },\r\n    setState: () => {},\r\n});\r\n\r\nexport const Provider = StartScreenContext.Provider;\r\nexport const NavigationProvider = NavigationContext.Provider;\r\nexport default StartScreenContext;\r\n","const EntropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\nexport default EntropyLevels;","import { NavigationContext } from \"../Context\";\r\nimport React from \"react\";\r\nimport { TreeNavigator } from \"./TreeNavigator\";\r\nimport { XY } from \"../../XY\";\r\n\r\ninterface _MenuButtonProps extends StaticMenuButtonProps {\r\n    //@todo keyboard navigation in a tree\r\n    x?: number;\r\n    y?: number;\r\n    navigator?: TreeNavigator;\r\n}\r\n\r\nexport interface StaticMenuButtonProps {\r\n    icon: string;\r\n    title: string;\r\n    onClick: (pos: XY) => void;\r\n    onFocus: (pos: XY) => void;\r\n    toggled?: boolean;\r\n    children?: any[];\r\n    disabled?: boolean;\r\n    skip?: boolean;\r\n}\r\ninterface MenuButtonProps extends StaticMenuButtonProps {\r\n    x: number;\r\n    y: number;\r\n    menuX: number;\r\n    menuY: number;\r\n    menuFocus: string;\r\n    active: boolean;\r\n    toggled: boolean;\r\n}\r\nconst MenuButton = (props: _MenuButtonProps) => {\r\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\r\n        return null;\r\n    }\r\n\r\n    const { navigation } = React.useContext(NavigationContext);\r\n\r\n    const addItem = (child: any, index: number) => {\r\n        const assign = (n: any[]) => {\r\n            n[props.x || 0].buttons[index + 1] = { ...props, x: props.x, y: index + 1 };\r\n        };\r\n        assign(props.navigator?.rows || []);\r\n\r\n        return React.cloneElement(child, { key: index, x: props.x, y: index + 1, navigator: props.navigator });\r\n    };\r\n\r\n    return (\r\n        <_MenuButton\r\n            title={props.title}\r\n            x={props.x || 0}\r\n            y={props.y || 0}\r\n            icon={props.icon}\r\n            menuX={navigation.menu.x}\r\n            menuY={navigation.menu.y}\r\n            menuFocus={navigation.focus}\r\n            disabled={props.disabled}\r\n            active={false}\r\n            onFocus={props.onFocus}\r\n            onClick={props.onClick}\r\n            toggled={!!props.toggled}\r\n            skip={props.skip}\r\n        >\r\n            {props.children?.map(addItem)}\r\n        </_MenuButton>\r\n    );\r\n};\r\nconst _MenuButton = (props: MenuButtonProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n\r\n    let className = \"\";\r\n\r\n    if (props.y > 0) {\r\n        className += \" indented\";\r\n    }\r\n\r\n    const shouldBeFocus = props.menuX == props.x && props.menuY == props.y && props.menuFocus == \"menu\";\r\n\r\n    if (shouldBeFocus && !props.skip) {\r\n        className += \" highlight\";\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (\r\n            props.menuX == props.x &&\r\n            props.menuY == props.y &&\r\n            props.menuFocus == \"menu\" &&\r\n            inputEl.current &&\r\n            inputEl.current !== document.activeElement\r\n        ) {\r\n            setClicking(true);\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    }, [props.menuFocus, props.menuX, props.menuY, props.x, props.y]);\r\n\r\n    if (props.active) {\r\n        className += \" active\";\r\n    }\r\n\r\n    //omg this is the worst but it works (5h lost)\r\n    const [isClicking, setClicking] = React.useState(false);\r\n\r\n    const focus = () => {\r\n        if (!isClicking && !(props.menuX == props.x && props.menuY == props.y) && props.menuFocus == \"menu\") {\r\n            props.onFocus({ x: props.x, y: props.y });\r\n            setClicking(false);\r\n        }\r\n    };\r\n\r\n    const click = () => {\r\n        setClicking(false);\r\n        props.onClick({ x: props.x, y: props.y });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                ref={inputEl}\r\n                className={className}\r\n                title={props.title}\r\n                onFocus={focus}\r\n                onClick={click}\r\n                disabled={props.skip}\r\n                onMouseDown={() => setClicking(true)}\r\n            >\r\n                <div className=\"icon\">{props.icon}</div>\r\n                <div className=\"label\">{props.title}</div>\r\n            </button>\r\n            <div>{!props.toggled ? null : props.children}</div>\r\n        </>\r\n    );\r\n};\r\nexport default MenuButton;\r\n","import React from \"react\";\r\n\r\nconst MenuTitle = (props: { label: string }) => {\r\n    return <div className=\"title maintitle\">{props.label}</div>;\r\n};\r\nexport default MenuTitle;\r\n","import KeyboardLayout, { Universal } from \"../../../Game/KeyboardLayouts\";\r\n\r\nimport GamePad from \"../../../Game/GamePad\";\r\nimport Keyboard from \"../../../Game/Keyboard\";\r\nimport { NavigationContext } from \"../Context\";\r\nimport React from \"react\";\r\nimport { ScreenNavigator } from \"./ScreenNavigator\";\r\nimport { TreeNavigator } from \"../Menu/TreeNavigator\";\r\nimport { XY } from \"../../XY\";\r\n\r\nconst NavWrapper = (props: { navigator: ScreenNavigator; screen: string }) => {\r\n    const { navigator } = props;\r\n\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n\r\n    const assignState = (result: XY) => {\r\n        if (navigation.focus == \"screen\") {\r\n            setNavigation({ ...navigation, screen: result });\r\n        }\r\n        if (navigation.focus == \"menu\") {\r\n            throw \"Invalid navigation action\";\r\n        }\r\n    };\r\n\r\n    const onCancel = () =>\r\n        setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } });\r\n\r\n    const onUp = () => assignState(navigator.moveUp(navigation.screen.x, navigation.screen.y));\r\n\r\n    const onDown = () => assignState(navigator.moveDown(navigation.screen.x, navigation.screen.y));\r\n\r\n    const onLeft = () => assignState(navigator.moveLeft(navigation.screen.x, navigation.screen.y));\r\n\r\n    const onRight = () => assignState(navigator.moveRight(navigation.screen.x, navigation.screen.y));\r\n\r\n    const onAction = () => {\r\n        navigator.action(navigation.screen);\r\n    };\r\n\r\n    return navigation.focus == \"screen\" ? (\r\n        <>\r\n            <Keyboard\r\n                layout={Universal}\r\n                onUp={onUp}\r\n                onDown={onDown}\r\n                onRight={onRight}\r\n                onLeft={onLeft}\r\n                onAction={onAction}\r\n                onCancel={onCancel}\r\n            />\r\n            <GamePad onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} onCancel={onCancel} />\r\n        </>\r\n    ) : null;\r\n};\r\nexport default NavWrapper;\r\n\r\nexport const TreeNavWrapper = (props: { navigator: TreeNavigator; keyboardLayout: KeyboardLayout }) => {\r\n    const { navigator } = props;\r\n\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n\r\n    const assignState = (result: XY) => {\r\n        if (navigation.focus == \"menu\") {\r\n            setNavigation({ ...navigation, menu: result });\r\n        }\r\n        if (navigation.focus == \"screen\") {\r\n            throw \"Invalid navigation action\";\r\n        }\r\n    };\r\n\r\n    const onCancel = () =>\r\n        setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } });\r\n\r\n    const onUp = () => assignState(navigator.moveUp(navigation.menu.x, navigation.menu.y));\r\n\r\n    const onDown = () => assignState(navigator.moveDown(navigation.menu.x, navigation.menu.y));\r\n\r\n    const onLeft = () => assignState(navigator.moveLeft(navigation.menu.x, navigation.menu.y));\r\n\r\n    const onRight = () => assignState(navigator.moveRight(navigation.menu.x, navigation.menu.y));\r\n\r\n    const onAction = () => {\r\n        navigator.action(navigation.menu);\r\n    };\r\n\r\n    return navigation.focus == \"menu\" ? (\r\n        <>\r\n            <Keyboard\r\n                layout={props.keyboardLayout}\r\n                onUp={onUp}\r\n                onDown={onDown}\r\n                onRight={onRight}\r\n                onLeft={onLeft}\r\n                onAction={onAction}\r\n                onCancel={onCancel}\r\n            />\r\n            <GamePad onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} onCancel={onCancel} />\r\n        </>\r\n    ) : null;\r\n};\r\n","import { XY } from \"../../XY\";\r\nimport { NavHandler } from \"../../NavHandler\";\r\n\r\nexport class TreeNavigator implements NavHandler {\r\n    rows: any[];\r\n    constructor() {\r\n        this.rows = [];\r\n    }\r\n    getRows = () => this.rows;\r\n    getRow = (x: number) => this.getRows()[x];\r\n    goToRow = (pos: XY) => {\r\n        const rows = this.getRows();\r\n        const row = rows[pos.y];\r\n        if (row.buttons.length - 1 < pos.x) {\r\n            return { ...pos, x: row.buttons.length - 1 };\r\n        }\r\n\r\n        return pos;\r\n    };\r\n    moveUp: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        if (x == 0) {\r\n            return { x: this.rows.length - 1, y: 0 };\r\n        }\r\n        if (y > 0) {\r\n            return { x: x, y: y - 1 };\r\n        }\r\n\r\n        if (y == 0) {\r\n            const row = this.getRow(x - 1);\r\n            if (row.toggled) {\r\n                return { x: x - 1, y: row.buttons.length - 1 };\r\n            } else {\r\n                return { x: x - 1, y: y };\r\n            }\r\n        }\r\n\r\n        return { x: x - 1, y: y };\r\n    };\r\n    moveDown: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const row = this.getRow(x);\r\n        if (y == 0 && row.toggled) {\r\n            return { x: x, y: 1 };\r\n        }\r\n\r\n        if (y > 0 && y < row.buttons.length - 1) {\r\n            return { x: x, y: y + 1 };\r\n        }\r\n\r\n        if (y > 0) {\r\n            return { x: x + 1, y: 0 };\r\n        }\r\n\r\n        if (x < this.rows.length - 1) {\r\n            return { x: x + 1, y: y };\r\n        }\r\n\r\n        return { x: 0, y: 0 };\r\n    };\r\n    moveLeft: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        return { x: x, y: y };\r\n    };\r\n    moveRight: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        return { x: x, y: y };\r\n    };\r\n    action: (xy: XY) => void = () => {\r\n        const activeElement: any = document.activeElement;\r\n        activeElement && activeElement.click();\r\n    };\r\n}\r\n","import KeyboardLayout from \"../../../Game/KeyboardLayouts\";\r\nimport React from \"react\";\r\nimport { TreeNavWrapper } from \"../Screens/NavWrapper\";\r\nimport { TreeNavigator } from \"./TreeNavigator\";\r\n\r\nconst MenuTree = (props: { children: any[]; keyboardLayout: KeyboardLayout }) => {\r\n    const navigator = new TreeNavigator();\r\n    navigator.rows = [];\r\n    let index = -1;\r\n    let _i = -1;\r\n    const addItem = (child: any) => {\r\n        _i++;\r\n        if (!child.props.skip) {\r\n            index++;\r\n            navigator.rows[index] = { x: index, y: 0, ...child.props, buttons: [] };\r\n        }\r\n        return React.cloneElement(child, { key: _i, x: index, y: 0, navigator: navigator });\r\n    };\r\n    return (\r\n        <>\r\n            {props.children.map(addItem)}\r\n            <TreeNavWrapper navigator={navigator} keyboardLayout={props.keyboardLayout} />\r\n        </>\r\n    );\r\n};\r\nexport default MenuTree;\r\n","import \"../Style/Menu.scss\";\r\n\r\nimport { NavigationContext, NavigationProvider, NavigationState } from \"./StartScreen/Context\";\r\nimport { Universal, getKeyboardLayout } from \"../Game/KeyboardLayouts\";\r\n\r\nimport { BoardContext } from \"../Game/BoardWrap\";\r\nimport EntropyLevels from \"../../Model/Game/Settings/EntropyLevels\";\r\nimport GlobalContext from \"../Context\";\r\nimport MenuButton from \"./StartScreen/Menu/MenuButton\";\r\nimport MenuTitle from \"./StartScreen/Menu/MenuTitle\";\r\nimport MenuTree from \"./StartScreen/Menu/MenuTree\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\nimport SuggestionModes from \"../../Model/Game/Settings/SuggestionModes\";\r\nimport { XY } from \"./XY\";\r\n\r\nconst _Menu = () => {\r\n    const [navigation, setNavigation] = React.useState<NavigationState>({\r\n        menu: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        screen: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        focus: \"menu\",\r\n        mainMenu: \"\",\r\n        screeen: \"\",\r\n    });\r\n    const navigationContext = {\r\n        navigation,\r\n        setNavigation,\r\n    };\r\n    return (\r\n        <NavigationProvider value={navigationContext}>\r\n            <Menu />\r\n        </NavigationProvider>\r\n    );\r\n};\r\nconst Menu = () => {\r\n    const { state, updateContext, replaceContext, restart } = React.useContext(GlobalContext);\r\n    const pause = React.useContext(PauseContext);\r\n    const { player } = React.useContext(BoardContext);\r\n    const reset = () => {\r\n        //this is a bad hack?\r\n        pause.togglePause(true, -1);\r\n        replaceContext((state) => (state.game.timemachine.previousStates ? state.game.timemachine.previousStates[0] : null));\r\n    };\r\n\r\n    //@todo persist game settings in local storage too and use for initialization\r\n    const setSuggestionMode = (sm: string) => updateContext((state) => state.settings.setSuggestionMode(sm));\r\n    const setBaseEntropy = (lvl: number) => updateContext((state) => state.setEntropy(lvl));\r\n    const setInteractionEntropy = (lvl: number) => updateContext((state) => (state.settings.interactionEntropy = lvl));\r\n\r\n    const toggleMenu = () => {\r\n        pause.togglePause(false, -1);\r\n    };\r\n\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n\r\n    const switchToMenu = (menu: string, pos: XY) =>\r\n        setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: menu, menu: { ...pos } });\r\n\r\n    const toggleMainMenu = (val: string, pos: XY) => {\r\n        if (navigation.mainMenu !== val) {\r\n            switchToMenu(val, pos);\r\n        } else {\r\n            switchToMenu(\"\", pos);\r\n        }\r\n    };\r\n\r\n    if (!pause.state.showMenu) {\r\n        return null;\r\n    }\r\n    if (!state) {\r\n        return null;\r\n    }\r\n    const onfocus = (pos: XY) => {\r\n        setNavigation({ ...navigation, menu: pos });\r\n    };\r\n\r\n    const remaining = pause.state.allowed - pause.state.pauses.length - 1;\r\n\r\n    let announcement = `You can pause the game ${remaining} more times.`;\r\n    if (remaining == 1) {\r\n        announcement = `You can pause the game ${remaining} more time.`;\r\n    }\r\n    if (remaining == 0) {\r\n        announcement = \"This is the last remaining pause. If you continue, no more pause will be possible.\";\r\n    }\r\n    if (remaining < 0) [(announcement = \"The game is not paused.\")];\r\n\r\n    const isSinglePlayer = state.settings.launchSettings.boardMode === \"singleplayer\";\r\n    const keyboardLayout = isSinglePlayer ? Universal : getKeyboardLayout(state.settings.launchSettings.players[player].inputLayout);\r\n\r\n    if (pause.state.pausedBy !== player) {\r\n        return (\r\n            <div className=\"gamemenu menu\">\r\n                <div className=\"startscreen-jail\">\r\n                    <div className=\"innermenu\">\r\n                        <MenuTitle label=\"😴\" />\r\n                        {pause.state.pausedBy}\r\n                        <div className=\"announcement\">{announcement}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"gamemenu menu\">\r\n            <div className=\"startscreen-jail\">\r\n                <div className=\"innermenu\">\r\n                    <MenuTitle label=\"😴\" />\r\n\r\n                    <div className=\"announcement\">{announcement}</div>\r\n                    <MenuTree keyboardLayout={keyboardLayout}>\r\n                        <MenuButton\r\n                            icon=\"▶️\"\r\n                            title=\"Resume\"\r\n                            onClick={() => {\r\n                                toggleMenu();\r\n                            }}\r\n                            onFocus={onfocus}\r\n                        />\r\n                        <MenuButton\r\n                            icon={state.settings.suggestionMode.icon}\r\n                            title={`Suggestions: ${state.settings.suggestionMode.label}`}\r\n                            onClick={() => {\r\n                                setSuggestionMode(SuggestionModes.next(state.settings.suggestionMode).key);\r\n                            }}\r\n                            onFocus={onfocus}\r\n                        />\r\n                        <MenuButton\r\n                            icon=\"🌪️\"\r\n                            title=\"Entropy\"\r\n                            onClick={(pos: XY) => toggleMainMenu(\"entropy\", pos)}\r\n                            onFocus={onfocus}\r\n                            toggled={navigation.mainMenu == \"entropy\"}\r\n                        >\r\n                            <MenuButton\r\n                                icon=\"🌪️\"\r\n                                title={`Base Entropy: ${EntropyLevels[state.settings.baseEntropy]}`}\r\n                                onClick={() => {\r\n                                    setBaseEntropy(\r\n                                        state.settings.baseEntropy < EntropyLevels.length - 1 ? state.settings.baseEntropy + 1 : 0\r\n                                    );\r\n                                }}\r\n                                onFocus={onfocus}\r\n                            />\r\n                            <MenuButton\r\n                                icon=\"🌬️\"\r\n                                title={`Action Entropy: ${EntropyLevels[state.settings.interactionEntropy]}`}\r\n                                onClick={() => {\r\n                                    setInteractionEntropy(\r\n                                        state.settings.interactionEntropy < EntropyLevels.length - 1\r\n                                            ? state.settings.interactionEntropy + 1\r\n                                            : 0\r\n                                    );\r\n                                }}\r\n                                onFocus={onfocus}\r\n                            />\r\n                        </MenuButton>\r\n                        <MenuButton\r\n                            icon=\"♻️\"\r\n                            title=\"Restart Game\"\r\n                            onClick={() => reset()}\r\n                            onFocus={onfocus}\r\n                            skip={!state.game.timemachine.previousStates.length}\r\n                        />\r\n                        <MenuButton icon=\"🗑️\" title=\"Quit Game\" onClick={() => restart()} onFocus={onfocus} />\r\n                    </MenuTree>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default _Menu;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nconst usePrevious = (value) => {\r\n    const ref = React.useRef();\r\n    React.useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n};\r\n\r\nconst Renderer = (props) => {\r\n    const { state } = React.useContext(PauseContext);\r\n    const { paused, started } = state;\r\n    return <InnerRenderer length={props.length} paused={paused} started={started} />;\r\n};\r\n\r\nconst InnerRenderer = (props) => {\r\n    const context = React.useContext(GlobalContext);\r\n    const { length, started, paused } = props;\r\n    const previous = usePrevious({ length, paused, started });\r\n    React.useEffect(() => {\r\n        let timeout = null;\r\n        if (context.state.settings.launchSettings.speed && previous && started && !paused && (previous.length != length || previous.started != started || previous.paused != paused)) {\r\n            timeout = setTimeout(() => {\r\n                context.updateContext((state) => {\r\n                    if (length == state.stock.stack.length && state.stock.passes > 0 && (state.stock.stack.length || state.waste.stack.length)) {\r\n                        if (state.hand.isFromWaste()) {\r\n                            state.waste.putDownHand();\r\n                        }\r\n                        if (state.stock.stack.length) {\r\n                            state.waste.addAll(state.stock.popTop());\r\n                        } else if (state.stock.canRecycle()) {\r\n                            state.stock.recycle(state.waste.recycle());\r\n                        }\r\n                    }\r\n                });\r\n            }, 10000);\r\n        }\r\n        return () => clearTimeout(timeout);\r\n    }, [length, paused, started]);\r\n\r\n    return (\r\n        <div className=\"board-field stock\">\r\n            <StackBase model={context.state.stock} />\r\n            {context.state.stock.stack.map((card, index) => (\r\n                <Card\r\n                    key={index}\r\n                    model={card}\r\n                    offsetTop={(index / 2) * -1}\r\n                    zIndex={index}\r\n                    blink={context.state.stock.blinkFor}\r\n                    isSuggested={context.state.stock.suggestion && index == context.state.stock.stack.length - 1}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n//Can't use multiple contexts in one React class, need two renderer functions to feed two contexts into props for reliable detection of changes\r\nexport default class Stock extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.stock);\r\n    }\r\n\r\n    render() {\r\n        return <Renderer length={this.context.state.stock.stack.length} />;\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.tableau.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state } = React.useContext(GlobalContext);\r\n        return (\r\n            <>\r\n                {state.tableau.stacks.map((tableau, index) => (\r\n                    <Tableau key={index} index={index} model={tableau} parent={state.tableau} />\r\n                ))}\r\n            </>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 1;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div className=\"board-field\">\r\n                <StackBase model={props.model} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        offsetTop={getOffset(index)}\r\n                    />\r\n                ))}\r\n                <Hand parentModel={props.model} stack={props.model.stack} offsetTop={getOffset(props.model.stack.length)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.waste);\r\n    }\r\n\r\n    render() {\r\n        const { state } = this.context;\r\n        const getOffset = (index) => {\r\n            if (state.settings.launchSettings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length = state.hand.isHoldingCard() && state.hand.isFromWaste() ? state.waste.stack.length + 1 : state.waste.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div className=\"board-field\">\r\n                <StackBase model={state.waste} />\r\n                {state.waste.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        blink={state.waste.blinkFor}\r\n                        isSuggested={state.waste.suggestion && index == state.waste.stack.length - 1}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    offsetTop={(state.waste.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(state.waste.stack.length)}\r\n                    parentModel={state.waste}\r\n                    stack={state.waste.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"../Style/Board.scss\";\r\n\r\nimport BoardNavigator from \"./BoardNavigator\";\r\nimport Dealer from \"./Dealer\";\r\nimport Foundation from \"./Foundation\";\r\nimport Header from \"../UI/Header/Header\";\r\nimport Menu from \"../UI/Menu\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = (props: any) => (\r\n    <>\r\n        <Menu />\r\n        <Header mode={props.mode} />\r\n        <div className={\"board-jail \" + props.mode}>\r\n            <div className={\"board-grid-container \" + props.mode}>\r\n                <Stock />\r\n                <Waste />\r\n                <div className=\"spacer\">&nbsp;</div>\r\n                <Foundation.Stacks />\r\n                <Tableau.Stacks />\r\n            </div>\r\n        </div>\r\n        <Dealer />\r\n        <BoardNavigator />\r\n    </>\r\n);\r\n\r\nexport default Board;\r\n","import \"../Style/Screens.scss\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport PauseContext from \"../PauseContext\";\r\nimport React from \"react\";\r\n\r\nconst EndScreen = () => {\r\n    const { state, restart } = React.useContext(GlobalContext);\r\n    const pause = React.useContext(PauseContext);\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    return !state.game.isEnded ? null : (\r\n        <div className=\"ui neutral endscreen\">\r\n            <div className=\"title\">🥳</div>\r\n            <div className=\"content\">\r\n                <div>Time: {pause.getElapsed()}</div>\r\n                <div>Points: {state.game.rating.points}</div>\r\n                <div>Time Penalty: {state.game.rating.getTimePenalty(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Bonus Points: {state.game.rating.getBonusPoints(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Total Points: {state.game.rating.getTotal(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>\r\n                    <button onClick={restart}>\r\n                        🗑️<div>New Game</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndScreen;\r\n","import Model from \"../Model\";\r\nimport Stock from \"../Game/Stock\";\r\nimport Waste from \"../Game/Waste\";\r\n\r\nexport type BlinkSelector = (state: Model) => Waste | Stock | any;\r\n\r\nexport interface IBlinker {\r\n    startBlink: (selector: BlinkSelector, state: Model) => void;\r\n}\r\n\r\nexport default class Blinker implements IBlinker {\r\n    startBlink = (selector: BlinkSelector, state: Model) => {\r\n        if (selector(state).blinkFor < 10) {\r\n            selector(state).blinkFor = 10;\r\n            state.game.registerBlink(true);\r\n            selector(state).unblink = (s: Model) => this.stopBlink(selector, s);\r\n        }\r\n    };\r\n\r\n    stopBlink = (selector: BlinkSelector, state: Model) => {\r\n        selector(state).blinkFor = 0;\r\n        state.game.registerBlink(false);\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport Card from \"../Deck/Card\";\r\nimport Model from \"../Model\";\r\n\r\nexport default class Tableau implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: Model) => s.tableau.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: Model, index: number) => {\r\n        if (state.tableau.wouldAcceptHand(index)) {\r\n            const src = state.hand.source;\r\n            state.tableau.putDownHand(index) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, state: Model, index: number) => {\r\n        if (card) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n}\r\n\r\nexport class TableauHidden extends Tableau {\r\n    dispatchPickup = (card: Card, position: any, state: Model, index: number) => {\r\n        if (card) {\r\n            this.tryUncover(card, index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card: Card, index: number, state: Model) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n}\r\n","import Model from \"../Model\";\r\nimport Stock from \"../Game/Stock\";\r\nimport Tableau from \"../Game/Tableau\";\r\n\r\nexport default class Dealer {\r\n    dealt: number;\r\n    dealingAt: number;\r\n    isDealt: boolean;\r\n\r\n    constructor() {\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    dealOne = (dealt: number, callback: any) => (state: Model) => {\r\n        if (dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n\r\n        state.dealer.deal(state.stock, state.tableau);\r\n        if (state.dealer.isDealt) {\r\n            state.game.started = Date.now();\r\n        }\r\n\r\n        if (!state.dealer.isDealt) {\r\n            callback(state.dealer.dealt);\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    dealAll = () => (state: Model) => {\r\n        if (this.dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n        while (!state.dealer.isDealt) {\r\n            state.dealer.deal(state.stock, state.tableau);\r\n        }\r\n        state.game.started = Date.now();\r\n        return state;\r\n    };\r\n\r\n    deal = (stock: Stock, tableau: Tableau) => {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = stock.popOne();\r\n                newCard.source = tableau.stacks[i].source;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                tableau.deal(newCard, i);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { ClickHandler } from \"../../Common\";\r\nimport Hand from \"../Game/Hand\";\r\nimport Model from \"../Model\";\r\n\r\nexport default class Dispatcher {\r\n    clickHandler: ClickHandler;\r\n\r\n    constructor(clickHandler: ClickHandler) {\r\n        this.clickHandler = clickHandler;\r\n    }\r\n\r\n    getHandler = (hand: Hand) => {\r\n        if (hand && hand.isHoldingCard()) {\r\n            return this.dispatchPutDown;\r\n        } else {\r\n            return this.dispatchPickup;\r\n        }\r\n    };\r\n\r\n    dispatchPutDown = (card: Card, position: any, index: number) => (state: Model) => {\r\n        if (state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPutDown(card, position, state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, index: number) => (state: Model) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPickup(card, position, state, index);\r\n        }\r\n    };\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.source = \"\";\r\n        this.suggestion = false;\r\n        this.canClick = () => {};\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (_p) => {};\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        if (lvl == 0) {\r\n            this.entropyStyle = {};\r\n            return;\r\n        }\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 20) + \"vw\";\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 20) + \"vw\";\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        copy.canClick = orig.canClick;\r\n        copy.onClick = orig.onClick;\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Settings from \"./Settings\";\r\n\r\nexport default class Focus {\r\n    settings: Settings;\r\n    card: Card | null;\r\n    stack: string;\r\n    keyboard: boolean;\r\n    constructor(settings: Settings) {\r\n        this.settings = settings;\r\n        this.card = null;\r\n        this.stack = \"\";\r\n        this.keyboard = false;\r\n    }\r\n\r\n    validSettings = () => this.settings.launchSettings.inputMode !== \"mouse\";\r\n\r\n    isKeyBoard = (isKeyboard: boolean) => {\r\n        this.keyboard = isKeyboard;\r\n    };\r\n\r\n    setCard = (card: Card) => {\r\n        this.card = card;\r\n        this.stack = \"\";\r\n    };\r\n\r\n    unsetCard = (card: Card) => {\r\n        if (this.card && card && Card.equals(this.card, card)) {\r\n            this.card = null;\r\n        }\r\n    };\r\n\r\n    unsetStack = (stack: string) => {\r\n        if (this.stack && stack && this.stack == stack) {\r\n            this.stack = \"\";\r\n        }\r\n    };\r\n\r\n    setStack = (stack: string) => {\r\n        this.card = null;\r\n        this.stack = stack;\r\n    };\r\n\r\n    hasCard = (card: Card) => this.keyboard && this.validSettings() && this.card && card && Card.equals(this.card, card);\r\n\r\n    hasStack = (stack: string) => this.keyboard && this.validSettings() && this.stack && stack && this.stack == stack;\r\n}\r\n","export default class BasicStack {\r\n    constructor(source) {\r\n        this.source = source;\r\n    }\r\n    stack = [];\r\n    getTop = () => this.stack && this.stack.length && this.stack[this.stack.length - 1];\r\n    suggestion = false;\r\n    getClickable = () => this.stack.filter((card) => card.canClick());\r\n}\r\n","import BasicStack from \"./BasicStack\";\r\n\r\nexport default class HandHoldingStack extends BasicStack {\r\n    constructor(source, hand) {\r\n        super(source);\r\n        this.hand = hand;\r\n    }\r\n    getHandContent = () => (this.hand.source == this.source ? this.hand.stack : []);\r\n    getClickable = () => [...this.stack.filter((card) => card.canClick()), ...this.getHandContent().filter((card) => card.canClick())];\r\n}\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","import Card from \"../Deck/Card\";\r\nimport HandHoldingStack from \"./HandHoldingStack\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings, hand) {\r\n        this.settings = settings;\r\n        this.hand = hand;\r\n        const template = (index) => {\r\n            const s = new HandHoldingStack(\"foundation-\" + index, hand);\r\n            s.stack = [];\r\n            s.acceptedCards = [...getFoundationOrder()];\r\n            s.usedCards = [];\r\n            s.icon = null;\r\n            s.color = null;\r\n            s.blinkFor = 0;\r\n            return s;\r\n        };\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit, index) => ({ ...template(index), ...suit }));\r\n        this.stacks = [...stacks];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n    }\r\n\r\n    setOnClick = (onClick) => {\r\n        this.stacks.forEach((stack, index) => {\r\n            stack.clickEmpty = (p) => onClick(null, p, index);\r\n            stack.stack.forEach((card, sindex) => {\r\n                card.onClick = (p) => onClick({ ...card }, p, index);\r\n                card.canClick = () => sindex == stack.stack.length - 1;\r\n            });\r\n            this.hand.setOnClick(stack);\r\n        });\r\n    };\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAcceptHand = (index) => !this.hand.hasMoreThanOneCard() && this.accepts(index, this.hand.currentCard());\r\n\r\n    putDownHand = (index) => this.add(index, this.hand.putDown());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = this.stacks[index].source;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => [...this.stacks[index].usedCards].pop();\r\n\r\n    countCards = () => this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n\r\n    getTop = (index) => this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n\r\n    static copy = (orig, hand) => {\r\n        const copy = new Foundation(orig.settings, hand);\r\n        copy.stacks = orig.stacks.map((origStack) => {\r\n            const s = new HandHoldingStack(origStack.source, hand);\r\n            s.stack = Card.copyAll(origStack.stack);\r\n            s.acceptedCards = [...origStack.acceptedCards];\r\n            s.usedCards = [...origStack.usedCards];\r\n            s.icon = origStack.icon;\r\n            s.color = origStack.color;\r\n            return s;\r\n        });\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport Card from \"../Deck/Card\";\r\nimport Model from \"../Model\";\r\n\r\nexport default class Foundation implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: Model) => s.foundation.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: Model, index: number) => {\r\n        if (state.foundation.wouldAcceptHand(index)) {\r\n            const src = state.hand.source;\r\n            state.foundation.putDownHand(index) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (_card: Card, position: any, state: Model, index: number) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    //@todo move this to a generic place, also detect failure\r\n    tryDetectEnd(state: Model) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n}\r\n","export default class Rating {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.registerHint(this.settings.disableHint());\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        this.points += this.rateMove(currentMove);\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.registerHint(this.settings.disableHint());\r\n        if (this.settings.launchSettings.drawMode == \"single\" && this.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.registerHint(this.settings.disableHint());\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n    };\r\n\r\n    registerBlink(on) {\r\n        if (on && this.settings.launchSettings.missPenalty) {\r\n            this.points -= 10;\r\n            console.debug(\"RATING: subtract 10 points for invalid action\");\r\n        }\r\n    }\r\n\r\n    penalize = (other) => {\r\n        if (this.settings.launchSettings.undoPenalty) {\r\n            const penalty = Math.pow(2, other.multiplicator);\r\n            console.debug(`RATING: applying penalty of ${penalty} points for UNDO`);\r\n            this.points = Math.min(this.points, other.points) - penalty;\r\n            this.multiplicator = other.multiplicator + 1;\r\n        }\r\n    };\r\n\r\n    registerHint = (done) => {\r\n        if (done && this.settings.launchSettings.hintPenalty) {\r\n            this.points -= 10;\r\n            console.debug(`RATING: applying penalty of 10 points for HINT`);\r\n        }\r\n    };\r\n\r\n    rateMove(move) {\r\n        const isTableau = (obj) => obj.substr(0, 7) == \"tableau\";\r\n        const isFoundation = (obj) => obj.substr(0, 10) == \"foundation\";\r\n        if (isTableau(move.source)) {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (isFoundation(move.source)) {\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getTimePenalty = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        return Math.trunc(secondsToFinish / 5) * -2;\r\n    };\r\n\r\n    getBonusPoints = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        if (secondsToFinish < 30) {\r\n            return 0;\r\n        }\r\n        return Math.round((20000 / secondsToFinish) * 35);\r\n    };\r\n\r\n    getTotal = (start, end) => {\r\n        return this.points + this.getBonusPoints(start, end) - this.getTimePenalty(start, end);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Rating(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.multiplicator = orig.multiplicator;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class TimeMachine {\r\n    constructor() {\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n    };\r\n\r\n    pushPreviousState = (state) => {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    };\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.timemachine.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        return true;\r\n    };\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    }\r\n\r\n    stackEquals = (a, b) => {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    };\r\n\r\n    stacksEqual = (a, b) => {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    };\r\n\r\n    modelEquals = (a, b) => {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new TimeMachine();\r\n        copy.previousStates = [...orig.previousStates];\r\n        copy.memorable = orig.memorable;\r\n        copy.modified = orig.modified;\r\n        return copy;\r\n    };\r\n}\r\n","import Rating from \"./Rating\";\r\nimport TimeMachine from \"./TimeMachine\";\r\n\r\nexport default class Game {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.rating = new Rating(settings);\r\n        this.timemachine = new TimeMachine();\r\n        //@todo move to context:\r\n        this.started = 0;\r\n        this.isEnded = false;\r\n        this.end = 0;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.rating.registerMove(target, source);\r\n        this.timemachine.registerMove(target, source);\r\n        return true;\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.timemachine.registerPickup();\r\n        return true;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.rating.registerRecycle();\r\n        this.timemachine.registerRecycle();\r\n        return true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.rating.registerUncover();\r\n        this.timemachine.registerUncover();\r\n        return true;\r\n    };\r\n\r\n    registerBlink(on) {\r\n        this.rating.registerBlink(on);\r\n        this.timemachine.registerBlink(on);\r\n        return true;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.timemachine = TimeMachine.copy(orig.timemachine);\r\n        copy.rating = Rating.copy(orig.rating);\r\n        copy.paused = orig.paused;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { IStack } from \"./IStack\";\r\nimport { XY } from \"../../View/UI/XY\";\r\n\r\nexport default class Hand {\r\n    stack: Card[];\r\n    source: string;\r\n    position: XY | null;\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = \"\";\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp = (stack: Card[], source: string, position: XY) => {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    };\r\n\r\n    putDown = () => {\r\n        this.source = \"\";\r\n        const result = this.stack.splice(0, this.stack.length);\r\n        return result;\r\n    };\r\n\r\n    setOnClick = (model: IStack) => {\r\n        if (this.source && this.source == model.source) {\r\n            let _onClick = model.clickEmpty;\r\n            if (model.stack.length) {\r\n                _onClick = model.stack[model.stack.length - 1].onClick;\r\n            }\r\n            this.stack.forEach((card) => {\r\n                card.onClick = _onClick;\r\n                card.canClick = () => true;\r\n            });\r\n        }\r\n    };\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    isHoldingKing = () => this.isHoldingCard() && this.currentCard() && this.currentCard()?.face == \"K\";\r\n\r\n    currentCard: () => Card | null = () => (this.isHoldingCard() && this.stack[0]) || null;\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card: Card) => (this.source && card.source == this.source) || null;\r\n\r\n    isFromWaste = () => this.source && this.source == \"waste\";\r\n\r\n    isFromFoundation = (index: number) => this.source && this.source == `foundation-${index}`;\r\n\r\n    isFromTableau = (index: number) => this.source && this.source == `tableau-${index}`;\r\n\r\n    isFromAnyTableau = () => this.source && this.source.substring(0, 8) == \"tableau-\";\r\n\r\n    getTableauIndex: () => number = () => (this.source && parseInt(this.source.substring(8))) || 0;\r\n\r\n    static copy = (orig: Hand) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { IStack } from \"../Game/IStack\";\r\nimport Model from \"../Model\";\r\n\r\ninterface NavIndex {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\nexport default class Navigator {\r\n    model: Model;\r\n    currentIndex: NavIndex;\r\n    rows: IStack[][];\r\n    constructor(model: Model) {\r\n        this.model = model;\r\n        this.currentIndex = { x: 0, y: 0, z: 0 };\r\n        this.rows = [[this.model.stock, this.model.waste, undefined, ...this.model.foundation.stacks], [...this.model.tableau.stacks]];\r\n    }\r\n\r\n    getZindex = (elem: IStack, card: Card) => {\r\n        const targets = elem.getClickable();\r\n        for (let i = 0; i < targets.length; i++) {\r\n            if (Card.equals(card, targets[i])) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    update = (pos: string, card: Card) => {\r\n        for (let i = 0; i < this.rows.length; i++) {\r\n            const row = this.rows[i];\r\n            for (let j = 0; j < row.length; j++) {\r\n                const elem = row[j];\r\n                if (elem && elem.source == pos) {\r\n                    const zIndex = this.getZindex(elem, card);\r\n                    this.currentIndex = { x: j, y: i, z: zIndex };\r\n                    this.finishNav();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    valid = (pos: NavIndex) => pos.x === this.currentIndex.x && pos.y === this.currentIndex.y && pos.z === this.currentIndex.z;\r\n\r\n    moveLeft = (pos: NavIndex) =>\r\n        this.move(pos, () => {\r\n            this.currentIndex.x--;\r\n            if (this.currentIndex.x == -1) {\r\n                this.currentIndex.x = 6;\r\n            }\r\n        });\r\n\r\n    moveRight = (pos: NavIndex) =>\r\n        this.move(pos, () => {\r\n            this.currentIndex.x++;\r\n            if (this.currentIndex.x == 7) {\r\n                this.currentIndex.x = 0;\r\n            }\r\n        });\r\n\r\n    move = (pos: NavIndex, direction: () => void) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        direction();\r\n        if (this.current() == undefined) {\r\n            this.move(this.currentIndex, direction);\r\n        } else {\r\n            this.currentIndex.z = this.current().getClickable().length - 1;\r\n            this.finishNav();\r\n        }\r\n    };\r\n\r\n    moveUp = (pos: NavIndex) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        const clickable = this.current().getClickable();\r\n        if (clickable.length && this.currentIndex.z > 0) {\r\n            this.currentIndex.z--;\r\n            this.finishNav();\r\n        } else {\r\n            this.toggleRow(true);\r\n        }\r\n    };\r\n\r\n    moveDown = (pos: NavIndex) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        const clickable = this.current().getClickable();\r\n        if (clickable.length && this.currentIndex.z < clickable.length - 1) {\r\n            this.currentIndex.z++;\r\n            this.finishNav();\r\n        } else {\r\n            this.toggleRow(false);\r\n        }\r\n    };\r\n\r\n    toggleRow = (pickLast: boolean) => {\r\n        if (this.currentIndex.y == 0) {\r\n            this.currentIndex.y = 1;\r\n        } else {\r\n            this.currentIndex.y = 0;\r\n        }\r\n        const last = this.current() ? this.current().getClickable().length - 1 : 0;\r\n        this.currentIndex.z = pickLast ? last : 0;\r\n        if (this.current() == undefined) {\r\n            this.moveLeft(this.currentIndex);\r\n        } else {\r\n            this.finishNav();\r\n        }\r\n    };\r\n\r\n    finishNav = () => {\r\n        const clickable = this.current().getClickable();\r\n        if (clickable && clickable[this.currentIndex.z]) {\r\n            this.model.focus.setCard(clickable[this.currentIndex.z]);\r\n        } else {\r\n            this.model.focus.setStack(this.current().source);\r\n        }\r\n        return true;\r\n    };\r\n\r\n    current = () => {\r\n        return this.rows[this.currentIndex.y][this.currentIndex.x];\r\n    };\r\n\r\n    pressCurrent = () => {\r\n        if (this.model.focus.card && this.model.focus.card.canClick()) {\r\n            return this.model.focus.card.onClick({ isKeyboard: true });\r\n        } else if (this.model.focus.stack) {\r\n            console.debug(\"delegating to clickempty\");\r\n            return this.current().clickEmpty({ isKeyboard: true });\r\n        } else {\r\n            return (ctx: Model) => {\r\n                ctx.navigator.finishNav();\r\n                ctx.game.timemachine.modified = true;\r\n            };\r\n        }\r\n    };\r\n}\r\n","import SuggestionModes, { SuggestionMode } from \"./Settings/SuggestionModes\";\r\n\r\nimport { LaunchSettings } from \"../../Common\";\r\n\r\nexport default class Settings {\r\n    launchSettings: LaunchSettings;\r\n    baseEntropy: number;\r\n    interactionEntropy: number;\r\n    suggestionModes: SuggestionMode[];\r\n    suggestionMode: SuggestionMode;\r\n\r\n    constructor(launchSettings: LaunchSettings) {\r\n        this.launchSettings = launchSettings;\r\n        this.baseEntropy = launchSettings.baseEntropy;\r\n        this.interactionEntropy = launchSettings.interactionEntropy;\r\n        this.suggestionModes = SuggestionModes.allSuggestionModes();\r\n        this.suggestionMode = SuggestionModes.get(launchSettings.suggestionMode);\r\n    }\r\n\r\n    setSuggestionMode = (sm: string) => {\r\n        if (this.suggestionMode.key !== sm) {\r\n            this.suggestionMode = SuggestionModes.get(sm);\r\n        }\r\n    };\r\n\r\n    enableHint = () => {\r\n        this.suggestionMode = SuggestionModes.getHintMode();\r\n    };\r\n\r\n    disableHint = () => {\r\n        if (this.suggestionMode.isTemporary && this.suggestionMode.next) {\r\n            this.suggestionMode = SuggestionModes.get(this.suggestionMode.next);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    static copy = (orig: Settings) => {\r\n        const copy = new Settings(orig.launchSettings);\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        return copy;\r\n    };\r\n}\r\n","import BasicStack from \"./BasicStack\";\r\nimport Card from \"../Deck/Card\";\r\n\r\nexport default class Stock extends BasicStack {\r\n    constructor(stack, settings) {\r\n        super(\"stock\");\r\n        this.settings = settings;\r\n        this.stack = stack.map(this.setCardProperties);\r\n        this.recyclings = 0;\r\n        this.passes = -1;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        if (this.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            this.passes = 1;\r\n        }\r\n        if (this.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            this.passes = 3;\r\n        }\r\n    }\r\n\r\n    setOnClick = (onClick) => {\r\n        this.clickEmpty = (p) => onClick(null, p);\r\n        this.stack.forEach((card, index) => {\r\n            card.onClick = (p) => onClick({ ...card }, p);\r\n            card.canClick = () => index == this.stack.length - 1;\r\n        });\r\n    };\r\n\r\n    popOne = () => {\r\n        const result = this.stack.pop();\r\n        return result;\r\n    };\r\n\r\n    canRecycle() {\r\n        return (\r\n            this.settings.launchSettings.recyclingMode == \"infinite\" ||\r\n            (this.settings.launchSettings.recyclingMode == \"3-pass\" && this.recyclings < 2)\r\n        );\r\n    }\r\n\r\n    recycle = (waste) => {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map(this.setCardProperties);\r\n            this.stack[this.stack.length - 1].canClick = () => true;\r\n            this.recyclings++;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setCardProperties = (card) => {\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        card.isHidden = true;\r\n        card.source = this.source;\r\n        return card;\r\n    };\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    popTop = () => {\r\n        let result = [];\r\n        if (this.settings.launchSettings.drawMode == \"single\") {\r\n            result = [this.stack.pop()];\r\n        }\r\n        if (this.settings.launchSettings.drawMode == \"triple\") {\r\n            result = this.stack.splice(this.stack.length - 3);\r\n        }\r\n        if (this.stack.length == 0) {\r\n            this.passes--;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings, orig.focus);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        copy.passes = orig.passes;\r\n        copy.recyclings = orig.recyclings;\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport Card from \"../Deck/Card\";\r\nimport Model from \"../Model\";\r\nimport Navigator from \"./Navigator\";\r\n\r\nexport default class Stock implements ClickHandler {\r\n    navigator: Navigator;\r\n    constructor(navigator: Navigator) {\r\n        this.navigator = navigator;\r\n    }\r\n\r\n    blink: BlinkFunction = (state: Model) => new Blinker().startBlink((s: Model) => s.stock, state);\r\n\r\n    dispatchPutDown = (_card: Card, _position: any, state: Model) => this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, _position: any, state: Model) => {\r\n        return card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state);\r\n    };\r\n\r\n    moveToWaste = (card: Card, state: Model) => {\r\n        return state.stock.isOnTop(card) && state.waste.addAll(state.stock.popTop()) && state.game.registerMove(\"waste\", \"stock\");\r\n    };\r\n\r\n    recycleWaste = (_card: Card, state: Model) => {\r\n        if (!state.stock.getTop()) {\r\n            return (\r\n                (!!state.waste.getTop() &&\r\n                    state.stock.canRecycle() &&\r\n                    state.stock.recycle(state.waste.recycle()) &&\r\n                    state.game.registerRecycle() &&\r\n                    this.navigator.finishNav()) ||\r\n                this.blink(state, 0)\r\n            );\r\n        }\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport Card from \"../Deck/Card\";\r\nimport Model from \"../Model\";\r\n\r\nexport default class Waste implements ClickHandler {\r\n    blink: BlinkFunction = (state: Model) => new Blinker().startBlink((s: Model) => s.waste, state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: Model) =>\r\n        (state.waste.wouldAcceptHand() && state.waste.putDownHand() && state.game.registerMove(\"waste\", \"waste\")) || this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, position: any, state: Model) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state, 0);\r\n}\r\n","import Model from \"../Model\";\r\nimport SuggestionModes from \"../Game/Settings/SuggestionModes\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Suggestions {\r\n    tableau: Tableau;\r\n    waste: Waste;\r\n\r\n    constructor() {\r\n        this.tableau = new Tableau();\r\n        this.waste = new Waste();\r\n    }\r\n\r\n    evaluateOptions = (state: Model) => {\r\n        this.disableAllSuggestions(state);\r\n        if (\r\n            state.settings.suggestionMode.key !== SuggestionModes.NONE &&\r\n            !this.getUncoverOptions(state) &&\r\n            !this.getPutdownSuggestions(state) &&\r\n            !state.hand.isHoldingCard() &&\r\n            (!this.getPickupOptions(state) || state.settings.suggestionMode.key == SuggestionModes.FULL) &&\r\n            (state.stock.getTop() || state.stock.canRecycle()) &&\r\n            state.settings.suggestionMode.key !== SuggestionModes.SCORED\r\n        ) {\r\n            state.stock.suggestion = true;\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state: Model, onlyUseful?: boolean) => {\r\n        if (!state.hand.isHoldingCard() || state.settings.suggestionMode.key == SuggestionModes.NONE) {\r\n            return 0;\r\n        }\r\n\r\n        const accepted = [];\r\n        if (state.waste.wouldAcceptHand()) {\r\n            if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromWaste()) {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.foundation.wouldAcceptHand(index)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromFoundation(index)) {\r\n                    const move = { target: stack.source, source: state.hand.source };\r\n                    if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.tableau.wouldAcceptHand(index)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromTableau(index)) {\r\n                    const isMoveOfKingBetweenEmptySlots =\r\n                        state.hand.isHoldingKing() &&\r\n                        stack.stack.length == 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length == 0;\r\n\r\n                    const isMoveBetweenSimilarParentCards =\r\n                        stack.stack.length > 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length > 0 &&\r\n                        stack.stack[stack.stack.length - 1].face ==\r\n                            state.tableau.stacks[state.hand.getTableauIndex()].stack[\r\n                                state.tableau.stacks[state.hand.getTableauIndex()].stack.length - 1\r\n                            ].face &&\r\n                        !state.tableau.getTop(state.hand.getTableauIndex()).isHidden;\r\n\r\n                    const isNotLoop = !isMoveOfKingBetweenEmptySlots && !isMoveBetweenSimilarParentCards;\r\n\r\n                    if (!onlyUseful || state.settings.suggestionMode.key === SuggestionModes.FULL || isNotLoop) {\r\n                        const move = { target: stack.source, source: state.hand.source };\r\n                        if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state: Model) => {\r\n        let foundAny = false;\r\n        const wasteState = Model.copy(state);\r\n        this.waste.dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.timemachine.modified) {\r\n            if (this.getPutdownSuggestions(wasteState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) =>\r\n            tableau.stack\r\n                .map((card, cardIndex) => ({ cardIndex, card }))\r\n                .filter(({ card }) => !card.isHidden)\r\n                .forEach(({ card, cardIndex }) => {\r\n                    const tableauState = Model.copy(state);\r\n                    this.tableau.dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.timemachine.modified) {\r\n                        if (this.getPutdownSuggestions(tableauState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                })\r\n        );\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state: Model) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            const filtered = state.tableau.stacks\r\n                .map((_stack, index) => index)\r\n                .filter((index) => state.tableau.getTop(index) && state.tableau.getTop(index).isHidden);\r\n            filtered.forEach((index) => {\r\n                state.tableau.getTop(index).suggestion = true;\r\n            });\r\n            return filtered.length;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    disableAllSuggestions = (state: Model) => {\r\n        const disableSuggestion = (obj: any) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Hand from \"./Hand\";\r\nimport HandHoldingStack from \"./HandHoldingStack\";\r\nimport { IStack } from \"./IStack\";\r\nimport Settings from \"./Settings\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nclass TableauStack extends HandHoldingStack implements IStack {\r\n    blinkFor = 0;\r\n    id = 0;\r\n    // eslint-disable-next-line no-unused-vars\r\n    onClick = (a: any) => {};\r\n    // eslint-disable-next-line no-unused-vars\r\n    clickEmpty = (a: any) => {};\r\n    setOnClick = () => {};\r\n}\r\nexport default class Tableau {\r\n    stacks: TableauStack[];\r\n    settings: Settings;\r\n    hand: Hand;\r\n\r\n    constructor(settings: Settings, hand: Hand) {\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.hand = hand;\r\n        this.stacks = ids.map((id) => {\r\n            const s = new TableauStack(\"tableau-\" + id, hand);\r\n            s.stack = [];\r\n            s.blinkFor = 0;\r\n            s.id = id;\r\n            return s;\r\n        });\r\n        this.settings = settings;\r\n    }\r\n\r\n    setOnClick = (onClick: (a: any, b: any, index: number) => void, onClickhidden: (a: any, b: any, index: number) => void, hand: Hand) => {\r\n        this.stacks.forEach((stack, index) => {\r\n            stack.clickEmpty = (p: any) => onClick(null, p, index);\r\n            stack.stack.forEach((card, sindex) => {\r\n                const click = card.isHidden && sindex == stack.stack.length - 1 ? onClickhidden : onClick;\r\n                card.onClick = (p: any) => click({ ...card }, p, index);\r\n                card.canClick = () => !card.isHidden || this.canUncover(index, card);\r\n            });\r\n            hand.setOnClick(stack);\r\n        });\r\n    };\r\n\r\n    getStack = (index: number) => this.stacks[index];\r\n\r\n    wouldAcceptHand = (index: number) => this.canPutDown(this.getTop(index), this.hand, index);\r\n\r\n    putDownHand = (index: number) => this.add(index, this.hand.putDown());\r\n\r\n    canPutDown = (card: Card, hand: Hand, index: number) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.isFromTableau(index));\r\n\r\n    accepts = (index: number, current?: Card | null) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current?.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current?.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index: number, card: Card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card: Card, i: number) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    deal = (card: Card, index: number) => {\r\n        this.stacks[index].stack.push(card);\r\n    };\r\n\r\n    canUncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        return top.isHidden && card && card.equals(this.getTop(index));\r\n    };\r\n\r\n    uncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        if (this.canUncover(index, card)) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index: number) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index: number, cards: Card[]) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card: Card, index: number) => {\r\n        card.source = this.stacks[index].source;\r\n        return card;\r\n    };\r\n\r\n    getTop = (index: number, offset?: number) => this.stacks[index].stack[this.stacks[index].stack.length - 1 - (offset || 0)];\r\n\r\n    static copy = (orig: Tableau, hand: Hand) => {\r\n        const copy = new Tableau(orig.settings, hand);\r\n        copy.stacks = orig.stacks.map((stack, index) => {\r\n            const s = new TableauStack(stack.source, hand);\r\n            s.id = index;\r\n            s.stack = Card.copyAll(stack.stack);\r\n            return s;\r\n        });\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport HandHoldingStack from \"./HandHoldingStack\";\r\n\r\nexport default class Waste extends HandHoldingStack {\r\n    constructor(settings, hand) {\r\n        super(\"waste\", hand);\r\n        this.settings = settings;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n    }\r\n\r\n    setOnClick = (onClick) => {\r\n        this.clickEmpty = (p) => onClick(null, p);\r\n        this.stack.forEach((card, index) => {\r\n            card.onClick = (p) => onClick({ ...card }, p);\r\n            card.canClick = () => index == this.stack.length - 1;\r\n        });\r\n        this.hand.setOnClick(this);\r\n    };\r\n\r\n    putDownHand = () => this.addAll(this.hand.putDown());\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = this.source;\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAcceptHand = () => this.hand.isFromWaste() && this.canAdd(this.hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    static copy = (orig, hand) => {\r\n        const copy = new Waste(orig.settings, hand);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import { ClickHandler, LaunchSettings } from \"../Common\";\r\nimport TableauHandler, { TableauHidden } from \"./Business/Tableau\";\r\n\r\nimport Dealer from \"./Business/Dealer\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport Dispatcher from \"./Business/Dispatcher\";\r\nimport Focus from \"./Game/Focus\";\r\nimport Foundation from \"./Game/Foundation\";\r\nimport FoundationHandler from \"./Business/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Navigator from \"./Business/Navigator\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport StockHandler from \"./Business/Stock\";\r\nimport Suggestions from \"./Business/Suggestions\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\nimport WasteHandler from \"./Business/Waste\";\r\n\r\nexport default class Model {\r\n    stock: Stock;\r\n    waste: Waste;\r\n    foundation: Foundation;\r\n    tableau: Tableau;\r\n    hand: Hand;\r\n    game: Game;\r\n    settings: Settings;\r\n    focus: Focus;\r\n    suggestor: Suggestions;\r\n    dealer: Dealer;\r\n    navigator: Navigator;\r\n\r\n    constructor(obj: any) {\r\n        this.stock = obj.stock;\r\n        this.waste = obj.waste;\r\n        this.foundation = obj.foundation;\r\n        this.tableau = obj.tableau;\r\n        this.hand = obj.hand;\r\n        this.game = obj.game;\r\n        this.settings = obj.settings;\r\n        this.focus = obj.focus;\r\n        this.suggestor = new Suggestions();\r\n        this.dealer = new Dealer();\r\n        this.navigator = new Navigator(this);\r\n    }\r\n\r\n    withSuggestions = () => {\r\n        this.suggestor.evaluateOptions(this);\r\n        return this;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.settings.baseEntropy = lvl;\r\n        this.stock.setEntropy(lvl);\r\n        this.waste.setEntropy(lvl);\r\n        this.foundation.setEntropy(lvl);\r\n        this.tableau.setEntropy(lvl);\r\n    };\r\n\r\n    withHandlers = () => {\r\n        const getHandler = (clickHandler: ClickHandler) => new Dispatcher(clickHandler).getHandler(this.hand);\r\n        this.stock.setOnClick(getHandler(new StockHandler(this.navigator)));\r\n        this.waste.setOnClick(getHandler(new WasteHandler()));\r\n        this.foundation.setOnClick(getHandler(new FoundationHandler()));\r\n        this.tableau.setOnClick(getHandler(new TableauHandler()), getHandler(new TableauHidden()), this.hand);\r\n        return this;\r\n    };\r\n\r\n    static getInitialState = (launchSettings: LaunchSettings, deck: Deck) => {\r\n        const settings = new Settings(launchSettings);\r\n        const hand = new Hand();\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings),\r\n            waste: new Waste(settings, hand),\r\n            foundation: new Foundation(settings, hand),\r\n            tableau: new Tableau(settings, hand),\r\n            hand: hand,\r\n            game: new Game(settings),\r\n            settings: settings,\r\n            focus: new Focus(settings),\r\n        };\r\n        return new Model(state);\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        const hand = Hand.copy(state.hand);\r\n        return new Model({\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste, hand),\r\n            foundation: Foundation.copy(state.foundation, hand),\r\n            tableau: Tableau.copy(state.tableau, hand),\r\n            hand: hand,\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n            focus: state.focus,\r\n        });\r\n    };\r\n}\r\n","import { LaunchSettings, StateReplacer, StateUpdater } from \"../../Common\";\r\n\r\nimport Board from \"./Board\";\r\nimport Deck from \"../../Model/Deck/Deck\";\r\nimport EndScreen from \"../UI/EndScreen\";\r\nimport Model from \"../../Model/Model\";\r\nimport { Provider } from \"../Context\";\r\nimport React from \"react\";\r\n\r\nexport const BoardContext = React.createContext({\r\n    player: 0,\r\n});\r\n\r\nconst BoardProvider = BoardContext.Provider;\r\n\r\ninterface BoardWrapProps {\r\n    settings: LaunchSettings;\r\n    restart: () => void;\r\n    deck: Deck;\r\n    player: number;\r\n}\r\n\r\nexport default class BoardWrap extends React.Component<BoardWrapProps, Model> {\r\n    constructor(props: BoardWrapProps) {\r\n        super(props);\r\n        this.state = Model.getInitialState(props.settings, props.deck);\r\n    }\r\n\r\n    //replacecontext is hard replacement, for restart and undo\r\n    replaceContext = (modifier: StateReplacer) => this.setState(modifier);\r\n\r\n    //updatecontext is soft replacement used for navigation.\r\n    updateContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            modifier(state);\r\n            return state;\r\n        });\r\n\r\n    //updateGameContext is for undo-able game actions\r\n    updateGameContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            state.game.timemachine.modified = false;\r\n            const previous = Model.copy(state);\r\n            modifier(state);\r\n            if (state.game.timemachine.modified) {\r\n                state.game.timemachine.pushPreviousState(previous);\r\n                return state;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n        //on every render, we refresh the click handlers in the model and the suggestions\r\n        //this is heavy - could it be done in updateGameContext? (and undo, and initial, and restart, and pause/unpause, well)\r\n    render = () => {\r\n        const context = {\r\n            state: this.state.withHandlers().withSuggestions(),\r\n            replaceContext: this.replaceContext,\r\n            updateContext: this.updateContext,\r\n            updateGameContext: this.updateGameContext,\r\n            restart: this.props.restart,\r\n        };\r\n        return (\r\n            <Provider value={context}>\r\n                <BoardProvider\r\n                    value={{\r\n                        player: this.props.player,\r\n                    }}\r\n                >\r\n                    <Board mode={this.props.settings.boardMode} />\r\n                </BoardProvider>\r\n                <EndScreen />\r\n            </Provider>\r\n        );\r\n    };\r\n}\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\r\n            .flat()\r\n            .reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    copy() {\r\n        const result = new Deck();\r\n        result.cards = Card.copyAll(this.cards);\r\n        return result;\r\n    }\r\n}\r\n","//@todo deprecate\r\n\r\nexport interface GameMode {\r\n    key: string;\r\n    title: string;\r\n    boardMode: string;\r\n    autoConfig: boolean;\r\n}\r\n\r\nexport default class GameModes {\r\n    static QUICK: GameMode = {\r\n        key: \"QUICK\",\r\n        title: \"Quick Game\",\r\n        boardMode: \"singleplayer\",\r\n        autoConfig: true,\r\n    };\r\n    static CUSTOM: GameMode = {\r\n        key: \"CUSTOM\",\r\n        title: \"Custom Game\",\r\n        boardMode: \"singleplayer\",\r\n        autoConfig: false,\r\n    };\r\n    static VERSUS: GameMode = {\r\n        key: \"VERSUS\",\r\n        title: \"Versus\",\r\n        boardMode: \"splitscreen\",\r\n        autoConfig: false,\r\n    };\r\n    static NULL: GameMode = {\r\n        key: \"\",\r\n        title: \"\",\r\n        boardMode: \"\",\r\n        autoConfig: false,\r\n    };\r\n}\r\n","export interface DifficultyOption {\r\n    id: number;\r\n    settings: {\r\n        drawMode: string;\r\n        recyclingMode: string;\r\n    };\r\n    icon: string;\r\n    lines: string[];\r\n}\r\nconst DifficultyOptions: DifficultyOption[] = [\r\n    {\r\n        id: 0,\r\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\r\n        icon: \"🐭\",\r\n        lines: [\"Turn 1 card\", \"No Limit\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐹\",\r\n        lines: [\"Turn 1 card\", \"Three passes\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐰\",\r\n        lines: [\"Turn 1 card\", \"Only a single pass\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\r\n        icon: \"🐨\",\r\n        lines: [\"Turn 3 cards\", \"No limit\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐼\",\r\n        lines: [\"Turn 3 cards \", \"Three passes\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐻\",\r\n        lines: [\"Turn 3 cards \", \"Only a single pass\"],\r\n    },\r\n];\r\n\r\nexport default DifficultyOptions;\r\n","export interface IControlPreset {\r\n    id: number;\r\n    icon: string;\r\n    inputMethod: string;\r\n    inputLayout: number;\r\n    lines: string[],\r\n}\r\nexport const ControlPresets: IControlPreset[] = [\r\n    {\r\n        id: 0,\r\n        icon: \"🖱️\",\r\n        inputMethod: \"mouse\",\r\n        inputLayout: 0,\r\n        lines: [\"Mouse or\", \"Touchpad\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: \"🎮\",\r\n        inputMethod: \"gamepad\",\r\n        inputLayout: 0,\r\n        lines: [\"Gamepad 1\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        icon: \"🎮\",\r\n        inputMethod: \"gamepad\",\r\n        inputLayout: 1,\r\n        lines: [\"Gamepad 2\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        icon: \"⌨️\",\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 0,\r\n        lines: [\"Keyboard\", \"WASD\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        icon: \"⌨️\",\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 1,\r\n        lines: [\"Keyboard\", \"ARROWS\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        icon: \"⌨️\",\r\n        inputMethod: \"keyboard\",\r\n        inputLayout: 2,\r\n        lines: [\"Keyboard\", \"NUMPAD\"],\r\n    },\r\n];\r\n","import React from \"react\";\r\n\r\ninterface IScreenContext {\r\n    closeScreen: () => void;\r\n}\r\n\r\nconst ScreenContext = React.createContext<IScreenContext>({\r\n    closeScreen: () => {},\r\n});\r\n\r\nexport default ScreenContext;\r\n","import React from \"react\";\r\nimport ScreenContext from \"./Context\";\r\n\r\nconst CloseButton = () => {\r\n    const { closeScreen } = React.useContext(ScreenContext);\r\n    return (\r\n        <div className=\"closer\">\r\n            <button onClick={closeScreen}>🗙</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CloseButton;\r\n","import { StartScreenState } from \"./StartScreen/Context\";\r\n\r\nexport default class StorageManager {\r\n    hasConsent = () => {\r\n        const consent = localStorage.getItem(\"consent\");\r\n        return consent && !!parseInt(consent);\r\n    };\r\n\r\n    giveConsent = () => ({\r\n        prompt: \"Allow this game to store settings, so your changes will stay. No data leaves your computer.\",\r\n        confirm: () => {\r\n            localStorage.setItem(\"consent\", \"1\");\r\n        },\r\n    });\r\n    revokeConsent = () => ({\r\n        prompt: \"Delete all local stored data? All settings will be lost.\",\r\n        confirm: () => {\r\n            localStorage.clear();\r\n        },\r\n    });\r\n\r\n    store = (value: StartScreenState) => {\r\n        if (this.hasConsent()) {\r\n            localStorage.setItem(\"state\", JSON.stringify(value));\r\n        }\r\n    };\r\n\r\n    getPreviousState = () => {\r\n        if (this.hasConsent()) {\r\n            const state = localStorage.getItem(\"state\");\r\n            return state != null ? JSON.parse(state) : null;\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { XY } from \"../../XY\";\r\n\r\nexport interface Focusable {\r\n    hasFocus: boolean;\r\n    autoFocus?: boolean;\r\n}\r\n\r\nexport interface MenuInpputElementProps extends Focusable {\r\n    disabled?: boolean;\r\n}\r\n\r\nexport const getScreenElementClassName = (base: string, props: MenuInpputElementProps) => {\r\n    let className = base;\r\n    if (props.hasFocus) {\r\n        className += \" focused\";\r\n    }\r\n    if (props.disabled) {\r\n        className += \" disabled\";\r\n    }\r\n    return className;\r\n};\r\n\r\nexport const useFocusEffect = (props: Focusable, inputEl: React.RefObject<HTMLElement>) => {\r\n    React.useEffect(() => {\r\n        if (props.hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [props.hasFocus, inputEl]);\r\n};\r\nexport const useInitialFocus = (props: Focusable, inputEl: React.RefObject<HTMLElement>, pos: XY) => {\r\n    React.useEffect(() => {\r\n        if (\r\n            props.autoFocus &&\r\n            !props.hasFocus &&\r\n            inputEl &&\r\n            inputEl.current &&\r\n            inputEl.current !== document.activeElement &&\r\n            pos.x == -1 &&\r\n            pos.y == -1\r\n        ) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [inputEl]);\r\n};\r\n","import StorageManager from \"../../StorageManager\";\r\nimport React from \"react\";\r\nimport { CookieContext, ICookieContext } from \"../../../Context\";\r\nimport { useFocusEffect } from \"./ScreenElement\";\r\nimport { XY } from \"../../XY\";\r\nimport {NavigationContext} from \"../Context\";\r\n\r\ninterface RenderCookieBannerProps extends ICookieContext, XY {}\r\n\r\nconst RenderCookieBanner = (props: RenderCookieBannerProps) => {\r\n    const { navigation } = React.useContext(NavigationContext);\r\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    useFocusEffect({ hasFocus: hasFocus(props.y, props.x) }, inputEl);\r\n    let className = \"cookiebanner\";\r\n    if (hasFocus(props.y, props.x)) {\r\n        className += \" focused\";\r\n    }\r\n    return !props.consented ? (\r\n        <button\r\n            ref={inputEl}\r\n            className={className}\r\n            onClick={() => {\r\n                const storage = new StorageManager();\r\n                const consent = storage.giveConsent();\r\n                if (!props.consented && confirm(consent.prompt)) {\r\n                    consent.confirm();\r\n                    props.setConsented(true);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"icon\">🍪</div>\r\n            <div className=\"message\">\r\n                <b>Changes on this page will be lost after each game</b>, until you allow this app to store data on your machine. Click here\r\n                to give consent.\r\n            </div>\r\n        </button>\r\n    ) : null;\r\n};\r\n\r\nconst CookieBanner = (props: { x?: number; y?: number }) => {\r\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\r\n        return null;\r\n    }\r\n    const { consented, setConsented } = React.useContext(CookieContext);\r\n    return <RenderCookieBanner x={props.x} y={props.y} consented={consented} setConsented={setConsented} />;\r\n};\r\n\r\nexport default CookieBanner;\r\n","import React from \"react\";\r\nimport { ScreenNavigator } from \"./ScreenNavigator\";\r\n\r\nconst Row = (props: { skip?: boolean; y?: number; navigator?: ScreenNavigator; children?: any[] | any | undefined }) => {\r\n    if (typeof props.y == \"undefined\" || typeof props.navigator == \"undefined\") {\r\n        return null;\r\n    }\r\n    const addElement = (child: any, index: number) => {\r\n        if (!child) return null;\r\n        const assign = (n: any[]) => {\r\n            n[props.y || 0].buttons[index || 0] = { x: index, y: props.y };\r\n        };\r\n        if (!props.skip) {\r\n            assign(props.navigator?.rows || []);\r\n        }\r\n        return React.cloneElement(child, { key: index, x: index, y: props.y });\r\n    };\r\n    return !props.children ? null : (\r\n        <div className=\"row\">{Array.isArray(props.children) ? props.children.map(addElement) : addElement(props.children, 0)}</div>\r\n    );\r\n};\r\nexport default Row;\r\n","import { XY } from \"../../XY\";\r\nimport { NavHandler } from \"../../NavHandler\";\r\n\r\nexport class ScreenNavigator implements NavHandler {\r\n    rows: any[];\r\n    constructor() {\r\n        this.rows = [];\r\n    }\r\n    getRows = () => this.rows;\r\n    getRow = (x: number) => this.getRows()[x];\r\n    goToRow = (pos: XY) => {\r\n        const rows = this.getRows();\r\n        const row = rows[pos.y];\r\n        if (row.buttons.length - 1 < pos.x) {\r\n            return { ...pos, x: row.buttons.length - 1 };\r\n        }\r\n\r\n        return pos;\r\n    };\r\n    moveUp: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const rows = this.getRows();\r\n        if (y == 0) {\r\n            return this.goToRow({ x: x, y: rows.length - 1 });\r\n        }\r\n        return this.goToRow({ x: x, y: y - 1 });\r\n    };\r\n    moveDown: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const rows = this.getRows();\r\n        if (y == rows.length - 1) {\r\n            return this.goToRow({ x: x, y: 0 });\r\n        }\r\n        return this.goToRow({ x: x, y: y + 1 });\r\n    };\r\n    moveLeft: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const row = this.getRow(y);\r\n        if (x == 0) {\r\n            return { x: row.buttons.length - 1, y: y };\r\n        }\r\n        return { x: x - 1, y: y };\r\n    };\r\n    moveRight: (x: number, y: number) => XY = (x: number, y: number) => {\r\n        const row = this.getRow(y);\r\n        if (x == row.buttons.length - 1) {\r\n            return { x: 0, y: y };\r\n        }\r\n        return { x: x + 1, y: y };\r\n    };\r\n    action: (xy: XY) => void = () => {\r\n        const activeElement: any = document.activeElement;\r\n        activeElement && activeElement.click();\r\n    };\r\n}\r\n\r\n\r\n","import NavWrapper from \"./NavWrapper\";\r\nimport React from \"react\";\r\nimport { ScreenNavigator } from \"./ScreenNavigator\";\r\n\r\nconst ScreenContent = (props: { id: string; children: any[] }) => {\r\n    const navigator = new ScreenNavigator();\r\n    let _index = -1;\r\n    let _i = -1;\r\n    const addRow = (child: any) => {\r\n        _i++;\r\n        if (!child.props.skip) {\r\n            _index++;\r\n            navigator.rows[_index] = { buttons: [] };\r\n        }\r\n        return React.cloneElement(child, { key: _i, x: 0, y: _index, navigator: navigator });\r\n    };\r\n    return (\r\n        <div className=\"content\">\r\n            {props.children.map((child) => addRow(child))}\r\n            <NavWrapper navigator={navigator} screen=\"rating\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScreenContent;\r\n","import { NavigationContext } from \"../Context\";\r\nimport React from \"react\";\r\nimport { XY } from \"../../XY\";\r\n\r\ninterface ScreenMainButtonProps {\r\n    x?: number;\r\n    y?: number;\r\n    id: number;\r\n    icon: string;\r\n    className: (pos: XY) => string;\r\n    lines: string[];\r\n    onClick: () => void;\r\n    autoFocus: boolean;\r\n    disabled?: boolean;\r\n}\r\nconst ScreenMainButton = (props: ScreenMainButtonProps) => {\r\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\r\n        return null;\r\n    }\r\n\r\n    const pos = { x: props.x, y: props.y };\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n    const hasFocus = navigation.focus == \"screen\" && navigation.screen.x == props.x && navigation.screen.y == props.y;\r\n    React.useEffect(() => {\r\n        if (hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [inputEl, hasFocus]);\r\n\r\n    React.useEffect(() => {\r\n        if (\r\n            props.autoFocus &&\r\n            !hasFocus &&\r\n            inputEl &&\r\n            inputEl.current &&\r\n            inputEl.current !== document.activeElement &&\r\n            navigation.screen.x == -1 &&\r\n            navigation.screen.y == -1\r\n        ) {\r\n            inputEl.current.focus();\r\n        }\r\n    }, [inputEl]);\r\n    const focus = () => {\r\n        if (!hasFocus) {\r\n            setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\r\n        }\r\n    };\r\n    const click = () => {\r\n        props.onClick();\r\n        setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\r\n    };\r\n    return (\r\n        <button\r\n            onFocus={focus}\r\n            ref={inputEl}\r\n            key={props.id}\r\n            disabled={props.disabled}\r\n            className={props.className(pos)}\r\n            onClick={click}\r\n        >\r\n            {props.icon}\r\n            {props.lines.map((line: string, index: number) => (\r\n                <div key={index}>{line}</div>\r\n            ))}\r\n        </button>\r\n    );\r\n};\r\n\r\n\r\nexport default ScreenMainButton;\r\n","import { ControlPresets, IControlPreset } from \"../ControlsPresets\";\r\nimport StartScreenContext, { NavigationContext } from \"../Context\";\r\n\r\nimport CloseButton from \"./CloseButton\";\r\nimport CookieBanner from \"./CookieBanner\";\r\nimport { CookieContext } from \"../../../Context\";\r\nimport GamePad from \"../../../Game/GamePad\";\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport ScreenContent from \"./ScreenContent\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\nimport { XY } from \"../../XY\";\r\n\r\nconst Controls = (props: { player: number }) => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const { navigation } = React.useContext(NavigationContext);\r\n\r\n    const player = state.players[props.player];\r\n\r\n    if (!player) {\r\n        return null;\r\n    }\r\n\r\n    const [pads, setPads] = React.useState([\r\n        {\r\n            found: false,\r\n            buttonPressed: false,\r\n        },\r\n        {\r\n            found: false,\r\n            buttonPressed: false,\r\n        },\r\n    ]);\r\n\r\n    const connect = (i: number) => {\r\n        pads[i].found = true;\r\n        setPads({ ...pads });\r\n    };\r\n\r\n    const press = (i: number) => {\r\n        pads[i].found = true;\r\n        pads[i].buttonPressed = true;\r\n        setPads({ ...pads });\r\n        console.log(pads);\r\n    };\r\n\r\n    const { consented } = React.useContext(CookieContext);\r\n\r\n    const playerHasSettings = (id: number, playerId: number) =>\r\n        state.players[playerId].inputLayout == ControlPresets[id].inputLayout &&\r\n        state.players[playerId].inputMethod == ControlPresets[id].inputMethod;\r\n\r\n    const isActive = (id: number) => playerHasSettings(id, props.player);\r\n\r\n    const applyPreset = (id: number) => {\r\n        const nextPlayer = { ...state.players };\r\n        nextPlayer[props.player].inputMethod = ControlPresets[id].inputMethod;\r\n        nextPlayer[props.player].inputLayout = ControlPresets[id].inputLayout;\r\n        setState({ ...state, players: nextPlayer });\r\n    };\r\n\r\n    const getButtonClass = (id: number, x: number, y: number) => {\r\n        let className = x + \"\" + y + \" \" + navigation.screen.x + \"\" + navigation.screen.y + \" \";\r\n        className += navigation.screen.x == x && navigation.screen.y == y ? \" focused\" : \"\";\r\n        className += isActive(id) ? \" active-0\" : \" inactive-0\";\r\n        className += blockedByOtherPlayers(id) ? \" disabled\" : \"\";\r\n        return className;\r\n    };\r\n\r\n    const blockedByOtherPlayers = (id: number) => {\r\n        const otherPlayers = [0, 1].filter((p) => p !== props.player);\r\n        return playerHasSettings(id, otherPlayers[0]);\r\n    };\r\n\r\n    const getLines = (preset: IControlPreset) => {\r\n        if (preset.inputMethod == \"gamepad\") {\r\n            return [...preset.lines, pads[preset.inputLayout].found || pads[preset.inputLayout].buttonPressed ? \"Connected\" : \"Not Found\"];\r\n        }\r\n        return preset.lines;\r\n    };\r\n\r\n    return (\r\n        <div className=\"controls startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">{player.name}</div>\r\n            <ScreenContent id=\"settings\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    {ControlPresets.slice(0, 3).map((preset) => (\r\n                        <ScreenMainButton\r\n                            key={preset.id}\r\n                            icon={preset.icon}\r\n                            id={preset.id}\r\n                            disabled={blockedByOtherPlayers(preset.id)}\r\n                            autoFocus={isActive(preset.id)}\r\n                            className={(pos: XY) => getButtonClass(preset.id, pos.x, pos.y)}\r\n                            onClick={() => applyPreset(preset.id)}\r\n                            lines={getLines(preset)}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    {ControlPresets.slice(3).map((preset) => (\r\n                        <ScreenMainButton\r\n                            key={preset.id}\r\n                            icon={preset.icon}\r\n                            id={preset.id}\r\n                            disabled={blockedByOtherPlayers(preset.id)}\r\n                            autoFocus={isActive(preset.id)}\r\n                            className={(pos: XY) => getButtonClass(preset.id, pos.x, pos.y)}\r\n                            onClick={() => applyPreset(preset.id)}\r\n                            lines={preset.lines}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row skip={true}>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">@todo</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\r\n                    </div>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">@todo</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\r\n                    </div>\r\n                </Row>\r\n            </ScreenContent>\r\n            <GamePad\r\n                gamepadIndex={0}\r\n                onConnect={() => connect(0)}\r\n                onUp={() => press(0)}\r\n                onDown={() => press(0)}\r\n                onRight={() => press(0)}\r\n                onLeft={() => press(0)}\r\n                onAction={() => press(0)}\r\n            />\r\n            <GamePad\r\n                gamepadIndex={1}\r\n                onConnect={() => connect(1)}\r\n                onUp={() => press(1)}\r\n                onDown={() => press(1)}\r\n                onRight={() => press(1)}\r\n                onLeft={() => press(1)}\r\n                onAction={() => press(1)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Controls;\r\n","import DifficultyOptions, { DifficultyOption } from \"../DifficultyOptions\";\r\nimport StartScreenContext, { NavigationContext } from \"../Context\";\r\n\r\nimport CloseButton from \"./CloseButton\";\r\nimport CookieBanner from \"./CookieBanner\";\r\nimport { CookieContext } from \"../../../Context\";\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport ScreenContent from \"./ScreenContent\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\n\r\nconst Difficulty = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const { navigation } = React.useContext(NavigationContext);\r\n\r\n    const isActive = (id: number) => state.difficultySettings == id;\r\n    \r\n    const getButtonClass = (index: number, y: number, x: number) => {\r\n        const hasFocus = navigation.screen.x == x && navigation.screen.y == y;\r\n        let name = isActive(index) ? `active active-${index}` : `inactive-${index}`;\r\n        name += hasFocus ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    const renderButton = (button: DifficultyOption) => (\r\n        <ScreenMainButton\r\n            key={button.id}\r\n            icon={button.icon}\r\n            id={button.id}\r\n            autoFocus={isActive(button.id)}\r\n            className={(pos) => getButtonClass(button.id, pos.y, pos.x)}\r\n            onClick={() => setState({ ...state, difficultySettings: button.id })}\r\n            lines={button.lines}\r\n        />\r\n    );\r\n\r\n    const { consented } = React.useContext(CookieContext);\r\n\r\n    return (\r\n        <div className=\"difficulty startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Difficulty</div>\r\n            <ScreenContent id=\"difficulty\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>{DifficultyOptions.slice(0, 3).map(renderButton)}</Row>\r\n                <Row>{DifficultyOptions.slice(3).map(renderButton)}</Row>\r\n                <Row skip={true}>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">Draw Mode</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">\r\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode == \"triple\"\r\n                                ? \"Turn 3 cards at once from the Stock to the Waste.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode == \"single\"\r\n                                ? \"Turn 1 card after the other from the Stock to the Waste.\"\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"togglecontainer\">\r\n                        <div className=\"title\">Pass Limit</div>\r\n                        <div className=\"toggle\"></div>\r\n                        <div className=\"description\">\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"1-pass\"\r\n                                ? \"One pass through the deck. Waste can not be recycled to the Stock.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"3-pass\"\r\n                                ? \"Three passes through the deck. Waste can be recycled to Stock two times.\"\r\n                                : null}\r\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"infinite\"\r\n                                ? \"No limit on passes through the deck. Waste can be recycled to Stock endlessly.\"\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Difficulty;\r\n","import React from \"react\";\r\nimport { NavigationContext } from \"../Context\";\r\nimport { getScreenElementClassName, useFocusEffect } from \"./ScreenElement\";\r\n\r\nexport type SelectItem = {\r\n    label: string;\r\n    id: string | number;\r\n};\r\n\r\ninterface StaticSelectProps {\r\n    disabled?: boolean;\r\n    value: number;\r\n    values: SelectItem[];\r\n    label: string;\r\n    description: string;\r\n    callBack: (s: string) => void;\r\n}\r\n\r\ninterface SelectProps extends StaticSelectProps {\r\n    x: number;\r\n    y: number;\r\n    hasFocus: boolean;\r\n}\r\n\r\ninterface _ScreenSelectProps extends StaticSelectProps {\r\n    x?: number;\r\n    y?: number;\r\n}\r\n\r\nconst _ScreenSelect = (props: SelectProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    useFocusEffect(props, inputEl);\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n\r\n    return (\r\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\r\n            <div className=\"title\">\r\n                {props.label}: {props.values[props.value].label}\r\n            </div>\r\n            <div className=\"button\">\r\n                <button\r\n                    ref={inputEl}\r\n                    onClick={() => {\r\n                        props.callBack((props.value + 1 < props.values.length ? props.value + 1 : 0).toString());\r\n                        setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\r\n                    }}\r\n                    disabled={!!props.disabled}\r\n                    onFocus={() => {\r\n                        if (!props.hasFocus) {\r\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\r\n                        }\r\n                    }}\r\n                >\r\n                    🔁\r\n                </button>\r\n            </div>\r\n            <div className=\"description\">{props.description}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ScreenSelect = (props: _ScreenSelectProps) => {\r\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\r\n        return null;\r\n    }\r\n    const { navigation } = React.useContext(NavigationContext);\r\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\r\n    const pos = { x: props.x || 0, y: props.y || 0 };\r\n    return (\r\n        <_ScreenSelect\r\n            x={pos.x}\r\n            y={pos.y}\r\n            disabled={!!props.disabled}\r\n            hasFocus={hasFocus(pos.y, pos.x)}\r\n            label={props.label}\r\n            description={props.description}\r\n            value={props.value}\r\n            values={props.values}\r\n            callBack={props.callBack}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ScreenSelect;\r\n","import \"../../../Style/react-toggle.css\";\r\n\r\nimport { getScreenElementClassName, useFocusEffect, useInitialFocus } from \"./ScreenElement\";\r\n\r\nimport { NavigationContext } from \"../Context\";\r\nimport React from \"react\";\r\nimport Toggle from \"react-toggle\";\r\nimport { XY } from \"../../XY\";\r\n\r\ninterface StaticScreenToggleProps {\r\n    value: boolean;\r\n    label: string;\r\n    description: string;\r\n    disabled?: boolean;\r\n    callBack: (s: boolean) => void;\r\n    autoFocus?: boolean;\r\n}\r\n\r\ninterface ToggleProps extends StaticScreenToggleProps {\r\n    x: number;\r\n    y: number;\r\n    hasFocus: boolean;\r\n}\r\n\r\ninterface _ScreenToggleProps extends StaticScreenToggleProps {\r\n    x?: number;\r\n    y?: number;\r\n}\r\n\r\nconst _ScreenToggle = (props: ToggleProps) => {\r\n    const inputEl = React.useRef<HTMLButtonElement>(null);\r\n    useFocusEffect(props, inputEl);\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n    const change = (val: boolean, pos: XY) => {\r\n        setNavigation({ ...navigation, screen: pos });\r\n        props.callBack(val);\r\n    };\r\n    useInitialFocus(props, inputEl, navigation.screen);\r\n    return (\r\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\r\n            <div className=\"title\">{props.label}</div>\r\n            <div className=\"toggle\">\r\n                <Toggle\r\n                    ref={inputEl}\r\n                    disabled={!!props.disabled}\r\n                    autoFocus={props.hasFocus}\r\n                    onFocus={() => {\r\n                        if (!props.hasFocus) {\r\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\r\n                        }\r\n                    }}\r\n                    checked={props.value}\r\n                    onChange={() => change(!props.value, { x: props.x, y: props.y })}\r\n                />\r\n            </div>\r\n            <div className=\"description\">{props.description}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ScreenToggle = (props: _ScreenToggleProps) => {\r\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\r\n        return null;\r\n    }\r\n    const { navigation } = React.useContext(NavigationContext);\r\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\r\n    const pos = { x: props.x || 0, y: props.y || 0 };\r\n    return (\r\n        <_ScreenToggle\r\n            x={pos.x}\r\n            y={pos.y}\r\n            disabled={!!props.disabled}\r\n            hasFocus={hasFocus(pos.y, pos.x)}\r\n            label={props.label}\r\n            description={props.description}\r\n            value={props.value}\r\n            callBack={props.callBack}\r\n            autoFocus={props.autoFocus}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ScreenToggle;\r\n","import StartScreenContext, { NavigationContext, StartScreenState } from \"../Context\";\r\n\r\nimport CloseButton from \"./CloseButton\";\r\nimport CookieBanner from \"./CookieBanner\";\r\nimport { CookieContext } from \"../../../Context\";\r\nimport EntropyLevels from \"../../../../Model/Game/Settings/EntropyLevels\";\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport ScreenContent from \"./ScreenContent\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\nimport ScreenSelect from \"./ScreenSelect\";\r\nimport ScreenToggle from \"./ScreenToggle\";\r\n\r\ninterface OptimizeOption {\r\n    entropy: number;\r\n    quickDeal: boolean;\r\n    lines: string[];\r\n    icon: string;\r\n}\r\n\r\nconst optimizeOptions: (state: StartScreenState) => OptimizeOption[] = (state: StartScreenState) => [\r\n    {\r\n        entropy: 2,\r\n        quickDeal: false,\r\n        lines: [(!state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Desktop\"],\r\n        icon: \"🖥️\",\r\n    },\r\n    {\r\n        entropy: 1,\r\n        quickDeal: true,\r\n        lines: [(state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Mobile\"],\r\n        icon: \"📱\",\r\n    },\r\n];\r\n\r\nconst QuickStart = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const { navigation } = React.useContext(NavigationContext);\r\n    const { consented } = React.useContext(CookieContext);\r\n\r\n    const isActive = (val: boolean) => state.quickDeal == val;\r\n\r\n    const setBaseEntropy = (value: string) =>\r\n        setState({ ...state, entropySettings: { ...state.entropySettings, baseEntropy: parseInt(value) } });\r\n\r\n    const setInteractionEntropy = (value: string) =>\r\n        setState({ ...state, entropySettings: { ...state.entropySettings, interactionEntropy: parseInt(value) } });\r\n\r\n    const setQuickDeal = (value: boolean) => setState({ ...state, quickDeal: value });\r\n\r\n    const getClassName = (button: OptimizeOption, y: number, x: number) => {\r\n        const hasFocus = navigation.screen.x == x && navigation.screen.y == y;\r\n        let name = isActive(button.quickDeal) ? \"active active-0\" : \"inactive-0\";\r\n        name += hasFocus ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    return (\r\n        <div className=\"quickstart startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Various</div>\r\n            <ScreenContent id=\"settings\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    {optimizeOptions(state).map((button, i) => (\r\n                        <ScreenMainButton\r\n                            key={i}\r\n                            icon={button.icon}\r\n                            id={i}\r\n                            autoFocus={isActive(button.quickDeal)}\r\n                            className={(pos) => getClassName(button, pos.x, pos.y)}\r\n                            lines={button.lines}\r\n                            onClick={() =>\r\n                                setState({\r\n                                    ...state,\r\n                                    quickDeal: button.quickDeal,\r\n                                    entropySettings: {\r\n                                        baseEntropy: button.entropy,\r\n                                        interactionEntropy: button.entropy,\r\n                                    },\r\n                                })\r\n                            }\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    <ScreenSelect\r\n                        label=\"Base Entropy\"\r\n                        description=\"How much chaos will the stacks on the board contain by themselves?\"\r\n                        value={state.entropySettings.baseEntropy || 0}\r\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\r\n                        callBack={setBaseEntropy}\r\n                    />\r\n                    <ScreenSelect\r\n                        label=\"Interaction Entropy\"\r\n                        description=\"How much chaos will each interaction add to a stack on the board?\"\r\n                        value={state.entropySettings.interactionEntropy || 0}\r\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\r\n                        callBack={setInteractionEntropy}\r\n                    />\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                        label=\"Instant Deal\"\r\n                        description=\"Should the deal animation at the beginning of the game be skipped?\"\r\n                        value={state.quickDeal}\r\n                        callBack={setQuickDeal}\r\n                    />\r\n                    <ScreenToggle\r\n                        disabled={true}\r\n                        label=\"Auto Deal\"\r\n                        description=\"Should the game draw one card from the stock every 5 seconds?\"\r\n                        value={false}\r\n                        callBack={() => {}}\r\n                    />\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\nexport default QuickStart;\r\n","import StartScreenContext, { NavigationContext, StartScreenState } from \"../Context\";\r\n\r\nimport CloseButton from \"./CloseButton\";\r\nimport CookieBanner from \"./CookieBanner\";\r\nimport { CookieContext } from \"../../../Context\";\r\nimport RatingPresets from \"../RatingOptions\";\r\nimport { RatingSettings } from \"../../../../Common\";\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport ScreenContent from \"./ScreenContent\";\r\nimport ScreenMainButton from \"./ScreenMainButton\";\r\nimport ScreenToggle from \"./ScreenToggle\";\r\nimport SuggestionModes from \"../../../../Model/Game/Settings/SuggestionModes\";\r\nimport { XY } from \"../../XY\";\r\n\r\nconst Rating = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const { navigation } = React.useContext(NavigationContext);\r\n    const applyPreset = (id: number) => {\r\n        const next = { ...state };\r\n        RatingPresets.ALL[id].apply(next);\r\n        setState(next);\r\n    };\r\n\r\n    const isActive = (id: number) => state.ratingPreset == id;\r\n\r\n    const getButtonClass = (id: number, y: number, x: number) => {\r\n        let name = isActive(id) ? `active active-${id}` : `inactive-${id}`;\r\n        name += navigation.screen.x == x && navigation.screen.y == y ? \" focused\" : \"\";\r\n        return name;\r\n    };\r\n\r\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\r\n        const next = { ...state };\r\n        modifier(next.ratingSettings);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setState(next);\r\n    };\r\n    const customizeRating2 = (ratingModifier: (context: RatingSettings) => void, modifier: (context: StartScreenState) => void) => {\r\n        const next = { ...state };\r\n        ratingModifier(next.ratingSettings);\r\n        modifier(next);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setState(next);\r\n    };\r\n\r\n    const setMissPenalty = (value: boolean) =>\r\n        customizeRating((r) => {\r\n            r.missPenalty = value;\r\n        });\r\n\r\n    const setTimeRating = (value: boolean) =>\r\n        customizeRating((r) => {\r\n            r.timedMode = value;\r\n        });\r\n\r\n    const setUndoPenalty = (value: boolean) =>\r\n        customizeRating((r) => {\r\n            r.undoPenalty = value;\r\n        });\r\n\r\n    const setHintPenalty = (value: boolean) => {\r\n        customizeRating2(\r\n            (r) => {\r\n                r.hintPenalty = value;\r\n            },\r\n            (s) => {\r\n                s.suggestionMode = value ? SuggestionModes.NONE : SuggestionModes.REGULAR;\r\n            }\r\n        );\r\n    };\r\n\r\n    const { consented } = React.useContext(CookieContext);\r\n\r\n    return (\r\n        <div className=\"rating startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Penalties</div>\r\n            <ScreenContent id=\"penalties\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    {RatingPresets.ALL.map((preset) => (\r\n                        <ScreenMainButton\r\n                            key={preset.id}\r\n                            icon={preset.icon}\r\n                            id={preset.id}\r\n                            autoFocus={isActive(preset.id) || (state.ratingPreset == -1 && preset.id == 0)}\r\n                            className={(pos: XY) => getButtonClass(preset.id, pos.y, pos.x)}\r\n                            onClick={() => applyPreset(preset.id)}\r\n                            lines={[preset.label]}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                        label=\"Undo Penalty\"\r\n                        description=\"Undo is enabled, but excessive use will be painful. This penalty starts with 2 and increases exponentially.\"\r\n                        value={!!state.ratingSettings.undoPenalty}\r\n                        callBack={setUndoPenalty}\r\n                    />\r\n                    <ScreenToggle\r\n                        label=\"Time Penalty\"\r\n                        description=\"Fast players are rewarded with a time bonus, slow players will be punished.\"\r\n                        value={!!state.ratingSettings.timedMode}\r\n                        callBack={setTimeRating}\r\n                    />\r\n                </Row>\r\n                <Row>\r\n                    <ScreenToggle\r\n                        label=\"Hint Penalty\"\r\n                        description=\"Each manual hint will reduce the number of points by 10. This setting disables automatic suggestions. \"\r\n                        value={!!state.ratingSettings.hintPenalty}\r\n                        callBack={setHintPenalty}\r\n                    />\r\n                    <ScreenToggle\r\n                        label=\"Miss Penalty\"\r\n                        description=\"Be careful where you click, as each invalid action will lead to a penalty of 10 points.\"\r\n                        value={!!state.ratingSettings.missPenalty}\r\n                        callBack={setMissPenalty}\r\n                    />\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","import CloseButton from \"./CloseButton\";\r\nimport CookieBanner from \"./CookieBanner\";\r\nimport { CookieContext } from \"../../../Context\";\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport ScreenContent from \"./ScreenContent\";\r\nimport ScreenToggle from \"./ScreenToggle\";\r\nimport StartScreenContext from \"../Context\";\r\nimport SuggestionModes from \"../../../../Model/Game/Settings/SuggestionModes\";\r\n\r\nconst Suggestions = () => {\r\n    const { consented } = React.useContext(CookieContext);\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n\r\n    const suggestionModes = SuggestionModes.allSuggestionModes();\r\n\r\n    const isActive = (id: string) => state.suggestionMode == id;\r\n\r\n    const isDisabled = (id: string) => id !== SuggestionModes.NONE && state.ratingSettings.hintPenalty;\r\n\r\n    return (\r\n        <div className=\"suggestions startdetails\">\r\n            <CloseButton />\r\n            <div className=\"title\">Suggestions</div>\r\n            <ScreenContent id=\"settings\">\r\n                <Row skip={consented}>\r\n                    <CookieBanner />\r\n                </Row>\r\n                <Row>\r\n                    {suggestionModes.slice(0, 2).map((mode, index) => (\r\n                        <ScreenToggle\r\n                            value={isActive(mode.key)}\r\n                            disabled={isDisabled(mode.key)}\r\n                            label={mode.icon + \" \" + mode.label}\r\n                            callBack={() => setState({ ...state, suggestionMode: mode.key })}\r\n                            description={mode.description}\r\n                            key={index}\r\n                            autoFocus={isActive(mode.key)}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    {suggestionModes.slice(2).map((mode, index) => (\r\n                        <ScreenToggle\r\n                            value={isActive(mode.key)}\r\n                            disabled={isDisabled(mode.key)}\r\n                            label={mode.icon + \" \" + mode.label}\r\n                            callBack={() => setState({ ...state, suggestionMode: mode.key })}\r\n                            description={mode.description}\r\n                            key={index}\r\n                            autoFocus={isActive(mode.key)}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n            </ScreenContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Suggestions;\r\n","import Controls from \"./Controls\";\r\nimport Difficulty from \"./Difficulty\";\r\nimport { NavigationContext } from \"../Context\";\r\nimport QuickStart from \"./QuickStart\";\r\nimport Rating from \"./Rating\";\r\nimport React from \"react\";\r\nimport ScreenContext from \"./Context\";\r\nimport Suggestions from \"./Suggestions\";\r\n\r\nconst Screen = (props: { screen: string }) => {\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n    const closeScreen = () =>\r\n        setNavigation({\r\n            ...navigation,\r\n            focus: \"menu\",\r\n            screeen: \"\",\r\n            mainMenu: navigation.mainMenu,\r\n            menu: { ...navigation.menu },\r\n        });\r\n\r\n    return (\r\n        <ScreenContext.Provider value={{ closeScreen: () => closeScreen() }}>\r\n            <div className=\"startscreen-layout\">\r\n                <div className=\"startscreen-jail\">\r\n                    {props.screen == \"rating\" ? <Rating /> : null}\r\n                    {props.screen == \"difficulty\" ? <Difficulty /> : null}\r\n                    {props.screen == \"settings\" ? <QuickStart /> : null}\r\n                    {props.screen == \"suggestions\" ? <Suggestions /> : null}\r\n                    {props.screen == \"controls0\" ? <Controls player={0} /> : null}\r\n                    {props.screen == \"controls1\" ? <Controls player={1} /> : null}\r\n                </div>\r\n            </div>\r\n        </ScreenContext.Provider>\r\n    );\r\n};\r\n\r\nexport default Screen;\r\n","import React from \"react\";\r\n\r\nconst VerticalMenu = (props: any) => {\r\n    return (\r\n        <div className=\"ui menu\">\r\n            <div className=\"startscreen-jail\">\r\n                <div className=\"innermenu\">{props.children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default VerticalMenu;\r\n","import { CookieContext } from \"../../../Context\";\r\nimport GameModes from \"../../../../GameModes\";\r\nimport MenuButton from \"./MenuButton\";\r\nimport MenuTitle from \"./MenuTitle\";\r\nimport MenuTree from \"./MenuTree\";\r\nimport { NavigationContext } from \"../Context\";\r\nimport React from \"react\";\r\nimport StorageManager from \"../../StorageManager\";\r\nimport { Universal } from \"../../../Game/KeyboardLayouts\";\r\nimport VerticalMenu from \"./VerticalMenu\";\r\nimport { XY } from \"../../XY\";\r\n\r\nconst StartMenu = (props: { start: (boardMode: string) => void }) => {\r\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\r\n    const { consented, setConsented } = React.useContext(CookieContext);\r\n\r\n    const switchToScreen = (s: string, pos: XY) =>\r\n        setNavigation({\r\n            ...navigation,\r\n            focus: \"screen\",\r\n            screeen: s,\r\n            screen: { x: -1, y: -1 },\r\n            menu: { ...pos },\r\n        });\r\n\r\n    const switchToMenu = (menu: string, pos: XY) =>\r\n        setNavigation({\r\n            ...navigation,\r\n            focus: \"menu\",\r\n            screeen: \"\",\r\n            mainMenu: menu,\r\n            menu: { ...pos },\r\n        });\r\n\r\n    //@todo move onfocus inside components\r\n    const onfocus = (pos: XY) => setNavigation({ ...navigation, menu: pos });\r\n\r\n    const toggleScreen = (s: string, pos: XY) => {\r\n        if (navigation.screeen !== s) {\r\n            switchToScreen(s, pos);\r\n        } else {\r\n            switchToMenu(navigation.mainMenu, pos);\r\n        }\r\n    };\r\n\r\n    const toggleMainMenu = (val: string, pos: XY) => switchToMenu(navigation.mainMenu !== val ? val : \"\", pos);\r\n\r\n    const storage = new StorageManager();\r\n\r\n    return (\r\n        <VerticalMenu>\r\n            <MenuTitle label=\"♦ Solitaire\" />\r\n\r\n            <MenuTree keyboardLayout={Universal}>\r\n                <MenuButton icon=\"🎲\" title=\"Single Player\" onClick={() => props.start(GameModes.CUSTOM.boardMode)} onFocus={onfocus} />\r\n                <MenuButton\r\n                    icon=\"⚔️\"\r\n                    title=\"Versus\"\r\n                    onClick={(pos: XY) => toggleMainMenu(\"versus\", pos)}\r\n                    onFocus={onfocus}\r\n                    toggled={navigation.mainMenu == \"versus\"}\r\n                >\r\n                    <MenuButton\r\n                        icon=\"🎮\"\r\n                        title=\"Player 1\"\r\n                        onClick={(pos: XY) => toggleScreen(\"controls0\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"controls0\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon=\"🎮\"\r\n                        title=\"Player 2\"\r\n                        onClick={(pos: XY) => toggleScreen(\"controls1\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"controls1\"}\r\n                    />\r\n                    <MenuButton icon=\"🎲\" title=\"Start\" onClick={() => props.start(GameModes.VERSUS.boardMode)} onFocus={onfocus} />\r\n                </MenuButton>\r\n                <MenuButton\r\n                    icon=\"⚙️\"\r\n                    title=\"Options\"\r\n                    onClick={(pos: XY) => toggleMainMenu(\"custom\", pos)}\r\n                    onFocus={onfocus}\r\n                    toggled={navigation.mainMenu == \"custom\"}\r\n                >\r\n                    <MenuButton\r\n                        icon=\"💪\"\r\n                        title=\"Difficulty\"\r\n                        onClick={(pos: XY) => toggleScreen(\"difficulty\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"difficulty\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon=\"⚖️\"\r\n                        title=\"Penalties\"\r\n                        onClick={(pos: XY) => toggleScreen(\"rating\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"rating\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon=\"💡\"\r\n                        title=\"Suggestions\"\r\n                        onClick={(pos: XY) => toggleScreen(\"suggestions\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"suggestions\"}\r\n                    />\r\n                    <MenuButton\r\n                        icon=\"🧰\"\r\n                        title=\"Various\"\r\n                        onClick={(pos: XY) => toggleScreen(\"settings\", pos)}\r\n                        onFocus={onfocus}\r\n                        toggled={navigation.screeen == \"settings\"}\r\n                    />\r\n                </MenuButton>\r\n                <MenuButton\r\n                    icon=\"🍪\"\r\n                    title={consented ? \"Delete Cookie\" : \"Allow Cookie\"}\r\n                    onClick={\r\n                        consented\r\n                            ? () => {\r\n                                  const revoke = storage.revokeConsent();\r\n                                  if (confirm(revoke.prompt)) {\r\n                                      revoke.confirm();\r\n                                      setConsented(false);\r\n                                  }\r\n                              }\r\n                            : () => {\r\n                                  const consent = storage.giveConsent();\r\n                                  if (confirm(consent.prompt)) {\r\n                                      consent.confirm();\r\n                                      setConsented(true);\r\n                                  }\r\n                              }\r\n                    }\r\n                    onFocus={onfocus}\r\n                    toggled={false}\r\n                />\r\n            </MenuTree>\r\n        </VerticalMenu>\r\n    );\r\n};\r\nexport default StartMenu;\r\n","import { NavigationProvider, NavigationState, Provider, StartScreenState, defaultStartScreenState } from \"./Context\";\r\n\r\nimport { CookieContextProvider } from \"../../Context\";\r\nimport DifficultyOptions from \"./DifficultyOptions\";\r\nimport { LaunchSettings } from \"../../../Common\";\r\nimport React from \"react\";\r\nimport Screen from \"./Screens/Screen\";\r\nimport StartMenu from \"./Menu/StartMenu\";\r\nimport StorageManager from \"../StorageManager\";\r\n\r\nconst Home = (props: { start: (settings: LaunchSettings) => void }) => {\r\n    const storage = new StorageManager();\r\n    const [consented, setConsented] = React.useState<boolean>(!!storage.hasConsent());\r\n    const previous = storage.getPreviousState();\r\n    const [state, setState] = React.useState<StartScreenState>(previous ? previous : defaultStartScreenState);\r\n    const startPos = { x: 0, y: 0 };\r\n    const [navigation, setNavigation] = React.useState<NavigationState>({\r\n        menu: { ...startPos },\r\n        screen: { ...startPos },\r\n        focus: \"menu\",\r\n        mainMenu: \"\",\r\n        screeen: \"\",\r\n    });\r\n    const startScreenContext = {\r\n        state,\r\n        setState: (s: StartScreenState) => {\r\n            setState(s);\r\n            storage.store(s);\r\n        },\r\n    };\r\n    const navigationContext = {\r\n        navigation,\r\n        setNavigation,\r\n    };\r\n    const cookieContext = {\r\n        consented,\r\n        setConsented,\r\n    };\r\n\r\n    const start = (boardMode: string) => {\r\n        const settings = {\r\n            ...DifficultyOptions[state.difficultySettings].settings,\r\n            ...state.ratingSettings,\r\n            baseEntropy: state.entropySettings.baseEntropy || 0,\r\n            interactionEntropy: state.entropySettings.interactionEntropy || 0,\r\n            players: { ...state.players },\r\n            quickDeal: state.quickDeal,\r\n            boardMode: boardMode,\r\n            initialized: true,\r\n            suggestionMode: state.suggestionMode,\r\n            inputMode: \"\",\r\n        };\r\n        props.start(settings);\r\n    };\r\n\r\n    return (\r\n        <Provider value={startScreenContext}>\r\n            <NavigationProvider value={navigationContext}>\r\n                <CookieContextProvider value={cookieContext}>\r\n                    <StartMenu start={start} />\r\n                    <Screen screen={navigation.screeen} />\r\n                </CookieContextProvider>\r\n            </NavigationProvider>\r\n        </Provider>\r\n    );\r\n};\r\nexport default Home;\r\n","export interface Ratio {\r\n    prefix: string;\r\n    multiplier: number;\r\n}\r\nexport default class Ratios {\r\n    static _16to9: Ratio = {\r\n        prefix: \"16-to-9\",\r\n        multiplier: 1.7778,\r\n    };\r\n    static _4to3: Ratio = {\r\n        prefix: \"4-to-3\",\r\n        multiplier: 1.3333,\r\n    };\r\n}\r\n","import \"./View/Style/App.css\";\r\nimport \"./View/Style/UI.css\";\r\n\r\nimport { LaunchSettings, defaultPlayerSettings } from \"./Common\";\r\n\r\nimport AspectRatio from \"./View/AspectRatio/AspectRatio\";\r\nimport BoardWrap from \"./View/Game/BoardWrap\";\r\nimport Deck from \"./Model/Deck/Deck\";\r\nimport GameModes from \"./GameModes\";\r\nimport Home from \"./View/UI/StartScreen/Home\";\r\nimport { PauseProvider } from \"./View/PauseContext\";\r\nimport Ratios from \"./View/AspectRatio/Ratios\";\r\nimport React from \"react\";\r\nimport SuggestionModes from \"./Model/Game/Settings/SuggestionModes\";\r\n\r\nconst App = () => {\r\n    const [started, setStarted] = React.useState<number>(0);\r\n    const defaultState = {\r\n        boardMode: GameModes.CUSTOM.boardMode,\r\n        inputMode: \"mouse\",\r\n        initialized: false,\r\n        players: defaultPlayerSettings,\r\n        drawMode: \"\",\r\n        recyclingMode: \"\",\r\n        interactionEntropy: 0,\r\n        baseEntropy: 0,\r\n        suggestionMode: SuggestionModes.NONE,\r\n    };\r\n\r\n    const [launchState, setLaunchState] = React.useState<LaunchSettings>(defaultState);\r\n\r\n    const restart = () => {\r\n        setLaunchState(defaultState);\r\n    };\r\n\r\n    const deck = new Deck().shuffle();\r\n    const start = (settings: LaunchSettings) => {\r\n        deck.shuffle();\r\n        setLaunchState({ ...settings });\r\n        setStarted(Date.now());\r\n    };\r\n\r\n    if (launchState?.initialized) {\r\n        let board = null;\r\n        if (launchState.boardMode == \"singleplayer\") {\r\n            board = (\r\n                <AspectRatio ratio={Ratios._4to3}>\r\n                    <div className={\"layout-grid-container singleplayer\"}>\r\n                        <BoardWrap player={0} settings={launchState} restart={restart} deck={deck} />\r\n                    </div>\r\n                </AspectRatio>\r\n            );\r\n        }\r\n        if (launchState.boardMode == \"splitscreen\") {\r\n            board = (\r\n                <div className=\"game-layout-container splitscreen\">\r\n                    <div className={\"layout-grid-container \" + launchState.boardMode}>\r\n                        <BoardWrap\r\n                            player={0}\r\n                            settings={{ ...launchState, inputMode: launchState.players[0].inputMethod }}\r\n                            restart={restart}\r\n                            deck={deck.copy()}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={\"layout-grid-container \" + launchState.boardMode}>\r\n                        <BoardWrap\r\n                            player={1}\r\n                            settings={{ ...launchState, inputMode: launchState.players[1].inputMethod }}\r\n                            restart={restart}\r\n                            deck={deck.copy()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return <PauseProvider started={started}>{board}</PauseProvider>;\r\n    }\r\n\r\n    return (\r\n        <AspectRatio ratio={Ratios._16to9}>\r\n            <Home start={start} />\r\n        </AspectRatio>\r\n    );\r\n};\r\nexport default App;\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}