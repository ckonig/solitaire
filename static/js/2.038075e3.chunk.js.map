{"version":3,"sources":["View/AspectRatio/AspectRatio.tsx","Model/Deck/Deck.js","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/ControlsPresets.ts","View/UI/StartScreen/Screens/Context.ts","View/UI/StartScreen/Screens/CloseButton.tsx","View/UI/StorageManager.ts","View/UI/StartScreen/Screens/ScreenElement.ts","View/UI/StartScreen/Screens/CookieBanner.tsx","View/UI/StartScreen/Screens/Row.tsx","View/UI/StartScreen/Screens/ScreenNavigator.ts","View/UI/StartScreen/Screens/ScreenContent.tsx","View/UI/StartScreen/Screens/ScreenMainButton.tsx","View/UI/StartScreen/Screens/Controls.tsx","View/UI/StartScreen/Screens/Difficulty.tsx","View/UI/StartScreen/Screens/ScreenSelect.tsx","View/UI/StartScreen/Screens/ScreenToggle.tsx","View/UI/StartScreen/Screens/QuickStart.tsx","View/UI/StartScreen/Screens/Rating.tsx","View/UI/StartScreen/Screens/Suggestions.tsx","View/UI/StartScreen/Screens/Screen.tsx","View/UI/StartScreen/Menu/VerticalMenu.tsx","View/UI/StartScreen/Menu/StartMenu.tsx","View/UI/StartScreen/Home.tsx","View/AspectRatio/Ratios.ts","App.tsx","View/Context.ts","View/UI/StartScreen/TouchDetector.js","View/UI/StartScreen/Context.ts","Model/Deck/Card.js","Model/Game/Settings/SuggestionModes.ts","View/PauseContext.tsx","GameModes.tsx","View/Game/KeyboardLayouts.ts","Model/Deck/DeckSize.ts","View/Game/GamePad.js","Common.ts","Model/Deck/Suits.ts","View/UI/StartScreen/RatingOptions.ts","View/UI/StartScreen/Screens/NavWrapper.tsx","View/Game/Keyboard.js","Model/Game/Settings/EntropyLevels.ts","View/UI/StartScreen/Menu/MenuButton.tsx","View/UI/StartScreen/Menu/MenuTitle.tsx","View/UI/StartScreen/Menu/TreeNavigator.ts","View/UI/StartScreen/Menu/MenuTree.tsx"],"names":["AspectRatio","props","state","width","height","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","suffix","ratio","multiplier","className","prefix","children","React","Component","Deck","keys","Object","Suits","cards","DeckSize","map","deckSize","key","Card","flat","reverse","shuffleArray","array","i","length","j","Math","floor","random","result","copyAll","DifficultyOptions","id","settings","drawMode","recyclingMode","icon","lines","ControlPresets","inputMethod","inputLayout","ScreenContext","createContext","closeScreen","CloseButton","useContext","onClick","StorageManager","hasConsent","consent","localStorage","getItem","parseInt","giveConsent","prompt","confirm","setItem","revokeConsent","clear","store","value","JSON","stringify","getPreviousState","parse","getScreenElementClassName","base","hasFocus","disabled","useFocusEffect","inputEl","useEffect","current","document","activeElement","focus","RenderCookieBanner","navigation","NavigationContext","y","x","screen","useRef","consented","ref","setConsented","CookieBanner","CookieContext","Row","navigator","addElement","child","index","skip","rows","buttons","cloneElement","Array","isArray","ScreenNavigator","getRows","getRow","goToRow","pos","row","moveUp","moveDown","moveLeft","moveRight","action","click","ScreenContent","_index","_i","addRow","NavWrapper","ScreenMainButton","setNavigation","autoFocus","onFocus","line","Controls","StartScreenContext","player","players","useState","found","buttonPressed","pads","setPads","connect","press","console","log","playerHasSettings","playerId","isActive","applyPreset","nextPlayer","getButtonClass","blockedByOtherPlayers","otherPlayers","filter","p","getLines","preset","name","slice","GamePad","gamepadIndex","onConnect","onUp","onDown","onRight","onLeft","onAction","Difficulty","difficultySettings","renderButton","button","_ScreenSelect","label","values","callBack","toString","description","ScreenSelect","_ScreenToggle","useInitialFocus","checked","onChange","val","ScreenToggle","optimizeOptions","entropy","quickDeal","QuickStart","getClassName","entropySettings","baseEntropy","interactionEntropy","EntropyLevels","Rating","ratingPreset","customizeRating","modifier","next","ratingSettings","RatingPresets","matchPreset","ALL","apply","undoPenalty","r","timedMode","hintPenalty","ratingModifier","customizeRating2","s","suggestionMode","SuggestionModes","NONE","REGULAR","missPenalty","Suggestions","suggestionModes","allSuggestionModes","isDisabled","mode","Screen","Provider","screeen","mainMenu","menu","VerticalMenu","StartMenu","switchToMenu","onfocus","toggleScreen","switchToScreen","toggleMainMenu","storage","MenuTitle","MenuTree","keyboardLayout","Universal","MenuButton","title","start","GameModes","SINGLEPLAYER","toggled","VERSUS","revoke","Home","previous","defaultStartScreenState","startPos","startScreenContext","navigationContext","cookieContext","boardMode","initialized","inputMode","Ratios","_16to9","_4to3","App","started","setStarted","defaultState","defaultPlayerSettings","launchState","setLaunchState","restart","deck","shuffle","BoardWrap","lazy","board","copy","DelayedSuspense","delay","fallback","Date","now","defaultValue","replaceContext","updateContext","updateGameContext","GlobalContext","CookieContextProvider","TouchDetector","prefixes","split","DocumentTouch","query","join","matchMedia","matches","e","error","NavigationProvider","face","type","isHidden","causeEntropy","lvl","level","randomInt","min","max","entropyStyle","equals","other","source","suggestion","canClick","_p","card","otherCard","orig","SuggestionMode","obj","isTemporary","supportsHints","SCORED","FULL","ONCE","TWICE","raw","get","all","default","getHintMode","defaultPauseState","end","paused","pauses","pauseStartedAt","allowed","pausedBy","showMenu","defaultPauseContext","togglePause","getElapsed","PauseContext","PauseContextProvider","PauseProvider","setPaused","context","isPaused","padleft","msec","reduce","a","b","getElapsedMs","hh","mm","ss","getKeyboardLayout","Wasd","Arrows","NumPad","up","keyCode","down","right","left","cancel","undo","ctrlKey","hint","pause","getFoundationOrder","getTableauOrder","onButtonDown","debug","onCancel","onHint","onUndo","onPause","onMenu","onDisconnect","0","1","heart","color","club","diamond","spade","after","CHILL","COMPETITIVE","filterd","s1","s2","assignState","layout","TreeNavWrapper","Keyboard","navListener","evtobj","event","preventDefault","_MenuButton","menuX","menuY","menuFocus","setClicking","active","isClicking","onMouseDown","TreeNavigator"],"mappings":"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","file":"static/js/2.038075e3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./16to9.css\";\nimport \"./4to3.css\";\nimport \"./aspectratio.css\";\nimport { Ratio } from \"./Ratios\";\n\nexport default class AspectRatio extends React.Component<{ ratio: Ratio }, { width: number; height: number }> {\n    constructor(props: any) {\n        super(props);\n        this.state = { width: 0, height: 0 };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    render() {\n        const suffix = this.state.width >= this.state.height * this.props.ratio.multiplier ? \"landscape\" : \"portrait\";\n        return (\n            <div className=\"appwrapper\">\n                <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix}>\n                    <div className={`appwrapper-${this.props.ratio.prefix}-` + suffix + \"-inner\"}>\n                        <div className=\"appwrapper-jail\">{this.props.children}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import Card from \"./Card\";\nimport { DeckSize } from \"./DeckSize\";\nimport Suits from \"./Suits\";\n\nexport default class Deck {\n    constructor() {\n        const keys = Object.keys(Suits);\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\n            .flat()\n            .reverse();\n    }\n\n    shuffle() {\n        this.shuffleArray(this.cards);\n        return this;\n    }\n\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n    shuffleArray(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    copy() {\n        const result = new Deck();\n        result.cards = Card.copyAll(this.cards);\n        return result;\n    }\n}\n","export interface DifficultyOption {\n    id: number;\n    settings: {\n        drawMode: string;\n        recyclingMode: string;\n    };\n    icon: string;\n    lines: string[];\n}\nconst DifficultyOptions: DifficultyOption[] = [\n    {\n        id: 0,\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\n        icon: \"🐭\",\n        lines: [\"Turn 1 card\", \"No Limit\"],\n    },\n    {\n        id: 1,\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\n        icon: \"🐹\",\n        lines: [\"Turn 1 card\", \"Three passes\"],\n    },\n    {\n        id: 2,\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\n        icon: \"🐰\",\n        lines: [\"Turn 1 card\", \"Only a single pass\"],\n    },\n    {\n        id: 3,\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\n        icon: \"🐨\",\n        lines: [\"Turn 3 cards\", \"No limit\"],\n    },\n    {\n        id: 4,\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\n        icon: \"🐼\",\n        lines: [\"Turn 3 cards \", \"Three passes\"],\n    },\n    {\n        id: 5,\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\n        icon: \"🐻\",\n        lines: [\"Turn 3 cards \", \"Only a single pass\"],\n    },\n];\n\nexport default DifficultyOptions;\n","export interface IControlPreset {\n    id: number;\n    icon: string;\n    inputMethod: string;\n    inputLayout: number;\n    lines: string[],\n}\nexport const ControlPresets: IControlPreset[] = [\n    {\n        id: 0,\n        icon: \"🖱️\",\n        inputMethod: \"mouse\",\n        inputLayout: 0,\n        lines: [\"Mouse or\", \"Touchpad\"],\n    },\n    {\n        id: 1,\n        icon: \"🎮\",\n        inputMethod: \"gamepad\",\n        inputLayout: 0,\n        lines: [\"Gamepad 1\"],\n    },\n    {\n        id: 2,\n        icon: \"🎮\",\n        inputMethod: \"gamepad\",\n        inputLayout: 1,\n        lines: [\"Gamepad 2\"],\n    },\n    {\n        id: 3,\n        icon: \"⌨️\",\n        inputMethod: \"keyboard\",\n        inputLayout: 0,\n        lines: [\"Keyboard\", \"WASD\"],\n    },\n    {\n        id: 4,\n        icon: \"⌨️\",\n        inputMethod: \"keyboard\",\n        inputLayout: 1,\n        lines: [\"Keyboard\", \"ARROWS\"],\n    },\n    {\n        id: 5,\n        icon: \"⌨️\",\n        inputMethod: \"keyboard\",\n        inputLayout: 2,\n        lines: [\"Keyboard\", \"NUMPAD\"],\n    },\n];\n","import React from \"react\";\n\ninterface IScreenContext {\n    closeScreen: () => void;\n}\n\nconst ScreenContext = React.createContext<IScreenContext>({\n    closeScreen: () => {},\n});\n\nexport default ScreenContext;\n","import React from \"react\";\nimport ScreenContext from \"./Context\";\n\nconst CloseButton = () => {\n    const { closeScreen } = React.useContext(ScreenContext);\n    return (\n        <div className=\"closer\">\n            <button onClick={closeScreen}>🗙</button>\n        </div>\n    );\n};\n\nexport default CloseButton;\n","import { StartScreenState } from \"./StartScreen/Context\";\n\nexport default class StorageManager {\n    hasConsent = () => {\n        const consent = localStorage.getItem(\"consent\");\n        return consent && !!parseInt(consent);\n    };\n\n    giveConsent = () => ({\n        prompt: \"Allow this game to store settings, so your changes will stay. No data leaves your computer.\",\n        confirm: () => {\n            localStorage.setItem(\"consent\", \"1\");\n        },\n    });\n    revokeConsent = () => ({\n        prompt: \"Delete all local stored data? All settings will be lost.\",\n        confirm: () => {\n            localStorage.clear();\n        },\n    });\n\n    store = (value: StartScreenState) => {\n        if (this.hasConsent()) {\n            localStorage.setItem(\"state\", JSON.stringify(value));\n        }\n    };\n\n    getPreviousState = () => {\n        if (this.hasConsent()) {\n            const state = localStorage.getItem(\"state\");\n            return state != null ? JSON.parse(state) : null;\n        }\n        return null;\n    };\n}\n","import React from \"react\";\nimport { XY } from \"../../XY\";\n\nexport interface Focusable {\n    hasFocus: boolean;\n    autoFocus?: boolean;\n}\n\nexport interface MenuInpputElementProps extends Focusable {\n    disabled?: boolean;\n}\n\nexport const getScreenElementClassName = (base: string, props: MenuInpputElementProps) => {\n    let className = base;\n    if (props.hasFocus) {\n        className += \" focused\";\n    }\n    if (props.disabled) {\n        className += \" disabled\";\n    }\n    return className;\n};\n\nexport const useFocusEffect = (props: Focusable, inputEl: React.RefObject<HTMLElement>) => {\n    React.useEffect(() => {\n        if (props.hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\n            inputEl.current.focus();\n        }\n    }, [props.hasFocus, inputEl]);\n};\nexport const useInitialFocus = (props: Focusable, inputEl: React.RefObject<HTMLElement>, pos: XY) => {\n    React.useEffect(() => {\n        if (\n            props.autoFocus &&\n            !props.hasFocus &&\n            inputEl &&\n            inputEl.current &&\n            inputEl.current !== document.activeElement &&\n            pos.x == -1 &&\n            pos.y == -1\n        ) {\n            inputEl.current.focus();\n        }\n    }, [inputEl]);\n};\n","import StorageManager from \"../../StorageManager\";\nimport React from \"react\";\nimport { CookieContext, ICookieContext } from \"../../../Context\";\nimport { useFocusEffect } from \"./ScreenElement\";\nimport { XY } from \"../../XY\";\nimport {NavigationContext} from \"../Context\";\n\ninterface RenderCookieBannerProps extends ICookieContext, XY {}\n\nconst RenderCookieBanner = (props: RenderCookieBannerProps) => {\n    const { navigation } = React.useContext(NavigationContext);\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    useFocusEffect({ hasFocus: hasFocus(props.y, props.x) }, inputEl);\n    let className = \"cookiebanner\";\n    if (hasFocus(props.y, props.x)) {\n        className += \" focused\";\n    }\n    return !props.consented ? (\n        <button\n            ref={inputEl}\n            className={className}\n            onClick={() => {\n                const storage = new StorageManager();\n                const consent = storage.giveConsent();\n                if (!props.consented && confirm(consent.prompt)) {\n                    consent.confirm();\n                    props.setConsented(true);\n                }\n            }}\n        >\n            <div className=\"icon\">🍪</div>\n            <div className=\"message\">\n                <b>Changes on this page will be lost after each game</b>, until you allow this app to store data on your machine. Click here\n                to give consent.\n            </div>\n        </button>\n    ) : null;\n};\n\nconst CookieBanner = (props: { x?: number; y?: number }) => {\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\n        return null;\n    }\n    const { consented, setConsented } = React.useContext(CookieContext);\n    return <RenderCookieBanner x={props.x} y={props.y} consented={consented} setConsented={setConsented} />;\n};\n\nexport default CookieBanner;\n","import React from \"react\";\nimport { ScreenNavigator } from \"./ScreenNavigator\";\n\nconst Row = (props: { skip?: boolean; y?: number; navigator?: ScreenNavigator; children?: any[] | any | undefined }) => {\n    if (typeof props.y == \"undefined\" || typeof props.navigator == \"undefined\") {\n        return null;\n    }\n    const addElement = (child: any, index: number) => {\n        if (!child) return null;\n        const assign = (n: any[]) => {\n            n[props.y || 0].buttons[index || 0] = { x: index, y: props.y };\n        };\n        if (!props.skip) {\n            assign(props.navigator?.rows || []);\n        }\n        return React.cloneElement(child, { key: index, x: index, y: props.y });\n    };\n    return !props.children ? null : (\n        <div className=\"row\">{Array.isArray(props.children) ? props.children.map(addElement) : addElement(props.children, 0)}</div>\n    );\n};\nexport default Row;\n","import { XY } from \"../../XY\";\nimport { NavHandler } from \"../../NavHandler\";\n\nexport class ScreenNavigator implements NavHandler {\n    rows: any[];\n    constructor() {\n        this.rows = [];\n    }\n    getRows = () => this.rows;\n    getRow = (x: number) => this.getRows()[x];\n    goToRow = (pos: XY) => {\n        const rows = this.getRows();\n        const row = rows[pos.y];\n        if (row.buttons.length - 1 < pos.x) {\n            return { ...pos, x: row.buttons.length - 1 };\n        }\n\n        return pos;\n    };\n    moveUp: (x: number, y: number) => XY = (x: number, y: number) => {\n        const rows = this.getRows();\n        if (y == 0) {\n            return this.goToRow({ x: x, y: rows.length - 1 });\n        }\n        return this.goToRow({ x: x, y: y - 1 });\n    };\n    moveDown: (x: number, y: number) => XY = (x: number, y: number) => {\n        const rows = this.getRows();\n        if (y == rows.length - 1) {\n            return this.goToRow({ x: x, y: 0 });\n        }\n        return this.goToRow({ x: x, y: y + 1 });\n    };\n    moveLeft: (x: number, y: number) => XY = (x: number, y: number) => {\n        const row = this.getRow(y);\n        if (x == 0) {\n            return { x: row.buttons.length - 1, y: y };\n        }\n        return { x: x - 1, y: y };\n    };\n    moveRight: (x: number, y: number) => XY = (x: number, y: number) => {\n        const row = this.getRow(y);\n        if (x == row.buttons.length - 1) {\n            return { x: 0, y: y };\n        }\n        return { x: x + 1, y: y };\n    };\n    action: (xy: XY) => void = () => {\n        const activeElement: any = document.activeElement;\n        activeElement && activeElement.click();\n    };\n}\n\n\n","import NavWrapper from \"./NavWrapper\";\nimport React from \"react\";\nimport { ScreenNavigator } from \"./ScreenNavigator\";\n\nconst ScreenContent = (props: { id: string; children: any[] }) => {\n    const navigator = new ScreenNavigator();\n    let _index = -1;\n    let _i = -1;\n    const addRow = (child: any) => {\n        _i++;\n        if (!child.props.skip) {\n            _index++;\n            navigator.rows[_index] = { buttons: [] };\n        }\n        return React.cloneElement(child, { key: _i, x: 0, y: _index, navigator: navigator });\n    };\n    return (\n        <div className=\"content\">\n            {props.children.map((child) => addRow(child))}\n            <NavWrapper navigator={navigator} screen=\"rating\" />\n        </div>\n    );\n};\n\nexport default ScreenContent;\n","import { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport { XY } from \"../../XY\";\n\ninterface ScreenMainButtonProps {\n    x?: number;\n    y?: number;\n    id: number;\n    icon: string;\n    className: (pos: XY) => string;\n    lines: string[];\n    onClick: () => void;\n    autoFocus: boolean;\n    disabled?: boolean;\n}\nconst ScreenMainButton = (props: ScreenMainButtonProps) => {\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\n        return null;\n    }\n\n    const pos = { x: props.x, y: props.y };\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n    const hasFocus = navigation.focus == \"screen\" && navigation.screen.x == props.x && navigation.screen.y == props.y;\n    React.useEffect(() => {\n        if (hasFocus && inputEl && inputEl.current && inputEl.current !== document.activeElement) {\n            inputEl.current.focus();\n        }\n    }, [inputEl, hasFocus]);\n\n    React.useEffect(() => {\n        if (\n            props.autoFocus &&\n            !hasFocus &&\n            inputEl &&\n            inputEl.current &&\n            inputEl.current !== document.activeElement &&\n            navigation.screen.x == -1 &&\n            navigation.screen.y == -1\n        ) {\n            inputEl.current.focus();\n        }\n    }, [inputEl]);\n    const focus = () => {\n        if (!hasFocus) {\n            setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\n        }\n    };\n    const click = () => {\n        props.onClick();\n        setNavigation({ ...navigation, screen: { x: props.x || 0, y: props.y || 0 } });\n    };\n    return (\n        <button\n            onFocus={focus}\n            ref={inputEl}\n            key={props.id}\n            disabled={props.disabled}\n            className={props.className(pos)}\n            onClick={click}\n        >\n            {props.icon}\n            {props.lines.map((line: string, index: number) => (\n                <div key={index}>{line}</div>\n            ))}\n        </button>\n    );\n};\n\n\nexport default ScreenMainButton;\n","import { ControlPresets, IControlPreset } from \"../ControlsPresets\";\nimport StartScreenContext, { NavigationContext } from \"../Context\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport { CookieContext } from \"../../../Context\";\nimport GamePad from \"../../../Game/GamePad\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\nimport { XY } from \"../../XY\";\n\nconst Controls = (props: { player: number }) => {\n    const { state, setState } = React.useContext(StartScreenContext);\n    const { navigation } = React.useContext(NavigationContext);\n\n    const player = state.players[props.player];\n\n    if (!player) {\n        return null;\n    }\n\n    const [pads, setPads] = React.useState([\n        {\n            found: false,\n            buttonPressed: false,\n        },\n        {\n            found: false,\n            buttonPressed: false,\n        },\n    ]);\n\n    const connect = (i: number) => {\n        pads[i].found = true;\n        setPads({ ...pads });\n    };\n\n    const press = (i: number) => {\n        pads[i].found = true;\n        pads[i].buttonPressed = true;\n        setPads({ ...pads });\n        console.log(pads);\n    };\n\n    const { consented } = React.useContext(CookieContext);\n\n    const playerHasSettings = (id: number, playerId: number) =>\n        state.players[playerId].inputLayout == ControlPresets[id].inputLayout &&\n        state.players[playerId].inputMethod == ControlPresets[id].inputMethod;\n\n    const isActive = (id: number) => playerHasSettings(id, props.player);\n\n    const applyPreset = (id: number) => {\n        const nextPlayer = { ...state.players };\n        nextPlayer[props.player].inputMethod = ControlPresets[id].inputMethod;\n        nextPlayer[props.player].inputLayout = ControlPresets[id].inputLayout;\n        setState({ ...state, players: nextPlayer });\n    };\n\n    const getButtonClass = (id: number, x: number, y: number) => {\n        let className = x + \"\" + y + \" \" + navigation.screen.x + \"\" + navigation.screen.y + \" \";\n        className += navigation.screen.x == x && navigation.screen.y == y ? \" focused\" : \"\";\n        className += isActive(id) ? \" active-0\" : \" inactive-0\";\n        className += blockedByOtherPlayers(id) ? \" disabled\" : \"\";\n        return className;\n    };\n\n    const blockedByOtherPlayers = (id: number) => {\n        const otherPlayers = [0, 1].filter((p) => p !== props.player);\n        return playerHasSettings(id, otherPlayers[0]);\n    };\n\n    const getLines = (preset: IControlPreset) => {\n        if (preset.inputMethod == \"gamepad\") {\n            return [...preset.lines, pads[preset.inputLayout].found || pads[preset.inputLayout].buttonPressed ? \"Connected\" : \"Not Found\"];\n        }\n        return preset.lines;\n    };\n\n    return (\n        <div className=\"controls startdetails\">\n            <CloseButton />\n            <div className=\"title\">{player.name}</div>\n            <ScreenContent id=\"settings\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>\n                    {ControlPresets.slice(0, 3).map((preset) => (\n                        <ScreenMainButton\n                            key={preset.id}\n                            icon={preset.icon}\n                            id={preset.id}\n                            disabled={blockedByOtherPlayers(preset.id)}\n                            autoFocus={isActive(preset.id)}\n                            className={(pos: XY) => getButtonClass(preset.id, pos.x, pos.y)}\n                            onClick={() => applyPreset(preset.id)}\n                            lines={getLines(preset)}\n                        />\n                    ))}\n                </Row>\n                <Row>\n                    {ControlPresets.slice(3).map((preset) => (\n                        <ScreenMainButton\n                            key={preset.id}\n                            icon={preset.icon}\n                            id={preset.id}\n                            disabled={blockedByOtherPlayers(preset.id)}\n                            autoFocus={isActive(preset.id)}\n                            className={(pos: XY) => getButtonClass(preset.id, pos.x, pos.y)}\n                            onClick={() => applyPreset(preset.id)}\n                            lines={preset.lines}\n                        />\n                    ))}\n                </Row>\n                <Row skip={true}>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">@todo</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\n                    </div>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">@todo</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">Describe Layout of currently selected input method</div>\n                    </div>\n                </Row>\n            </ScreenContent>\n            <GamePad\n                gamepadIndex={0}\n                onConnect={() => connect(0)}\n                onUp={() => press(0)}\n                onDown={() => press(0)}\n                onRight={() => press(0)}\n                onLeft={() => press(0)}\n                onAction={() => press(0)}\n            />\n            <GamePad\n                gamepadIndex={1}\n                onConnect={() => connect(1)}\n                onUp={() => press(1)}\n                onDown={() => press(1)}\n                onRight={() => press(1)}\n                onLeft={() => press(1)}\n                onAction={() => press(1)}\n            />\n        </div>\n    );\n};\n\nexport default Controls;\n","import DifficultyOptions, { DifficultyOption } from \"../DifficultyOptions\";\nimport StartScreenContext, { NavigationContext } from \"../Context\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport { CookieContext } from \"../../../Context\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\n\nconst Difficulty = () => {\n    const { state, setState } = React.useContext(StartScreenContext);\n    const { navigation } = React.useContext(NavigationContext);\n\n    const isActive = (id: number) => state.difficultySettings == id;\n    \n    const getButtonClass = (index: number, y: number, x: number) => {\n        const hasFocus = navigation.screen.x == x && navigation.screen.y == y;\n        let name = isActive(index) ? `active active-${index}` : `inactive-${index}`;\n        name += hasFocus ? \" focused\" : \"\";\n        return name;\n    };\n\n    const renderButton = (button: DifficultyOption) => (\n        <ScreenMainButton\n            key={button.id}\n            icon={button.icon}\n            id={button.id}\n            autoFocus={isActive(button.id)}\n            className={(pos) => getButtonClass(button.id, pos.y, pos.x)}\n            onClick={() => setState({ ...state, difficultySettings: button.id })}\n            lines={button.lines}\n        />\n    );\n\n    const { consented } = React.useContext(CookieContext);\n\n    return (\n        <div className=\"difficulty startdetails\">\n            <CloseButton />\n            <div className=\"title\">Difficulty</div>\n            <ScreenContent id=\"difficulty\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>{DifficultyOptions.slice(0, 3).map(renderButton)}</Row>\n                <Row>{DifficultyOptions.slice(3).map(renderButton)}</Row>\n                <Row skip={true}>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">Draw Mode</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode == \"triple\"\n                                ? \"Turn 3 cards at once from the Stock to the Waste.\"\n                                : null}\n                            {DifficultyOptions[state.difficultySettings].settings.drawMode == \"single\"\n                                ? \"Turn 1 card after the other from the Stock to the Waste.\"\n                                : null}\n                        </div>\n                    </div>\n                    <div className=\"togglecontainer\">\n                        <div className=\"title\">Pass Limit</div>\n                        <div className=\"toggle\"></div>\n                        <div className=\"description\">\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"1-pass\"\n                                ? \"One pass through the deck. Waste can not be recycled to the Stock.\"\n                                : null}\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"3-pass\"\n                                ? \"Three passes through the deck. Waste can be recycled to Stock two times.\"\n                                : null}\n                            {DifficultyOptions[state.difficultySettings].settings.recyclingMode == \"infinite\"\n                                ? \"No limit on passes through the deck. Waste can be recycled to Stock endlessly.\"\n                                : null}\n                        </div>\n                    </div>\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\n\nexport default Difficulty;\n","import React from \"react\";\nimport { NavigationContext } from \"../Context\";\nimport { getScreenElementClassName, useFocusEffect } from \"./ScreenElement\";\n\nexport type SelectItem = {\n    label: string;\n    id: string | number;\n};\n\ninterface StaticSelectProps {\n    disabled?: boolean;\n    value: number;\n    values: SelectItem[];\n    label: string;\n    description: string;\n    callBack: (s: string) => void;\n}\n\ninterface SelectProps extends StaticSelectProps {\n    x: number;\n    y: number;\n    hasFocus: boolean;\n}\n\ninterface _ScreenSelectProps extends StaticSelectProps {\n    x?: number;\n    y?: number;\n}\n\nconst _ScreenSelect = (props: SelectProps) => {\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    useFocusEffect(props, inputEl);\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n\n    return (\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\n            <div className=\"title\">\n                {props.label}: {props.values[props.value].label}\n            </div>\n            <div className=\"button\">\n                <button\n                    ref={inputEl}\n                    onClick={() => {\n                        props.callBack((props.value + 1 < props.values.length ? props.value + 1 : 0).toString());\n                        setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\n                    }}\n                    disabled={!!props.disabled}\n                    onFocus={() => {\n                        if (!props.hasFocus) {\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\n                        }\n                    }}\n                >\n                    🔁\n                </button>\n            </div>\n            <div className=\"description\">{props.description}</div>\n        </div>\n    );\n};\n\nconst ScreenSelect = (props: _ScreenSelectProps) => {\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\n        return null;\n    }\n    const { navigation } = React.useContext(NavigationContext);\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\n    const pos = { x: props.x || 0, y: props.y || 0 };\n    return (\n        <_ScreenSelect\n            x={pos.x}\n            y={pos.y}\n            disabled={!!props.disabled}\n            hasFocus={hasFocus(pos.y, pos.x)}\n            label={props.label}\n            description={props.description}\n            value={props.value}\n            values={props.values}\n            callBack={props.callBack}\n        />\n    );\n};\n\nexport default ScreenSelect;\n","import \"../../../Style/react-toggle.css\";\n\nimport { getScreenElementClassName, useFocusEffect, useInitialFocus } from \"./ScreenElement\";\n\nimport { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport Toggle from \"react-toggle\";\nimport { XY } from \"../../XY\";\n\ninterface StaticScreenToggleProps {\n    value: boolean;\n    label: string;\n    description: string;\n    disabled?: boolean;\n    callBack: (s: boolean) => void;\n    autoFocus?: boolean;\n}\n\ninterface ToggleProps extends StaticScreenToggleProps {\n    x: number;\n    y: number;\n    hasFocus: boolean;\n}\n\ninterface _ScreenToggleProps extends StaticScreenToggleProps {\n    x?: number;\n    y?: number;\n}\n\nconst _ScreenToggle = (props: ToggleProps) => {\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n    useFocusEffect(props, inputEl);\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n    const change = (val: boolean, pos: XY) => {\n        setNavigation({ ...navigation, screen: pos });\n        props.callBack(val);\n    };\n    useInitialFocus(props, inputEl, navigation.screen);\n    return (\n        <div className={getScreenElementClassName(\"togglecontainer\", props)}>\n            <div className=\"title\">{props.label}</div>\n            <div className=\"toggle\">\n                <Toggle\n                    ref={inputEl}\n                    disabled={!!props.disabled}\n                    autoFocus={props.hasFocus}\n                    onFocus={() => {\n                        if (!props.hasFocus) {\n                            setNavigation({ ...navigation, screen: { x: props.x, y: props.y } });\n                        }\n                    }}\n                    checked={props.value}\n                    onChange={() => change(!props.value, { x: props.x, y: props.y })}\n                />\n            </div>\n            <div className=\"description\">{props.description}</div>\n        </div>\n    );\n};\n\nconst ScreenToggle = (props: _ScreenToggleProps) => {\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\n        return null;\n    }\n    const { navigation } = React.useContext(NavigationContext);\n    const hasFocus = (y: number, x: number) => navigation.focus == \"screen\" && navigation.screen.x == x && navigation.screen.y == y;\n    const pos = { x: props.x || 0, y: props.y || 0 };\n    return (\n        <_ScreenToggle\n            x={pos.x}\n            y={pos.y}\n            disabled={!!props.disabled}\n            hasFocus={hasFocus(pos.y, pos.x)}\n            label={props.label}\n            description={props.description}\n            value={props.value}\n            callBack={props.callBack}\n            autoFocus={props.autoFocus}\n        />\n    );\n};\n\nexport default ScreenToggle;\n","import StartScreenContext, { NavigationContext, StartScreenState } from \"../Context\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport { CookieContext } from \"../../../Context\";\nimport EntropyLevels from \"../../../../Model/Game/Settings/EntropyLevels\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\nimport ScreenSelect from \"./ScreenSelect\";\nimport ScreenToggle from \"./ScreenToggle\";\n\ninterface OptimizeOption {\n    entropy: number;\n    quickDeal: boolean;\n    lines: string[];\n    icon: string;\n}\n\nconst optimizeOptions: (state: StartScreenState) => OptimizeOption[] = (state: StartScreenState) => [\n    {\n        entropy: 2,\n        quickDeal: false,\n        lines: [(!state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Desktop\"],\n        icon: \"🖥️\",\n    },\n    {\n        entropy: 1,\n        quickDeal: true,\n        lines: [(state.quickDeal ? \"Optimized\" : \"Optimize\") + \" for Mobile\"],\n        icon: \"📱\",\n    },\n];\n\nconst QuickStart = () => {\n    const { state, setState } = React.useContext(StartScreenContext);\n    const { navigation } = React.useContext(NavigationContext);\n    const { consented } = React.useContext(CookieContext);\n\n    const isActive = (val: boolean) => state.quickDeal == val;\n\n    const setBaseEntropy = (value: string) =>\n        setState({ ...state, entropySettings: { ...state.entropySettings, baseEntropy: parseInt(value) } });\n\n    const setInteractionEntropy = (value: string) =>\n        setState({ ...state, entropySettings: { ...state.entropySettings, interactionEntropy: parseInt(value) } });\n\n    const setQuickDeal = (value: boolean) => setState({ ...state, quickDeal: value });\n\n    const getClassName = (button: OptimizeOption, y: number, x: number) => {\n        const hasFocus = navigation.screen.x == x && navigation.screen.y == y;\n        let name = isActive(button.quickDeal) ? \"active active-0\" : \"inactive-0\";\n        name += hasFocus ? \" focused\" : \"\";\n        return name;\n    };\n\n    return (\n        <div className=\"quickstart startdetails\">\n            <CloseButton />\n            <div className=\"title\">Various</div>\n            <ScreenContent id=\"settings\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>\n                    {optimizeOptions(state).map((button, i) => (\n                        <ScreenMainButton\n                            key={i}\n                            icon={button.icon}\n                            id={i}\n                            autoFocus={isActive(button.quickDeal)}\n                            className={(pos) => getClassName(button, pos.x, pos.y)}\n                            lines={button.lines}\n                            onClick={() =>\n                                setState({\n                                    ...state,\n                                    quickDeal: button.quickDeal,\n                                    entropySettings: {\n                                        baseEntropy: button.entropy,\n                                        interactionEntropy: button.entropy,\n                                    },\n                                })\n                            }\n                        />\n                    ))}\n                </Row>\n                <Row>\n                    <ScreenSelect\n                        label=\"Base Entropy\"\n                        description=\"How much chaos will the stacks on the board contain by themselves?\"\n                        value={state.entropySettings.baseEntropy || 0}\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\n                        callBack={setBaseEntropy}\n                    />\n                    <ScreenSelect\n                        label=\"Interaction Entropy\"\n                        description=\"How much chaos will each interaction add to a stack on the board?\"\n                        value={state.entropySettings.interactionEntropy || 0}\n                        values={EntropyLevels.map((label, id) => ({ id, label }))}\n                        callBack={setInteractionEntropy}\n                    />\n                </Row>\n                <Row>\n                    <ScreenToggle\n                        label=\"Instant Deal\"\n                        description=\"Should the deal animation at the beginning of the game be skipped?\"\n                        value={state.quickDeal}\n                        callBack={setQuickDeal}\n                    />\n                    <ScreenToggle\n                        disabled={true}\n                        label=\"Auto Deal\"\n                        description=\"Should the game draw one card from the stock every 5 seconds?\"\n                        value={false}\n                        callBack={() => {}}\n                    />\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\nexport default QuickStart;\n","import StartScreenContext, { NavigationContext, StartScreenState } from \"../Context\";\n\nimport CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport { CookieContext } from \"../../../Context\";\nimport RatingPresets from \"../RatingOptions\";\nimport { RatingSettings } from \"../../../../Common\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenMainButton from \"./ScreenMainButton\";\nimport ScreenToggle from \"./ScreenToggle\";\nimport SuggestionModes from \"../../../../Model/Game/Settings/SuggestionModes\";\nimport { XY } from \"../../XY\";\n\nconst Rating = () => {\n    const { state, setState } = React.useContext(StartScreenContext);\n    const { navigation } = React.useContext(NavigationContext);\n    const applyPreset = (id: number) => {\n        const next = { ...state };\n        RatingPresets.ALL[id].apply(next);\n        setState(next);\n    };\n\n    const isActive = (id: number) => state.ratingPreset == id;\n\n    const getButtonClass = (id: number, y: number, x: number) => {\n        let name = isActive(id) ? `active active-${id}` : `inactive-${id}`;\n        name += navigation.screen.x == x && navigation.screen.y == y ? \" focused\" : \"\";\n        return name;\n    };\n\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\n        const next = { ...state };\n        modifier(next.ratingSettings);\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\n        setState(next);\n    };\n    const customizeRating2 = (ratingModifier: (context: RatingSettings) => void, modifier: (context: StartScreenState) => void) => {\n        const next = { ...state };\n        ratingModifier(next.ratingSettings);\n        modifier(next);\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\n        setState(next);\n    };\n\n    const setMissPenalty = (value: boolean) =>\n        customizeRating((r) => {\n            r.missPenalty = value;\n        });\n\n    const setTimeRating = (value: boolean) =>\n        customizeRating((r) => {\n            r.timedMode = value;\n        });\n\n    const setUndoPenalty = (value: boolean) =>\n        customizeRating((r) => {\n            r.undoPenalty = value;\n        });\n\n    const setHintPenalty = (value: boolean) => {\n        customizeRating2(\n            (r) => {\n                r.hintPenalty = value;\n            },\n            (s) => {\n                s.suggestionMode = value ? SuggestionModes.NONE : SuggestionModes.REGULAR;\n            }\n        );\n    };\n\n    const { consented } = React.useContext(CookieContext);\n\n    return (\n        <div className=\"rating startdetails\">\n            <CloseButton />\n            <div className=\"title\">Penalties</div>\n            <ScreenContent id=\"penalties\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>\n                    {RatingPresets.ALL.map((preset) => (\n                        <ScreenMainButton\n                            key={preset.id}\n                            icon={preset.icon}\n                            id={preset.id}\n                            autoFocus={isActive(preset.id) || (state.ratingPreset == -1 && preset.id == 0)}\n                            className={(pos: XY) => getButtonClass(preset.id, pos.y, pos.x)}\n                            onClick={() => applyPreset(preset.id)}\n                            lines={[preset.label]}\n                        />\n                    ))}\n                </Row>\n                <Row>\n                    <ScreenToggle\n                        label=\"Undo Penalty\"\n                        description=\"Undo is enabled, but excessive use will be painful. This penalty starts with 2 and increases exponentially.\"\n                        value={!!state.ratingSettings.undoPenalty}\n                        callBack={setUndoPenalty}\n                    />\n                    <ScreenToggle\n                        label=\"Time Penalty\"\n                        description=\"Fast players are rewarded with a time bonus, slow players will be punished.\"\n                        value={!!state.ratingSettings.timedMode}\n                        callBack={setTimeRating}\n                    />\n                </Row>\n                <Row>\n                    <ScreenToggle\n                        label=\"Hint Penalty\"\n                        description=\"Each manual hint will reduce the number of points by 10. This setting disables automatic suggestions. \"\n                        value={!!state.ratingSettings.hintPenalty}\n                        callBack={setHintPenalty}\n                    />\n                    <ScreenToggle\n                        label=\"Miss Penalty\"\n                        description=\"Be careful where you click, as each invalid action will lead to a penalty of 10 points.\"\n                        value={!!state.ratingSettings.missPenalty}\n                        callBack={setMissPenalty}\n                    />\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\n\nexport default Rating;\n","import CloseButton from \"./CloseButton\";\nimport CookieBanner from \"./CookieBanner\";\nimport { CookieContext } from \"../../../Context\";\nimport React from \"react\";\nimport Row from \"./Row\";\nimport ScreenContent from \"./ScreenContent\";\nimport ScreenToggle from \"./ScreenToggle\";\nimport StartScreenContext from \"../Context\";\nimport SuggestionModes from \"../../../../Model/Game/Settings/SuggestionModes\";\n\nconst Suggestions = () => {\n    const { consented } = React.useContext(CookieContext);\n    const { state, setState } = React.useContext(StartScreenContext);\n\n    const suggestionModes = SuggestionModes.allSuggestionModes();\n\n    const isActive = (id: string) => state.suggestionMode == id;\n\n    const isDisabled = (id: string) => id !== SuggestionModes.NONE && state.ratingSettings.hintPenalty;\n\n    return (\n        <div className=\"suggestions startdetails\">\n            <CloseButton />\n            <div className=\"title\">Suggestions</div>\n            <ScreenContent id=\"settings\">\n                <Row skip={consented}>\n                    <CookieBanner />\n                </Row>\n                <Row>\n                    {suggestionModes.slice(0, 2).map((mode, index) => (\n                        <ScreenToggle\n                            value={isActive(mode.key)}\n                            disabled={isDisabled(mode.key)}\n                            label={mode.icon + \" \" + mode.label}\n                            callBack={() => setState({ ...state, suggestionMode: mode.key })}\n                            description={mode.description}\n                            key={index}\n                            autoFocus={isActive(mode.key)}\n                        />\n                    ))}\n                </Row>\n                <Row>\n                    {suggestionModes.slice(2).map((mode, index) => (\n                        <ScreenToggle\n                            value={isActive(mode.key)}\n                            disabled={isDisabled(mode.key)}\n                            label={mode.icon + \" \" + mode.label}\n                            callBack={() => setState({ ...state, suggestionMode: mode.key })}\n                            description={mode.description}\n                            key={index}\n                            autoFocus={isActive(mode.key)}\n                        />\n                    ))}\n                </Row>\n            </ScreenContent>\n        </div>\n    );\n};\n\nexport default Suggestions;\n","import Controls from \"./Controls\";\nimport Difficulty from \"./Difficulty\";\nimport { NavigationContext } from \"../Context\";\nimport QuickStart from \"./QuickStart\";\nimport Rating from \"./Rating\";\nimport React from \"react\";\nimport ScreenContext from \"./Context\";\nimport Suggestions from \"./Suggestions\";\n\nconst Screen = (props: { screen: string }) => {\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n    const closeScreen = () =>\n        setNavigation({\n            ...navigation,\n            focus: \"menu\",\n            screeen: \"\",\n            mainMenu: navigation.mainMenu,\n            menu: { ...navigation.menu },\n        });\n\n    return (\n        <ScreenContext.Provider value={{ closeScreen: () => closeScreen() }}>\n            <div className=\"startscreen-layout\">\n                <div className=\"startscreen-jail\">\n                    {props.screen == \"rating\" ? <Rating /> : null}\n                    {props.screen == \"difficulty\" ? <Difficulty /> : null}\n                    {props.screen == \"settings\" ? <QuickStart /> : null}\n                    {props.screen == \"suggestions\" ? <Suggestions /> : null}\n                    {props.screen == \"controls0\" ? <Controls player={0} /> : null}\n                    {props.screen == \"controls1\" ? <Controls player={1} /> : null}\n                </div>\n            </div>\n        </ScreenContext.Provider>\n    );\n};\n\nexport default Screen;\n","import React from \"react\";\n\nconst VerticalMenu = (props: any) => {\n    return (\n        <div className=\"ui menu\">\n            <div className=\"startscreen-jail\">\n                <div className=\"innermenu\">{props.children}</div>\n            </div>\n        </div>\n    );\n};\nexport default VerticalMenu;\n","import \"../../../Style/Menu.scss\";\n\nimport { CookieContext } from \"../../../Context\";\nimport GameModes from \"../../../../GameModes\";\nimport MenuButton from \"./MenuButton\";\nimport MenuTitle from \"./MenuTitle\";\nimport MenuTree from \"./MenuTree\";\nimport { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport StorageManager from \"../../StorageManager\";\nimport { Universal } from \"../../../Game/KeyboardLayouts\";\nimport VerticalMenu from \"./VerticalMenu\";\nimport { XY } from \"../../XY\";\n\nconst StartMenu = (props: { start: (boardMode: string) => void }) => {\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n    const { consented, setConsented } = React.useContext(CookieContext);\n\n    const switchToScreen = (s: string, pos: XY) =>\n        setNavigation({\n            ...navigation,\n            focus: \"screen\",\n            screeen: s,\n            screen: { x: -1, y: -1 },\n            menu: { ...pos },\n        });\n\n    const switchToMenu = (menu: string, pos: XY) =>\n        setNavigation({\n            ...navigation,\n            focus: \"menu\",\n            screeen: \"\",\n            mainMenu: menu,\n            menu: { ...pos },\n        });\n\n    //@todo move onfocus inside components\n    const onfocus = (pos: XY) => setNavigation({ ...navigation, menu: pos });\n\n    const toggleScreen = (s: string, pos: XY) => {\n        if (navigation.screeen !== s) {\n            switchToScreen(s, pos);\n        } else {\n            switchToMenu(navigation.mainMenu, pos);\n        }\n    };\n\n    const toggleMainMenu = (val: string, pos: XY) => switchToMenu(navigation.mainMenu !== val ? val : \"\", pos);\n\n    const storage = new StorageManager();\n\n    return (\n        <VerticalMenu>\n            <MenuTitle label=\"♦ Solitaire\" />\n\n            <MenuTree keyboardLayout={Universal}>\n                <MenuButton icon=\"🎲\" title=\"Single Player\" onClick={() => props.start(GameModes.SINGLEPLAYER)} onFocus={onfocus} />\n                <MenuButton\n                    icon=\"⚔️\"\n                    title=\"Versus\"\n                    onClick={(pos: XY) => toggleMainMenu(\"versus\", pos)}\n                    onFocus={onfocus}\n                    toggled={navigation.mainMenu == \"versus\"}\n                >\n                    <MenuButton\n                        icon=\"🎮\"\n                        title=\"Player 1\"\n                        onClick={(pos: XY) => toggleScreen(\"controls0\", pos)}\n                        onFocus={onfocus}\n                        toggled={navigation.screeen == \"controls0\"}\n                    />\n                    <MenuButton\n                        icon=\"🎮\"\n                        title=\"Player 2\"\n                        onClick={(pos: XY) => toggleScreen(\"controls1\", pos)}\n                        onFocus={onfocus}\n                        toggled={navigation.screeen == \"controls1\"}\n                    />\n                    <MenuButton icon=\"🎲\" title=\"Start\" onClick={() => props.start(GameModes.VERSUS)} onFocus={onfocus} />\n                </MenuButton>\n                <MenuButton\n                    icon=\"⚙️\"\n                    title=\"Options\"\n                    onClick={(pos: XY) => toggleMainMenu(\"custom\", pos)}\n                    onFocus={onfocus}\n                    toggled={navigation.mainMenu == \"custom\"}\n                >\n                    <MenuButton\n                        icon=\"💪\"\n                        title=\"Difficulty\"\n                        onClick={(pos: XY) => toggleScreen(\"difficulty\", pos)}\n                        onFocus={onfocus}\n                        toggled={navigation.screeen == \"difficulty\"}\n                    />\n                    <MenuButton\n                        icon=\"⚖️\"\n                        title=\"Penalties\"\n                        onClick={(pos: XY) => toggleScreen(\"rating\", pos)}\n                        onFocus={onfocus}\n                        toggled={navigation.screeen == \"rating\"}\n                    />\n                    <MenuButton\n                        icon=\"💡\"\n                        title=\"Suggestions\"\n                        onClick={(pos: XY) => toggleScreen(\"suggestions\", pos)}\n                        onFocus={onfocus}\n                        toggled={navigation.screeen == \"suggestions\"}\n                    />\n                    <MenuButton\n                        icon=\"🧰\"\n                        title=\"Various\"\n                        onClick={(pos: XY) => toggleScreen(\"settings\", pos)}\n                        onFocus={onfocus}\n                        toggled={navigation.screeen == \"settings\"}\n                    />\n                </MenuButton>\n                <MenuButton\n                    icon=\"🍪\"\n                    title={consented ? \"Delete Cookie\" : \"Allow Cookie\"}\n                    onClick={\n                        consented\n                            ? () => {\n                                  const revoke = storage.revokeConsent();\n                                  if (confirm(revoke.prompt)) {\n                                      revoke.confirm();\n                                      setConsented(false);\n                                  }\n                              }\n                            : () => {\n                                  const consent = storage.giveConsent();\n                                  if (confirm(consent.prompt)) {\n                                      consent.confirm();\n                                      setConsented(true);\n                                  }\n                              }\n                    }\n                    onFocus={onfocus}\n                    toggled={false}\n                />\n            </MenuTree>\n        </VerticalMenu>\n    );\n};\nexport default StartMenu;\n","import { NavigationProvider, NavigationState, Provider, StartScreenState, defaultStartScreenState } from \"./Context\";\n\nimport { CookieContextProvider } from \"../../Context\";\nimport DifficultyOptions from \"./DifficultyOptions\";\nimport { LaunchSettings } from \"../../../Common\";\nimport React from \"react\";\nimport Screen from \"./Screens/Screen\";\nimport StartMenu from \"./Menu/StartMenu\";\nimport StorageManager from \"../StorageManager\";\n\nconst Home = (props: { start: (settings: LaunchSettings) => void }) => {\n    const storage = new StorageManager();\n    const [consented, setConsented] = React.useState<boolean>(!!storage.hasConsent());\n    const previous = storage.getPreviousState();\n    const [state, setState] = React.useState<StartScreenState>(previous ? previous : defaultStartScreenState);\n    const startPos = { x: 0, y: 0 };\n    const [navigation, setNavigation] = React.useState<NavigationState>({\n        menu: { ...startPos },\n        screen: { ...startPos },\n        focus: \"menu\",\n        mainMenu: \"\",\n        screeen: \"\",\n    });\n    const startScreenContext = {\n        state,\n        setState: (s: StartScreenState) => {\n            setState(s);\n            storage.store(s);\n        },\n    };\n    const navigationContext = {\n        navigation,\n        setNavigation,\n    };\n    const cookieContext = {\n        consented,\n        setConsented,\n    };\n\n    const start = (boardMode: string) => {\n        const settings = {\n            ...DifficultyOptions[state.difficultySettings].settings,\n            ...state.ratingSettings,\n            baseEntropy: state.entropySettings.baseEntropy || 0,\n            interactionEntropy: state.entropySettings.interactionEntropy || 0,\n            players: { ...state.players },\n            quickDeal: state.quickDeal,\n            boardMode: boardMode,\n            initialized: true,\n            suggestionMode: state.suggestionMode,\n            inputMode: \"\",\n        };\n        props.start(settings);\n    };\n\n    return (\n        <Provider value={startScreenContext}>\n            <NavigationProvider value={navigationContext}>\n                <CookieContextProvider value={cookieContext}>\n                    <StartMenu start={start} />\n                    <Screen screen={navigation.screeen} />\n                </CookieContextProvider>\n            </NavigationProvider>\n        </Provider>\n    );\n};\nexport default Home;\n","export interface Ratio {\n    prefix: string;\n    multiplier: number;\n}\nexport default class Ratios {\n    static _16to9: Ratio = {\n        prefix: \"16-to-9\",\n        multiplier: 1.7778,\n    };\n    static _4to3: Ratio = {\n        prefix: \"4-to-3\",\n        multiplier: 1.3333,\n    };\n}\n","import \"./View/Style/App.css\";\nimport \"./View/Style/UI.css\";\n\nimport { LaunchSettings, defaultPlayerSettings } from \"./Common\";\n\nimport AspectRatio from \"./View/AspectRatio/AspectRatio\";\nimport Deck from \"./Model/Deck/Deck\";\nimport DelayedSuspense from \"./DelayedSuspense\";\nimport GameModes from \"./GameModes\";\nimport Home from \"./View/UI/StartScreen/Home\";\nimport { PauseProvider } from \"./View/PauseContext\";\nimport Ratios from \"./View/AspectRatio/Ratios\";\nimport React from \"react\";\nimport SuggestionModes from \"./Model/Game/Settings/SuggestionModes\";\n\nconst App = () => {\n    const [started, setStarted] = React.useState<number>(0);\n    const defaultState = {\n        boardMode: GameModes.SINGLEPLAYER,\n        inputMode: \"mouse\",\n        initialized: false,\n        players: defaultPlayerSettings,\n        drawMode: \"\",\n        recyclingMode: \"\",\n        interactionEntropy: 0,\n        baseEntropy: 0,\n        suggestionMode: SuggestionModes.NONE,\n    };\n\n    const [launchState, setLaunchState] = React.useState<LaunchSettings>(defaultState);\n\n    const restart = () => {\n        setLaunchState(defaultState);\n    };\n\n    const deck = new Deck().shuffle();\n    const start = (settings: LaunchSettings) => {\n        deck.shuffle();\n        setLaunchState({ ...settings });\n        setStarted(Date.now());\n    };\n\n    if (launchState?.initialized) {\n        const BoardWrap = React.lazy(() => import(\"./View/Game/BoardWrap\"));\n        let board = null;\n        if (launchState.boardMode == GameModes.SINGLEPLAYER) {\n            board = (\n                <AspectRatio ratio={Ratios._4to3}>\n                    <div className={\"layout-grid-container singleplayer\"}>\n                        <BoardWrap player={0} settings={launchState} restart={restart} deck={deck} />\n                    </div>\n                </AspectRatio>\n            );\n        }\n        if (launchState.boardMode == GameModes.VERSUS) {\n            board = (\n                <div className=\"game-layout-container splitscreen\">\n                    <div className={\"layout-grid-container \" + launchState.boardMode}>\n                        <BoardWrap\n                            player={0}\n                            settings={{ ...launchState, inputMode: launchState.players[0].inputMethod }}\n                            restart={restart}\n                            deck={deck.copy()}\n                        />\n                    </div>\n\n                    <div className={\"layout-grid-container \" + launchState.boardMode}>\n                        <BoardWrap\n                            player={1}\n                            settings={{ ...launchState, inputMode: launchState.players[1].inputMethod }}\n                            restart={restart}\n                            deck={deck.copy()}\n                        />\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <PauseProvider started={started}>\n                <DelayedSuspense delay={500} fallback={<h3>Loading...</h3>}>\n                    {board}\n                </DelayedSuspense>\n            </PauseProvider>\n        );\n    }\n\n    return (\n        <AspectRatio ratio={Ratios._16to9}>\n            <Home start={start} />\n        </AspectRatio>\n    );\n};\nexport default App;\n","import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\n\nimport Model from \"../Model/Model\";\nimport React from \"react\";\n\ninterface IGlobalContext {\n    state: Model | null;\n    replaceContext: StateReplaceFunction;\n    updateContext: StateUpdateFunction;\n    updateGameContext: StateUpdateFunction;\n    restart: () => void;\n}\n\nconst defaultValue = {\n    state: null,\n    replaceContext: () => {},\n    updateContext: () => {},\n    updateGameContext: () => {},\n    restart: () => {},\n};\n\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\n\nexport const Provider = GlobalContext.Provider;\n\nexport default GlobalContext;\n\nexport interface ICookieContext {\n    consented: boolean;\n    setConsented: (c: boolean) => void;\n}\nexport const CookieContext = React.createContext<ICookieContext>({ consented: false, setConsented: () => {} });\nexport const CookieContextProvider = CookieContext.Provider;\n","const TouchDetector = ()  => {\n    try {\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\n\n        const mq = (query) => window.matchMedia(query).matches;\n\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\n            return true;\n        }\n\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\n    } catch (e) {\n        console.error(\"(Touch detect failed)\", e);\n        return false;\n    }\n}\n\nexport default TouchDetector;","import { EntropySettings, PlayerSettings, RatingSettings, defaultPlayerSettings } from \"../../../Common\";\n\nimport RatingPresets from \"./RatingOptions\";\nimport React from \"react\";\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\nimport TouchDetector from \"./TouchDetector\";\n\nexport interface IStartScreenContext {\n    state: StartScreenState;\n    setState: (s: StartScreenState) => void;\n}\n\nexport const defaultStartScreenState: StartScreenState = {\n    ratingSettings: { ...RatingPresets.REGULAR },\n    difficultySettings: 1,\n    ratingPreset: 1,\n    quickDeal: TouchDetector(),\n    entropySettings: {\n        baseEntropy: TouchDetector() ? 1 : 2,\n        interactionEntropy: TouchDetector() ? 1 : 2,\n    },\n    suggestionMode: SuggestionModes.REGULAR,\n    players: defaultPlayerSettings,\n};\n\nexport interface StartScreenState {\n    ratingSettings: RatingSettings;\n    difficultySettings: number;\n    ratingPreset: number;\n    quickDeal: boolean;\n    entropySettings: EntropySettings;\n    suggestionMode: string;\n    players: PlayerSettings;\n}\n\nexport interface NavigationState {\n    menu: {\n        x: number;\n        y: number;\n    };\n    screen: {\n        x: number;\n        y: number;\n    };\n    focus: string;\n    mainMenu: string;\n    screeen: string;\n}\ninterface INavigationContext {\n    navigation: NavigationState;\n    setNavigation: (n: NavigationState) => void;\n}\n\nexport const NavigationContext = React.createContext<INavigationContext>({\n    navigation: {\n        menu: {\n            x: 0,\n            y: 0,\n        },\n        screen: {\n            x: 0,\n            y: 0,\n        },\n        focus: \"menu\",\n        mainMenu: \"\",\n        screeen: \"\",\n    },\n    setNavigation: () => {},\n});\n\nconst StartScreenContext = React.createContext<IStartScreenContext>({\n    state: {\n        difficultySettings: 0,\n        ratingPreset: 0,\n        ratingSettings: {},\n        entropySettings: {},\n        quickDeal: false,\n        suggestionMode: SuggestionModes.REGULAR,\n        players: defaultPlayerSettings,\n    },\n    setState: () => {},\n});\n\nexport const Provider = StartScreenContext.Provider;\nexport const NavigationProvider = NavigationContext.Provider;\nexport default StartScreenContext;\n","export default class Card {\n    constructor(face, type, isHidden) {\n        this.face = face;\n        this.type = type;\n        this.isHidden = isHidden;\n        this.entropyStyle = {};\n        this.source = \"\";\n        this.suggestion = false;\n        this.canClick = () => {};\n        // eslint-disable-next-line no-unused-vars\n        this.onClick = (_p) => {};\n    }\n\n    causeEntropy = (lvl) => {\n        if (lvl == 0) {\n            this.entropyStyle = {};\n            return;\n        }\n        const level = lvl * 2;\n        const random = () => Math.random() < 0.5;\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\n        //shift\n        if (random()) {\n            if (random()) {\n                this.entropyStyle[\"left\"] = randomInt(0, level / 20) + \"vw\";\n            } else {\n                this.entropyStyle[\"right\"] = randomInt(0, level / 20) + \"vw\";\n            }\n        }\n        //rotate\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\n    };\n\n    equals = (other) => {\n        return Card.equals(this, other);\n    };\n\n    static equals(card, otherCard) {\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\n    }\n\n    static copy = (orig) => {\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\n        copy.source = orig.source;\n        copy.entropyStyle = { ...orig.entropyStyle };\n        copy.canClick = orig.canClick;\n        copy.onClick = orig.onClick;\n        return copy;\n    };\n\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\n}\n","export class SuggestionMode {\n    key: string;\n    label: string;\n    isTemporary: boolean;\n    supportsHints: boolean;\n    next: string | undefined;\n    icon: string;\n    description: string;\n    constructor(key: string, obj: ISuggestionMode) {\n        this.key = key;\n        this.label = obj.label;\n        this.icon = obj.icon;\n        this.description = obj.description;\n        this.isTemporary = !!obj.isTemporary;\n        this.supportsHints = !!obj.supportsHints;\n        this.next = obj.next;\n    }\n}\n\nexport type ISuggestionMode = {\n    label: string;\n    icon: string;\n    description: string;\n    isTemporary?: boolean;\n    supportsHints?: boolean;\n    next?: string;\n};\n\nexport default class SuggestionModes {\n    static NONE: string = \"NONE\";\n    static SCORED: string = \"SCORED\";\n    static REGULAR: string = \"REGULAR\";\n    static FULL: string = \"FULL\";\n    static ONCE: string = \"ONCE\";\n    static TWICE: string = \"TWICE\";\n    static raw: { [id: string]: ISuggestionMode } = {\n        NONE: {\n            label: \"None\",\n            description: 'No distractions. This enables one-time hints.',\n            supportsHints: true,\n            icon: \"❌\",\n        },\n        SCORED: {\n            label: \"Scored\",\n            description: 'Shows all actions that increase the score.',\n            icon: \"🏆\",\n        },\n        REGULAR: {\n            label: \"Regular\",\n            description: 'Shows all possible actions except circular',\n            icon: \"💡\",\n        },\n        FULL: {\n            label: \"Full\",\n            description: 'Shows all possible actions, even if they are circular',\n            icon: \"🎓\",\n        },\n        ONCE: {\n            label: \"Single Action\",\n            description: 'triggered by manual hint in game',\n            isTemporary: true,\n            next: \"NONE\",\n            icon: \"⏳\",\n        },\n    };\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\n    static default = () => SuggestionModes.get(SuggestionModes.REGULAR);\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\n    static next = (current: SuggestionMode) => {\n        const all = SuggestionModes.allSuggestionModes();\n        if (all[all.length - 1].key == current.key) {\n            return all[0];\n        }\n        for (let i = 0; i < all.length; i++) {\n            if (all[i].key == current.key) {\n                return all[i + 1];\n            }\n        }\n        return all[0];\n    };\n}\n","import React from \"react\";\n\nexport interface IPauseState {\n    started: number;\n    end: number;\n    paused: boolean;\n    pauses: number[];\n    pauseStartedAt: number;\n    allowed: number;\n    isSilent?: boolean;\n    pausedBy: number;\n    showMenu: boolean;\n}\nexport interface IPauseContext {\n    state: IPauseState;\n    togglePause: (isPaused: boolean, pausedBy: number) => void;\n    getElapsed: () => string,\n}\nexport const defaultPauseState = {\n    started: 0,\n    end: 0,\n    paused: false,\n    pauses: [],\n    pauseStartedAt: 0,\n    allowed: 5,\n    pausedBy: -1,\n    showMenu: false,\n};\nexport const defaultPauseContext = {\n    state: defaultPauseState,\n    togglePause: () => {},\n    getElapsed: () => \"\",\n};\n\nconst PauseContext = React.createContext<IPauseContext>(defaultPauseContext);\nconst PauseContextProvider = PauseContext.Provider;\n\nexport const PauseProvider = (props: any) => {\n    const [paused, setPaused] = React.useState<IPauseState>({ ...defaultPauseState });\n    const getElapsedMs = () => {\n        const pauses = paused.pauses.reduce((a, b) => a + b, 0);\n        return (paused.end || paused.pauseStartedAt || Date.now()) - props.started - pauses;\n    };\n\n    const getElapsed = () => {\n        const padleft = (i: number) => ((i + \"\").length == 1 ? \"0\" + i : i);\n        let msec = getElapsedMs();\n        const hh = Math.floor(msec / 1000 / 60 / 60);\n        msec -= hh * 1000 * 60 * 60;\n        const mm = Math.floor(msec / 1000 / 60);\n        msec -= mm * 1000 * 60;\n        const ss = Math.floor(msec / 1000);\n        msec -= ss * 1000;\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\n    };\n    const togglePause = (isPaused: boolean, pausedBy: number) => {\n        if (paused.showMenu) {\n            setPaused({\n                ...paused,\n                pausedBy: pausedBy,\n                pauses: [...paused.pauses, Date.now() - paused.pauseStartedAt],\n                pauseStartedAt: 0,\n                paused: false,\n                showMenu: false,\n            });\n        } else if (paused.pauses.length < paused.allowed) {\n            setPaused({\n                ...paused,\n                pausedBy: pausedBy,\n                pauseStartedAt: Date.now(),\n                paused: true,\n                showMenu: true,\n            });\n        } else {\n            setPaused({\n                ...paused,\n                pausedBy: pausedBy,\n                pauseStartedAt: 0,\n                paused: false,\n                showMenu: true,\n            });\n        }\n    };\n    const context = {\n        state: { ...paused, started: props.started },\n        togglePause,\n        getElapsed,\n    };\n\n    return <PauseContextProvider value={context}>{props.children}</PauseContextProvider>;\n};\n\nexport default PauseContext;\n","export default class GameModes {\n    static SINGLEPLAYER = \"singleplayer\";\n    static VERSUS = \"splitscreen\";\n}\n","interface KeyboardLayout {\n    up: (e: KeyboardEvent) => boolean;\n    down: (e: KeyboardEvent) => boolean;\n    right: (e: KeyboardEvent) => boolean;\n    left: (e: KeyboardEvent) => boolean;\n    cancel: (e: KeyboardEvent) => boolean;\n    action: (e: KeyboardEvent) => boolean;\n    undo: (e: KeyboardEvent) => boolean;\n    hint: (e: KeyboardEvent) => boolean;\n    pause: (e: KeyboardEvent) => boolean;\n    menu: (e: KeyboardEvent) => boolean;\n}\n\nexport default KeyboardLayout;\n\nexport const getKeyboardLayout = (id: number) => {\n    if (id == 0) return Wasd;\n    if (id == 1) return Arrows;\n    if (id == 2) return NumPad;\n    throw \"Unknown keyboard layout ID\";\n};\n\nexport const Arrows: KeyboardLayout = {\n    up: (e) => e.keyCode == 38,\n    down: (e) => e.keyCode == 40,\n    right: (e) => e.keyCode == 39,\n    left: (e) => e.keyCode == 37,\n    cancel: (e) => e.keyCode == 27,\n    action: (e) => e.keyCode == 96,\n    undo: (e) => e.keyCode == 90 && e.ctrlKey,\n    hint: (e) => e.keyCode == 72,\n    pause: (e) => e.keyCode == 80,\n    menu: (e) => e.keyCode == 77,\n};\n\nexport const Wasd: KeyboardLayout = {\n    up: (e) => e.keyCode == 87,\n    down: (e) => e.keyCode == 83,\n    right: (e) => e.keyCode == 68,\n    left: (e) => e.keyCode == 65,\n    cancel: (e) => e.keyCode == 69,\n    action: (e) => e.keyCode == 81,\n    undo: (e) => e.keyCode == 88,\n    hint: (e) => e.keyCode == 90,\n    pause: (e) => e.keyCode == 999,\n    menu: (e) => e.keyCode == 27,\n};\n\nexport const NumPad: KeyboardLayout = {\n    up: (e) => e.keyCode == 104,\n    down: (e) => e.keyCode == 101,\n    right: (e) => e.keyCode == 102,\n    left: (e) => e.keyCode == 100,\n    cancel: (e) => e.keyCode == 105,\n    action: (e) => e.keyCode == 103,\n    undo: (e) => e.keyCode == 98,\n    hint: (e) => e.keyCode == 97,\n    pause: (e) => e.keyCode == 999,\n    menu: (e) => e.keyCode == 99,\n};\n\nexport const Universal: KeyboardLayout = {\n    up: (e) => NumPad.up(e) || Wasd.up(e) || Arrows.up(e),\n    down: (e) => NumPad.down(e) || Wasd.down(e) || Arrows.down(e),\n    right: (e) => NumPad.right(e) || Wasd.right(e) || Arrows.right(e),\n    left: (e) => NumPad.left(e) || Wasd.left(e) || Arrows.left(e),\n    cancel: (e) => NumPad.cancel(e) || Wasd.cancel(e) || Arrows.cancel(e),\n    action: (e) => NumPad.action(e) || Wasd.action(e) || Arrows.action(e),\n    undo: (e) => NumPad.undo(e) || Wasd.undo(e) || Arrows.undo(e),\n    hint: (e) => NumPad.hint(e) || Wasd.hint(e) || Arrows.hint(e),\n    pause: (e) => NumPad.pause(e) || Wasd.pause(e) || Arrows.pause(e),\n    menu: (e) => NumPad.menu(e) || Wasd.menu(e) || Arrows.menu(e),\n};\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\n\nexport const getFoundationOrder = () => {\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\n};\n\nexport const getTableauOrder = () => {\n    return [...DeckSize];\n};\n","import React from \"react\";\nimport ReactGamePad from \"react-gamepad\";\nimport RenderAfter from \"./RenderAfter\";\n\nconst GamePad = (props) => {\n    const buttonHandler = (e) => {\n        //@todo use layout abstraction like in keyboard\n        //@todo make layouts configurable (for visuals allow switching PS4 and XBOX layouts)\n        console.debug(e);\n        if (e == \"DPadLeft\") {\n            props.onLeft && props.onLeft();\n        }\n        if (e == \"DPadRight\") {\n            props.onRight && props.onRight();\n        }\n        if (e == \"DPadUp\") {\n            props.onUp && props.onUp();\n        }\n        if (e == \"DPadDown\") {\n            props.onDown && props.onDown();\n        }\n        if (e == \"A\") {\n            props.onAction && props.onAction();\n        }\n        if (e == \"B\") {\n            props.onCancel && props.onCancel();\n        }\n        if (e == \"X\") {\n            props.onHint && props.onHint();\n        }\n        if (e == \"Y\") {\n            props.onUndo && props.onUndo();\n        }\n        if (e == \"Start\") {\n            props.onPause && props.onPause();\n        }\n        if (e == \"Back\") {\n            props.onPause && props.onMenu();\n        }\n    };\n\n    const connectHandler = (e) => {\n        console.debug(\"connected\", e);\n    };\n\n    const disconnectHandler = (e) => {\n        console.debug(\"disconnected\", e);\n    };\n\n    return (\n        <RenderAfter delay={125}>\n            <ReactGamePad\n                gamepadIndex={props.gamepadIndex}\n                onButtonDown={buttonHandler}\n                onConnect={connectHandler}\n                onDisconnect={disconnectHandler}\n            >\n                <span></span>\n            </ReactGamePad>\n        </RenderAfter>\n    );\n};\n\nexport default GamePad;\n","import Card from \"./Model/Deck/Card\";\nimport Model from \"./Model/Model\";\n\nexport type StateReplacer = (state: Model) => Model | null;\nexport type StateUpdater = (state: Model) => void;\nexport type StateReplaceFunction = (modifier: StateReplacer) => void;\nexport type StateUpdateFunction = (modifier: StateUpdater) => void;\n\nexport const defaultPlayerSettings: PlayerSettings = {\n    0: {\n        id: 0,\n        name: \"Player 1\",\n        inputMethod: \"gamepad\",\n        inputLayout: 0,\n    },\n    1: {\n        id: 1,\n        name: \"Player 2\",\n        inputMethod: \"keyboard\",\n        inputLayout: 0,\n    },\n};\n\ninterface PlayerSetting {\n    id: number;\n    name: string;\n    inputMethod: string;\n    inputLayout: number;\n}\n\nexport interface PlayerSettings {\n    [id: number]: PlayerSetting;\n}\n\nexport interface LaunchSettings {\n    recyclingMode: string;\n    drawMode: string;\n    inputMode: string;\n    interactionEntropy: number;\n    baseEntropy: number;\n    suggestionMode: string;\n    players: PlayerSettings;\n    boardMode: string;\n    initialized?: boolean;\n}\n\nexport interface ClickHandler {\n    dispatchPutDown: (card: Card, position: any, state: Model, index: number) => void;\n    dispatchPickup: (card: Card, position: any, state: Model, index: number) => void;\n}\n\nexport type BlinkFunction = (state: Model, index: number) => void;\n\nexport interface RatingSettings {\n    undoPenalty?: boolean;\n    hintPenalty?: boolean;\n    timedMode?: boolean;\n    missPenalty?: boolean;\n}\n\nexport interface EntropySettings {\n    baseEntropy?: number;\n    interactionEntropy?: number;\n}\n","const Suits = {\n    heart: {\n        icon: \"♥\",\n        color: \"red\",\n    },\n    club: {\n        icon: \"♣\",\n        color: \"black\",\n    },\n    diamond: {\n        icon: \"♦\",\n        color: \"red\",\n    },\n    spade: {\n        icon: \"♠\",\n        color: \"black\",\n    },\n};\n\nexport default Suits;\n","import { RatingSettings } from \"../../../Common\";\nimport { StartScreenState } from \"./Context\";\nimport SuggestionModes from \"../../../Model/Game/Settings/SuggestionModes\";\n\nexport interface RatingPreset {\n    id: number;\n    icon: string;\n    label: string;\n    settings: RatingSettings;\n    apply: (s: StartScreenState) => void;\n}\n\nconst apply = (after: RatingSettings, s: StartScreenState, id: number) => {\n    if (!s.ratingSettings.hintPenalty && after.hintPenalty) {\n        s.suggestionMode = SuggestionModes.NONE;\n    }\n    //@todo remember which suggestion mode was there before, and reset to that on next change of hint penalty\n    s.ratingSettings = { ...after };\n    s.ratingPreset = id;\n};\n\nexport default class RatingPresets {\n    static CHILL = {\n        timedMode: false,\n        missPenalty: false,\n        undoPenalty: false,\n        hintPenalty: false,\n    };\n\n    static REGULAR = {\n        timedMode: true,\n        missPenalty: false,\n        undoPenalty: true,\n        hintPenalty: false,\n    };\n\n    static COMPETITIVE = {\n        timedMode: true,\n        missPenalty: true,\n        undoPenalty: true,\n        hintPenalty: true,\n    };\n\n    static ALL: RatingPreset[] = [\n        {\n            id: 0,\n            icon: \"🌴\",\n            label: \"Chill\",\n            settings: { ...RatingPresets.CHILL },\n            apply: (s) => apply(RatingPresets.CHILL, s, 0),\n        },\n        {\n            id: 1,\n            icon: \"⚖️\",\n            label: \"Regular\",\n            settings: { ...RatingPresets.REGULAR },\n            apply: (s) => apply(RatingPresets.REGULAR, s, 1),\n        },\n        {\n            id: 2,\n            icon: \"🏆\",\n            label: \"Competitive\",\n            settings: { ...RatingPresets.COMPETITIVE },\n            apply: (s) => apply(RatingPresets.COMPETITIVE, s, 2),\n        },\n    ];\n\n    static matchPreset = (settings: any) => {\n        const filterd = RatingPresets.ALL.filter((preset) => RatingPresets.equals(preset.settings, settings));\n        if (filterd.length > 0) {\n            return filterd[0].id;\n        }\n        return -1;\n    };\n\n    static equals = (s1: any, s2: any) =>\n        s1.timedMode === s2.timedMode &&\n        s1.missPenalty === s2.missPenalty &&\n        s1.undoPenalty === s2.undoPenalty &&\n        s1.hintPenalty === s2.hintPenalty;\n}\n","import KeyboardLayout, { Universal } from \"../../../Game/KeyboardLayouts\";\n\nimport GamePad from \"../../../Game/GamePad\";\nimport Keyboard from \"../../../Game/Keyboard\";\nimport { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport { ScreenNavigator } from \"./ScreenNavigator\";\nimport { TreeNavigator } from \"../Menu/TreeNavigator\";\nimport { XY } from \"../../XY\";\n\nconst NavWrapper = (props: { navigator: ScreenNavigator; screen: string }) => {\n    const { navigator } = props;\n\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n\n    const assignState = (result: XY) => {\n        if (navigation.focus == \"screen\") {\n            setNavigation({ ...navigation, screen: result });\n        }\n        if (navigation.focus == \"menu\") {\n            throw \"Invalid navigation action\";\n        }\n    };\n\n    const onCancel = () =>\n        setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } });\n\n    const onUp = () => assignState(navigator.moveUp(navigation.screen.x, navigation.screen.y));\n\n    const onDown = () => assignState(navigator.moveDown(navigation.screen.x, navigation.screen.y));\n\n    const onLeft = () => assignState(navigator.moveLeft(navigation.screen.x, navigation.screen.y));\n\n    const onRight = () => assignState(navigator.moveRight(navigation.screen.x, navigation.screen.y));\n\n    const onAction = () => {\n        navigator.action(navigation.screen);\n    };\n\n    return navigation.focus == \"screen\" ? (\n        <>\n            <Keyboard\n                layout={Universal}\n                onUp={onUp}\n                onDown={onDown}\n                onRight={onRight}\n                onLeft={onLeft}\n                onAction={onAction}\n                onCancel={onCancel}\n            />\n            <GamePad onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} onCancel={onCancel} />\n        </>\n    ) : null;\n};\nexport default NavWrapper;\n\nexport const TreeNavWrapper = (props: { navigator: TreeNavigator; keyboardLayout: KeyboardLayout }) => {\n    const { navigator } = props;\n\n    const { navigation, setNavigation } = React.useContext(NavigationContext);\n\n    const assignState = (result: XY) => {\n        if (navigation.focus == \"menu\") {\n            setNavigation({ ...navigation, menu: result });\n        }\n        if (navigation.focus == \"screen\") {\n            throw \"Invalid navigation action\";\n        }\n    };\n\n    const onCancel = () =>\n        setNavigation({ ...navigation, focus: \"menu\", screeen: \"\", mainMenu: navigation.mainMenu, menu: { ...navigation.menu } });\n\n    const onUp = () => assignState(navigator.moveUp(navigation.menu.x, navigation.menu.y));\n\n    const onDown = () => assignState(navigator.moveDown(navigation.menu.x, navigation.menu.y));\n\n    const onLeft = () => assignState(navigator.moveLeft(navigation.menu.x, navigation.menu.y));\n\n    const onRight = () => assignState(navigator.moveRight(navigation.menu.x, navigation.menu.y));\n\n    const onAction = () => {\n        navigator.action(navigation.menu);\n    };\n\n    return navigation.focus == \"menu\" ? (\n        <>\n            <Keyboard\n                layout={props.keyboardLayout}\n                onUp={onUp}\n                onDown={onDown}\n                onRight={onRight}\n                onLeft={onLeft}\n                onAction={onAction}\n                onCancel={onCancel}\n            />\n            <GamePad onUp={onUp} onDown={onDown} onRight={onRight} onLeft={onLeft} onAction={onAction} onCancel={onCancel} />\n        </>\n    ) : null;\n};\n","import React from \"react\";\n\nconst Keyboard = (props) => {\n    const navListener = (e) => {\n        const evtobj = window.event ? event : e;\n        const { layout } = props;\n        if (layout.cancel(evtobj)) {\n            props.onCancel && props.onCancel();\n            e.preventDefault();\n        }\n        if (layout.left(evtobj)) {\n            props.onLeft && props.onLeft();\n            e.preventDefault();\n        }\n        if (layout.right(evtobj)) {\n            props.onRight && props.onRight();\n            e.preventDefault();\n        }\n        if (layout.up(evtobj)) {\n            props.onUp && props.onUp();\n            e.preventDefault();\n        }\n        if (layout.down(evtobj)) {\n            props.onDown && props.onDown();\n            e.preventDefault();\n        }\n        if (layout.action(evtobj)) {\n            props.onAction && props.onAction();\n            e.preventDefault();\n        }\n        if (layout.undo(evtobj)) {\n            props.onUndo && props.onUndo();\n            e.preventDefault();\n        }\n        if (layout.hint(evtobj)) {\n            props.onHint && props.onHint();\n            e.preventDefault();\n        }\n        if (layout.pause(evtobj)) {\n            props.onPause && props.onPause();\n            e.preventDefault();\n        }\n        if (layout.menu(evtobj)) {\n            props.onPause && props.onMenu();\n            e.preventDefault();\n        }\n    };\n    React.useEffect(() => {\n        document.addEventListener(\"keydown\", navListener);\n        return () => {\n            document.removeEventListener(\"keydown\", navListener);\n        };\n    }, [props]);\n    return null;\n};\nexport default Keyboard;\n","const EntropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\nexport default EntropyLevels;","import { NavigationContext } from \"../Context\";\nimport React from \"react\";\nimport { TreeNavigator } from \"./TreeNavigator\";\nimport { XY } from \"../../XY\";\n\ninterface _MenuButtonProps extends StaticMenuButtonProps {\n    //@todo keyboard navigation in a tree\n    x?: number;\n    y?: number;\n    navigator?: TreeNavigator;\n}\n\nexport interface StaticMenuButtonProps {\n    icon: string;\n    title: string;\n    onClick: (pos: XY) => void;\n    onFocus: (pos: XY) => void;\n    toggled?: boolean;\n    children?: any[];\n    disabled?: boolean;\n    skip?: boolean;\n}\ninterface MenuButtonProps extends StaticMenuButtonProps {\n    x: number;\n    y: number;\n    menuX: number;\n    menuY: number;\n    menuFocus: string;\n    active: boolean;\n    toggled: boolean;\n}\nconst MenuButton = (props: _MenuButtonProps) => {\n    if (typeof props.x == \"undefined\" || typeof props.y == \"undefined\") {\n        return null;\n    }\n\n    const { navigation } = React.useContext(NavigationContext);\n\n    const addItem = (child: any, index: number) => {\n        const assign = (n: any[]) => {\n            n[props.x || 0].buttons[index + 1] = { ...props, x: props.x, y: index + 1 };\n        };\n        assign(props.navigator?.rows || []);\n\n        return React.cloneElement(child, { key: index, x: props.x, y: index + 1, navigator: props.navigator });\n    };\n\n    return (\n        <_MenuButton\n            title={props.title}\n            x={props.x || 0}\n            y={props.y || 0}\n            icon={props.icon}\n            menuX={navigation.menu.x}\n            menuY={navigation.menu.y}\n            menuFocus={navigation.focus}\n            disabled={props.disabled}\n            active={false}\n            onFocus={props.onFocus}\n            onClick={props.onClick}\n            toggled={!!props.toggled}\n            skip={props.skip}\n        >\n            {props.children?.map(addItem)}\n        </_MenuButton>\n    );\n};\nconst _MenuButton = (props: MenuButtonProps) => {\n    const inputEl = React.useRef<HTMLButtonElement>(null);\n\n    let className = \"\";\n\n    if (props.y > 0) {\n        className += \" indented\";\n    }\n\n    const shouldBeFocus = props.menuX == props.x && props.menuY == props.y && props.menuFocus == \"menu\";\n\n    if (shouldBeFocus && !props.skip) {\n        className += \" highlight\";\n    }\n\n    React.useEffect(() => {\n        if (\n            props.menuX == props.x &&\n            props.menuY == props.y &&\n            props.menuFocus == \"menu\" &&\n            inputEl.current &&\n            inputEl.current !== document.activeElement\n        ) {\n            setClicking(true);\n            inputEl && inputEl.current && inputEl.current.focus();\n        }\n    }, [props.menuFocus, props.menuX, props.menuY, props.x, props.y]);\n\n    if (props.active) {\n        className += \" active\";\n    }\n\n    //omg this is the worst but it works (5h lost)\n    const [isClicking, setClicking] = React.useState(false);\n\n    const focus = () => {\n        if (!isClicking && !(props.menuX == props.x && props.menuY == props.y) && props.menuFocus == \"menu\") {\n            props.onFocus({ x: props.x, y: props.y });\n            setClicking(false);\n        }\n    };\n\n    const click = () => {\n        setClicking(false);\n        props.onClick({ x: props.x, y: props.y });\n    };\n\n    return (\n        <>\n            <button\n                ref={inputEl}\n                className={className}\n                title={props.title}\n                onFocus={focus}\n                onClick={click}\n                disabled={props.skip}\n                onMouseDown={() => setClicking(true)}\n            >\n                <div className=\"icon\">{props.icon}</div>\n                <div className=\"label\">{props.title}</div>\n            </button>\n            <div>{!props.toggled ? null : props.children}</div>\n        </>\n    );\n};\nexport default MenuButton;\n","import React from \"react\";\n\nconst MenuTitle = (props: { label: string }) => {\n    return <div className=\"title maintitle\">{props.label}</div>;\n};\nexport default MenuTitle;\n","import { XY } from \"../../XY\";\nimport { NavHandler } from \"../../NavHandler\";\n\nexport class TreeNavigator implements NavHandler {\n    rows: any[];\n    constructor() {\n        this.rows = [];\n    }\n    getRows = () => this.rows;\n    getRow = (x: number) => this.getRows()[x];\n    goToRow = (pos: XY) => {\n        const rows = this.getRows();\n        const row = rows[pos.y];\n        if (row.buttons.length - 1 < pos.x) {\n            return { ...pos, x: row.buttons.length - 1 };\n        }\n\n        return pos;\n    };\n    moveUp: (x: number, y: number) => XY = (x: number, y: number) => {\n        if (x == 0) {\n            return { x: this.rows.length - 1, y: 0 };\n        }\n        if (y > 0) {\n            return { x: x, y: y - 1 };\n        }\n\n        if (y == 0) {\n            const row = this.getRow(x - 1);\n            if (row.toggled) {\n                return { x: x - 1, y: row.buttons.length - 1 };\n            } else {\n                return { x: x - 1, y: y };\n            }\n        }\n\n        return { x: x - 1, y: y };\n    };\n    moveDown: (x: number, y: number) => XY = (x: number, y: number) => {\n        const row = this.getRow(x);\n        if (y == 0 && row.toggled) {\n            return { x: x, y: 1 };\n        }\n\n        if (y > 0 && y < row.buttons.length - 1) {\n            return { x: x, y: y + 1 };\n        }\n\n        if (y > 0) {\n            return { x: x + 1, y: 0 };\n        }\n\n        if (x < this.rows.length - 1) {\n            return { x: x + 1, y: y };\n        }\n\n        return { x: 0, y: 0 };\n    };\n    moveLeft: (x: number, y: number) => XY = (x: number, y: number) => {\n        return { x: x, y: y };\n    };\n    moveRight: (x: number, y: number) => XY = (x: number, y: number) => {\n        return { x: x, y: y };\n    };\n    action: (xy: XY) => void = () => {\n        const activeElement: any = document.activeElement;\n        activeElement && activeElement.click();\n    };\n}\n","import KeyboardLayout from \"../../../Game/KeyboardLayouts\";\nimport React from \"react\";\nimport { TreeNavWrapper } from \"../Screens/NavWrapper\";\nimport { TreeNavigator } from \"./TreeNavigator\";\n\nconst MenuTree = (props: { children: any[]; keyboardLayout: KeyboardLayout }) => {\n    const navigator = new TreeNavigator();\n    navigator.rows = [];\n    let index = -1;\n    let _i = -1;\n    const addItem = (child: any) => {\n        _i++;\n        if (!child.props.skip) {\n            index++;\n            navigator.rows[index] = { x: index, y: 0, ...child.props, buttons: [] };\n        }\n        return React.cloneElement(child, { key: _i, x: index, y: 0, navigator: navigator });\n    };\n    return (\n        <>\n            {props.children.map(addItem)}\n            <TreeNavWrapper navigator={navigator} keyboardLayout={props.keyboardLayout} />\n        </>\n    );\n};\nexport default MenuTree;\n"],"sourceRoot":""}