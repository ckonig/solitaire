{"version":3,"sources":["View/Context.ts","View/Game/Dealer.js","View/UI/EndScreen.js","View/Game/BlinkingComponent.js","View/Game/Card.js","View/Game/MouseHand.js","View/Game/TouchHand.js","View/Game/Hand.js","View/Game/StackBase.js","View/Game/Foundation.js","View/UI/Header/Clock.js","View/UI/Header/EndGame.js","View/UI/Header/Hearts.js","View/UI/Header/Hint.js","View/UI/Header/Points.js","View/UI/RestartGame.js","View/UI/Header/ToggleMenu.js","View/UI/Header/Undo.js","View/UI/Header/Header.js","View/UI/Menu.js","View/Game/Stock.js","View/Game/Tableau.js","View/Game/Waste.js","View/Game/Board.js","Business/Dealer.ts","Business/Dispatcher.ts","Business/Blinker.ts","Business/Foundation.ts","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","Model/Game/Foundation.js","Model/Game/Rating.js","Model/Game/TimeMachine.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings/SuggestionModes.ts","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.ts","Model/Game/Waste.js","Model/Model.ts","Business/Stock.ts","Business/Tableau.ts","Business/Waste.ts","Business/Suggestions.ts","Business/BusinessModel.ts","View/Game/BoardWrap.tsx","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/Context.ts","View/UI/StartScreen/Difficulty.tsx","View/UI/StartScreen/QuickStart.tsx","View/UI/StartScreen/RatingOptions.ts","View/UI/StartScreen/Rating.tsx","View/UI/StartScreen/TouchDetector.js","View/UI/StartScreen/StartScreen.tsx","App.tsx","index.tsx"],"names":["defaultValue","state","replaceContext","updateContext","updateGameContext","restart","GlobalContext","React","createContext","Provider","Dealer","useContext","timeouts","settings","launchSettings","isTouch","dealer","isDealt","dealAll","deal","dealt","push","setTimeout","dealOne","useEffect","forEach","timeout","clearTimeout","EndScreen","game","isEnded","className","getElapsed","rating","points","getTimePenalty","started","end","Date","now","getBonusPoints","getTotal","onClick","BlinkingComponent","selector","this","context","blinkFor","unblink","Component","contextType","Card","props","e","ele","target","includes","offsetParent","rect","getBoundingClientRect","position","click","x","clientX","ownerDocument","defaultView","pageXOffset","y","clientY","pageYOffset","element","model","label","isHidden","type","icon","face","style","pointerEvents","zIndex","offsetTop","top","entropyStyle","offsetLeft","left","getCardStyle","hasSuggestion","isSuggested","suggestion","isSelected","source","blink","getClassName","disabled","canClick","tabIndex","aria-label","MouseHand","onMouseMove","positionFixed","setState","updateDisplay","myRef","createRef","bind","onKeyDown","document","addEventListener","putBack","removeEventListener","node","current","hand","parent","window","event","keyCode","getOffsetTop","index","ref","stack","map","card","TouchHand","c","Hand","p","length","mouseMode","StackBase","classname","visible","suggested","children","Foundation","s","foundation","stacks","Stacks","i","Clock","useState","elapsed","setElapsed","interval","setInterval","clearInterval","EndGame","title","Hearts","recyclingMode","passes","createString","Array","from","keys","join","stock","getHearts","Hint","isVisible","suggestionMode","supportsHints","isTemporary","isDisabled","suggestOnce","enableHint","listenForH","Points","RestartGame","timemachine","previousStates","ToggleMenu","menu","showMenu","Undo","undo","_state","previous","popPreviousState","penalize","ctrlZ","evtobj","ctrlKey","Math","pow","multiplicator","Header","Menu","onChange","sm","value","setSuggestionMode","key","hintPenalty","suggestionModes","mm","mouseModes","lvl","setEntropy","baseEntropy","entropyLevels","entropyLevel","interactionEntropy","Stock","Tableau","tableau","getOffset","canUncover","Waste","waste","drawMode","isHoldingCard","isFromWaste","additionalOffset","Board","dealingAt","callback","newCard","pop","isFirst","Dispatcher","clickHandler","getHandler","dispatchPutDown","dispatchPickup","Blinker","startBlink","registerBlink","stopBlink","wouldAccept","src","add","putDown","registerMove","tryDetectEnd","_card","getTop","getPreviousUsed","pickUp","remove","registerPickup","countCards","causeEntropy","level","random","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","DeckSize","Suits","heart","color","club","diamond","spade","Deck","Object","deckSize","flat","reverse","shuffleArray","array","j","floor","getCurrentAccepted","currentFoundation","acceptedCards","hasMoreThanOneCard","accepts","currentCard","currentAccepted","usedCards","f","parseInt","reduce","a","b","suit","slice","origStack","Rating","currentMove","rateMove","registerRecycle","console","debug","registerUncover","undoPenalty","penalty","registerHint","done","start","secondsToFinish","trunc","round","on","missPenalty","move","isTableau","obj","substr","isFoundation","TimeMachine","memorable","modified","pushPreviousState","modelEquals","id","isRequested","popPrevious","stackEquals","every","stacksEqual","Game","disableHint","padleft","msec","hh","ss","splice","isHoldingKing","isFromCurrentSource","isFromFoundation","isFromTableau","isFromAnyTableau","substring","getTableauIndex","SuggestionMode","next","SuggestionModes","NONE","SCORED","REGULAR","FULL","ONCE","TWICE","raw","get","all","allSuggestionModes","filter","mode","default","getHintMode","Settings","hintMode","recycle","setCardProperties","recyclings","isOnTop","popTop","result","getStack","canPutDown","range","indexOf","getCard","popWithFollowing","stackEntropy","uncover","entropy","concat","offset","tryPutDown","canAdd","addAll","_a","_b","_c","Model","getInitialState","deck","shuffle","_position","moveToWaste","recycleWaste","canRecycle","tryUncover","Suggestions","evaluateOptions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","isMoveOfKingBetweenEmptySlots","isMoveBetweenSimilarParentCards","isNotLoop","foundAny","wasteState","BusinessModel","cardIndex","tableauState","filtered","_stack","disableSuggestion","suggestor","withSuggestions","withHandlers","BoardWrap","modifier","render","DifficultyOptions","lines","StartScreenContext","difficultySettings","ratingPreset","ratingSettings","Difficulty","updateDifficulty","getButtonClass","option","line","QuickStart","RatingPresets","timedMode","matchPreset","filterd","preset","s1","s2","ctx","setContext","toggle","setToggle","customizeRating","r","String","href","rel","TouchDetector","prefixes","split","DocumentTouch","query","matchMedia","matches","error","StartScreen","App","appState","setAppState","initialized","ReactDOM","StrictMode","getElementById"],"mappings":"gVAaMA,EAAe,CACjBC,MAAO,KACPC,eAAgB,aAChBC,cAAe,aACfC,kBAAmB,aACnBC,QAAS,cAGPC,EAAgBC,IAAMC,cAA8BR,GAE7CS,EAAWH,EAAcG,SAEvBH,ICIAI,EA1BA,WAAO,IAAD,EACiBH,IAAMI,WAAWL,GAA3CL,EADS,EACTA,MAAOC,EADE,EACFA,eACTU,EAAW,GAEjB,GAAIX,EAAMY,SAASC,eAAeC,QAC1Bd,GAASA,EAAMe,SAAWf,EAAMe,OAAOC,SACvCf,EAAeD,EAAMe,OAAOE,QAAQjB,QAErC,CACH,IAAMkB,EAAO,SAAPA,EAAQC,GACVR,EAASS,KACLC,YAAW,WACHrB,GAASA,EAAMe,SAAWf,EAAMe,OAAOC,SACvCf,EAAeD,EAAMe,OAAOO,QAAQH,EAAOD,MAEhD,MAIXZ,IAAMiB,WAAU,WAEZ,OADAL,EAAKlB,EAAMe,OAAOI,OACX,kBAAMR,EAASa,SAAQ,SAACC,GAAD,OAAaC,aAAaD,SACzD,IAEP,OAAO,MCAIE,G,MAtBG,WAAO,IAAD,EACOrB,IAAMI,WAAWL,GAApCL,EADY,EACZA,MAAOI,EADK,EACLA,QAEf,OAAQJ,EAAM4B,KAAKC,QACf,sBAAKC,UAAU,sBAAf,UACI,qBAAKA,UAAU,QAAf,0BACA,sBAAKA,UAAU,UAAf,UACI,yCAAY9B,EAAM4B,KAAKG,gBACvB,2CAAc/B,EAAM4B,KAAKI,OAAOC,UAChC,iDAAoBjC,EAAM4B,KAAKI,OAAOE,eAAelC,EAAM4B,KAAKO,QAASnC,EAAM4B,KAAKQ,KAAOC,KAAKC,UAChG,iDAAoBtC,EAAM4B,KAAKI,OAAOO,eAAevC,EAAM4B,KAAKO,QAASnC,EAAM4B,KAAKQ,KAAOC,KAAKC,UAChG,iDAAoBtC,EAAM4B,KAAKI,OAAOQ,SAASxC,EAAM4B,KAAKO,QAASnC,EAAM4B,KAAKQ,KAAOC,KAAKC,UAC1F,8BACI,yBAAQG,QAASrC,EAAjB,+BACO,sDAXM,O,OCLZsC,E,kDACjB,WAAYC,GAAW,IAAD,8BAClB,gBACKlB,QAAU,KACf,EAAKkB,SAAWA,EAHE,E,iEAQA,IAAD,OACbC,KAAKD,SAASC,KAAKC,QAAQ7C,OAAO8C,WAClCF,KAAKnB,QAAUJ,YACX,kBACI,EAAKwB,QAAQ1C,mBAAkB,SAACH,GAC5B,EAAK2C,SAAS3C,GAAO+C,QAAQ/C,QAErC,Q,6CAMR0B,aAAakB,KAAKnB,a,GAtBqBuB,aAA1BN,EAOVO,YAAc5C,ECRzB,IAgHe6C,EAhHF,SAACC,GAGV,IAAMV,EAAU,SAACW,GAEb,IADA,IAAIC,EAAMD,EAAEE,OACLD,IAAQA,EAAIvB,UAAUyB,SAAS,cAClCF,EAAMA,EAAIG,aAGd,IAAMC,EAAOJ,EAAIK,wBACXC,EAAW,CACbC,MAAO,CACHC,EAAGT,EAAEU,QAAUT,EAAIU,cAAcC,YAAYC,YAC7CC,EAAGd,EAAEe,QAAUd,EAAIU,cAAcC,YAAYI,aAEjDC,QAAS,CACLR,EAAGJ,EAAKI,EACRK,EAAGT,EAAKS,IAIhBf,EAAMV,QAAN,eAAmBU,EAAMmB,OAASX,IA0ChCY,EAAQpB,EAAMmB,MAAME,SAAW,cAAgBrB,EAAMmB,MAAMG,KAAKC,KAAOvB,EAAMmB,MAAMK,KAAO,QAKhG,OACI,qBAAKC,MAbAzB,EAAMV,QAIJ,GAHI,CAAEoC,cAAe,QAYK/C,UAAU,aAA3C,SACI,wBACI8C,MAnCS,WACjB,IAAMA,EAAK,aACPE,OAAQ3B,EAAM2B,OAAS3B,EAAM2B,SAAW3B,EAAM4B,UAAY,EAC1DC,IAAK7B,EAAM4B,UAAY5B,EAAM4B,UAAY,GAAK,KAAO,GAClD5B,EAAMmB,MAAMW,cAYnB,OARI9B,EAAM+B,aACNN,EAAMO,KAA0B,EAAnBhC,EAAM+B,WAAiB,MAGnC/B,EAAMV,UACPmC,EAAMC,cAAgB,QAGnBD,EAmBQQ,GACPtD,UAhDS,WACjB,IAAMuD,EAAgBlC,EAAMmC,aAAenC,EAAMmB,MAAMiB,WACnDzD,EAAS,8BAA0BqB,EAAMmB,MAAMG,KAAKC,MAOxD,OANA5C,GAAcqB,EAAMqC,YAAeH,EAAsD,GAA5E,sBAAqDlC,EAAMmB,MAAMmB,QAC9E3D,GAAaqB,EAAMqC,WAAa,iBAAmB,GACnD1D,GAAaqB,EAAMuC,MAAQ,SAAW,GAEtC5D,GAAauD,EAAgB,kBAAoB,GAyC9BM,GACXlD,QAASA,GAAoB,KAC7BmD,UAAWzC,EAAM0C,SACjBC,SAAU,EACVC,aAAYxB,EANhB,SAQKpB,EAAMmB,MAAME,SACT,qBAAK1C,UAAU,YAAf,kBAEA,sBAAKA,UAAU,sBAAf,UACI,8BACI,qBAAKA,UAAU,eAAf,SAA+BqB,EAAMmB,MAAMG,KAAKC,SAEpD,8BACI,qBAAK5C,UAAU,aAAf,SAA6BqB,EAAMmB,MAAMK,SAE7C,uCACA,8BACI,qBAAK7C,UAAU,eAAf,SAA+BqB,EAAMmB,MAAMG,KAAKC,SAEpD,qBAAK5C,UAAU,WAAf,SACI,qBAAKA,UAAU,eAAf,SAA+BqB,EAAMmB,MAAMK,SAE/C,8BACI,qBAAK7C,UAAU,eAAf,SAA+BqB,EAAMmB,MAAMG,KAAKC,SAEpD,uCACA,8BACI,qBAAK5C,UAAU,cAAf,SAA8BqB,EAAMmB,MAAMK,SAE9C,8BACI,qBAAK7C,UAAU,eAAf,SAA+BqB,EAAMmB,MAAMG,KAAKC,iB,OCtGvDsB,E,kDACjB,WAAY7C,GAAQ,IAAD,8BACf,cAAMA,IAyBV8C,YAAc,SAAC7C,GACP,EAAKpD,MAAMkG,eACX,EAAKC,UAAS,SAACnG,GAEX,OADAA,EAAMkG,eAAgB,EACf,eAAKlG,MAGpB,EAAKoG,cAAchD,IA/BnB,EAAKiD,MAAQ/F,IAAMgG,YAEnB,EAAKtG,MAAQ,CACTkG,eAAe,GAEnB,EAAKD,YAAc,EAAKA,YAAYM,KAAjB,gBACnB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBARF,E,gEAYfE,SAASC,iBAAiB,YAAa9D,KAAKqD,aAAa,GACrDrD,KAAKO,MAAMwD,SACXF,SAASC,iBAAiB,UAAW9D,KAAK4D,WAAW,GAEzD5D,KAAKuD,UAAS,iBAAO,CACjBD,eAAe,Q,6CAKnBO,SAASG,oBAAoB,YAAahE,KAAKqD,aAAa,GAC5DQ,SAASC,iBAAiB,UAAW9D,KAAK4D,WAAW,K,oCAa3CpD,GACV,IAAKR,KAAK5C,MAAMkG,cAAe,CAC3B,IAAMW,EAAOjE,KAAKyD,MAAMS,QACxB,GAAIlE,KAAKO,MAAM4D,MAAQnE,KAAKO,MAAM6D,QAAUpE,KAAKO,MAAM4D,KAAKtB,QACpDrC,EAAG,CACH,IAAMS,EAAIT,EAAEU,QAAUlB,KAAKO,MAAM4D,KAAKpD,SAASC,MAAMC,EAAIjB,KAAKO,MAAM4D,KAAKpD,SAASU,QAAQR,EACtFK,EAAId,EAAEe,QAAUvB,KAAKO,MAAM4D,KAAKpD,SAASC,MAAMM,EAAItB,KAAKO,MAAM4D,KAAKpD,SAASU,QAAQH,EACxF2C,EAAKjC,MAAMI,IAAMd,EAAI,KACrB2C,EAAKjC,MAAMO,KAAOtB,EAAI,KACtBgD,EAAKjC,MAAMjB,SAAW,e,gCAM5BP,GAEgB,KADP6D,OAAOC,MAAQA,MAAQ9D,GAC3B+D,SAAiBvE,KAAKO,MAAM4D,MAAQnE,KAAKO,MAAM6D,QAAUpE,KAAKO,MAAM4D,KAAKtB,QAAQ7C,KAAKO,MAAMwD,Y,+BAGjG,IAAD,OACCS,EAAe,SAACC,GAClB,OAAI,EAAKrH,MAAMkG,cACJ,EAAK/C,MAAM4B,UAAoB,GAARsC,EAEnB,GAARA,GAEX,OAAKzE,KAAKO,MAAM4D,MAAQnE,KAAKO,MAAM6D,SAAWpE,KAAKO,MAAM4D,KAAKtB,OAI1D,qBAAK6B,IAAK1E,KAAKyD,MAAf,SACKzD,KAAKO,MAAM4D,MACRnE,KAAKO,MAAM4D,KAAKQ,OAChB3E,KAAKO,MAAM4D,KAAKQ,MAAMC,KAAI,SAACC,EAAMJ,GAAP,OACtB,cAAC,EAAD,CAAMxB,UAAU,EAAkBvB,MAAOmD,EAAM1C,UAAWqC,EAAaC,GAAQvC,OAAQ,IAAe,GAARuC,EAAY7B,YAAY,GAA3F6B,QAPhC,S,GAjEoB/G,IAAM0C,WCAxB0E,E,uKAEP,IAAD,OACL,OAAK9E,KAAKO,MAAM4D,MAAQnE,KAAKO,MAAM6D,SAAWpE,KAAKO,MAAM4D,KAAKtB,OAGvD,CACH7C,KAAKO,MAAM4D,MACPnE,KAAKO,MAAM4D,KAAKQ,OAChB3E,KAAKO,MAAM4D,KAAKQ,MAAMC,KAAI,SAACC,EAAMJ,GAAP,OACtB,cAAC,EAAD,CAEI/C,MAAOmD,EACP5B,UAAU,EACVd,UAAW,EAAK5B,MAAM4B,UAAoB,GAARsC,EAClCnC,WAAY,EAAK/B,MAAM+B,WACvBJ,OAAQ,IAAe,GAARuC,EACf7B,YAAY,EACZ/C,QAAS,SAACkF,GAAD,OAAO,EAAKxE,MAAMV,QAAQkF,KAP9BN,OAPV,S,GAJoB/G,IAAM0C,WC0B9B4E,EAxBF,SAACzE,GAAW,IACbnD,EAAUM,IAAMI,WAAWL,GAA3BL,MACR,IAAKA,EAAM+G,MAAQ5D,EAAM6D,SAAWhH,EAAM+G,KAAKtB,OAC3C,OAAO,KAEX,IAAMkB,EAAU,SAACgB,EAAGE,GAAJ,OAAU1E,EAAMV,QAAQU,EAAMoE,MAAMpE,EAAMoE,MAAMO,OAAS,GAAID,EAAG1E,EAAMoE,MAAMO,OAAS,IACrG,MAAgC,iBAA5B9H,EAAMY,SAASmH,UACR,cAAC,EAAD,CAAWf,OAAQ7D,EAAM6D,OAAQD,KAAM/G,EAAM+G,KAAMhC,UAAW5B,EAAM4B,UAAW4B,QAASA,IAEnE,mBAA5B3G,EAAMY,SAASmH,UAEX,cAAC,EAAD,CACIf,OAAQ7D,EAAM6D,OACdD,KAAM/G,EAAM+G,KACZhC,UAAW5B,EAAM4B,UACjBG,WAAY/B,EAAM+B,WAClBzC,QAASkE,IAIV,MCAAqB,EAvBG,SAAC7E,GACf,IAAI8E,EAAY,mBAgBhB,OAdI9E,EAAM+E,QACF/E,EAAMuC,MACNuC,GAAa,gBAEbA,GAAa,gBAGjBA,GAAa,eAGb9E,EAAMgF,YACNF,GAAa,qBAIb,wBAAQnG,UAAWmG,EAAWxF,QAAS,kBAAMU,EAAMV,WAAWmD,UAAWzC,EAAM+E,QAA/E,SACK/E,EAAMiF,YCdEC,E,kDACjB,WAAYlF,GAAQ,wCACV,SAACmF,GAAD,OAAOA,EAAEC,WAAWC,OAAOrF,EAAMkE,U,qDAWjC,IAAD,OACC/C,EAAQ1B,KAAKO,MAAMmB,MACzB,OACI,gCACI,cAAC,EAAD,CACI6D,UAAW7D,EAAMiB,aAAejB,EAAMiD,MAAMO,OAC5CpC,MAAOpB,EAAMxB,SACbL,QAAS,kBAAM,EAAKU,MAAMV,QAAQ,KAAM,KAAM,EAAKU,MAAMkE,QACzDa,SAAU5D,EAAMiD,MAAMO,OAJ1B,SAMI,qBAAKhG,UAAW,qCAAuCwC,EAAMI,KAA7D,SAAoEJ,EAAMI,SAE7EJ,EAAMiD,MAAMC,KAAI,SAACC,EAAMJ,GAAP,OACb,cAAC,EAAD,CAEI/C,MAAOmD,EACP5B,SAAUvB,EAAMiD,MAAMO,OAAS,GAAKT,EACpC3B,MAAOpB,EAAMxB,SACbwC,YAAahB,EAAMiB,YAAcjB,EAAMiD,MAAMO,OAAS,GAAKT,EAC3D5E,QAAS,SAACkF,EAAGE,GAAJ,OAAU,EAAK1E,MAAMV,QAAQkF,EAAGE,EAAG,EAAK1E,MAAMkE,SALlDA,MAQb,cAAC,EAAD,CACIL,OAAQ,cAAgBpE,KAAKO,MAAMkE,MACnC5E,QAAS,SAACkF,EAAGE,GAAJ,OAAU,EAAK1E,MAAMV,QAAQ6B,EAAMiD,MAAMjD,EAAMiD,MAAMO,OAAS,GAAID,EAAG,EAAK1E,MAAMkE,QACzFE,MAAOjD,EAAMiD,UAtBX3E,KAAKO,MAAMkE,W,GAhBO3E,GAAnB2F,EAKVI,OAAS,WAAO,IAAD,EACmBnI,IAAMI,WAAWL,GAA9CL,EADU,EACVA,MAAOG,EADG,EACHA,kBACTsC,EAAU,SAACkF,EAAGE,EAAGa,GAAP,OAAavI,EAAkBH,EAAMuI,WAAW9F,QAAQkF,EAAGE,EAAGa,KAC9E,OAAO1I,EAAMuI,WAAWC,OAAOhB,KAAI,SAACe,EAAYlB,GAAb,OAC/B,cAAC,EAAD,CAAwB/C,MAAOiE,EAAYlB,MAAOA,EAAO5E,QAASA,GAAjD4E,O,UCQdsB,EArBD,WAAO,IACT3I,EAAUM,IAAMI,WAAWL,GAA3BL,MADQ,EAEcM,IAAMsI,SAAS,GAF7B,mBAETC,EAFS,KAEAC,EAFA,KAahB,OAVAxI,IAAMiB,WAAU,WACZ,IAAMwH,EAAWC,aAAY,WACrBhJ,EAAM4B,KAAKO,SACX2G,EAAW9I,EAAM4B,KAAKG,gBAE3B,KAEH,OAAO,kBAAMkH,cAAcF,MAC5B,IAEK/I,EAAM4B,KAAKO,SAAY0G,EAC3B,sBAAK/G,UAAU,eAAf,UACI,qBAAKA,UAAU,iBAAf,0BACC+G,KAHgC,MCF9BK,EAXC,WAAO,IACX9I,EAAYE,IAAMI,WAAWL,GAA7BD,QAER,OACI,8BACI,wBAAQ+I,MAAM,WAAW1G,QAASrC,EAAlC,mCCkBGgJ,EAvBA,WAAO,IACVpJ,EAAUM,IAAMI,WAAWL,GAA3BL,MAoBR,OAAO,qBAAK8B,UAAU,kBAAf,SAnBW,WACd,GAAmD,YAA/C9B,EAAMY,SAASC,eAAewI,cAC9B,MAAO,eAGX,GAAmD,UAA/CrJ,EAAMY,SAASC,eAAewI,cAC9B,OAAOrJ,EAAM4B,KAAK0H,OAAS,EAAI,eAAO,eAG1C,GAAmD,UAA/CtJ,EAAMY,SAASC,eAAewI,cAA2B,CACzD,IAAME,EAAe,SAACzB,EAAQpD,GAAT,OACjB8E,MAAMC,KAAK,IAAID,MAAM1B,GAAQ4B,QACxBlC,KAAI,kBAAM9C,KACViF,KAAK,KAEd,OAAOJ,EAAavJ,EAAM4J,MAAMN,OAAQ,gBAAQC,EAAa,EAAIvJ,EAAM4J,MAAMN,OAAQ,gBAEzF,OAAO,KAE8BO,MCiB9BC,EAtCF,WAAO,IAAD,EACkBxJ,IAAMI,WAAWL,GAA1CL,EADO,EACPA,MAAOE,EADA,EACAA,cAIT6J,EAAY,SAAC/J,GAAD,OAAWA,EAAMY,SAASoJ,eAAeC,eAAiBjK,EAAMY,SAASoJ,eAAeE,aACpGC,EAAa,SAACnK,GAAD,OAAWA,EAAMY,SAASoJ,eAAeE,aAEtDE,EAAc,WAChBlK,GAAc,SAACF,GACP+J,EAAU/J,KAAWmK,EAAWnK,IAChCA,EAAMY,SAASyJ,iBAKrBC,EAAa,SAAClH,GAEM,KADP6D,OAAOC,MAAQA,MAAQ9D,GAC3B+D,SACPiD,KAWR,OAPIL,EAAU/J,KAAWmK,EAAWnK,IAChCM,IAAMiB,WAAU,WAEZ,OADAkF,SAASC,iBAAiB,UAAW4D,GAC9B,kBAAM7D,SAASG,oBAAoB,UAAW0D,MACtD,IAGCP,EAAU/J,GACd,8BACI,wBAAQmJ,MAAM,OAAO1G,QAAS,kBAAM2H,KAAexE,SAAUuE,EAAWnK,GAAxE,4BAFmB,MCpBhBuK,EAVA,WAAO,IACVvK,EAAUM,IAAMI,WAAWL,GAA3BL,MAER,OACI,qCACI,qBAAK8B,UAAU,iBAAf,0BADJ,IAC8C9B,EAAM4B,KAAKI,OAAOC,WCUzDuI,EAfK,WAAO,IAAD,EACYlK,IAAMI,WAAWL,GAA3CL,EADc,EACdA,MAAOC,EADO,EACPA,eAKf,OACI,8BACI,wBAAQkJ,MAAM,UAAUvD,UAAW5F,EAAM4B,KAAK6I,YAAYC,eAAe5C,OAAQrF,QAL3E,kBACVxC,GAAe,SAACD,GAAD,OAAYA,EAAM4B,KAAK6I,YAAYC,eAAiB1K,EAAM4B,KAAK6I,YAAYC,eAAe,GAAK,SAI1G,6BCYGC,EApBI,WAAO,IAAD,EACYrK,IAAMI,WAAWL,GAA1CL,EADa,EACbA,MAAOE,EADM,EACNA,cAUf,OACI,8BACI,wBAAQiJ,MAAM,WAAW1G,QAAS,kBAVtBmI,EAUuC5K,EAAMY,SAASiK,cATtE3K,GAAc,SAACF,GACPA,EAAMY,SAASiK,UAAYD,IAC3B5K,EAAMY,SAASiK,UAAY7K,EAAMY,SAASiK,aAHnC,IAACD,GAUZ,6BCwBGE,EArCF,WAAO,IAAD,EACmBxK,IAAMI,WAAWL,GAA3CL,EADO,EACPA,MAAOC,EADA,EACAA,eACT8K,EAAO,kBACT9K,GAAe,SAAC+K,GACZ,IAAMC,EAAWD,EAAOpJ,KAAK6I,YAAYS,iBAAiBlL,EAAM4B,KAAK6I,YAAYC,eAAe5C,OAAS,EAAG9H,GAC5G,OAAIiL,GACAA,EAASrJ,KAAKI,OAAOmJ,SAASH,EAAOpJ,KAAKI,QACnCiJ,GAEJ,SAGTG,EAAQ,SAAChI,GACX,IAAMiI,EAASpE,OAAOC,MAAQA,MAAQ9D,EAChB,IAAlBiI,EAAOlE,SAAiBkE,EAAOC,SAC/BP,KASR,OALAzK,IAAMiB,WAAU,WAEZ,OADAkF,SAASC,iBAAiB,UAAW0E,GAC9B,kBAAM3E,SAASG,oBAAoB,UAAWwE,OAIrD,8BACI,wBACIxF,UAAW5F,EAAM4B,KAAK6I,YAAYC,eAAe5C,OACjDqB,MAAO,iBAAmBoC,KAAKC,IAAI,EAAGxL,EAAM4B,KAAKI,OAAOyJ,eAAiB,IACzEhJ,QAASsI,EAHb,uBCAGW,EAjBA,kBACX,sBAAK5J,UAAU,SAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,OAEJ,cAAC,EAAD,IACA,sBAAKA,UAAU,iBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCsEG6J,G,MAzFF,WAAO,IAAD,EACkBrL,IAAMI,WAAWL,GAA1CL,EADO,EACPA,MAAOE,EADA,EACAA,cAiBf,OAAKF,EAAMY,SAASiK,SAKhB,sBAAK/I,UAAU,gBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,wBAAQW,QAAS,kBAfTmI,EAe0B5K,EAAMY,SAASiK,cAdzD3K,GAAc,SAACF,GACPA,EAAMY,SAASiK,UAAYD,IAC3B5K,EAAMY,SAASiK,UAAY7K,EAAMY,SAASiK,aAHnC,IAACD,GAeR,4BAEJ,qBAAK9I,UAAU,QAAf,sBACA,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,yBACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,uFACA,wBACI8J,SAAU,SAACxI,GAAD,OA9BPyI,EA8BgCzI,EAAEE,OAAOwI,MA9BlC5L,GAAc,SAACF,GAAD,OAAWA,EAAMY,SAASmL,kBAAkBF,MAAlE,IAACA,GA+BHC,MAAO9L,EAAMY,SAASoJ,eAAegC,IACrCpG,SAAU5F,EAAMY,SAASC,eAAeoL,YAH5C,SAKKjM,EAAMY,SAASsL,gBAAgB1E,KAAI,SAACwC,GAAD,OAChC,wBAAiC8B,MAAO9B,EAAegC,IAAvD,SACKhC,EAAezF,OADPyF,EAAegC,gBAO5C,sBAAKlK,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,yBACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,gFACA,wBAAQ8J,SAAU,SAACxI,GAAD,OA3ChB+I,EA2CoC/I,EAAEE,OAAOwI,MA3CtC5L,GAAc,SAACF,GAAD,OAAYA,EAAMY,SAASmH,UAAYoE,KAA7D,IAACA,GA2CqDL,MAAO9L,EAAMY,SAASmH,UAA7E,SACK/H,EAAMY,SAASwL,WAAW5E,KAAI,SAACO,GAAD,OAC3B,wBAAwB+D,MAAO/D,EAA/B,SACKA,GADQA,cAO7B,sBAAKjG,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,0BACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,gFACA,wBAAQ8J,SAAU,SAACxI,GAAD,OA1DdiJ,EA0DoCjJ,EAAEE,OAAOwI,MA1DrC5L,GAAc,SAACF,GAAD,OAAWA,EAAMsM,WAAWD,MAAnD,IAACA,GA0DqDP,MAAO9L,EAAMY,SAAS2L,YAA/E,SACKvM,EAAMY,SAAS4L,cAAchF,KAAI,SAACiF,EAAcpF,GAAf,OAC9B,wBAA2ByE,MAAOzE,EAAlC,SACKoF,GADQA,cAO7B,sBAAK3K,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,iCACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,+EACA,wBAAQ8J,SAAU,SAACxI,GAAD,OAtEPiJ,EAsEoCjJ,EAAEE,OAAOwI,MAtErC5L,GAAc,SAACF,GAAD,OAAYA,EAAMY,SAAS8L,mBAAqBL,KAAvE,IAACA,GAsEqDP,MAAO9L,EAAMY,SAAS8L,mBAAtF,SACK1M,EAAMY,SAAS4L,cAAchF,KAAI,SAACiF,EAAcpF,GAAf,OAC9B,wBAA2ByE,MAAOzE,EAAlC,SACKoF,GADQA,oBA3D9B,OCnBME,E,kDACjB,aAAe,wCACL,SAACrE,GAAD,OAAOA,EAAEsB,S,qDAGT,IAAD,EACgChH,KAAKC,QAAlC7C,EADH,EACGA,MAAOG,EADV,EACUA,kBACTsC,EAAU,SAACkF,EAAGE,EAAGa,GAAP,OAAavI,EAAkBH,EAAM4J,MAAMnH,QAAQkF,EAAGE,EAAGa,KACzE,OACI,gCACI,cAAC,EAAD,CACIhD,MAAO1F,EAAM4J,MAAM9G,SACnBL,QAASA,EACT0F,UAAWnI,EAAM4J,MAAMrE,aAAevF,EAAM4J,MAAMrC,MAAMO,OACxDI,SAAUlI,EAAM4J,MAAMrC,MAAMO,SAE/B9H,EAAM4J,MAAMrC,MAAMC,KAAI,SAACC,EAAMJ,GAAP,OACnB,cAAC,EAAD,CAEI/C,MAAOmD,EACP5B,SAAUwB,GAASrH,EAAM4J,MAAMrC,MAAMO,OAAO,EAC5C/C,UAAYsC,EAAQ,GAAM,EAC1B3B,MAAO1F,EAAM4J,MAAM9G,SACnBwC,YAAatF,EAAM4J,MAAMrE,YAAc8B,GAASrH,EAAM4J,MAAMrC,MAAMO,OAAS,EAC3ErF,QAASA,GANJ4E,a,GAlBM3E,GCEdkK,E,kDACjB,WAAYzJ,GAAQ,wCACV,SAACmF,GAAD,OAAOA,EAAEuE,QAAQrE,OAAOrF,EAAMkE,U,qDAUpC,IAAMlE,EAAQP,KAAKO,MAEb2J,EAAY,SAACzF,GACf,IAAK,IAAIqB,EAAI,EAAGA,GAAKrB,EAAOqB,IACxB,GAAIvF,EAAMmB,MAAMiD,MAAMmB,KAAOvF,EAAMmB,MAAMiD,MAAMmB,GAAGlE,SAE9C,OADa,GAAJkE,EAAuB,IAAbrB,EAAQqB,GAKnC,OADiB,GAARrB,GAIb,OACI,gCACI,cAAC,EAAD,CACIc,UAAWhF,EAAMmB,MAAMiB,aAAepC,EAAMmB,MAAMiD,MAAMO,OACxDpC,MAAOvC,EAAMmB,MAAMxB,SACnBL,QAAS,kBAAMU,EAAMV,QAAQ,KAAM,KAAMU,EAAMkE,QAC/Ca,SAAU/E,EAAMmB,MAAMiD,MAAMO,SAE/B3E,EAAMmB,MAAMiD,MAAMC,KAAI,SAACC,EAAMJ,GAAP,OACnB,cAAC,EAAD,CAEI/C,MAAOmD,EACP5B,UAAW4B,EAAKjD,UAAYrB,EAAM6D,OAAO+F,WAAW5J,EAAMkE,MAAOI,GACjE/B,MAAOvC,EAAMmB,MAAMxB,SACnBwC,YAAanC,EAAMmB,MAAMiB,YAAcpC,EAAMmB,MAAMiD,MAAMO,OAAS,GAAKT,EACvEtC,UAAW+H,EAAUzF,GACrB5E,QAAS,SAACgF,EAAMI,GAAP,OAAa1E,EAAMV,QAAQgF,EAAMI,EAAG1E,EAAMkE,SAN9CA,MASb,cAAC,EAAD,CACIL,OAAQ,WAAa7D,EAAMkE,MAC3B5E,QAAS,SAACgF,EAAMI,GAAP,OAAa1E,EAAMV,QAAQgF,EAAMI,EAAG1E,EAAMkE,QACnDE,MAAOpE,EAAMmB,MAAMiD,MACnBxC,UAAW+H,EAAU3J,EAAMmB,MAAMiD,MAAMO,iB,GAhDtBpF,GAAhBkK,EAKVnE,OAAS,WAAO,IAAD,EACmBnI,IAAMI,WAAWL,GAA9CL,EADU,EACVA,MAAOG,EADG,EACHA,kBACTsC,EAAU,SAACkF,EAAGE,EAAGa,GAAP,OAAavI,EAAkBH,EAAM6M,QAAQpK,QAAQkF,EAAGE,EAAGa,KAC3E,OAAO1I,EAAM6M,QAAQrE,OAAOhB,KAAI,SAACqF,EAASxF,GAAV,OAAoB,cAAC,EAAD,CAAqBA,MAAOA,EAAO/C,MAAOuI,EAAS7F,OAAQhH,EAAM6M,QAASpK,QAASA,GAArE4E,O,ICTrD2F,E,kDACjB,aAAe,wCACL,SAAC1E,GAAD,OAAOA,EAAE2E,S,qDAGT,IAAD,EACgCrK,KAAKC,QAAlC7C,EADH,EACGA,MAAOG,EADV,EACUA,kBACTsC,EAAU,SAACkF,EAAGE,EAAGa,GAAP,OAAavI,EAAkBH,EAAMiN,MAAMxK,QAAQkF,EAAGE,EAAGa,KACnEoE,EAAY,SAACzF,GACf,GAA8C,UAA1CrH,EAAMY,SAASC,eAAeqM,SAC9B,OAAO,EAEX,IAAMpF,EACgC,mBAAlC9H,EAAMiN,MAAMrM,SAASmH,WAAkC/H,EAAM+G,KAAKoG,iBAAmBnN,EAAM+G,KAAKqG,cAC1FpN,EAAMiN,MAAM1F,MAAMO,OAAS,EAC3B9H,EAAMiN,MAAM1F,MAAMO,OACxBuF,EAAmB,EASvB,OARc,GAAVvF,IACAuF,EAAmB,GAGT,GAAVvF,IACAuF,EAAmB,IAGdhG,EAAQS,EAAS,GAAK,EAAKuF,GAGxC,OACI,gCACI,cAAC,EAAD,CACI3H,MAAO1F,EAAMiN,MAAMnK,SACnBL,QAAS,kBAAMA,EAAQ,KAAM,OAC7B0F,UAAWnI,EAAMiN,MAAM1H,aAAevF,EAAMiN,MAAM1F,MAAMO,OACxDI,SAAUlI,EAAMiN,MAAM1F,MAAMO,SAE/B9H,EAAMiN,MAAM1F,MAAMC,KAAI,SAACC,EAAMJ,GAAP,OACnB,cAAC,EAAD,CAEI/C,MAAOmD,EACP1C,UAAYsC,EAAQ,GAAM,EAC1BnC,WAAY4H,EAAUzF,GACtBxB,SAAUwB,GAASrH,EAAMiN,MAAM1F,MAAMO,OAAO,EAC5CpC,MAAO1F,EAAMiN,MAAMnK,SACnBwC,YAAatF,EAAMiN,MAAM1H,YAAc8B,GAASrH,EAAMiN,MAAM1F,MAAMO,OAAS,EAC3ErF,QAAS,SAACkF,EAAGE,GAAJ,OAAUpF,EAAQkF,EAAGE,KAPzBR,MAUb,cAAC,EAAD,CACItC,UAAY/E,EAAMiN,MAAM1F,MAAMO,OAAS,GAAM,EAC7C5C,WAAY4H,EAAU9M,EAAMiN,MAAM1F,MAAMO,QACxCd,OAAO,QACPvE,QAASA,EACT8E,MAAOvH,EAAMiN,MAAM1F,e,GArDJ7E,GCwBpB4K,EAlBD,kBACV,qCACI,sBAAKxL,UAAU,wBAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,uBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,SAAf,kBACA,cAAC,EAAW2G,OAAZ,IACA,cAAC,EAAQA,OAAT,UAGR,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCtBahI,EAKjB,aAAe,IAAD,gCAJdU,WAIc,OAHdoM,eAGc,OAFdvM,aAEc,OAMdM,QAAU,SAACH,EAAeqM,GAAhB,OAAkC,SAACxN,GACzC,OAAImB,GAASnB,EAAMe,OAAOI,MACf,MAGXnB,EAAMe,OAAOG,KAAKlB,EAAM4J,MAAO5J,EAAM6M,SACjC7M,EAAMe,OAAOC,UACbhB,EAAM4B,KAAKO,QAAUE,KAAKC,OAGzBtC,EAAMe,OAAOC,SACdwM,EAASxN,EAAMe,OAAOI,OAGnBnB,KApBG,KAuBdiB,QAAU,kBAAM,SAACjB,GACb,GAAI,EAAKmB,OAASnB,EAAMe,OAAOI,MAC3B,OAAO,KAEX,MAAQnB,EAAMe,OAAOC,SACjBhB,EAAMe,OAAOG,KAAKlB,EAAM4J,MAAO5J,EAAM6M,SAGzC,OADA7M,EAAM4B,KAAKO,QAAUE,KAAKC,MACnBtC,IA/BG,KAkCdkB,KAAO,SAAC0I,EAAciD,GAClB,IAAK,IAAInE,EAAI,EAAK6E,UAAW7E,EAAImE,EAAQrE,OAAOV,OAAQY,IAAK,CACzD,IAAMnB,EAAQsF,EAAQrE,OAAOE,GAAGnB,MAChC,GAAIA,EAAMO,QAAU+E,EAAQrE,OAAOV,OAASY,EAAI,EAAG,CAC/C,IAAM+E,EAAU7D,EAAMrC,MAAMmG,MAY5B,OAXAD,EAAQhI,OAAS,WAAaiD,EAC1BnB,EAAMO,QAAU+E,EAAQrE,OAAOV,OAAS,EAAIY,IAC5C+E,EAAQjJ,UAAW,GAEvB+C,EAAMnG,KAAKqM,GACX,EAAKtM,QACL,EAAKoM,YACD,EAAKA,WAAaV,EAAQrE,OAAOV,SACjC,EAAKyF,UAAY,QAErB,EAAKvM,SAAU,GAGf,IAAM2M,EAA4B,GAAlB,EAAKJ,UAGrB,OAFA,EAAKA,UAAY,OACjB,EAAKvM,QAAU2M,GAKvB,EAAK3M,SAAU,GA1Df4B,KAAKzB,MAAQ,EACbyB,KAAK2K,UAAY,EACjB3K,KAAK5B,SAAU,GCPF4M,EAGjB,WAAYC,GAA6B,IAAD,gCAFxCA,kBAEwC,OAIxCC,WAAa,SAAC/G,GACV,OAAIA,GAAQA,EAAKoG,gBACN,EAAKY,gBAEL,EAAKC,gBARoB,KAYxCD,gBAAkB,SAACtG,EAAY9D,EAAe0D,GAA5B,OAA8C,SAACrH,GACzDA,EAAM+G,KAAKoG,iBACX,EAAKU,aAAaE,gBAAgBtG,EAAM9D,EAAU3D,EAAOqH,KAdzB,KAkBxC2G,eAAiB,SAACvG,EAAY9D,EAAe0D,GAA5B,OAA8C,SAACrH,GACvDA,EAAM+G,KAAKoG,iBACZ,EAAKU,aAAaG,eAAevG,EAAM9D,EAAU3D,EAAOqH,KAnB5DzE,KAAKiL,aAAeA,GCCPI,E,iDACjBC,WAAa,SAACvL,EAAyB3C,GAC/B2C,EAAS3C,GAAO8C,SAAW,KAC3BH,EAAS3C,GAAO8C,SAAW,GAC3B9C,EAAM4B,KAAKuM,eAAc,GACzBxL,EAAS3C,GAAO+C,QAAU,SAACuF,GAAD,OAAsB,EAAK8F,UAAUzL,EAAU2F,M,KAIjF8F,UAAY,SAACzL,EAAyB3C,GAClC2C,EAAS3C,GAAO8C,SAAW,EAC3B9C,EAAM4B,KAAKuM,eAAc,KCfZ9F,E,4DACjB3C,MAAuB,SAAC1F,EAAOqH,GAAR,OAAkB,IAAI4G,GAAUC,YAAW,SAAC5F,GAAD,OAAsBA,EAAEC,WAAWC,OAAOnB,KAAQrH,I,KAEpH+N,gBAAkB,SAACtG,EAAY9D,EAAe3D,EAAsBqH,GAChE,GAAIrH,EAAMuI,WAAW8F,YAAYhH,EAAOrH,EAAM+G,MAAO,CACjD,IAAMuH,EAAMtO,EAAM+G,KAAKtB,OACvBzF,EAAMuI,WAAWgG,IAAIlH,EAAOrH,EAAM+G,KAAKyH,YAAcxO,EAAM4B,KAAK6M,aAAa,cAAgBpH,EAAOiH,GACpG,EAAKI,aAAa1O,QAElB,EAAK0F,MAAM1F,EAAOqH,I,KAI1B2G,eAAiB,SAACW,EAAahL,EAAe3D,EAAsBqH,GAChE,IAAMI,EAAOzH,EAAMuI,WAAWqG,OAAOvH,GACjCI,GAAQzH,EAAMuI,WAAWsG,gBAAgBxH,KAAWI,EAAK9C,KACzD3E,EAAM+G,KAAK+H,OAAO,CAAC9O,EAAMuI,WAAWwG,OAAO1H,EAAOI,IAAQA,EAAKhC,OAAQ9B,IAAa3D,EAAM4B,KAAKoN,iBAE/F,EAAKtJ,MAAM1F,EAAOqH,I,yDAKbrH,GAES,KADAA,EAAMuI,WAAW0G,eAE/BjP,EAAM4B,KAAKC,SAAU,EACrB7B,EAAM4B,KAAKQ,IAAMC,KAAKC,W,YCjCbY,E,WACjB,WAAYyB,EAAMF,EAAMD,GAAW,IAAD,gCASlC0K,aAAe,SAAC7C,GACZ,IAAM8C,EAAc,EAAN9C,EACR+C,EAAS,kBAAM7D,KAAK6D,SAAW,IAC/BC,EAAY,SAACC,EAAKC,GAAN,OAAchE,KAAK6D,UAAYG,EAAMD,GAAOA,GAE1DF,MACIA,IACA,EAAKnK,aAAL,KAA4BoK,EAAU,EAAGF,EAAQ,GAEjD,EAAKlK,aAAL,MAA6BoK,EAAU,EAAGF,EAAQ,IAI1D,EAAKlK,aAAL,UAAiC,UAAYoK,GAAmB,EAATF,EAAYA,GAAS,QAtB9C,KAyBlCK,OAAS,SAACC,GACN,OAAOvM,EAAKsM,OAAO,EAAMC,IAzBzB7M,KAAK+B,KAAOA,EACZ/B,KAAK6B,KAAOA,EACZ7B,KAAK4B,SAAWA,EAChB5B,KAAKqC,aAAe,GACpBrC,KAAK6C,OAAS,GACd7C,KAAK2C,YAAa,E,wDAuBRkC,EAAMiI,GAChB,OAASjI,IAASiI,GAAejI,GAAQiI,GAAaA,EAAU/K,MAAQ8C,EAAK9C,MAAQ+K,EAAUjL,KAAKC,MAAQ+C,EAAKhD,KAAKC,S,KA/BzGxB,EAkCVyM,KAAO,SAACC,GACX,IAAMD,EAAO,IAAIzM,EAAK0M,EAAKjL,KAAMiL,EAAKnL,KAAMmL,EAAKpL,UAGjD,OAFAmL,EAAKlK,OAASmK,EAAKnK,OACnBkK,EAAK1K,aAAL,eAAyB2K,EAAK3K,cACvB0K,GAtCMzM,EAyCV2M,QAAU,SAACC,GAAD,OAAWA,EAAMtI,KAAI,SAACC,GAAD,OAAUvE,EAAKyM,KAAKlI,OCzCvD,IAAMsI,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KCmBvEC,EAnBD,CACVC,MAAO,CACHvL,KAAM,SACNwL,MAAO,OAEXC,KAAM,CACFzL,KAAM,SACNwL,MAAO,SAEXE,QAAS,CACL1L,KAAM,SACNwL,MAAO,OAEXG,MAAO,CACH3L,KAAM,SACNwL,MAAO,UCXMI,E,WACjB,aAAe,oBACX,IAAM5G,EAAO6G,OAAO7G,KAAKsG,GACzBpN,KAAKkN,MAAQC,EAASvI,KAAI,SAACgJ,GAAD,mBAAkB9G,EAAKlC,KAAI,SAACwE,GAAD,OAAS,IAAI9I,EAAKsN,EAAUR,EAAMhE,IAAM,UACxFyE,OACAC,U,sDAKL,OADA9N,KAAK+N,aAAa/N,KAAKkN,OAChBlN,O,mCAIEgO,GACT,IAAK,IAAIlI,EAAIkI,EAAM9I,OAAS,EAAGY,EAAI,EAAGA,IAAK,CACvC,IAAMmI,EAAItF,KAAKuF,MAAMvF,KAAK6D,UAAY1G,EAAI,IADH,EAEhB,CAACkI,EAAMC,GAAID,EAAMlI,IAAvCkI,EAAMlI,GAFgC,KAE5BkI,EAAMC,GAFsB,U,KCf9BxI,EACjB,WAAYzH,GAAW,IAAD,gCAqBtBmQ,mBAAqB,SAAC1J,GAClB,IAAM2J,EAAoB,EAAKxI,OAAOnB,GAAO4J,cAC7C,OAAOD,EAAkBA,EAAkBlJ,OAAS,IAvBlC,KA0BtBuG,YAAc,SAAChH,EAAON,GAAR,OAAkBA,EAAKmK,sBAAwB,EAAKC,QAAQ9J,EAAON,EAAKqK,gBA1BhE,KA4BtBD,QAAU,SAAC9J,EAAOI,GACd,IAAM4J,EAAkB,EAAKN,mBAAmB1J,GAChD,OAAO,EAAKmB,OAAOnB,GAAO3C,MAAQ+C,EAAKhD,KAAKC,MAAQ2M,GAAmB5J,EAAK9C,MA9B1D,KAiCtB4J,IAAM,SAAClH,EAAOyI,GACV,IAAMrI,EAAOqI,EAAM,GAKnB,OAJArI,EAAKyH,aAAa3D,KAAK+D,IAAI,EAAK1O,SAAS8L,mBAAoB,IAC7DjF,EAAKhC,OAAS,cAAgB4B,EAC9BI,EAAKlC,YAAa,EAClB,EAAKiD,OAAOnB,GAAOE,MAAMnG,KAAKqG,GACvB,EAAKe,OAAOnB,GAAOiK,UAAUlQ,KAAK,EAAKoH,OAAOnB,GAAO4J,cAAcvD,QAvCxD,KA0CtBqB,OAAS,SAAC1H,EAAOI,GAEb,OADA,EAAKe,OAAOnB,GAAO4J,cAAc7P,KAAK,EAAKoH,OAAOnB,GAAOiK,UAAU5D,OAC5DjG,GAAQA,EAAK+H,OAAO,EAAKZ,OAAOvH,KAAW,EAAKmB,OAAOnB,GAAOE,MAAMmG,OA5CzD,KA+CtBmB,gBAAkB,SAACxH,GAAD,OAAW,YAAI,EAAKmB,OAAOnB,GAAOiK,WAAW5D,OA/CzC,KAiDtBuB,WAAa,kBAAM,EAAKzG,OAAOhB,KAAI,SAAC+J,GAAD,OAAOC,SAASD,EAAEhK,MAAMO,WAAS2J,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAjDtE,KAmDtB/C,OAAS,SAACvH,GAAD,OAAW,EAAKmB,OAAOnB,GAAOE,MAAM,EAAKiB,OAAOnB,GAAOE,MAAMO,OAAS,IAnDzD,KAiEtBwE,WAAa,SAACD,GAEV,OADA,EAAK7D,OAAOhH,SAAQ,SAAC+F,GAAD,OAAWA,EAAMA,MAAM/F,SAAQ,SAAC6C,GAAD,OAAaA,EAAQ6K,aAAa3D,KAAK+D,IAAI,EAAGjD,UAC1F,GAlEPzJ,KAAKhC,SAAWA,EAChB,IAQM4H,EAAS+H,OAAO7G,KAAKsG,GACtBxI,KAAI,SAACwE,GAAD,OAASgE,EAAMhE,MACnBxE,KAAI,SAACoK,GAAD,mBAAC,eAVc,CACpBrK,MAAO,GACP0J,cAAc,YHNf,CAAC,KAAD,mBAASlB,EAAS8B,MAAM,EAAG9B,EAASjI,OAAS,KAAI4I,WGOhDY,UAAW,GACX5M,KAAM,KACNwL,MAAO,KACPpN,SAAU,IAI0B8O,MACxChP,KAAK4F,OAAL,YAAkBA,GAElB5F,KAAKH,QAAU,SAACiP,EAAGC,EAAGhK,KACtB/E,KAAKE,SAAW,EAChBF,KAAKG,QAAU,aACfH,KAAK2C,YAAa,GAnBL8C,EAsDVsH,KAAO,SAACC,GACX,IAAMD,EAAO,IAAItH,EAAWuH,EAAKhP,UAQjC,OAPA+O,EAAKnH,OAASoH,EAAKpH,OAAOhB,KAAI,SAACsK,GAAD,MAAgB,CAC1CvK,MAAOrE,EAAK2M,QAAQiC,EAAUvK,OAC9B0J,cAAc,YAAKa,EAAUb,eAC7BK,UAAU,YAAKQ,EAAUR,WACzB5M,KAAMoN,EAAUpN,KAChBwL,MAAO4B,EAAU5B,UAEdP,G,ICnEMoC,E,WACjB,WAAYnR,GAAW,IAAD,gCAMtB6N,aAAe,SAACnL,EAAQmC,GACpB,IAAMuM,EAAc,CAChBvM,OAAQA,EACRnC,OAAQA,GAEZ,EAAKrB,QAAU,EAAKgQ,SAASD,IAXX,KActBE,gBAAkB,WAC+B,UAAzC,EAAKtR,SAASC,eAAeqM,UAAsE,YAA9C,EAAKtM,SAASC,eAAewI,gBAC9E,EAAKpH,OAAS,IACV,EAAKA,OAAS,IACd,EAAKA,OAAS,EAEd,EAAKA,QAAU,KAGvBkQ,QAAQC,MAAM,mDAvBA,KA2BtBC,gBAAkB,WACd,EAAKpQ,QAAU,EACfkQ,QAAQC,MAAM,qCA7BI,KAuCtBjH,SAAW,SAACsE,GACR,GAAI,EAAK7O,SAASC,eAAeyR,YAAa,CAC1C,IAAMC,EAAUhH,KAAKC,IAAI,EAAGiE,EAAMhE,eAClC0G,QAAQC,MAAR,sCAA6CG,EAA7C,qBACA,EAAKtQ,OAASsJ,KAAK+D,IAAI,EAAKrN,OAAQwN,EAAMxN,QAAUsQ,EACpD,EAAK9G,cAAgBgE,EAAMhE,cAAgB,IA5C7B,KAgDtB+G,aAAe,SAACC,GACRA,GAAQ,EAAK7R,SAASC,eAAeoL,cACrC,EAAKhK,QAAU,GACfkQ,QAAQC,MAAR,oDAnDc,KAkFtBlQ,eAAiB,SAACwQ,EAAOtQ,GACrB,IAAMuQ,GAAmBvQ,EAAMsQ,GAAS,IACxC,OAA0C,EAAnCnH,KAAKqH,MAAMD,EAAkB,IApFlB,KAuFtBpQ,eAAiB,SAACmQ,EAAOtQ,GACrB,IAAMuQ,GAAmBvQ,EAAMsQ,GAAS,IACxC,OAAIC,EAAkB,GACX,EAEJpH,KAAKsH,MAAO,IAAQF,EAAmB,KA5F5B,KA+FtBnQ,SAAW,SAACkQ,EAAOtQ,GACf,OAAO,EAAKH,OAAS,EAAKM,eAAemQ,EAAOtQ,GAAO,EAAKF,eAAewQ,EAAOtQ,IA/FlFQ,KAAKhC,SAAWA,EAChBgC,KAAKX,OAAS,EACdW,KAAK6I,cAAgB,E,0DA6BXqH,GACNA,GAAMlQ,KAAKhC,SAASC,eAAekS,cACnCnQ,KAAKX,QAAU,GACfkQ,QAAQC,MAAM,oD,+BAoBbY,GACL,IAAMC,EAAY,SAACC,GAAD,MAA6B,WAApBA,EAAIC,OAAO,EAAG,IACnCC,EAAe,SAACF,GAAD,MAA8B,cAArBA,EAAIC,OAAO,EAAG,KAC5C,GAAIF,EAAUD,EAAKvN,SACf,GAAI2N,EAAaJ,EAAK1P,QAElB,OADA6O,QAAQC,MAAM,wDACP,QAER,GAAmB,SAAfY,EAAKvN,OAAmB,CAC/B,GAAI2N,EAAaJ,EAAK1P,QAElB,OADA6O,QAAQC,MAAM,sDACP,GAEX,GAAIa,EAAUD,EAAK1P,QAEf,OADA6O,QAAQC,MAAM,kDACP,OAER,GAAIgB,EAAaJ,EAAKvN,SACrBwN,EAAUD,EAAK1P,QAEf,OADA6O,QAAQC,MAAM,8DACN,GAIhB,OAAO,M,KAhFML,EAoGVpC,KAAO,SAACC,GACX,IAAMD,EAAO,IAAIoC,EAAOnC,EAAKhP,UAG7B,OAFA+O,EAAK1N,OAAS2N,EAAK3N,OACnB0N,EAAKlE,cAAgBmE,EAAKnE,cACnBkE,G,ICtGM0D,E,WACjB,aAAe,IAAD,gCAMd5E,aAAe,SAACnL,EAAQmC,GACpB,EAAK6N,WAAY,EACjB,EAAKC,UAAW,EAEZ9N,GAAUnC,IACV,EAAKgQ,WAAY,IAXX,KAedE,kBAAoB,SAACxT,GACjB,IAAMiL,EAAW,EAAKP,eAAe,EAAKA,eAAe5C,OAAS,GAC7DmD,GAAa,EAAKwI,YAAYzT,EAAOiL,IACtC,EAAKP,eAAetJ,KAAKpB,IAlBnB,KAsBdgP,eAAiB,WACb,EAAKuE,UAAW,EAChB,EAAKD,WAAY,GAxBP,KA2BdpI,iBAAmB,SAACwI,EAAI5M,GAIpB,IAHA,IAAM6M,EAAc,EAAKjJ,eAAe5C,OAAS,GAAK4L,EAChDE,EAAc,kBAAMD,GAAe,EAAKjJ,gBAAkB,EAAKA,eAAegD,OAChFzC,EAAW2I,IACR3I,KAAcA,EAASrJ,KAAK6I,YAAY6I,WAAa,EAAKG,YAAYxI,EAAUnE,KAAa,EAAK4D,eAAe5C,QACpHmD,EAAW2I,IAEf,OAAO3I,GAlCG,KAqCdiH,gBAAkB,WACd,EAAKoB,WAAY,EACjB,EAAKC,UAAW,GAvCN,KA0CdlB,gBAAkB,WAGd,OAFA,EAAKiB,WAAY,EACjB,EAAKC,UAAW,GACT,GA7CG,KAqDdM,YAAc,SAACnC,EAAGC,GACd,OAAOD,EAAEnK,MAAMuM,OAAM,SAACrM,EAAMiB,GAAP,OAAaxF,EAAKsM,OAAO/H,EAAMkK,EAAEpK,MAAMmB,KAAOjB,EAAKjD,UAAYmN,EAAEpK,MAAMmB,GAAGlE,aAtDrF,KAyDduP,YAAc,SAACrC,EAAGC,GACd,OAAOD,EAAElJ,OAAOsL,OAAM,SAACvM,EAAOmB,GAAR,OAAc,EAAKmL,YAAYtM,EAAOoK,EAAEnJ,OAAOE,QA1D3D,KA6Dd+K,YAAc,SAAC/B,EAAGC,GACd,OACI,EAAKkC,YAAYnC,EAAE9H,MAAO+H,EAAE/H,QAC5B,EAAKiK,YAAYnC,EAAEzE,MAAO0E,EAAE1E,QAC5B,EAAK8G,YAAYrC,EAAE7E,QAAS8E,EAAE9E,UAC9B,EAAKkH,YAAYrC,EAAEnJ,WAAYoJ,EAAEpJ,aAjErC3F,KAAK8H,eAAiB,GACtB9H,KAAK0Q,WAAY,EACjB1Q,KAAK2Q,UAAW,E,4DA8ChB3Q,KAAK2Q,UAAW,EAChB3Q,KAAK0Q,WAAY,M,KAnDJD,EAuEV1D,KAAO,SAACC,GACX,IAAMD,EAAO,IAAI0D,EAIjB,OAHA1D,EAAKjF,eAAL,YAA0BkF,EAAKlF,gBAC/BiF,EAAK2D,UAAY1D,EAAK0D,UACtB3D,EAAK4D,SAAW3D,EAAK2D,SACd5D,G,IC3EMqE,E,WACjB,WAAYpT,GAAW,IAAD,gCAStB6N,aAAe,SAACnL,EAAQmC,GAIpB,OAHA,EAAKzD,OAAOwQ,aAAa,EAAK5R,SAASqT,eACvC,EAAKjS,OAAOyM,aAAanL,EAAQmC,GACjC,EAAKgF,YAAYgE,aAAanL,EAAQmC,IAC/B,GAbW,KAgBtBuJ,eAAiB,WAEb,OADA,EAAKvE,YAAYuE,kBACV,GAlBW,KAqBtBkD,gBAAkB,WAId,OAHA,EAAKlQ,OAAOwQ,aAAa,EAAK5R,SAASqT,eACvC,EAAKjS,OAAOkQ,kBACZ,EAAKzH,YAAYyH,mBACV,GAzBW,KA4BtBG,gBAAkB,WAId,OAHA,EAAKrQ,OAAOwQ,aAAa,EAAK5R,SAASqT,eACvC,EAAKjS,OAAOqQ,kBACZ,EAAK5H,YAAY4H,mBACV,GAhCW,KAiDtBtQ,WAAa,WACT,IAAMmS,EAAU,SAACxL,GAAD,OAA2B,IAAlBA,EAAI,IAAIZ,OAAc,IAAMY,EAAIA,GACrDyL,GAAQ,EAAK/R,KAAOC,KAAKC,OAAS,EAAKH,QACrCiS,EAAK7I,KAAKuF,MAAMqD,EAAO,IAAO,GAAK,IACzCA,GAAa,IAALC,EAAY,GAAK,GACzB,IAAMjI,EAAKZ,KAAKuF,MAAMqD,EAAO,IAAO,IACpCA,GAAa,IAALhI,EAAY,GACpB,IAAMkI,EAAK9I,KAAKuF,MAAMqD,EAAO,KAE7B,OADAA,GAAa,IAALE,EACDD,EAAKA,EAAK,IAAMF,EAAQ/H,GAAM,IAAM+H,EAAQG,GAAMH,EAAQ/H,GAAM,IAAM+H,EAAQG,IAzDrFzR,KAAKhC,SAAWA,EAChBgC,KAAKZ,OAAS,IAAI+P,EAAOnR,GACzBgC,KAAK6H,YAAc,IAAI4I,EACvBzQ,KAAKT,QAAU,EACfS,KAAKf,SAAU,EACfe,KAAKR,IAAM,E,0DA6BD0Q,GAGV,OAFAlQ,KAAKZ,OAAOmM,cAAc2E,GAC1BlQ,KAAK6H,YAAY0D,cAAc2E,IACxB,M,KAvCMkB,EA0CVrE,KAAO,SAACC,GACX,IAAMD,EAAO,IAAIqE,EAAKpE,EAAKhP,UAI3B,OAHA+O,EAAKxN,QAAUyN,EAAKzN,QACpBwN,EAAKlF,YAAc4I,EAAY1D,KAAKC,EAAKnF,aACzCkF,EAAK3N,OAAS+P,EAAOpC,KAAKC,EAAK5N,QACxB2N,G,IChDM/H,EACjB,aAAe,IAAD,gCAMdkH,OAAS,SAACvH,EAAO9B,EAAQ9B,GAUrB,OATI4D,GAASA,EAAM,KACf,EAAKA,MAAQA,EAAMC,KAAI,SAACG,GAEpB,OADAA,EAAEpC,YAAa,EACRoC,KAEX,EAAKlC,OAASA,EACd,EAAK9B,SAAWA,GAGb4D,GAhBG,KAmBdiH,QAAU,WAEN,OADA,EAAK/I,OAAS,KACP,EAAK8B,MAAM+M,OAAO,EAAG,EAAK/M,MAAMO,SArB7B,KAwBdqF,cAAgB,mBAAQ,EAAK5F,MAAMO,QAxBrB,KA0BdyM,cAAgB,kBAAM,EAAKpH,iBAA8C,KAA3B,EAAKiE,cAAczM,MA1BnD,KA4BdyM,YAAc,kBAAM,EAAKjE,iBAAmB,EAAK5F,MAAM,IA5BzC,KA8Bd2J,mBAAqB,kBAAM,EAAK3J,MAAMO,OAAS,GA9BjC,KAgCd0M,oBAAsB,SAAC/M,GAAD,OAAU,EAAKhC,QAAUgC,EAAKhC,QAAU,EAAKA,QAhCrD,KAkCd2H,YAAc,kBAAM,EAAK3H,QAAyB,SAAf,EAAKA,QAlC1B,KAoCdgP,iBAAmB,SAACpN,GAAD,OAAW,EAAK5B,QAAU,EAAKA,QAAL,qBAA6B4B,IApC5D,KAsCdqN,cAAgB,SAACrN,GAAD,OAAW,EAAK5B,QAAU,EAAKA,QAAL,kBAA0B4B,IAtCtD,KAwCdsN,iBAAmB,kBAAM,EAAKlP,QAAwC,YAA9B,EAAKA,OAAOmP,UAAU,EAAE,IAxClD,KA0CdC,gBAAkB,kBAAM,EAAKpP,QAAU,EAAKA,OAAOmP,UAAU,IAzCzDhS,KAAK2E,MAAQ,GACb3E,KAAK6C,OAAS,KACd7C,KAAKe,SAAW,MAJHiE,EA6CV+H,KAAO,SAACC,GACX,IAAMD,EAAO,IAAI/H,EAIjB,OAHA+H,EAAKpI,MAAQrE,EAAK2M,QAAQD,EAAKrI,OAC/BoI,EAAKlK,OAASmK,EAAKnK,OACnBkK,EAAKhM,SAAWiM,EAAKjM,SACdgM,G,ICpDTmF,GAMF,WAAY9I,EAAakH,GAAuB,yBALhDlH,SAK+C,OAJ/CzH,WAI+C,OAH/C2F,iBAG+C,OAF/CD,mBAE+C,OAD/C8K,UAC+C,EAC3CnS,KAAKoJ,IAAMA,EACXpJ,KAAK2B,MAAQ2O,EAAI3O,MACjB3B,KAAKsH,cAAgBgJ,EAAIhJ,YACzBtH,KAAKqH,gBAAkBiJ,EAAIjJ,cAC3BrH,KAAKmS,KAAO7B,EAAI6B,MAWHC,G,kCAAAA,GACVC,KAAe,OADLD,GAEVE,OAAiB,SAFPF,GAGVG,QAAkB,UAHRH,GAIVI,KAAe,OAJLJ,GAKVK,KAAe,OALLL,GAMVM,MAAgB,QANNN,GAOVO,IAAyC,CAC5CN,KAAM,CACF1Q,MAAO,OACP0F,eAAe,GAEnBiL,OAAQ,CACJ3Q,MAAO,UAEX4Q,QAAS,CACL5Q,MAAO,WAEX6Q,KAAM,CACF7Q,MAAO,QAEX8Q,KAAM,CACF9Q,MAAO,gBACP2F,aAAa,EACb6K,KAAM,SAxBGC,GA2BVQ,IAAM,SAACxJ,GAAD,OAAiB,IAAI8I,GAAe9I,EAAKgJ,GAAgBO,IAAIvJ,KA3BzDgJ,GA4BVS,IAAM,kBAAMlF,OAAO7G,KAAKsL,GAAgBO,KAAK/N,IAAIwN,GAAgBQ,MA5BvDR,GA6BVU,mBAAqB,kBAAMV,GAAgBS,MAAME,QAAO,SAACC,GAAD,OAAWA,EAAK1L,gBA7B9D8K,GA8BVa,QAAU,kBAAMb,GAAgBQ,IAAIR,GAAgBC,OA9B1CD,GA+BVc,YAAc,kBAAMd,GAAgBQ,IAAIR,GAAgBK,O,ICnD9CU,GACjB,WAAYlV,GAAiB,IAAD,gCAc5BkL,kBAAoB,SAACF,GACb,EAAK7B,eAAegC,MAAQH,IAC5B,EAAK7B,eAAiBgL,GAAgBQ,IAAI3J,KAhBtB,KAoB5BxB,WAAa,WACT,EAAKL,eAAiBgL,GAAgBc,eArBd,KAwB5B7B,YAAc,WACV,SAAI,EAAKjK,eAAeE,cAAe,EAAKF,eAAe+K,QACvD,EAAK/K,eAAiBgL,GAAgBQ,IAAI,EAAKxL,eAAe+K,OACvD,IA1BXnS,KAAK/B,eAAiBA,EACtB,IAAMC,EAAUD,EAAeC,QAC/B8B,KAAKwJ,WAAa,CAAC,gBAAiB,mBACpCxJ,KAAKmF,UAAYjH,EAAU,kBAAoB,gBAE/C8B,KAAK4J,cAAgB,CAAC,OAAQ,MAAO,UAAW,OAAQ,WACxD5J,KAAK2J,YAAczL,EAAU,EAAI,EACjC8B,KAAK8J,mBAAqB5L,EAAU,EAAI,EAExC8B,KAAKsJ,gBAAkB8I,GAAgBU,qBACvC9S,KAAKoH,eAAiBgL,GAAgBa,WAZzBE,GAiCVpG,KAAO,SAACC,GACX,IAAMD,EAAO,IAAIoG,GAASnG,EAAK/O,gBAM/B,OALA8O,EAAK3F,eAAiB4F,EAAK5F,eAC3B2F,EAAK5H,UAAY6H,EAAK7H,UACtB4H,EAAKpD,YAAcqD,EAAKrD,YACxBoD,EAAKjD,mBAAqBkD,EAAKlD,mBAC/BiD,EAAKqG,SAAWpG,EAAKoG,SACdrG,G,ICxCMhD,G,WACjB,WAAYpF,EAAO3G,GAAW,IAAD,gCAyB7BqV,QAAU,SAAChJ,GACP,QAAIA,EAAMnF,SACN,EAAKP,MAAQ0F,EAAMyD,UAAUlJ,IAAI,EAAK0O,mBACtC,EAAKC,cACE,IA7Bc,KAmC7BD,kBAAoB,SAACzO,GAIjB,OAHAA,EAAKyH,aAAa3D,KAAK+D,IAAI,EAAK1O,SAAS8L,mBAAoB,IAC7DjF,EAAKjD,UAAW,EAChBiD,EAAKhC,OAAS,QACPgC,GAvCkB,KA0C7B2O,QAAU,SAAC3O,GAAD,OAAUA,GAAQA,EAAK+H,OAAO,EAAKZ,WA1ChB,KA4C7BA,OAAS,kBAAM,EAAKrH,MAAM,EAAKA,MAAMO,OAAS,IA5CjB,KA8C7BuO,OAAS,WACL,IAAIC,EAAS,GAWb,MAV6C,UAAzC,EAAK1V,SAASC,eAAeqM,WAC7BoJ,EAAS,CAAC,EAAK/O,MAAMmG,QAEoB,UAAzC,EAAK9M,SAASC,eAAeqM,WAC7BoJ,EAAS,EAAK/O,MAAM+M,OAAO,EAAK/M,MAAMO,OAAS,IAE1B,GAArB,EAAKP,MAAMO,QACX,EAAKwB,SAGFgN,GA1DkB,KAwE7BhK,WAAa,SAACD,GAEV,OADA,EAAK9E,MAAM/F,SAAQ,SAAC6C,GAAD,OAAaA,EAAQ6K,aAAa3D,KAAK+D,IAAIjD,EAAK,OAC5D,GAzEPzJ,KAAKhC,SAAWA,EAChBgC,KAAK2E,MAAQA,EAAMC,IAAI5E,KAAKsT,mBAC5BtT,KAAKuT,WAAa,EAClBvT,KAAK0G,QAAU,EAEf1G,KAAKH,QAAU,SAACiP,EAAGC,EAAGhK,KACtB/E,KAAKE,SAAW,EAChBF,KAAKG,QAAU,aACfH,KAAK2C,YAAa,EACgC,UAA9C3C,KAAKhC,SAASC,eAAewI,gBAC7BzG,KAAK0G,OAAS,GAEgC,UAA9C1G,KAAKhC,SAASC,eAAewI,gBAC7BzG,KAAK0G,OAAS,G,yDAKlB,MACkD,YAA9C1G,KAAKhC,SAASC,eAAewI,eACkB,UAA9CzG,KAAKhC,SAASC,eAAewI,eAA6BzG,KAAKuT,WAAa,M,KAtBpExJ,GA8DVgD,KAAO,SAACC,GACX,IAAMD,EAAO,IAAIhD,GAAM,GAAIiD,EAAKhP,UAOhC,OANA+O,EAAKpI,MAAQrE,EAAK2M,QAAQD,EAAKrI,OAC/BoI,EAAKxO,MAAQyO,EAAKzO,MAClBwO,EAAKpC,UAAYqC,EAAKrC,UACtBoC,EAAK3O,QAAU4O,EAAK5O,QACpB2O,EAAKrG,OAASsG,EAAKtG,OACnBqG,EAAKwG,WAAavG,EAAKuG,WAChBxG,G,ICnEM/C,GAKjB,WAAYhM,GAAqB,IAAD,gCAJhC4H,YAIgC,OAHhC5H,cAGgC,OAFhC6B,aAEgC,OAWhC8T,SAAW,SAAClP,GAAD,OAAmB,EAAKmB,OAAOnB,IAXV,KAahCgH,YAAc,SAAChH,EAAeN,GAAhB,OAA+B,EAAKyP,WAAW,EAAK5H,OAAOvH,GAAQN,EAAMM,IAbvD,KAehCmP,WAAa,SAAC/O,EAAYV,EAAYM,GAAzB,OACRI,GAAQA,EAAKjD,UAAYuC,EAAKyN,oBAAoB/M,IACnD,EAAK0J,QAAQ9J,EAAON,EAAKqK,iBACvB3J,GAAQV,EAAK2N,cAAcrN,IAlBD,KAoBhC8J,QAAU,SAAC9J,EAAeP,GACtB,IAAM9B,EAAM,EAAK4J,OAAOvH,GACxB,IAAKrC,EACD,OAAO8B,GAA4B,MAAjBA,EAAQnC,KAE9B,GAAIK,EAAIR,SACJ,OAAO,EAEX,IAAMiS,EAAK,YX/BT,GAAN,OAAW1G,IWkCP,OAFqB0G,EAAMC,QAAQ5P,EAAQnC,MAErB,GADL8R,EAAMC,QAAQ1R,EAAIL,OACImC,EAAQrC,KAAKyL,QAAUlL,EAAIP,KAAKyL,OAAsB,MAAblL,EAAIL,MA/BxD,KAkChCgS,QAAU,SAACtP,EAAeI,GACtB,IAAK,IAAIoJ,EAAI,EAAGA,EAAI,EAAKrI,OAAOnB,GAAOE,MAAMO,OAAQ+I,IACjD,GAAIpJ,GAAQA,EAAK+H,OAAO,EAAKhH,OAAOnB,GAAOE,MAAMsJ,KAAOpJ,EAAKjD,WAAa,EAAKgE,OAAOnB,GAAOE,MAAMsJ,GAAGrM,SAClG,OAAO,EAAKgE,OAAOnB,GAAOE,MAAMsJ,GAGxC,OAAO,GAxCqB,KA2ChC+F,iBAAmB,SAACnP,EAAYiB,GAC5B,IAAK,IAAImI,EAAI,EAAGA,EAAI,EAAKrI,OAAOE,GAAGnB,MAAMO,OAAQ+I,IAC7C,GAAIpJ,GAAQA,EAAK+H,OAAO,EAAKhH,OAAOE,GAAGnB,MAAMsJ,IAAK,CAC9C,IAAMyF,EAAS,EAAK9N,OAAOE,GAAGnB,MAAM+M,OAAOzD,EAAG,EAAKrI,OAAOE,GAAGnB,MAAMO,QAEnE,OADA,EAAK+O,aAAanO,GACX4N,EAIf,MAAO,IApDqB,KAuDhCvJ,WAAa,SAAC1F,EAAeI,GAEzB,OADY,EAAKmH,OAAOvH,GACb7C,UAAYiD,GAAQA,EAAK+H,OAAO,EAAKZ,OAAOvH,KAzD3B,KA4DhCyP,QAAU,SAACzP,EAAeI,GACtB,IAAMzC,EAAM,EAAK4J,OAAOvH,GACxB,QAAI,EAAK0F,WAAW1F,EAAOI,KACvBzC,EAAIR,UAAW,EACf,EAAKqS,aAAaxP,IACX,IAjEiB,KAuEhCwP,aAAe,SAACxP,GAIZ,IAHA,IAAI0P,EAAU,EAAKnW,SAAS8L,mBACxBqI,EAAO,EACP/P,EAAM,EAAK4J,OAAOvH,GACf0P,GAAsB,GAAXA,GAAgB/R,GAC9BA,EAAIkK,aAAa6H,GACjBA,IACA/R,EAAM,EAAK4J,OAAOvH,EAAO0N,GACzBA,KA/EwB,KAmFhCxG,IAAM,SAAClH,EAAeyI,GAGlB,OAFA,EAAKtH,OAAOnB,GAAOE,MAAQ,EAAKiB,OAAOnB,GAAOE,MAAMyP,OAAOlH,EAAMtI,KAAI,SAACG,GAAD,OAAO,EAAKuO,kBAAkBvO,EAAGN,OACtG,EAAKwP,aAAaxP,GACXyI,GAtFqB,KAyFhCoG,kBAAoB,SAACzO,EAAYJ,GAE7B,OADAI,EAAKhC,OAAS,WAAa4B,EACpBI,GA3FqB,KA8FhCmH,OAAS,SAACvH,EAAe4P,GAAhB,OAAoC,EAAKzO,OAAOnB,GAAOE,MAAM,EAAKiB,OAAOnB,GAAOE,MAAMO,OAAS,GAAKmP,GAAU,KA9FvF,KAsGhC3K,WAAa,SAACD,GAEV,OADA,EAAK7D,OAAOhH,SAAQ,SAAC+F,GAAD,OAAWA,EAAMA,MAAM/F,SAAQ,SAAC6C,GAAD,OAAaA,EAAQ6K,aAAa3D,KAAK+D,IAAIjD,EAAK,UAC5F,GAtGPzJ,KAAK4F,OADO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACbhB,KAAI,SAACkM,GAAD,MAAS,CAC3BnM,MAAO,GACPzE,SAAU,EACV4Q,SAEJ9Q,KAAKhC,SAAWA,EAChBgC,KAAKH,QAAU,cAbFmK,GAqGV+C,KAAO,SAACC,GACX,IAAMD,EAAO,IAAI/C,GAAQgD,EAAKhP,UAE9B,OADA+O,EAAKnH,OAASoH,EAAKpH,OAAOhB,KAAI,SAACD,EAAOF,GAAR,MAAmB,CAAEqM,GAAIrM,EAAOE,MAAOrE,EAAK2M,QAAQtI,EAAMA,WACjFoI,G,IC3GM3C,GACjB,WAAYpM,GAAW,IAAD,gCAUtBsW,WAAa,SAACzP,GAAD,OAAU,EAAK0P,OAAO1P,KAAU,EAAK8G,IAAI9G,KAAS,IAVzC,KAYtB8G,IAAM,SAAC9G,GAAD,OAAUA,GAAQ,EAAKF,MAAMnG,KAAK,EAAK8U,kBAAkBzO,KAZzC,KActB2P,OAAS,SAACtH,GAAD,OAAWA,GAASA,EAAMhI,QAAUgI,EAAMtI,IAAI,EAAK+G,MAdtC,KAgBtB2H,kBAAoB,SAACzO,GAIjB,OAHAA,EAAKhC,OAAS,QACdgC,EAAKjD,UAAW,EAChBiD,EAAKyH,aAAa3D,KAAK+D,IAAI,EAAK1O,SAAS8L,mBAAoB,IACtDjF,GApBW,KAuBtB4G,YAAc,SAACtH,GAAD,OAAUA,EAAKqG,eAAiB,EAAK+J,OAAOpQ,EAAKqK,gBAvBzC,KAyBtB+F,OAAS,SAAC1P,GAAD,OAAUA,KAAU,EAAKmH,WAAanH,EAAK+H,OAAO,EAAKZ,YAzB1C,KA2BtByH,OAAS,SAAC5O,GAAD,OAAUA,GAAQA,EAAK+H,OAAO,EAAKZ,WAAa,EAAKrH,MAAMmG,OA3B9C,KA6BtBuI,QAAU,kBAAM,EAAK1O,MAAM+M,OAAO,EAAG,EAAK/M,MAAMO,SA7B1B,KA+BtB8G,OAAS,kBAAM,EAAKrH,MAAM,EAAKA,MAAMO,OAAS,IA/BxB,KAuCtBwE,WAAa,SAACD,GAEV,OADA,EAAK9E,MAAM/F,SAAQ,SAAC6C,GAAD,OAAaA,EAAQ6K,aAAa3D,KAAK+D,IAAIjD,EAAK,OAC5D,GAxCPzJ,KAAKhC,SAAWA,EAChBgC,KAAK2E,MAAQ,GAEb3E,KAAKH,QAAU,SAAC4U,EAAIC,EAAIC,KACxB3U,KAAKE,SAAW,EAChBF,KAAKG,QAAU,aACfH,KAAK2C,YAAa,GARLyH,GAkCV2C,KAAO,SAACC,GACX,IAAMD,EAAO,IAAI3C,GAAM4C,EAAKhP,UAE5B,OADA+O,EAAKpI,MAAQrE,EAAK2M,QAAQD,EAAKrI,OACxBoI,G,IC7BM6H,GASjB,WAAYtE,GAAW,yBARvBtJ,WAQsB,OAPtBqD,WAOsB,OANtB1E,gBAMsB,OALtBsE,aAKsB,OAJtB9F,UAIsB,OAHtBnF,UAGsB,OAFtBhB,cAEsB,EAClBgC,KAAKgH,MAAQsJ,EAAItJ,MACjBhH,KAAKqK,MAAQiG,EAAIjG,MACjBrK,KAAK2F,WAAa2K,EAAI3K,WACtB3F,KAAKiK,QAAUqG,EAAIrG,QACnBjK,KAAKmE,KAAOmM,EAAInM,KAChBnE,KAAKhB,KAAOsR,EAAItR,KAChBgB,KAAKhC,SAAWsS,EAAItS,UAhBP4W,GAmBVC,gBAAkB,SAAC5W,GACtB,IAAM6W,GAAO,IAAIpH,GAAOqH,UAClB/W,EAAW,IAAImV,GAASlV,GAU9B,MATc,CACV+I,MAAO,IAAI+C,GAAJ,YAAc+K,EAAK5H,OAAQlP,GAClCqM,MAAO,IAAID,GAAMpM,GACjB2H,WAAY,IAAIF,EAAWzH,GAC3BiM,QAAS,IAAID,GAAQhM,GACrBmG,KAAM,IAAIa,EACVhG,KAAM,IAAIoS,EAAKpT,GACfA,SAAUA,IA7BD4W,GAkCV7H,KAAO,SAAC3P,GACX,MAAO,CACH4J,MAAO+C,GAAMgD,KAAK3P,EAAM4J,OACxBqD,MAAOD,GAAM2C,KAAK3P,EAAMiN,OACxB1E,WAAYF,EAAWsH,KAAK3P,EAAMuI,YAClCsE,QAASD,GAAQ+C,KAAK3P,EAAM6M,SAC5B9F,KAAMa,EAAK+H,KAAK3P,EAAM+G,MACtBnF,KAAMoS,EAAKrE,KAAK3P,EAAM4B,MACtBhB,SAAUmV,GAASpG,KAAK3P,EAAMY,Y,IC9CrB+L,G,iDACjBjH,MAAuB,SAAC1F,GAAD,OAA0B,IAAIiO,GAAUC,YAAW,SAAC5F,GAAD,OAAsBA,EAAEsB,QAAO5J,I,KAEzG+N,gBAAkB,SAACY,EAAaiJ,EAAgB5X,GAA9B,OAAuD,EAAK0F,MAAM1F,EAAO,I,KAE3FgO,eAAiB,SAACvG,EAAYmQ,EAAgB5X,GAA7B,OACL,MAARyH,EAAe,EAAKoQ,YAAYpQ,EAAMzH,GAAS,EAAK8X,aAAarQ,EAAMzH,I,KAE3E6X,YAAc,SAACpQ,EAAYzH,GAAb,OACVA,EAAM4J,MAAMwM,QAAQ3O,IAASzH,EAAMiN,MAAMmK,OAAOpX,EAAM4J,MAAMyM,WAAarW,EAAM4B,KAAK6M,aAAa,QAAS,U,KAE9GqJ,aAAe,SAACnJ,EAAa3O,GACzB,IAAKA,EAAM4J,MAAMgF,SACb,QACO5O,EAAMiN,MAAM2B,UACX5O,EAAM4J,MAAMmO,cACZ/X,EAAM4J,MAAMqM,QAAQjW,EAAMiN,MAAMgJ,YAChCjW,EAAM4B,KAAKsQ,mBACf,EAAKxM,MAAM1F,EAAO,KClBb4M,G,iDACjBlH,MAAuB,SAAC1F,EAAOqH,GAAR,OAAkB,IAAI4G,GAAUC,YAAW,SAAC5F,GAAD,OAAsBA,EAAEuE,QAAQrE,OAAOnB,KAAQrH,I,KAEjH+N,gBAAkB,SAACtG,EAAY9D,EAAe3D,EAAsBqH,GAChE,GAAIrH,EAAM6M,QAAQwB,YAAYhH,EAAOrH,EAAM+G,MAAO,CAC9C,IAAMuH,EAAMtO,EAAM+G,KAAKtB,OACvBzF,EAAM6M,QAAQ0B,IAAIlH,EAAOrH,EAAM+G,KAAKyH,YAAcxO,EAAM4B,KAAK6M,aAAa,WAAapH,EAAOiH,QAE9F,EAAK5I,MAAM1F,EAAOqH,I,KAI1B2G,eAAiB,SAACvG,EAAY9D,EAAe3D,EAAsBqH,IAC3DI,GAAS,EAAKuQ,WAAWvQ,EAAMJ,EAAOrH,IAAWyH,EAAKjD,SAE9CiD,GACR,EAAK/B,MAAM1F,EAAOqH,GAFlBrH,EAAM+G,KAAK+H,OAAO9O,EAAM6M,QAAQ+J,iBAAiBnP,EAAMJ,GAAQI,EAAKhC,OAAQ9B,IAAa3D,EAAM4B,KAAKoN,kB,KAM5GgJ,WAAa,SAACvQ,EAAYJ,EAAerH,GAA5B,OACRA,EAAM+G,KAAKoG,iBAAmB1F,EAAKjD,UAAYxE,EAAM6M,QAAQiK,QAAQzP,EAAOI,IAASzH,EAAM4B,KAAKyQ,oBCrBpFrF,G,iDACjBtH,MAAuB,SAAC1F,GAAD,OAA0B,IAAIiO,GAAUC,YAAW,SAAC5F,GAAD,OAAsBA,EAAE2E,QAAOjN,I,KAEzG+N,gBAAkB,SAACtG,EAAY9D,EAAe3D,GAA5B,OACbA,EAAMiN,MAAMoB,YAAYrO,EAAM+G,OAC3B/G,EAAMiN,MAAMiK,WAAWlX,EAAM+G,KAAKqK,gBAClCpR,EAAM+G,KAAKyH,WACXxO,EAAM4B,KAAK6M,aAAa,QAAS,UACrC,EAAK/I,MAAM1F,EAAO,I,KAEtBgO,eAAiB,SAACvG,EAAY9D,EAAe3D,GAA5B,OACZyH,GAAQzH,EAAM+G,KAAK+H,OAAO,CAAC9O,EAAMiN,MAAMoJ,OAAO5O,IAAQ,QAAS9D,IAAa3D,EAAM4B,KAAKoN,kBAAqB,EAAKtJ,MAAM1F,EAAO,KCZlHiY,GAIjB,aAAe,IAAD,gCAHdpL,aAGc,OAFdI,WAEc,OAKdiL,gBAAkB,SAAClY,GACf,EAAKmY,sBAAsBnY,GAEvBA,EAAMY,SAASoJ,eAAegC,MAAQgJ,GAAgBC,MACrD,EAAKmD,kBAAkBpY,IACvB,EAAKqY,sBAAsBrY,IAC3BA,EAAM+G,KAAKoG,iBACV,EAAKmL,iBAAiBtY,IAAUA,EAAMY,SAASoJ,eAAegC,KAAOgJ,GAAgBI,OACtFpV,EAAM4J,MAAMgF,WAAY5O,EAAM4J,MAAMmO,cACrC/X,EAAMY,SAASoJ,eAAegC,MAAQgJ,GAAgBE,SAEtDlV,EAAM4J,MAAMrE,YAAa,IAhBnB,KAoBd8S,sBAAwB,SAACrY,EAAsBuY,GAC3C,IAAKvY,EAAM+G,KAAKoG,iBAAmBnN,EAAMY,SAASoJ,eAAegC,KAAOgJ,GAAgBC,KACpF,OAAO,EAGX,IAAMuD,EAAW,GACjB,GAAIxY,EAAMiN,MAAMoB,YAAYrO,EAAM+G,QAC1B/G,EAAMY,SAASoJ,eAAegC,MAAQgJ,GAAgBI,OAASpV,EAAM+G,KAAKqG,eAAe,CACzF,IAAM4F,EAAO,CAAE1P,OAAQ,QAASmC,OAAQzF,EAAM+G,KAAKtB,SAC/CzF,EAAMY,SAASoJ,eAAegC,MAAQgJ,GAAgBE,QAAUlV,EAAM4B,KAAKI,OAAOiQ,SAASe,GAAQ,KACnGwF,EAASpX,KAAK4R,GACdhT,EAAMiN,MAAM1H,YAAa,GAiDrC,OA5CAvF,EAAMuI,WAAWC,OAAOhH,SAAQ,SAAC+F,EAAOF,GACpC,GAAIrH,EAAMuI,WAAW8F,YAAYhH,EAAOrH,EAAM+G,QACtC/G,EAAMY,SAASoJ,eAAegC,MAAQgJ,GAAgBI,OAASpV,EAAM+G,KAAK0N,iBAAiBpN,IAAQ,CACnG,IAAM2L,EAAO,CAAE1P,OAAQ,cAAgB+D,EAAO5B,OAAQzF,EAAM+G,KAAKtB,SAC7DzF,EAAMY,SAASoJ,eAAegC,MAAQgJ,GAAgBE,QAAUlV,EAAM4B,KAAKI,OAAOiQ,SAASe,GAAQ,KACnGwF,EAASpX,KAAK4R,GACdzL,EAAMhC,YAAa,OAMnCvF,EAAM6M,QAAQrE,OAAOhH,SAAQ,SAAC+F,EAAOF,GACjC,GAAIrH,EAAM6M,QAAQwB,YAAYhH,EAAOrH,EAAM+G,QACnC/G,EAAMY,SAASoJ,eAAegC,MAAQgJ,GAAgBI,OAASpV,EAAM+G,KAAK2N,cAAcrN,IAAQ,CAChG,IAAMoR,EACFzY,EAAM+G,KAAKwN,iBACW,GAAtBhN,EAAMA,MAAMO,QACZ9H,EAAM+G,KAAK4N,oBACwD,GAAnE3U,EAAM6M,QAAQrE,OAAOxI,EAAM+G,KAAK8N,mBAAmBtN,MAAMO,OAEvD4Q,EACFnR,EAAMA,MAAMO,OAAS,GACrB9H,EAAM+G,KAAK4N,oBACX3U,EAAM6M,QAAQrE,OAAOxI,EAAM+G,KAAK8N,mBAAmBtN,MAAMO,OAAS,GAClEP,EAAMA,MAAMA,EAAMA,MAAMO,OAAS,GAAGnD,MAChC3E,EAAM6M,QAAQrE,OAAOxI,EAAM+G,KAAK8N,mBAAmBtN,MAC/CvH,EAAM6M,QAAQrE,OAAOxI,EAAM+G,KAAK8N,mBAAmBtN,MAAMO,OAAS,GACpEnD,OACL3E,EAAM6M,QAAQ+B,OAAO5O,EAAM+G,KAAK8N,mBAAmBrQ,SAElDmU,GAAaF,IAAkCC,EAErD,IAAKH,GAAcvY,EAAMY,SAASoJ,eAAegC,MAAQgJ,GAAgBI,MAAQuD,EAAW,CACxF,IAAM3F,EAAO,CAAE1P,OAAQ,WAAa+D,EAAO5B,OAAQzF,EAAM+G,KAAKtB,SAC1DzF,EAAMY,SAASoJ,eAAegC,MAAQgJ,GAAgBE,QAAUlV,EAAM4B,KAAKI,OAAOiQ,SAASe,GAAQ,KACnGwF,EAASpX,KAAK4R,GACdzL,EAAMhC,YAAa,QAOhCiT,EAAS1Q,QAhFN,KAmFdwQ,iBAAmB,SAACtY,GAChB,IAAI4Y,GAAW,EACTC,EAAaC,GAAcnJ,KAAK3P,GAwBtC,OAvBA,EAAKiN,MAAMe,eAAe6K,EAAW5L,MAAM2B,SAAU,KAAMiK,GACvDA,EAAWjX,KAAK6I,YAAY8I,UACxB,EAAK8E,sBAAsBQ,GAAY,IAAS7Y,EAAMY,SAASoJ,eAAegC,KAAOgJ,GAAgBI,KAAO,EAAI,KAChHpV,EAAMiN,MAAM1H,YAAa,EACzBqT,GAAW,GAInB5Y,EAAM6M,QAAQrE,OAAOhH,SAAQ,SAACqL,EAASxF,GAAV,OACzBwF,EAAQtF,MACHC,KAAI,SAACC,EAAMsR,GAAP,MAAsB,CAAEA,YAAWtR,WACvCkO,QAAO,qBAAGlO,KAAiBjD,YAC3BhD,SAAQ,YAA0B,IAAvBiG,EAAsB,EAAtBA,KAAMsR,EAAgB,EAAhBA,UACRC,EAAeF,GAAcnJ,KAAK3P,GACxC,EAAK6M,QAAQmB,eAAevG,EAAM,KAAMuR,EAAc3R,GAClD2R,EAAapX,KAAK6I,YAAY8I,UAC1B,EAAK8E,sBAAsBW,GAAc,IAAShZ,EAAMY,SAASoJ,eAAegC,KAAOgJ,GAAgBI,KAAO,EAAI,KAClHvI,EAAQtF,MAAMwR,GAAWxT,YAAa,EACtCqT,GAAW,SAKxBA,GA7GG,KAgHdR,kBAAoB,SAACpY,GACjB,IAAKA,EAAM+G,KAAKoG,gBAAiB,CAC7B,IAAM8L,EAAWjZ,EAAM6M,QAAQrE,OAC1BhB,KAAI,SAAC0R,EAAQ7R,GAAT,OAAmBA,KACvBsO,QAAO,SAACtO,GAAD,OAAWrH,EAAM6M,QAAQ+B,OAAOvH,IAAUrH,EAAM6M,QAAQ+B,OAAOvH,GAAO7C,YAIlF,OAHAyU,EAASzX,SAAQ,SAAC6F,GACdrH,EAAM6M,QAAQ+B,OAAOvH,GAAO9B,YAAa,KAEtC0T,EAASnR,OAGpB,OAAO,GA3HG,KA8HdqQ,sBAAwB,SAACnY,GACrB,IAAMmZ,EAAoB,SAApBA,EAAqBjG,GACvBA,EAAI3N,YAAa,EACjB2N,EAAI3L,OAAS2L,EAAI3L,MAAM/F,QAAQ2X,GAC/BjG,EAAI1K,QAAU0K,EAAI1K,OAAOhH,QAAQ2X,IAGrCA,EAAkBnZ,EAAMiN,OACxBkM,EAAkBnZ,EAAM4J,OACxBuP,EAAkBnZ,EAAM6M,SACxBsM,EAAkBnZ,EAAMuI,aAvIxB3F,KAAKiK,QAAU,IAAID,GACnBhK,KAAKqK,MAAQ,IAAID,ICAJ8L,G,kDAIjB,WAAY5F,GAAW,IAAD,8BAClB,cAAMA,IAJVkG,eAGsB,IAFtBrY,YAEsB,IAMtBsY,gBAAkB,WAEd,OADA,EAAKD,UAAUlB,gBAAf,gBACO,gBARW,EAWtB5L,WAAa,SAACD,GACV,EAAKzL,SAAS2L,YAAcF,EAC5B,EAAKzC,MAAM0C,WAAWD,GACtB,EAAKY,MAAMX,WAAWD,GACtB,EAAK9D,WAAW+D,WAAWD,GAC3B,EAAKQ,QAAQP,WAAWD,IAhBN,EAmBtBiN,aAAe,WACX,IAAMxL,EAAa,SAACD,GAAD,OAAgC,IAAID,EAAWC,GAAcC,WAAW,EAAK/G,OAKhG,OAJA,EAAK6C,MAAMnH,QAAUqL,EAAW,IAAInB,IACpC,EAAKM,MAAMxK,QAAUqL,EAAW,IAAId,IACpC,EAAKzE,WAAW9F,QAAUqL,EAAW,IAAIzF,GACzC,EAAKwE,QAAQpK,QAAUqL,EAAW,IAAIlB,IAC/B,gBAvBP,EAAKwM,UAAY,IAAInB,GACrB,EAAKlX,OAAS,IAAIN,EAHA,E,UAJiB+W,IAAtBsB,GAgCVrB,gBAAkB,SAAC5W,GACtB,OAAO,IAAIiY,GAActB,GAAMC,gBAAgB5W,KAjClCiY,GAoCVnJ,KAAO,SAAC3P,GACX,OAAO,IAAI8Y,GAActB,GAAM7H,KAAK3P,K,ICpCvBuZ,G,kDACjB,WAAYpW,GAAwB,IAAD,8BAC/B,cAAMA,IAIVlD,eAAiB,SAACuZ,GAAD,OAA6B,EAAKrT,SAASqT,IALzB,EAOnCtZ,cAAgB,SAACsZ,GAAD,OACZ,EAAKvZ,gBAAe,SAACD,GAEjB,OADAwZ,EAASxZ,GACFA,MAVoB,EAanCG,kBAAoB,SAACqZ,GAAD,OAChB,EAAKvZ,gBAAe,SAACD,GACjBA,EAAM4B,KAAK6I,YAAY8I,UAAW,EAClC,IAAMtI,EAAW6N,GAAcnJ,KAAK3P,GAEpC,OADAwZ,EAASxZ,GACLA,EAAM4B,KAAK6I,YAAY8I,UACvBvT,EAAM4B,KAAK6I,YAAY+I,kBAAkBvI,GAClCjL,GAGJ,SAvBoB,EA0BnCyZ,OAAS,WACL,IAAM5W,EAAU,CACZ7C,MAAO,EAAKA,MAAMsZ,eAAeD,kBACjCpZ,eAAgB,EAAKA,eACrBC,cAAe,EAAKA,cACpBC,kBAAmB,EAAKA,kBACxBC,QAAS,EAAK+C,MAAM/C,SAExB,OACI,cAACI,EAAD,CAAUsL,MAAOjJ,EAAjB,SACI,cAAC,EAAD,OAlCR,EAAK7C,MAAQ8Y,GAAcrB,gBAAgBtU,EAAMvC,UAFlB,E,UADAN,IAAM0C,WC2B9B0W,GAvCW,CACtB,CACIhG,GAAI,EACJ9S,SAAU,CAAEsM,SAAU,SAAU7D,cAAe,YAC/C3E,KAAM,eACNiV,MAAO,CAAC,uBAAwB,qBAAsB,sBAE1D,CACIjG,GAAI,EACJ9S,SAAU,CAAEsM,SAAU,SAAU7D,cAAe,UAC/C3E,KAAM,eACNiV,MAAO,CAAC,uBAAwB,eAAgB,sBAEpD,CACIjG,GAAI,EACJ9S,SAAU,CAAEsM,SAAU,SAAU7D,cAAe,UAC/C3E,KAAM,eACNiV,MAAO,CAAC,uBAAwB,qBAAsB,sBAE1D,CACIjG,GAAI,EACJ9S,SAAU,CAAEsM,SAAU,SAAU7D,cAAe,YAC/C3E,KAAM,eACNiV,MAAO,CAAC,uBAAwB,qBAAsB,qBAE1D,CACIjG,GAAI,EACJ9S,SAAU,CAAEsM,SAAU,SAAU7D,cAAe,UAC/C3E,KAAM,eACNiV,MAAO,CAAC,wBAAyB,eAAgB,sBAErD,CACIjG,GAAI,EACJ9S,SAAU,CAAEsM,SAAU,SAAU7D,cAAe,UAC/C3E,KAAM,eACNiV,MAAO,CAAC,wBAAyB,qBAAsB,uBC3BzDC,GAAqBtZ,IAAMC,cAAmC,CAChEP,MAAO,CACH6Z,mBAAoB,EACpBC,aAAc,EACdC,eAAgB,GAChBjZ,SAAS,GAEbqF,SAAU,eAGD3F,GAAWoZ,GAAmBpZ,SAC5BoZ,MCkBAI,GAjCI,WAAO,IAAD,EACO1Z,IAAMI,WAAWkZ,IAArC5Z,EADa,EACbA,MAAOmG,EADM,EACNA,SACT8T,EAAmB,SAACrZ,GAAD,OAAsBuF,EAAS,2BAAKnG,GAAN,IAAa6Z,mBAAoBjZ,MAClFsZ,EAAiB,SAAC7S,GAAD,OAAoBrH,EAAM6Z,oBAAsBxS,EAA5B,wBAAqDA,GAArD,mBAA2EA,IACtH,OACI,sBAAKvF,UAAU,uBAAf,UACI,qBAAKA,UAAU,QAAf,wBACA,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,SACK4X,GAAkB7H,MAAM,EAAG,GAAGrK,KAAI,SAAC2S,GAAD,OAC/B,yBAAwBrY,UAAWoY,EAAeC,EAAOzG,IAAKjR,QAAS,kBAAMwX,EAAiBE,EAAOzG,KAArG,UACKyG,EAAOzV,KACPyV,EAAOR,MAAMnS,KAAI,SAAC4S,EAAM1R,GAAP,OACd,8BAAc0R,GAAJ1R,QAHLyR,EAAOzG,SAQ5B,qBAAK5R,UAAU,QAAf,SACK4X,GAAkB7H,MAAM,GAAGrK,KAAI,SAAC2S,GAAD,OAC5B,yBAAwBrY,UAAWoY,EAAeC,EAAOzG,IAAKjR,QAAS,kBAAMwX,EAAiBE,EAAOzG,KAArG,UACKyG,EAAOzV,KACPyV,EAAOR,MAAMnS,KAAI,SAAC4S,EAAM1R,GAAP,OACd,8BAAc0R,GAAJ1R,QAHLyR,EAAOzG,gBCa7B2G,GAlCI,SAAClX,GAAkC,IAAD,EACrB7C,IAAMI,WAAWkZ,IAArC5Z,EADyC,EACzCA,MAAOmG,EADkC,EAClCA,SACf,OACI,sBAAKrE,UAAU,sBAAf,UACI,qBAAKA,UAAU,QAAf,wBACA,qBAAKA,UAAU,iBAAf,SACI,gCACI,yBACI8D,UAAW5F,EAAMc,QACjBgB,UAAY9B,EAAMc,QAAP,aAAiB,kBAC5B2B,QAAS,kBAAM0D,EAAS,2BAAKnG,GAAN,IAAac,SAAS,MAHjD,+BAMI,gCAAOd,EAAMc,QAAwB,WAAd,YAAvB,kBACA,wDAEJ,yBACI8E,SAAU5F,EAAMc,QAChBgB,UAAW9B,EAAMc,QAAU,kBAAoB,aAC/C2B,QAAS,kBAAM0D,EAAS,2BAAKnG,GAAN,IAAac,SAAS,MAHjD,yBAMI,gCAAMd,EAAMc,QAAU,YAAc,WAApC,iBACA,wDAEJ,yBAAQgB,UAAU,WAAWW,QAASU,EAAMuP,MAA5C,yBAEI,oDC9BH4H,G,kCAAAA,GACV7E,IAAM,CACT,CACI/B,GAAI,EACJhP,KAAM,eACNH,MAAO,QACP3D,SAAU,CACN2Z,WAAW,EACXxH,aAAa,EACbT,aAAa,EACbrG,aAAa,IAGrB,CACIyH,GAAI,EACJhP,KAAM,eACNH,MAAO,UACP3D,SAAU,CACN2Z,WAAW,EACXxH,aAAa,EACbT,aAAa,EACbrG,aAAa,IAGrB,CACIyH,GAAI,EACJhP,KAAM,eACNH,MAAO,cACP3D,SAAU,CACN2Z,WAAW,EACXxH,aAAa,EACbT,aAAa,EACbrG,aAAa,KAhCRqO,GAoCVE,YAAc,SAAC5Z,GAClB,IAAM6Z,EAAUH,GAAc7E,IAAIE,QAAO,SAAC+E,GAAD,OAAYJ,GAAc9K,OAAOkL,EAAO9Z,SAAUA,MAC3F,OAAI6Z,EAAQ3S,OAAS,EACV2S,EAAQ,GAAG/G,IAEd,GAzCK4G,GA4CV9K,OAAS,SAACmL,EAASC,GAAV,OACZD,EAAGJ,YAAcK,EAAGL,WACpBI,EAAG5H,cAAgB6H,EAAG7H,aACtB4H,EAAGrI,cAAgBsI,EAAGtI,aACtBqI,EAAG1O,cAAgB2O,EAAG3O,aC3C9B,IA6Fe8F,GA7FA,WACX,IAAM8I,EAAMva,IAAMI,WAAWkZ,IACvB/W,EAAUgY,EAAI7a,MACd8a,EAAaD,EAAI1U,SAHN,EAIW7F,IAAMsI,UAAkB,GAJnC,mBAIVmS,EAJU,KAIFC,EAJE,KASXC,EAAkB,SAACzB,GACrB,IAAMzE,EAAI,eAAQlS,GAClB2W,EAASzE,EAAKgF,gBACdhF,EAAK+E,aAAeQ,GAAcE,YAAYzF,EAAKgF,gBACnDe,EAAW/F,IAOf,OACI,sBAAKjT,UAAU,qBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,wBAAQW,QAAS,kBAAMuY,GAAWD,IAAlC,SAA4CA,EAAS,eAAO,aAEhE,qBAAKjZ,UAAU,QAAf,SAAwBiZ,EAAS,mBAAqB,WACrDA,EACG,sBAAKjZ,UAAU,UAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,0BACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,qGAGA,yBAAQ8J,SAAU,SAACxI,GAAD,OAjBlB0I,EAiBwC1I,EAAEE,OAAOwI,MAjB/BmP,GAAgB,SAACC,GAAD,OAAQA,EAAE5I,YAAuB,QAATxG,KAA3D,IAACA,GAiByDA,MAAOqP,SAAStY,EAAQkX,eAAezH,aAAhG,UACI,wBAAQxG,MAAO,OAAf,iBACA,wBAAQA,MAAO,QAAf,yBAIZ,sBAAKhK,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,yBACA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,iGACyF,IACrF,mBAAGsZ,KAAK,6DAA6DC,IAAI,aAAa/X,OAAO,SAA7F,kBAFJ,OAOA,yBAAQsI,SAAU,SAACxI,GAAD,OAlCnB0I,EAkCwC1I,EAAEE,OAAOwI,MAlC/BmP,GAAgB,SAACC,GAAD,OAAQA,EAAEX,UAAqB,QAATzO,KAAzD,IAACA,GAkCyDA,MAAOqP,SAAStY,EAAQkX,eAAeQ,WAA/F,UACI,wBAAQzO,MAAO,OAAf,iBACA,wBAAQA,MAAO,QAAf,yBAIZ,sBAAKhK,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,0BACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,+FACA,yBAAQ8J,SAAU,SAACxI,GAAD,OA1ClB0I,EA0CwC1I,EAAEE,OAAOwI,MA1C/BmP,GAAgB,SAACC,GAAD,OAAQA,EAAEjP,YAAuB,QAATH,KAA3D,IAACA,GA0CyDA,MAAOqP,SAAStY,EAAQkX,eAAe9N,aAAhG,UACI,wBAAQH,MAAO,OAAf,iBACA,wBAAQA,MAAO,QAAf,yBAIZ,sBAAKhK,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,0BACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,kFACA,yBAAQ8J,SAAU,SAACxI,GAAD,OAvDlB0I,EAuDwC1I,EAAEE,OAAOwI,MAvD/BmP,GAAgB,SAACC,GAAD,OAAQA,EAAEnI,YAAuB,QAATjH,KAA3D,IAACA,GAuDyDA,MAAOqP,SAAStY,EAAQkX,eAAehH,aAAhG,UACI,wBAAQjH,MAAO,OAAf,iBACA,wBAAQA,MAAO,QAAf,4BAMhB,qBAAKhK,UAAU,iBAAf,SACI,8BACKwY,GAAc7E,IAAIjO,KAAI,SAACkT,GAAD,OACnB,yBAAQ5Y,WA1ERuF,EA0EkCqT,EAAOhH,GA1EtB7Q,EAAQiX,cAAgBzS,EAAxB,wBAAiDA,GAAjD,mBAAuEA,IA0E5B5E,QAAS,kBA3E1EiR,EA2E4FgH,EAAOhH,GA3EpFoH,EAAW,2BAAKjY,GAAN,IAAekX,eAAe,eAAMO,GAAc7E,IAAI/B,GAAI9S,UAAYkZ,aAAcpG,KAA9G,IAACA,GA2EG,UACKgH,EAAOhW,KACR,8BAAMgW,EAAOnW,UAFkCmW,EAAOhH,IA1E3D,IAACrM,aCKbiU,GAjBO,WAClB,IACI,IAAMC,EAAW,4BAA4BC,MAAM,KAInD,MAAI,iBAAkBvU,QAA2C,qBAAzBA,OAAOwU,eAAiChV,oBAAoBQ,OAAOwU,gBAF/FC,EAMF,CAAC,IAAKH,EAAS5R,KAAK,oBAAqB,SAAU,KAAKA,KAAK,IANjD1C,OAAO0U,WAAWD,GAAOE,SAOjD,MAAOxY,GAEL,OADA+O,QAAQ0J,MAAM,wBAAyBzY,IAChC,EATI,IAACsY,GCwCLI,GA1BK,SAAC3Y,GACjB,IAD6C,EASnB7C,IAAMsI,SAA2B,CACvDmR,eAAe,eAAMO,GAAc7E,IAAI,GAAG7U,UAC1CiZ,mBAAoB,EACpBC,aAAc,EACdhZ,QAASwa,OAbgC,mBAStCtb,EATsC,KAS/BmG,EAT+B,KAe7C,OAAQhD,GAAUA,EAAMuP,MACpB,cAAC,GAAD,CAAU5G,MAAO,CAAE9L,QAAOmG,YAA1B,SACI,gCACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,CAAYuM,MAnBV,WACV,IAAM9R,EAAQ,uCACP8Y,GAAkB1Z,EAAM6Z,oBAAoBjZ,UAC5CZ,EAAM+Z,gBAFC,IAGVjZ,QAASd,EAAMc,UAEnBqC,EAAMuP,MAAM9R,WAQgB,MCdrBmb,GAXH,WAAO,IAAD,EACkBzb,IAAMsI,SAAmB,IAD3C,mBACPoT,EADO,KACGC,EADH,KAQd,OAAQD,EAASE,YAA8C,cAAC,GAAD,CAAWtb,SAAUob,EAAU5b,QAD9E,kBAAM6b,EAAY,OACH,cAAC,GAAD,CAAavJ,MAN9B,SAAC9R,GAAD,OACVqb,EAAY,2BACLrb,GADI,IAEPsb,aAAa,S,iBCTzBC,EAAS1C,OACL,cAAC,IAAM2C,WAAP,UACI,cAAC,GAAD,MAEJ3V,SAAS4V,eAAe,W","file":"static/js/main.ffcf8eb0.chunk.js","sourcesContent":["import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\r\n\r\nimport BusinessModel from \"../Business/BusinessModel\";\r\nimport React from \"react\";\r\n\r\ninterface IGlobalContext {\r\n    state: BusinessModel | null;\r\n    replaceContext: StateReplaceFunction;\r\n    updateContext: StateUpdateFunction;\r\n    updateGameContext: StateUpdateFunction;\r\n    restart: () => void;\r\n}\r\n\r\nconst defaultValue = {\r\n    state: null,\r\n    replaceContext: () => {},\r\n    updateContext: () => {},\r\n    updateGameContext: () => {},\r\n    restart: () => {},\r\n};\r\n\r\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\r\n\r\nexport const Provider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Dealer = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const timeouts = [];\r\n    //@todo implement launch setting UI for quick dealing\r\n    if (state.settings.launchSettings.isTouch) {\r\n        if (state && state.dealer && !state.dealer.isDealt) {\r\n            replaceContext(state.dealer.dealAll(state));\r\n        }\r\n    } else {\r\n        const deal = (dealt) => {\r\n            timeouts.push(\r\n                setTimeout(() => {\r\n                    if (state && state.dealer && !state.dealer.isDealt) {\r\n                        replaceContext(state.dealer.dealOne(dealt, deal));\r\n                    }\r\n                }, 35)\r\n            );\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            deal(state.dealer.dealt);\r\n            return () => timeouts.forEach((timeout) => clearTimeout(timeout));\r\n        }, []);\r\n    }\r\n    return null;\r\n};\r\nexport default Dealer;\r\n","import \"../Style/Screens.scss\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndScreen = () => {\r\n    const { state, restart } = React.useContext(GlobalContext);\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    return !state.game.isEnded ? null : (\r\n        <div className=\"ui center endscreen\">\r\n            <div className=\"title\">🥳</div>\r\n            <div className=\"content\">\r\n                <div>Time: {state.game.getElapsed()}</div>\r\n                <div>Points: {state.game.rating.points}</div>\r\n                <div>Time Penalty: {state.game.rating.getTimePenalty(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Bonus Points: {state.game.rating.getBonusPoints(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Total Points: {state.game.rating.getTotal(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>\r\n                    <button onClick={restart}>\r\n                        🗑️<div>New Game</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndScreen;\r\n","import { Component } from \"react\";\r\nimport GlobalContext from \"../Context\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    constructor(selector) {\r\n        super();\r\n        this.timeout = null;\r\n        this.selector = selector;\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    componentDidUpdate() {\r\n        if (this.selector(this.context.state).blinkFor) {\r\n            this.timeout = setTimeout(\r\n                () =>\r\n                    this.context.updateGameContext((state) => {\r\n                        this.selector(state).unblink(state);\r\n                    }),\r\n                200\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    //@todo assign isclickable in stack models, to enable better highlights and keyboard nav\r\n\r\n    const onClick = (e) => {\r\n        let ele = e.target;\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            click: {\r\n                x: e.clientX - ele.ownerDocument.defaultView.pageXOffset,\r\n                y: e.clientY - ele.ownerDocument.defaultView.pageYOffset,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n\r\n        props.onClick({ ...props.model }, position);\r\n    };\r\n\r\n    const getClassName = () => {\r\n        const hasSuggestion = props.isSuggested || props.model.suggestion;\r\n        let className = `card card-base suit-${props.model.type.icon}`;\r\n        className += !props.isSelected && !hasSuggestion ? ` card-stack-${props.model.source}` : \"\";\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack (preview what happens if picked up)\r\n        className += hasSuggestion ? \" card-suggested\" : \"\";\r\n\r\n        return className;\r\n    };\r\n\r\n    const getCardStyle = () => {\r\n        const style = {\r\n            zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };\r\n\r\n        //move to left on waste (triple draw)\r\n        if (props.offsetLeft) {\r\n            style.left = props.offsetLeft * 4 + \"vw\";\r\n        }\r\n\r\n        if (!props.onClick) {\r\n            style.pointerEvents = \"none\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    const getStackbaseStyle = () => {\r\n        if (!props.onClick) {\r\n            return { pointerEvents: \"none\" };\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    const label = props.model.isHidden ? \"hidden card\" : props.model.type.icon + props.model.face + \" card\"\r\n\r\n    // @todo 3d flip https://3dtransforms.desandro.com/card-flip on unhide\r\n    // https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n\r\n    return (\r\n        <div style={getStackbaseStyle()} className=\"stack-base\">\r\n            <button\r\n                style={getCardStyle()}\r\n                className={getClassName()}\r\n                onClick={onClick ? onClick : null}\r\n                disabled={!props.canClick}\r\n                tabIndex={0}\r\n                aria-label={label}\r\n            >\r\n                {props.model.isHidden ? (\r\n                    <div className=\"card-back\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        if (this.props.putBack) {\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card canClick={true} key={index} model={card} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends React.Component {\r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.props.hand &&\r\n                this.props.hand.stack &&\r\n                this.props.hand.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        canClick={true}\r\n                        offsetTop={this.props.offsetTop + index * 24}\r\n                        offsetLeft={this.props.offsetLeft}\r\n                        zIndex={1000 + index * 20}\r\n                        isSelected={true}\r\n                        onClick={(c) => this.props.onClick(c)}\r\n                    />\r\n                )),\r\n        ];\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    if (!state.hand || props.parent !== state.hand.source) {\r\n        return null;\r\n    }\r\n    const putBack = (c, p) => props.onClick(props.stack[props.stack.length - 1], p, props.stack.length - 1);\r\n    if (state.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parent} hand={state.hand} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (state.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <TouchHand\r\n                parent={props.parent}\r\n                hand={state.hand}\r\n                offsetTop={props.offsetTop}\r\n                offsetLeft={props.offsetLeft}\r\n                onClick={putBack}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base socket\";\r\n\r\n    if (props.visible) {\r\n        if (props.blink) {\r\n            classname += \" socket-blink\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n\r\n    if (props.suggested) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n\r\n    return (\r\n        <button className={classname} onClick={() => props.onClick()} disabled={!props.visible}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.foundation.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state, updateGameContext } = React.useContext(GlobalContext);\r\n        const onClick = (c, p, i) => updateGameContext(state.foundation.onClick(c, p, i));\r\n        return state.foundation.stacks.map((foundation, index) => (\r\n            <Foundation key={index} model={foundation} index={index} onClick={onClick} />\r\n        ));\r\n    };\r\n\r\n    render() {\r\n        const model = this.props.model;\r\n        return (\r\n            <div key={this.props.index}>\r\n                <StackBase\r\n                    suggested={model.suggestion && !model.stack.length}\r\n                    blink={model.blinkFor}\r\n                    onClick={() => this.props.onClick(null, null, this.props.index)}\r\n                    visible={!model.stack.length}\r\n                >\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        canClick={model.stack.length - 1 == index}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                        onClick={(c, p) => this.props.onClick(c, p, this.props.index)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parent={\"foundation-\" + this.props.index}\r\n                    onClick={(c, p) => this.props.onClick(model.stack[model.stack.length - 1], p, this.props.index)}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Clock = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const [elapsed, setElapsed] = React.useState(0);\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (state.game.started) {\r\n                setElapsed(state.game.getElapsed());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return !state.game.started || !elapsed ? null : (\r\n        <div className=\"header-clock\">\r\n            <div className=\"icon-container\">🕒</div>\r\n            {elapsed}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndGame = () => {\r\n    const { restart } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"End Game\" onClick={restart}>\r\n                🗑️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default EndGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hearts = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const getHearts = () => {\r\n        if (state.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            return state.game.passes > 0 ? \"❤️\" : \"💔\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            const createString = (length, icon) =>\r\n                Array.from(new Array(length).keys())\r\n                    .map(() => icon)\r\n                    .join(\"\");\r\n\r\n            return createString(state.stock.passes, \"❤️\") + createString(3 - state.stock.passes, \"💔\");\r\n        }\r\n        return null;\r\n    };\r\n    return <div className=\"heart-container\">{getHearts()}</div>;\r\n};\r\nexport default Hearts;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hint = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    \r\n    //@todo update\r\n    \r\n    const isVisible = (state) => state.settings.suggestionMode.supportsHints || state.settings.suggestionMode.isTemporary;\r\n    const isDisabled = (state) => state.settings.suggestionMode.isTemporary;\r\n\r\n    const suggestOnce = () => {\r\n        updateContext((state) => {\r\n            if (isVisible(state) && !isDisabled(state)) {\r\n                state.settings.enableHint();\r\n            }\r\n        });\r\n    };\r\n\r\n    const listenForH = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 72) {\r\n            suggestOnce();\r\n        }\r\n    };\r\n\r\n    if (isVisible(state) && !isDisabled(state)) {\r\n        React.useEffect(() => {\r\n            document.addEventListener(\"keydown\", listenForH);\r\n            return () => document.removeEventListener(\"keydown\", listenForH);\r\n        }, []);\r\n    }\r\n\r\n    return !isVisible(state) ? null : (\r\n        <div>\r\n            <button title=\"Hint\" onClick={() => suggestOnce()} disabled={isDisabled(state)}>\r\n                💡\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Hint;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Points = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"icon-container\">🏆</div> {state.game.rating.points}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Points;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst RestartGame = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n\r\n    const reset = () =>\r\n        replaceContext((state) => (state.game.timemachine.previousStates ? state.game.timemachine.previousStates[0] : null));\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Restart\" disabled={!state.game.timemachine.previousStates.length} onClick={reset}>\r\n                ♻️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestartGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst ToggleMenu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Settings\" onClick={() => toggleMenu(state.settings.showMenu)}>\r\n                ⚙️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleMenu;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Undo = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const undo = () =>\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    const ctrlZ = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 90 && evtobj.ctrlKey) {\r\n            undo();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", ctrlZ);\r\n        return () => document.removeEventListener(\"keydown\", ctrlZ);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                disabled={!state.game.timemachine.previousStates.length}\r\n                title={\"Undo (Penalty:\" + Math.pow(2, state.game.rating.multiplicator) + \")\"}\r\n                onClick={undo}\r\n            >\r\n                ⏪\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Undo;\r\n","import \"../../Style/Header.css\";\r\n\r\nimport Clock from \"./Clock\";\r\nimport EndGame from \"./EndGame\";\r\nimport Hearts from \"./Hearts\";\r\nimport Hint from \"./Hint\";\r\nimport Points from \"./Points\";\r\nimport React from \"react\";\r\nimport RestartGame from \"../RestartGame\";\r\nimport ToggleMenu from \"./ToggleMenu\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <div className=\"header-title\">\r\n            <Hearts />\r\n            <Points />\r\n        </div>\r\n        <Clock />\r\n        <div className=\"header-buttons\">\r\n            <Hint />\r\n            <Undo />\r\n            <RestartGame />\r\n            <EndGame />\r\n            <ToggleMenu />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import \"../Style/Menu.css\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Menu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    //@todo persist game settings in local storage too and use for initialization\r\n    const setSuggestionMode = (sm) => updateContext((state) => state.settings.setSuggestionMode(sm));\r\n    const setBaseEntropy = (lvl) => updateContext((state) => state.setEntropy(lvl));\r\n    const setInteractionEntropy = (lvl) => updateContext((state) => (state.settings.interactionEntropy = lvl));\r\n    const setMouseMode = (mm) => updateContext((state) => (state.settings.mouseMode = mm));\r\n\r\n    //@todo review duplication with ToggleMenu Component from Header\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!state.settings.showMenu) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui right menu\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => toggleMenu(state.settings.showMenu)}>🗙</button>\r\n            </div>\r\n            <div className=\"title\">Settings</div>\r\n            <div className=\"content\">\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Suggestions</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much help - if any - should the game offer by displaying suggestions?</div>\r\n                        <select\r\n                            onChange={(e) => setSuggestionMode(e.target.value)}\r\n                            value={state.settings.suggestionMode.key}\r\n                            disabled={state.settings.launchSettings.hintPenalty}\r\n                        >\r\n                            {state.settings.suggestionModes.map((suggestionMode) => (\r\n                                <option key={suggestionMode.key} value={suggestionMode.key}>\r\n                                    {suggestionMode.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Active Card</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">Should the selected card follow the cursor or remain on the stack?</div>\r\n                        <select onChange={(e) => setMouseMode(e.target.value)} value={state.settings.mouseMode}>\r\n                            {state.settings.mouseModes.map((mouseMode) => (\r\n                                <option key={mouseMode} value={mouseMode}>\r\n                                    {mouseMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Base Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                        <select onChange={(e) => setBaseEntropy(e.target.value)} value={state.settings.baseEntropy}>\r\n                            {state.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Interaction Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will each interaction add to a stack on the board?</div>\r\n                        <select onChange={(e) => setInteractionEntropy(e.target.value)} value={state.settings.interactionEntropy}>\r\n                            {state.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Menu;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.stock);\r\n    }\r\n\r\n    render() {\r\n        const { state, updateGameContext } = this.context;\r\n        const onClick = (c, p, i) => updateGameContext(state.stock.onClick(c, p, i));\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={state.stock.blinkFor}\r\n                    onClick={onClick}\r\n                    suggested={state.stock.suggestion && !state.stock.stack.length}\r\n                    visible={!state.stock.stack.length}\r\n                />\r\n                {state.stock.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        canClick={index == state.stock.stack.length-1}\r\n                        offsetTop={(index / 2) * -1}\r\n                        blink={state.stock.blinkFor}\r\n                        isSuggested={state.stock.suggestion && index == state.stock.stack.length - 1}\r\n                        onClick={onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.tableau.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state, updateGameContext } = React.useContext(GlobalContext);\r\n        const onClick = (c, p, i) => updateGameContext(state.tableau.onClick(c, p, i));\r\n        return state.tableau.stacks.map((tableau, index) => <Tableau key={index} index={index} model={tableau} parent={state.tableau} onClick={onClick} />);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, props.index)}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        canClick={!card.isHidden || props.parent.canUncover(props.index, card)}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={(card, p) => props.onClick(card, p, props.index)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parent={\"tableau-\" + props.index}\r\n                    onClick={(card, p) => props.onClick(card, p, props.index)}\r\n                    stack={props.model.stack}\r\n                    offsetTop={getOffset(props.model.stack.length)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.waste);\r\n    }\r\n\r\n    render() {\r\n        const { state, updateGameContext } = this.context;\r\n        const onClick = (c, p, i) => updateGameContext(state.waste.onClick(c, p, i));\r\n        const getOffset = (index) => {\r\n            if (state.settings.launchSettings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length =\r\n                state.waste.settings.mouseMode == \"remain-on-stack\" && state.hand.isHoldingCard() && state.hand.isFromWaste()\r\n                    ? state.waste.stack.length + 1\r\n                    : state.waste.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={state.waste.blinkFor}\r\n                    onClick={() => onClick(null, null)}\r\n                    suggested={state.waste.suggestion && !state.waste.stack.length}\r\n                    visible={!state.waste.stack.length}\r\n                />\r\n                {state.waste.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        canClick={index == state.waste.stack.length-1}\r\n                        blink={state.waste.blinkFor}\r\n                        isSuggested={state.waste.suggestion && index == state.waste.stack.length - 1}\r\n                        onClick={(c, p) => onClick(c, p)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    offsetTop={(state.waste.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(state.waste.stack.length)}\r\n                    parent=\"waste\"\r\n                    onClick={onClick}\r\n                    stack={state.waste.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"../Style/Board.scss\";\r\n\r\nimport Dealer from \"./Dealer\";\r\nimport EndScreen from \"../UI/EndScreen\";\r\nimport Foundation from \"./Foundation\";\r\nimport Header from \"../UI/Header/Header\";\r\nimport Menu from \"../UI/Menu\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = () => (\r\n    <>\r\n        <div className=\"layout-grid-container\">\r\n            <Header />\r\n            <div className=\"board-grid-container\">\r\n                <Stock />\r\n                <Waste />\r\n                <div className=\"spacer\">&nbsp;</div>\r\n                <Foundation.Stacks />\r\n                <Tableau.Stacks />\r\n            </div>\r\n        </div>\r\n        <Menu />\r\n        <EndScreen />\r\n        <Dealer />\r\n    </>\r\n);\r\n\r\nexport default Board;\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Tableau from \"../Model/Game/Tableau\";\r\n\r\nexport default class Dealer {\r\n    dealt: number;\r\n    dealingAt: number;\r\n    isDealt: boolean;\r\n\r\n    constructor() {\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    dealOne = (dealt: number, callback: any) => (state: BusinessModel) => {\r\n        if (dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n\r\n        state.dealer.deal(state.stock, state.tableau);\r\n        if (state.dealer.isDealt) {\r\n            state.game.started = Date.now();\r\n        }\r\n\r\n        if (!state.dealer.isDealt) {\r\n            callback(state.dealer.dealt);\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    dealAll = () => (state: BusinessModel) => {\r\n        if (this.dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n        while (!state.dealer.isDealt) {\r\n            state.dealer.deal(state.stock, state.tableau);\r\n        }\r\n        state.game.started = Date.now();\r\n        return state;\r\n    };\r\n\r\n    deal = (stock: Stock, tableau: Tableau) => {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = stock.stack.pop();\r\n                newCard.source = \"tableau-\" + i;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                stack.push(newCard);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Hand from \"../Model/Game/Hand\";\r\n\r\nexport default class Dispatcher {\r\n    clickHandler: ClickHandler;\r\n\r\n    constructor(clickHandler: ClickHandler) {\r\n        this.clickHandler = clickHandler;\r\n    }\r\n\r\n    getHandler = (hand: Hand) => {\r\n        if (hand && hand.isHoldingCard()) {\r\n            return this.dispatchPutDown;\r\n        } else {\r\n            return this.dispatchPickup;\r\n        }\r\n    };\r\n\r\n    dispatchPutDown = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPutDown(card, position, state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            this.clickHandler.dispatchPickup(card, position, state, index);\r\n        }\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Waste from \"../Model/Game/Waste\";\r\n\r\nexport type BlinkSelector = (state: BusinessModel) => Waste | Stock | any;\r\n\r\nexport interface IBlinker {\r\n    startBlink: (selector: BlinkSelector, state: BusinessModel) => void;\r\n}\r\n\r\nexport default class Blinker implements IBlinker {\r\n    startBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        if (selector(state).blinkFor < 10) {\r\n            selector(state).blinkFor = 10;\r\n            state.game.registerBlink(true);\r\n            selector(state).unblink = (s: BusinessModel) => this.stopBlink(selector, s);\r\n        }\r\n    };\r\n\r\n    stopBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        selector(state).blinkFor = 0;\r\n        state.game.registerBlink(false);\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Foundation implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.foundation.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.foundation.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (_card: Card, position: any, state: BusinessModel, index: number) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    //@todo move this to a generic place, also detect failure\r\n    tryDetectEnd(state: BusinessModel) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.source = \"\";\r\n        this.suggestion = false;\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\r\n            .flat()\r\n            .reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n            blinkFor: 0,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (a, b, c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => !hand.hasMoreThanOneCard() && this.accepts(index, hand.currentCard());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = \"foundation-\" + index;\r\n        card.suggestion = false;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => [...this.stacks[index].usedCards].pop();\r\n\r\n    countCards = () => this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n\r\n    getTop = (index) => this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation(orig.settings);\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","export default class Rating {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        this.points += this.rateMove(currentMove);\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        if (this.settings.launchSettings.drawMode == \"single\" && this.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n    };\r\n\r\n    registerBlink(on) {\r\n        if (on && this.settings.launchSettings.missPenalty) {\r\n            this.points -= 10;\r\n            console.debug(\"RATING: subtract 10 points for invalid action\");\r\n        }\r\n    }\r\n\r\n    penalize = (other) => {\r\n        if (this.settings.launchSettings.undoPenalty) {\r\n            const penalty = Math.pow(2, other.multiplicator);\r\n            console.debug(`RATING: applying penalty of ${penalty} points for UNDO`);\r\n            this.points = Math.min(this.points, other.points) - penalty;\r\n            this.multiplicator = other.multiplicator + 1;\r\n        }\r\n    };\r\n\r\n    registerHint = (done) => {\r\n        if (done && this.settings.launchSettings.hintPenalty) {\r\n            this.points -= 10;\r\n            console.debug(`RATING: applying penalty of 10 points for HINT`);\r\n        }\r\n    };\r\n\r\n    rateMove(move) {\r\n        const isTableau = (obj) => obj.substr(0, 7) == \"tableau\";\r\n        const isFoundation = (obj) => obj.substr(0, 10) == \"foundation\";\r\n        if (isTableau(move.source)) {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (isFoundation(move.source)) {\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getTimePenalty = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        return Math.trunc(secondsToFinish / 5) * -2;\r\n    };\r\n\r\n    getBonusPoints = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        if (secondsToFinish < 30) {\r\n            return 0;\r\n        }\r\n        return Math.round((20000 / secondsToFinish) * 35);\r\n    };\r\n\r\n    getTotal = (start, end) => {\r\n        return this.points + this.getBonusPoints(start, end) - this.getTimePenalty(start, end);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Rating(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.multiplicator = orig.multiplicator;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class TimeMachine {\r\n    constructor() {\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n    };\r\n\r\n    pushPreviousState = (state) => {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    };\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.timemachine.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        return true;\r\n    };\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    }\r\n\r\n    stackEquals = (a, b) => {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    };\r\n\r\n    stacksEqual = (a, b) => {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    };\r\n\r\n    modelEquals = (a, b) => {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new TimeMachine();\r\n        copy.previousStates = [...orig.previousStates];\r\n        copy.memorable = orig.memorable;\r\n        copy.modified = orig.modified;\r\n        return copy;\r\n    };\r\n}\r\n","import Rating from \"./Rating\";\r\nimport TimeMachine from \"./TimeMachine\";\r\n\r\nexport default class Game {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.rating = new Rating(settings);\r\n        this.timemachine = new TimeMachine();\r\n        this.started = 0;\r\n        this.isEnded = false;\r\n        this.end = 0;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerMove(target, source);\r\n        this.timemachine.registerMove(target, source);\r\n        return true;\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.timemachine.registerPickup();\r\n        return true;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerRecycle();\r\n        this.timemachine.registerRecycle();\r\n        return true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerUncover();\r\n        this.timemachine.registerUncover();\r\n        return true;\r\n    };\r\n\r\n    registerBlink(on) {\r\n        this.rating.registerBlink(on);\r\n        this.timemachine.registerBlink(on);\r\n        return true;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.started = orig.started;\r\n        copy.timemachine = TimeMachine.copy(orig.timemachine);\r\n        copy.rating = Rating.copy(orig.rating);\r\n        return copy;\r\n    };\r\n\r\n    getElapsed = () => {\r\n        const padleft = (i) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = (this.end || Date.now()) - this.started;\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp = (stack, source, position) => {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    };\r\n\r\n    putDown = () => {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    };\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    isHoldingKing = () => this.isHoldingCard() && this.currentCard().face == 'K';\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    isFromWaste = () => this.source && this.source == \"waste\";\r\n\r\n    isFromFoundation = (index) => this.source && this.source == `foundation-${index}`\r\n\r\n    isFromTableau = (index) => this.source && this.source == `tableau-${index}`\r\n\r\n    isFromAnyTableau = () => this.source && this.source.substring(0,8) == \"tableau-\";\r\n\r\n    getTableauIndex = () => this.source && this.source.substring(8);\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","class SuggestionMode {\r\n    key: string;\r\n    label: string;\r\n    isTemporary: boolean;\r\n    supportsHints: boolean;\r\n    next: string | undefined;\r\n    constructor(key: string, obj: ISuggestionMode) {\r\n        this.key = key;\r\n        this.label = obj.label;\r\n        this.isTemporary = !!obj.isTemporary;\r\n        this.supportsHints = !!obj.supportsHints;\r\n        this.next = obj.next;\r\n    }\r\n}\r\n\r\ntype ISuggestionMode = {\r\n    label: string;\r\n    isTemporary?: boolean;\r\n    supportsHints?: boolean;\r\n    next?: string;\r\n};\r\n\r\nexport default class SuggestionModes {\r\n    static NONE: string = \"NONE\";\r\n    static SCORED: string = \"SCORED\";\r\n    static REGULAR: string = \"REGULAR\";\r\n    static FULL: string = \"FULL\";\r\n    static ONCE: string = \"ONCE\";\r\n    static TWICE: string = \"TWICE\";\r\n    static raw: { [id: string]: ISuggestionMode } = {\r\n        NONE: {\r\n            label: \"None\",\r\n            supportsHints: true,\r\n        },\r\n        SCORED: {\r\n            label: \"Scored\",\r\n        },\r\n        REGULAR: {\r\n            label: \"Regular\",\r\n        },\r\n        FULL: {\r\n            label: \"Full\",\r\n        },\r\n        ONCE: {\r\n            label: \"Single Action\",\r\n            isTemporary: true,\r\n            next: \"NONE\",\r\n        },\r\n    };\r\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\r\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\r\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\r\n    static default = () => SuggestionModes.get(SuggestionModes.NONE);\r\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\r\n}\r\n","import SuggestionModes from \"./Settings/SuggestionModes\";\r\n\r\nexport default class Settings {\r\n    constructor(launchSettings) {\r\n        this.launchSettings = launchSettings;\r\n        const isTouch = launchSettings.isTouch;\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = isTouch ? \"remain-on-stack\" : \"follow-cursor\";\r\n\r\n        this.entropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\n        this.baseEntropy = isTouch ? 1 : 2;\r\n        this.interactionEntropy = isTouch ? 1 : 2;\r\n\r\n        this.suggestionModes = SuggestionModes.allSuggestionModes();\r\n        this.suggestionMode = SuggestionModes.default();\r\n    }\r\n\r\n    setSuggestionMode = (sm) => {\r\n        if (this.suggestionMode.key !== sm) {\r\n            this.suggestionMode = SuggestionModes.get(sm);\r\n        }\r\n    };\r\n\r\n    enableHint = () => {\r\n        this.suggestionMode = SuggestionModes.getHintMode();\r\n    };\r\n\r\n    disableHint = () => {\r\n        if (this.suggestionMode.isTemporary && this.suggestionMode.next) {\r\n            this.suggestionMode = SuggestionModes.get(this.suggestionMode.next);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings(orig.launchSettings);\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        copy.hintMode = orig.hintMode;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack, settings) {\r\n        this.settings = settings;\r\n        this.stack = stack.map(this.setCardProperties);\r\n        this.recyclings = 0;\r\n        this.passes = -1;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (a, b, c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n        if (this.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            this.passes = 1;\r\n        }\r\n        if (this.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            this.passes = 3;\r\n        }\r\n    }\r\n\r\n    canRecycle() {\r\n        return (\r\n            this.settings.launchSettings.recyclingMode == \"infinite\" ||\r\n            (this.settings.launchSettings.recyclingMode == \"3-pass\" && this.recyclings < 2)\r\n        );\r\n    }\r\n\r\n    recycle = (waste) => {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map(this.setCardProperties);\r\n            this.recyclings++;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setCardProperties = (card) => {\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        card.isHidden = true;\r\n        card.source = \"stock\";\r\n        return card;\r\n    };\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    popTop = () => {\r\n        let result = [];\r\n        if (this.settings.launchSettings.drawMode == \"single\") {\r\n            result = [this.stack.pop()];\r\n        }\r\n        if (this.settings.launchSettings.drawMode == \"triple\") {\r\n            result = this.stack.splice(this.stack.length - 3);\r\n        }\r\n        if (this.stack.length == 0) {\r\n            this.passes--;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        copy.passes = orig.passes;\r\n        copy.recyclings = orig.recyclings;\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Hand from \"./Hand\";\r\nimport Settings from \"./Settings\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    stacks: { stack: Card[]; id: number; suggestion?: boolean }[];\r\n    settings: Settings;\r\n    onClick: (a: any, b: any, c: any) => void;\r\n\r\n    constructor(settings: Settings) {\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => ({\r\n            stack: [],\r\n            blinkFor: 0,\r\n            id,\r\n        }));\r\n        this.settings = settings;\r\n        this.onClick = () => {};\r\n    }\r\n\r\n    getStack = (index: number) => this.stacks[index];\r\n\r\n    wouldAccept = (index: number, hand: Hand) => this.canPutDown(this.getTop(index), hand, index);\r\n\r\n    canPutDown = (card: Card, hand: Hand, index: number) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.isFromTableau(index));\r\n\r\n    accepts = (index: number, current: Card) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index: number, card: Card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card: Card, i: number) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    canUncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        return top.isHidden && card && card.equals(this.getTop(index));\r\n    };\r\n\r\n    uncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        if (this.canUncover(index, card)) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index: number) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index: number, cards: Card[]) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card: Card, index: number) => {\r\n        card.source = \"tableau-\" + index;\r\n        return card;\r\n    };\r\n\r\n    getTop = (index: number, offset?: number) => this.stacks[index].stack[this.stacks[index].stack.length - 1 - (offset || 0)];\r\n\r\n    static copy = (orig: Tableau) => {\r\n        const copy = new Tableau(orig.settings);\r\n        copy.stacks = orig.stacks.map((stack, index) => ({ id: index, stack: Card.copyAll(stack.stack) }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.stack = [];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (_a, _b, _c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAccept = (hand) => hand.isFromWaste() && this.canAdd(hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste(orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Model {\r\n    stock: Stock;\r\n    waste: Waste;\r\n    foundation: Foundation;\r\n    tableau: Tableau;\r\n    hand: Hand;\r\n    game: Game;\r\n    settings: Settings;\r\n\r\n    constructor(obj: any) {\r\n        this.stock = obj.stock;\r\n        this.waste = obj.waste;\r\n        this.foundation = obj.foundation;\r\n        this.tableau = obj.tableau;\r\n        this.hand = obj.hand;\r\n        this.game = obj.game;\r\n        this.settings = obj.settings;\r\n    }\r\n\r\n    static getInitialState = (launchSettings: AppState) => {\r\n        const deck = new Deck().shuffle();\r\n        const settings = new Settings(launchSettings);\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings),\r\n            waste: new Waste(settings),\r\n            foundation: new Foundation(settings),\r\n            tableau: new Tableau(settings),\r\n            hand: new Hand(),\r\n            game: new Game(settings),\r\n            settings: settings,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n        };\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Stock implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.stock, state);\r\n\r\n    dispatchPutDown = (_card: Card, _position: any, state: BusinessModel) => this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, _position: any, state: BusinessModel) =>\r\n        card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state);\r\n\r\n    moveToWaste = (card: Card, state: BusinessModel) =>\r\n        state.stock.isOnTop(card) && state.waste.addAll(state.stock.popTop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    recycleWaste = (_card: Card, state: BusinessModel) => {\r\n        if (!state.stock.getTop()) {\r\n            return (\r\n                (!!state.waste.getTop() &&\r\n                    state.stock.canRecycle() &&\r\n                    state.stock.recycle(state.waste.recycle()) &&\r\n                    state.game.registerRecycle()) ||\r\n                this.blink(state, 0)\r\n            );\r\n        }\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Tableau implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.tableau.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.tableau.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card: Card, index: number, state: BusinessModel) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Waste implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.waste, state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel) =>\r\n        (state.waste.wouldAccept(state.hand) &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state, 0);\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport SuggestionModes from \"../Model/Game/Settings/SuggestionModes\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Suggestions {\r\n    tableau: Tableau;\r\n    waste: Waste;\r\n\r\n    constructor() {\r\n        this.tableau = new Tableau();\r\n        this.waste = new Waste();\r\n    }\r\n\r\n    evaluateOptions = (state: BusinessModel) => {\r\n        this.disableAllSuggestions(state);\r\n        if (\r\n            state.settings.suggestionMode.key !== SuggestionModes.NONE &&\r\n            !this.getUncoverOptions(state) &&\r\n            !this.getPutdownSuggestions(state) &&\r\n            !state.hand.isHoldingCard() &&\r\n            (!this.getPickupOptions(state) || state.settings.suggestionMode.key == SuggestionModes.FULL) &&\r\n            (state.stock.getTop() || state.stock.canRecycle()) &&\r\n            state.settings.suggestionMode.key !== SuggestionModes.SCORED\r\n        ) {\r\n            state.stock.suggestion = true;\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state: BusinessModel, onlyUseful?: boolean) => {\r\n        if (!state.hand.isHoldingCard() || state.settings.suggestionMode.key == SuggestionModes.NONE) {\r\n            return 0;\r\n        }\r\n\r\n        const accepted = [];\r\n        if (state.waste.wouldAccept(state.hand)) {\r\n            if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromWaste()) {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.foundation.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromFoundation(index)) {\r\n                    const move = { target: \"foundation-\" + index, source: state.hand.source };\r\n                    if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.tableau.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromTableau(index)) {\r\n                    const isMoveOfKingBetweenEmptySlots =\r\n                        state.hand.isHoldingKing() &&\r\n                        stack.stack.length == 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length == 0;\r\n\r\n                    const isMoveBetweenSimilarParentCards =\r\n                        stack.stack.length > 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length > 0 &&\r\n                        stack.stack[stack.stack.length - 1].face ==\r\n                            state.tableau.stacks[state.hand.getTableauIndex()].stack[\r\n                                state.tableau.stacks[state.hand.getTableauIndex()].stack.length - 1\r\n                            ].face &&\r\n                        !state.tableau.getTop(state.hand.getTableauIndex()).isHidden;\r\n\r\n                    const isNotLoop = !isMoveOfKingBetweenEmptySlots && !isMoveBetweenSimilarParentCards;\r\n\r\n                    if (!onlyUseful || state.settings.suggestionMode.key === SuggestionModes.FULL || isNotLoop) {\r\n                        const move = { target: \"tableau-\" + index, source: state.hand.source };\r\n                        if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state: BusinessModel) => {\r\n        let foundAny = false;\r\n        const wasteState = BusinessModel.copy(state);\r\n        this.waste.dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.timemachine.modified) {\r\n            if (this.getPutdownSuggestions(wasteState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) =>\r\n            tableau.stack\r\n                .map((card, cardIndex) => ({ cardIndex, card }))\r\n                .filter(({ card }) => !card.isHidden)\r\n                .forEach(({ card, cardIndex }) => {\r\n                    const tableauState = BusinessModel.copy(state);\r\n                    this.tableau.dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.timemachine.modified) {\r\n                        if (this.getPutdownSuggestions(tableauState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                })\r\n        );\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            const filtered = state.tableau.stacks\r\n                .map((_stack, index) => index)\r\n                .filter((index) => state.tableau.getTop(index) && state.tableau.getTop(index).isHidden);\r\n            filtered.forEach((index) => {\r\n                state.tableau.getTop(index).suggestion = true;\r\n            });\r\n            return filtered.length;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    disableAllSuggestions = (state: BusinessModel) => {\r\n        const disableSuggestion = (obj: any) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Dealer from \"./Dealer\";\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Foundation from \"./Foundation\";\r\nimport Model from \"../Model/Model\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class BusinessModel extends Model {\r\n    suggestor: Suggestions;\r\n    dealer: Dealer;\r\n\r\n    constructor(obj: any) {\r\n        super(obj);\r\n        this.suggestor = new Suggestions();\r\n        this.dealer = new Dealer();\r\n    }\r\n\r\n    withSuggestions = () => {\r\n        this.suggestor.evaluateOptions(this)\r\n        return this;\r\n    }\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.settings.baseEntropy = lvl;\r\n        this.stock.setEntropy(lvl);\r\n        this.waste.setEntropy(lvl);\r\n        this.foundation.setEntropy(lvl);\r\n        this.tableau.setEntropy(lvl);\r\n    };\r\n\r\n    withHandlers = () => {\r\n        const getHandler = (clickHandler: ClickHandler) => new Dispatcher(clickHandler).getHandler(this.hand);\r\n        this.stock.onClick = getHandler(new Stock());\r\n        this.waste.onClick = getHandler(new Waste());\r\n        this.foundation.onClick = getHandler(new Foundation());\r\n        this.tableau.onClick = getHandler(new Tableau());\r\n        return this;\r\n    };\r\n\r\n    static getInitialState = (launchSettings: AppState) => {\r\n        return new BusinessModel(Model.getInitialState(launchSettings));\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return new BusinessModel(Model.copy(state));\r\n    };\r\n}\r\n","import { AppState, StateReplacer, StateUpdater } from \"../../Common\";\r\n\r\nimport Board from \"./Board\";\r\nimport BusinessModel from \"../../Business/BusinessModel\";\r\nimport { Provider } from \"../Context\";\r\nimport React from \"react\";\r\n\r\ninterface BoardWrapProps {\r\n    settings: AppState;\r\n    restart: () => void;\r\n}\r\n\r\nexport default class BoardWrap extends React.Component<BoardWrapProps, BusinessModel> {\r\n    constructor(props: BoardWrapProps) {\r\n        super(props);\r\n        this.state = BusinessModel.getInitialState(props.settings);\r\n    }\r\n\r\n    replaceContext = (modifier: StateReplacer) => this.setState(modifier);\r\n\r\n    updateContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            modifier(state);\r\n            return state;\r\n        });\r\n\r\n    updateGameContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            state.game.timemachine.modified = false;\r\n            const previous = BusinessModel.copy(state);\r\n            modifier(state);\r\n            if (state.game.timemachine.modified) {\r\n                state.game.timemachine.pushPreviousState(previous);\r\n                return state;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    render = () => {\r\n        const context = {\r\n            state: this.state.withHandlers().withSuggestions(),\r\n            replaceContext: this.replaceContext,\r\n            updateContext: this.updateContext,\r\n            updateGameContext: this.updateGameContext,\r\n            restart: this.props.restart,\r\n        };\r\n        return (\r\n            <Provider value={context}>\r\n                <Board />\r\n            </Provider>\r\n        );\r\n    };\r\n}\r\n","const DifficultyOptions = [\r\n    {\r\n        id: 0,\r\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\r\n        icon: \"🐭\",\r\n        lines: [\"Turn 1 card at once.\", \"No limit on passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐹\",\r\n        lines: [\"Turn 1 card at once.\", \"Three passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐰\",\r\n        lines: [\"Turn 1 card at once.\", \"Only a single pass\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\r\n        icon: \"🐨\",\r\n        lines: [\"Turn 3 cards at once\", \"No limit on passes\", \"through the deck\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐼\",\r\n        lines: [\"Turn 3 cards at once.\", \"Three passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐻\",\r\n        lines: [\"Turn 3 cards at once.\", \"Only a single pass\", \"through the deck.\"],\r\n    },\r\n];\r\n\r\nexport default DifficultyOptions;\r\n","import React from \"react\";\r\nimport { StartScreenState } from \"../../../Common\";\r\n\r\nexport interface IStartScreenContext {\r\n    state: StartScreenState;\r\n    setState: (s: StartScreenState) => void;\r\n}\r\n\r\nconst StartScreenContext = React.createContext<IStartScreenContext>({\r\n    state: {\r\n        difficultySettings: 0,\r\n        ratingPreset: 0,\r\n        ratingSettings: {},\r\n        isTouch: false,\r\n    },\r\n    setState: () => {},\r\n});\r\n\r\nexport const Provider = StartScreenContext.Provider;\r\nexport default StartScreenContext;\r\n","import DifficultyOptions from \"./DifficultyOptions\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst Difficulty = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const updateDifficulty = (settings: number) => setState({ ...state, difficultySettings: settings });\r\n    const getButtonClass = (index: number) => (state.difficultySettings == index ? `active active-${index}` : `inactive-${index}`);\r\n    return (\r\n        <div className=\"ui center quickstart\">\r\n            <div className=\"title\">Difficulty</div>\r\n            <div className=\"content\">\r\n                <div className=\"left\">\r\n                    {DifficultyOptions.slice(0, 3).map((option) => (\r\n                        <button key={option.id} className={getButtonClass(option.id)} onClick={() => updateDifficulty(option.id)}>\r\n                            {option.icon}\r\n                            {option.lines.map((line, i) => (\r\n                                <div key={i}>{line}</div>\r\n                            ))}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {DifficultyOptions.slice(3).map((option) => (\r\n                        <button key={option.id} className={getButtonClass(option.id)} onClick={() => updateDifficulty(option.id)}>\r\n                            {option.icon}\r\n                            {option.lines.map((line, i) => (\r\n                                <div key={i}>{line}</div>\r\n                            ))}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Difficulty;\r\n","import React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst QuickStart = (props: { start: () => void }) => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    return (\r\n        <div className=\"ui right quickstart\">\r\n            <div className=\"title\">Quickstart</div>\r\n            <div className=\"content center\">\r\n                <div>\r\n                    <button\r\n                        disabled={!state.isTouch}\r\n                        className={!state.isTouch ? \"active active-0\" : `inactive-0`}\r\n                        onClick={() => setState({ ...state, isTouch: false })}\r\n                    >\r\n                        🖥️\r\n                        <div>{!state.isTouch ? \"Optimized\" : \"Optimize\"} for Desktop</div>\r\n                        <div>with Mouse Support</div>\r\n                    </button>\r\n                    <button\r\n                        disabled={state.isTouch}\r\n                        className={state.isTouch ? \"active active-0\" : \"inactive-0\"}\r\n                        onClick={() => setState({ ...state, isTouch: true })}\r\n                    >\r\n                        📱\r\n                        <div>{state.isTouch ? \"Optimized\" : \"Optimize\"} for Mobile</div>\r\n                        <div>with Touch Support</div>\r\n                    </button>\r\n                    <button className=\"blinking\" onClick={props.start}>\r\n                        🎲\r\n                        <div>Start</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default QuickStart;\r\n","export default class RatingPresets {\r\n    static all = [\r\n        {\r\n            id: 0,\r\n            icon: \"🌴\",\r\n            label: \"Chill\",\r\n            settings: {\r\n                timedMode: false,\r\n                missPenalty: false,\r\n                undoPenalty: false,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 1,\r\n            icon: \"⚖️\",\r\n            label: \"Regular\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: false,\r\n                undoPenalty: true,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: \"🏆\",\r\n            label: \"Competitive\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: true,\r\n                undoPenalty: true,\r\n                hintPenalty: true,\r\n            },\r\n        },\r\n    ];\r\n    static matchPreset = (settings: any) => {\r\n        const filterd = RatingPresets.all.filter((preset) => RatingPresets.equals(preset.settings, settings));\r\n        if (filterd.length > 0) {\r\n            return filterd[0].id;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    static equals = (s1: any, s2: any) =>\r\n        s1.timedMode === s2.timedMode &&\r\n        s1.missPenalty === s2.missPenalty &&\r\n        s1.undoPenalty === s2.undoPenalty &&\r\n        s1.hintPenalty === s2.hintPenalty;\r\n}\r\n","import RatingPresets from \"./RatingOptions\";\r\nimport { RatingSettings } from \"../../../Common\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst Rating = () => {\r\n    const ctx = React.useContext(StartScreenContext);\r\n    const context = ctx.state;\r\n    const setContext = ctx.setState;\r\n    const [toggle, setToggle] = React.useState<boolean>(false);\r\n\r\n    const applyPreset = (id: number) => setContext({ ...context, ratingSettings: { ...RatingPresets.all[id].settings }, ratingPreset: id });\r\n    const getButtonClass = (index: number) => (context.ratingPreset == index ? `active active-${index}` : `inactive-${index}`);\r\n\r\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\r\n        const next = { ...context };\r\n        modifier(next.ratingSettings);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setContext(next);\r\n    };\r\n    const setMissPenalty = (value: string) => customizeRating((r) => (r.missPenalty = value == \"true\"));\r\n    const setTimeRating = (value: string) => customizeRating((r) => (r.timedMode = value == \"true\"));\r\n    const setUndoPenalty = (value: string) => customizeRating((r) => (r.undoPenalty = value == \"true\"));\r\n    const setHintPenalty = (value: string) => customizeRating((r) => (r.hintPenalty = value == \"true\"));\r\n\r\n    return (\r\n        <div className=\"ui left quickstart\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => setToggle(!toggle)}>{toggle ? \"🗙\" : \"☰\"}</button>\r\n            </div>\r\n            <div className=\"title\">{toggle ? \"Customize Rating\" : \"Rating\"}</div>\r\n            {toggle ? (\r\n                <div className=\"content\">\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Undo Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">\r\n                                Should there be a penalty for the UNDO operation? This penalty increases exponentially.\r\n                            </div>\r\n                            <select onChange={(e) => setUndoPenalty(e.target.value)} value={String(!!context.ratingSettings.undoPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Time Rating</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">\r\n                                Should the performance be part of the final rating, according to the rules described{\" \"}\r\n                                <a href=\"https://en.wikipedia.org/wiki/Klondike_(solitaire)#Scoring\" rel=\"noreferrer\" target=\"_blank\">\r\n                                    here\r\n                                </a>\r\n                                ?\r\n                            </div>\r\n                            <select onChange={(e) => setTimeRating(e.target.value)} value={String(!!context.ratingSettings.timedMode)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Hint Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should there be a penalty for the HINT operation? This penalty does not increase.</div>\r\n                            <select onChange={(e) => setHintPenalty(e.target.value)} value={String(!!context.ratingSettings.hintPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Miss Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should there be a penalty for attempting to perform invalid actions?</div>\r\n                            <select onChange={(e) => setMissPenalty(e.target.value)} value={String(!!context.ratingSettings.missPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"content center\">\r\n                    <div>\r\n                        {RatingPresets.all.map((preset) => (\r\n                            <button className={getButtonClass(preset.id)} key={preset.id} onClick={() => applyPreset(preset.id)}>\r\n                                {preset.icon}\r\n                                <div>{preset.label}</div>\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","const TouchDetector = ()  => {\r\n    try {\r\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n        const mq = (query) => window.matchMedia(query).matches;\r\n\r\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n            return true;\r\n        }\r\n\r\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n    } catch (e) {\r\n        console.error(\"(Touch detect failed)\", e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default TouchDetector;","import \"../../Style/Screens.scss\";\r\nimport \"../../Style/Menu.css\";\r\n\r\nimport { AppState, StartScreenState } from \"../../../Common\";\r\n\r\nimport Difficulty from \"./Difficulty\";\r\nimport DifficultyOptions from \"./DifficultyOptions\";\r\nimport { Provider } from \"./Context\";\r\nimport QuickStart from \"./QuickStart\";\r\nimport Rating from \"./Rating\";\r\nimport RatingPresets from \"./RatingOptions\";\r\nimport React from \"react\";\r\nimport TouchDetector from \"./TouchDetector\";\r\n\r\ninterface StartScreenProps {\r\n    start: (settings: AppState) => void;\r\n}\r\n\r\nconst StartScreen = (props: StartScreenProps) => {\r\n    const start = () => {\r\n        const settings = {\r\n            ...DifficultyOptions[state.difficultySettings].settings,\r\n            ...state.ratingSettings,\r\n            isTouch: state.isTouch,\r\n        };\r\n        props.start(settings);\r\n    };\r\n    const [state, setState] = React.useState<StartScreenState>({\r\n        ratingSettings: { ...RatingPresets.all[1].settings },\r\n        difficultySettings: 1,\r\n        ratingPreset: 1,\r\n        isTouch: TouchDetector(),\r\n    });\r\n    return !props || !props.start ? null : (\r\n        <Provider value={{ state, setState }}>\r\n            <div>\r\n                <Rating />\r\n                <Difficulty />\r\n                <QuickStart start={start} />\r\n            </div>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default StartScreen;\r\n","import \"./View/Style/App.css\";\r\nimport \"./View/Style/UI.css\";\r\n\r\nimport { AppState } from \"./Common\";\r\nimport BoardWrap from \"./View/Game/BoardWrap\";\r\nimport React from \"react\";\r\nimport StartScreen from \"./View/UI/StartScreen/StartScreen\";\r\n\r\nconst App = () => {\r\n    const [appState, setAppState] = React.useState<AppState>({});\r\n    const start = (settings: AppState) =>\r\n        setAppState({\r\n            ...settings,\r\n            initialized: true,\r\n        });\r\n    const restart = () => setAppState({});\r\n    return !appState.initialized ? <StartScreen start={start} /> : <BoardWrap settings={appState} restart={restart} />;\r\n};\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}