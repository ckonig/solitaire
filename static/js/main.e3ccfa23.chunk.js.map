{"version":3,"sources":["View/Clock.js","View/Undo.js","View/Footer.js","View/BlinkingComponent.js","View/Card.js","View/TouchAwareComponent.js","View/MouseHand.js","View/StackBase.js","View/TouchHand.js","View/Foundation.js","View/Stock.js","View/Tableau.js","View/Waste.js","View/Board.js","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","Model/Game/Foundation.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Stock.js","Model/Game/Tableau.js","Model/Game/Waste.js","Model/Facade.js","Service/BaseService.js","Service/Foundation.js","Service/Stock.js","Service/Tableau.js","Service/Waste.js","Service/Facade.js","App.js","index.js"],"names":["Clock","props","state","timeElapsed","setInterval","setState","msec","end","Date","now","started","hh","Math","floor","mm","ss","className","this","Component","Undo","document","addEventListener","e","evtobj","window","event","keyCode","ctrlKey","undo","onClick","undoLabel","Footer","model","points","isEnded","reset","beat","trip","href","BlinkingComponent","blinkFor","unblink","Card","type","icon","isSelected","blink","style","zIndex","offsetTop","top","entropyStyle","console","log","shadowOffsetX","offsetY","shadowOffsetY","isHidden","face","TouchAwareComponent","isTouch","is_touch_device","prefixes","split","DocumentTouch","query","join","matchMedia","matches","error","source","hand","isHoldingCard","MouseHand","myRef","React","createRef","onMouseMove","bind","onKeyDown","putBack","removeEventListener","parent","node","current","x","clientX","y","clientY","left","position","ref","stack","map","card","index","StackBase","classname","children","TouchHand","offset","c","Foundation","entropy","length","Stock","Tableau","getOffset","i","Waste","Board","stock","handlers","clickStock","waste","clickWaste","foundation","stacks","clickFoundation","tableau","clickTableau","game","causeEntropy","lvl","level","random","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","DeckSize","Suits","heart","color","club","diamond","spade","Deck","keys","Object","deckSize","key","flat","shuffleArray","array","j","getCurrentAccepted","currentFoundation","acceptedCards","accepts","currentAccepted","add","push","usedCards","pop","remove","getTop","getPreviousUsed","countCards","f","parseInt","reduce","a","b","randomStack","randomElement","suit","slice","reverse","origStack","Game","popPreviousState","id","isRequested","previousStates","popPrevious","previous","memorable","modelEquals","pow","multiplicator","modified","trippy","target","currentMove","rateMove","every","stackEquals","stacksEqual","debug","move","sourceIsTableau","substr","targetIsTableau","sourceIsFoundation","targetIsFoundation","Hand","currentCard","hasMoreThanOneCard","isFromCurrentSource","splice","isOnTop","element","getStack","range","indexOf","popWithFollowing","uncover","concat","setCardProperties","TableauGenerator","generateStacks","deck","pointer","oldpointer","ids","template","forEach","generateStack","tryPutDown","canAdd","popTop","recycle","Facade","getInitialState","Service","stateholder","dispatchPutDown","_setState","_dispatchPutDown","dispatchPickup","_dispatchPickup","_blink","selector","startBlink","registerBlink","setTimeout","toggleBlink","Model","pushPreviousState","_card","src","putDown","registerMove","tryDetectEnd","pickUp","registerPickup","s","moveToWaste","recycleWaste","registerRecycle","canPutDown","tryUncover","registerUncover","currentState","shuffle","handler","App","getHandlers","subscribe","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e3ccfa23.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeElapsed: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            this.setState((state) => {\r\n                //@todo padleft or string format : 00:01\r\n                let msec = (this.props.end || Date.now()) - this.props.started;\r\n                const hh = Math.floor(msec / 1000 / 60 / 60);\r\n                msec -= hh * 1000 * 60 * 60;\r\n                const mm = Math.floor(msec / 1000 / 60);\r\n                msec -= mm * 1000 * 60;\r\n                const ss = Math.floor(msec / 1000);\r\n                msec -= ss * 1000;\r\n                state.timeElapsed = hh ? hh + \":\" + mm + \":\" + ss : mm + \":\" + ss;\r\n                return { ...state };\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return <span className={this.props.className}>Time Elapsed: {this.state.timeElapsed}</span>;\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Undo extends Component {\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            const evtobj = window.event ? event : e;\r\n            if (evtobj.keyCode == 90 && evtobj.ctrlKey) this.props.undo();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.props.undo}>undo (penalty:-{this.props.undoLabel()})</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Clock from \"./Clock\";\r\nimport React from \"react\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-grid-container\">\r\n                <span>Points: {props.model.points}</span>\r\n                <Clock className=\"clock\" started={props.model.started} end={props.model.end} />\r\n                <span>Is Ended: {props.model.isEnded ? \"Y\" : \"N\"}</span>\r\n                <div><button onClick={props.reset}>reset</button></div>\r\n                <Undo undo={props.undo} undoLabel={props.undoLabel} />\r\n                <div><button onClick={props.beat}>beat on table</button></div>\r\n                <div><button onClick={props.trip}>trip</button></div>\r\n                <span className=\"report\">\r\n                    Report Issues <a href=\"https://github.com/ckonig/solitaire/issues\">here</a>.\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Footer;\r\n","import { Component } from \"react\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    componentDidUpdate() {\r\n        if (this.props.model.blinkFor) {\r\n            this.props.model.unblink();\r\n        }\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    //@todo 3d flip https://3dtransforms.desandro.com/card-flip\r\n    //run css animation first like this:\r\n    //https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n    //then trigger re-render through state change in parent\r\n    const model = props.model;\r\n    let className = props.className + \" card card-base suit-\" + model.type.icon;\r\n    className += props.isSelected ? \" card-selected\" : \"\";\r\n    className += props.blink ? \" blink\" : \"\";\r\n    const style = {\r\n        zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n        top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n        ...props.model.entropyStyle,\r\n    };\r\n    if(props.model.offsetTop) {\r\n      console.log('found it', props.model.offsetTop)\r\n      style['top'] += props.model.offsetTop;\r\n    }\r\n    if (props.shadowOffsetX || (!props.shadowOffsetX && props.shadowOffsetX === 0)) {\r\n        const offsetY = props.shadowOffsetY || \"-1\";\r\n        style[\"boxShadow\"] = props.shadowOffsetX + \"px \" + offsetY + \"px 4px 4px rgba(0, 0, 0, 0.75)\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"stack-base\">\r\n            <div style={style} className={className} onClick={() => props.onClick({ ...model })}>\r\n                {model.isHidden ? (\r\n                    <div className=\"card-back quarot\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Card;\r\n","import { Component } from \"react\";\r\n\r\nexport default class TouchAwareComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isTouch = this.is_touch_device();\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = (query) => window.matchMedia(query).matches;\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    shouldShowHand(source) {\r\n        return this.isTouch && this.props.hand.isHoldingCard() && this.props.hand.source === source;\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport TouchAwareComponent from \"./TouchAwareComponent\";\r\n\r\nexport default class MouseHand extends TouchAwareComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.isTouch) {\r\n            document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n\r\n            if (this.props.putBack) {\r\n                document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (!this.isTouch) {\r\n            document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n    }\r\n\r\n    onMouseMove(e) {\r\n        if (!this.isTouch && this.props.hand && this.props.parent == this.props.hand.source) {\r\n            const node = this.myRef.current;\r\n            const x = e.clientX,\r\n                y = e.clientY;\r\n            node.style.top = y + 25 + \"px\";\r\n            node.style.left = x + 25 + \"px\";\r\n            node.style.position = \"absolute\";\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && !this.isTouch && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {!this.isTouch &&\r\n                    this.props.hand &&\r\n                    this.props.parent == this.props.hand.source &&\r\n                    this.props.stack &&\r\n                    this.props.stack.map((card, index) => (\r\n                        <Card\r\n                            model={card}\r\n                            key={index}\r\n                            onClick={() => {\r\n                                console.error(\"clicked card in mouse hand\");\r\n                            }}\r\n                            offsetTop={index * 20}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base socket-empty\";\r\n    if (props.blink) {\r\n        classname += \" blink\";\r\n    }\r\n    return (\r\n        <div className={classname} onClick={() => props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport TouchAwareComponent from \"./TouchAwareComponent\";\r\n\r\nexport default class TouchHand extends TouchAwareComponent {\r\n    render() {\r\n        if (!this.isTouch || !this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card\r\n                            model={card}\r\n                            key={index}\r\n                            offsetTop={this.props.offset + index * 20}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                            onClick={(c) => this.props.onClick(c)}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick()}>\r\n                    <div className={\"align-center foundation-base suit-\" + props.model.icon}>{props.model.icon}</div>\r\n                </StackBase>\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} shadowOffsetX={(props.index)*2} shadowOffsetY={-3} blink={props.model.blinkFor} entropy={6} onClick={props.onClick} />\r\n                ))}\r\n                <TouchHand\r\n                    parent={\"foundation-\" + props.index}\r\n                    hand={props.hand}\r\n                    onClick={() => props.onClick(props.model.stack[props.model.stack.length - 1])}\r\n                />\r\n                <MouseHand\r\n                    parent={\"foundation-\" + props.index}\r\n                    hand={props.hand}\r\n                    stack={props.hand.stack}\r\n                    putBack={() => props.onClick(props.model.stack[props.model.stack.length - 1], props.model.stack.length - 1)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        offsetTop={index/2*-1}\r\n                        blink={props.model.blinkFor}\r\n                        shadowOffsetX={-6}\r\n                        shadowOffsetY={-3}\r\n                        source=\"main\"\r\n                        entropy={6}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick(null, \"tableau-\" + props.index)} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        entropy={4}\r\n                        shadowOffsetX={(4 - 7 + props.index)*2}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n                <TouchHand\r\n                    parent={\"tableau-\" + props.index}\r\n                    hand={props.hand}\r\n                    offset={getOffset(props.model.stack.length)}\r\n                    onClick={() => props.onClick(props.model.stack[props.model.stack.length - 1])}\r\n                />\r\n                <MouseHand\r\n                    parent={\"tableau-\" + props.index}\r\n                    hand={props.hand}\r\n                    stack={props.hand.stack}\r\n                    putBack={() => props.onClick(props.model.stack[props.model.stack.length - 1], props.model.stack.length - 1)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        shadowOffsetX={-4}\r\n                        shadowOffsetY={-3}\r\n                        offsetTop={index/2*-1}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        onClick={(c) => props.onClick(c)}\r\n                        entropy={6}\r\n                    />\r\n                ))}\r\n                <TouchHand parent=\"waste\" hand={props.hand} onClick={(c) => props.onClick(c, \"waste\")} />\r\n                <MouseHand\r\n                    parent={\"waste\"}\r\n                    hand={props.hand}\r\n                    stack={props.hand.stack}\r\n                    putBack={() => props.onClick(props.model.stack[props.model.stack.length - 1], props.model.stack.length - 1)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Footer from \"./Footer\";\r\nimport Foundation from \"./Foundation\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"layout-grid-container\">\r\n                <div className=\"game-view\">\r\n                    <div className=\"board-grid-container\">\r\n                        <Stock model={props.model.stock} onClick={props.handlers.clickStock} />\r\n                        <Waste model={props.model.waste} hand={props.model.hand} onClick={props.handlers.clickWaste} />\r\n                        <div className=\"spacer\">&nbsp;</div>\r\n                        {props.model.foundation.stacks.map((foundation, index) => (\r\n                            <Foundation\r\n                                key={index}\r\n                                index={index}\r\n                                model={foundation}\r\n                                hand={props.model.hand}\r\n                                onClick={(c) => props.handlers.clickFoundation(c, index)}\r\n                            />\r\n                        ))}\r\n                        {props.model.tableau.stacks.map((stack, index) => (\r\n                            <Tableau\r\n                                key={index}\r\n                                index={index}\r\n                                model={stack}\r\n                                hand={props.model.hand}\r\n                                onClick={(card) => props.handlers.clickTableau(card, index)}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <Footer\r\n                    reset={props.handlers.reset}\r\n                    undoLabel={props.handlers.undoLabel}\r\n                    undo={props.handlers.undo}\r\n                    beat={props.handlers.beat}\r\n                    trip={props.handlers.trip}\r\n                    model={props.model.game}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.offsetTop = 0;\r\n        this.causeEntropy(1);\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        //@todo this is awesome but move it to model\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n            if (random()) {\r\n                //this.offsetTop -= randomInt(lvl , lvl);\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = orig.entropyStyle\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))]).flat();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor() {\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    //@todo same (similar) in tableau\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0]\r\n        card.causeEntropy(3);\r\n        card.source = \"foundation-\" + index;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => {\r\n        return [...this.stacks[index].usedCards].pop();\r\n    };\r\n\r\n    countCards = () => {\r\n        this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation();\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n\r\n    trip = () => {\r\n        const randomStack = this.stacks[Math.floor(Math.random() * this.stacks.length)];\r\n        const randomElement = randomStack.stack[Math.floor(Math.random() * randomStack.stack.length)];\r\n        randomElement && randomElement.causeEntropy(4);        \r\n        return this;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Game {\r\n    constructor() {\r\n        this.points = 0;\r\n        this.started = Date.now();\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n        this.multiplicator = 1;\r\n        this.trippy = false;\r\n    }\r\n\r\n    registerMove(target, source) {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n\r\n        this.points += this.rateMove(currentMove);\r\n        return true;\r\n    }\r\n\r\n    stackEquals(a, b) {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    }\r\n\r\n    stacksEqual(a, b) {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    }\r\n\r\n    modelEquals(a, b) {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    }\r\n\r\n    pushPreviousState(state) {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    }\r\n\r\n    registerPickup() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        if (previous && previous.game) {\r\n            previous.game.points = Math.min(previous.game.points, this.points) - Math.pow(2, this.multiplicator);\r\n            previous.game.multiplicator = this.multiplicator + 1;\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        if (this.points > 0) {\r\n            if (this.points < 100) {\r\n                this.points = 0;\r\n            } else {\r\n                this.points -= 100;\r\n            }\r\n        }\r\n        console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n    }\r\n\r\n    registerUncover() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n        return true;\r\n    }\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    rateMove(move) {\r\n        const sourceIsTableau = move.source.substr(0, 7) == \"tableau\";\r\n        const targetIsTableau = move.target.substr(0, 7) == \"tableau\";\r\n        const sourceIsFoundation = move.source.substr(0, 10) == \"foundation\";\r\n        const targetIsFoundation = move.target.substr(0, 10) == \"foundation\";\r\n        if (sourceIsTableau) {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (sourceIsFoundation) {\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game();\r\n        copy.points = orig.points;\r\n        copy.started = orig.started;\r\n        copy.modified = orig.modified;\r\n        copy.multiplicator = orig.multiplicator;\r\n        copy.memorable = orig.memorable;\r\n        copy.previousStates = [...orig.previousStates];\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n    }\r\n\r\n    pickUp(stack, source) {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack;\r\n            this.source = source;\r\n            console.log('picked up', this.stack)\r\n        }\r\n\r\n        return stack;\r\n    }\r\n\r\n    putDown() {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    }\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack)\r\n        copy.source = orig.source;\r\n        return copy;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack) {\r\n        this.stack = [...stack];\r\n    }\r\n\r\n    recycle(waste) {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map((element) => {\r\n                element.causeEntropy(1);\r\n                element.isHidden = true;\r\n                return element;\r\n            });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([]);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    }\r\n\r\n    trip = () => {\r\n        const randomElement = this.stack[Math.floor(Math.random() * this.stack.length)];\r\n        randomElement && randomElement.causeEntropy(1);      \r\n        return this;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    constructor(cards) {\r\n        this.stacks = !cards ? [] : new TableauGenerator().generateStacks(cards);\r\n    }\r\n\r\n    getStack = (index) => {\r\n        return this.stacks[index];\r\n    };\r\n\r\n    accepts = (index, current) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face == \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color != top.type.color;\r\n    };\r\n\r\n    popWithFollowing = (card, i) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                return this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index, card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            //@todo also entropy to next card\r\n            top.causeEntropy(4);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        this.getTop(index) && this.getTop(index).causeEntropy(3);\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n\r\n        //this.stacks[index].stack.push(cards.map((c) => this.setCardProperties(c, index))); //@todo investigate why this doesn't work\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card, index) => {\r\n        card.source = \"tableau-\" + index;\r\n        card.causeEntropy(4);\r\n        return card;\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Tableau([]);\r\n        copy.stacks = orig.stacks.map(stack => ({stack: Card.copyAll(stack.stack)}));\r\n        return copy;\r\n    }\r\n\r\n    trip = () => {\r\n        const randomStack = this.stacks[Math.floor(Math.random() * this.stacks.length)];\r\n        const randomElement = randomStack && randomStack.stack[Math.floor(Math.random() * randomStack.stack.length)];\r\n        randomElement && randomElement.causeEntropy(4);        \r\n        return this;\r\n    }\r\n}\r\n\r\nclass TableauGenerator {\r\n    generateStacks = (deck) => {\r\n        this.deck = deck;\r\n        this.pointer = 0;\r\n        this.oldpointer = this.pointer;\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => this.template(id));\r\n        ids.reverse().forEach((id) => {\r\n            this.generateStack(id);\r\n        });\r\n        return this.stacks;\r\n    };\r\n\r\n    template = (id) => ({\r\n        stack: [],\r\n        id,\r\n    });\r\n\r\n    generateStack = (id) => {\r\n        this.pointer += 6 - id + 1;\r\n        this.stacks[id].stack = this.deck\r\n            .slice(this.oldpointer, this.pointer)\r\n            .map((c) => ({\r\n                ...c,\r\n                isHidden: true,\r\n                source: \"tableau-\" + id,\r\n            }))\r\n            .reverse();\r\n        if (this.stacks[id].stack[this.stacks[id].stack.length - 1]) {\r\n            this.stacks[id].stack[this.stacks[id].stack.length - 1].isHidden = false;\r\n        }\r\n        this.oldpointer = this.pointer;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor() {\r\n        this.stack = [];\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(1);\r\n        return card;\r\n    };\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    }\r\n\r\n    trip = () => {\r\n        const randomElement = this.stack[Math.floor(Math.random() * this.stack.length)];\r\n        randomElement && randomElement.causeEntropy(4);     \r\n        return this;\r\n    }\r\n}\r\n","import Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Facade {\r\n    static getInitialState = (deck) => {\r\n        const state = {\r\n            stock: new Stock([...deck.cards.slice(28)]),\r\n            waste: new Waste(),\r\n            foundation: new Foundation(),\r\n            tableau: new Tableau([...deck.cards.slice(0, 28)]),\r\n            hand: new Hand(),\r\n            game: new Game(),\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n        };\r\n    };\r\n\r\n    static trip = (state) => {\r\n        return {\r\n            stock: state.stock.trip(),\r\n            waste: state.waste.trip(),\r\n            foundation: state.foundation.trip(),\r\n            tableau: state.tableau.trip(),\r\n            hand: state.hand,\r\n            game: state.game,\r\n        };\r\n    };\r\n}\r\n","import Model from \"../Model/Facade\";\r\n\r\nexport default class Service {\r\n    constructor(stateholder) {\r\n        this._setState = (a, b) =>\r\n            stateholder.setState((state) => {\r\n                state.game.modified = false;\r\n                const previous = Model.copy(state);\r\n                a(state);\r\n                if (state.game.modified) {\r\n                    state.game.pushPreviousState(previous);\r\n                    return { ...state };\r\n                }\r\n\r\n                // @todo enable undoing via browser back gesture/button\r\n                return null;\r\n            }, b);\r\n    }\r\n\r\n    dispatchPutDown = (card, index) => {\r\n        this._setState(\r\n            (state) => {\r\n                if (state.hand.isHoldingCard()) {\r\n                    this._dispatchPutDown(card, state, index);\r\n                }\r\n            },\r\n            null,\r\n            true\r\n        );\r\n    };\r\n\r\n    dispatchPickup = (card, index) => {\r\n        this._setState((state) => {\r\n            if (!state.hand.isHoldingCard()) {\r\n                this._dispatchPickup(card, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    _blink = (selector, state) => this.startBlink(selector, 10, state);\r\n\r\n    startBlink = (selector, blinkFor, state) => {\r\n        selector(state).blinkFor = blinkFor;\r\n        state.game.registerBlink();\r\n        selector(state).unblink = () => setTimeout(() => this.toggleBlink(selector, 0), 100);\r\n    };\r\n\r\n    toggleBlink = (selector, blinkFor) =>\r\n        this._setState((state) => {\r\n            selector(state).blinkFor = blinkFor;\r\n            state.game.registerBlink();\r\n        });\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Foundation extends Service {\r\n    _dispatchPutDown = (_card, state, index) => {\r\n        if (!state.hand.hasMoreThanOneCard() && state.foundation.accepts(index, state.hand.currentCard())) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (_card, state, index) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryDetectEnd(state) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n\r\n    blink = (index, state) => this._blink((s) => s.foundation.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Stock extends Service {\r\n    _dispatchPutDown = (card, state) => this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, state) => (card ? this.moveToWaste(card, state) : this.recycleWaste(card, state));\r\n\r\n    moveToWaste = (card, state) =>\r\n        state.stock.isOnTop(card) && state.waste.add(state.stock.stack.pop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    recycleWaste = (_card, state) =>\r\n        !state.stock.getTop() && !!state.waste.getTop() && state.stock.recycle(state.waste.recycle()) && state.game.registerRecycle(state);\r\n\r\n    blink = (_card, state) => this._blink((s) => s.stock, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Tableau extends Service {\r\n    _dispatchPutDown = (card, state, index) => {\r\n        if (this.canPutDown(card, state, index)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    canPutDown = (card, state, index) =>\r\n        (card && card.isHidden && state.hand.isFromCurrentSource(card)) ||\r\n        state.tableau.accepts(index, state.hand.currentCard()) ||\r\n        (!card && state.hand.source == \"tableau-\" + index);\r\n\r\n    _dispatchPickup = (card, state, index) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card, index, state) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover(card, state);\r\n\r\n    blink = (index, state) => this._blink((s) => s.tableau.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Waste extends Service {\r\n    _dispatchPutDown = (card, state) =>\r\n        (state.hand.source == \"waste\" &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, state) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\") && state.game.registerPickup()) || this.blink(card, state);\r\n\r\n    blink = (card, state) => this._blink((s) => s.waste, state);\r\n}\r\n","import Deck from \"../Model/Deck/Deck\";\r\nimport Foundation from \"./Foundation\";\r\nimport Model from \"../Model/Facade\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Facade {\r\n    constructor() {\r\n        this.deck = new Deck();\r\n        this.deck.shuffle();\r\n    }\r\n\r\n    getInitialState = () => Model.getInitialState(this.deck);\r\n\r\n    getHandlers(stateholder, state) {\r\n        let handler = \"dispatchPickup\";\r\n        if (state && state.hand && state.hand.isHoldingCard()) {\r\n            handler = \"dispatchPutDown\";\r\n        }\r\n\r\n        return {\r\n            clickTableau: new Tableau(stateholder)[handler],\r\n            clickFoundation: new Foundation(stateholder)[handler],\r\n            clickStock: new Stock(stateholder)[handler],\r\n            clickWaste: new Waste(stateholder)[handler],\r\n            undo: () => this.undo(state.game.previousStates.length - 1, stateholder, state),\r\n            reset: () => this.reset(stateholder),\r\n            beat: () => this.beat(stateholder),\r\n            trip: () => this.trip(stateholder),\r\n            undoLabel: () => Math.pow(2, stateholder.state.game.multiplicator),\r\n        };\r\n    }\r\n\r\n    beat = (stateholder) => {\r\n        stateholder.setState((state) => Model.trip(state));\r\n    }\r\n\r\n    reset = (stateholder) =>\r\n        stateholder.setState((state) => (state.game.previousStates ? state.game.previousStates[0] : { ...this.getInitialState() }));\r\n\r\n    undo = (id, stateholder, currentState) => stateholder.setState((state) => state.game.popPreviousState(id, currentState) || null);\r\n\r\n    trip = (stateholder) => {\r\n        console.log('start tripping')\r\n        setInterval(() =>{\r\n            stateholder.setState((state) => Model.trip(state));\r\n        }, 250);\r\n    }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport Board from \"./View/Board\";\r\nimport { Component } from \"react\";\r\nimport Game from \"./Service/Facade\";\r\nimport React from \"react\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.game = new Game();\r\n        this.state = this.game.getInitialState(this);\r\n    }\r\n\r\n    render() {\r\n        const handlers = this.game.getHandlers(this, this.state);\r\n        return <Board subscribe={this.subscribe} model={this.state} game={this.game} handlers={handlers} />;\r\n    }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}