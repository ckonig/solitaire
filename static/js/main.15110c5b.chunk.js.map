{"version":3,"sources":["View/Clock.js","View/Undo.js","View/Footer.js","View/BlinkingComponent.js","View/Card.js","View/TouchAwareComponent.js","View/MouseHand.js","View/StackBase.js","View/TouchHand.js","View/Foundation.js","View/Stock.js","View/Tableau.js","View/Waste.js","View/Board.js","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","Model/Game/Foundation.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Stock.js","Model/Game/Tableau.js","Model/Game/Waste.js","Model/Facade.js","Service/BaseService.js","Service/Foundation.js","Service/Stock.js","Service/Tableau.js","Service/Waste.js","Service/Facade.js","App.js","index.js"],"names":["Clock","props","state","timeElapsed","setInterval","setState","msec","end","Date","now","started","hh","Math","floor","mm","ss","className","this","Component","Undo","document","addEventListener","e","evtobj","window","event","keyCode","ctrlKey","undo","onClick","undoLabel","Footer","model","points","isEnded","reset","beat","href","BlinkingComponent","blinkFor","unblink","Card","type","icon","isSelected","blink","shadowOffset","style","zIndex","offsetTop","top","boxShadow","entropyStyle","isHidden","face","TouchAwareComponent","isTouch","is_touch_device","prefixes","split","DocumentTouch","query","join","matchMedia","matches","console","error","source","hand","isHoldingCard","MouseHand","myRef","React","createRef","onMouseMove","bind","onKeyDown","putBack","removeEventListener","parent","node","current","x","clientX","y","clientY","left","position","ref","stack","map","card","index","StackBase","classname","children","TouchHand","offset","c","Foundation","entropy","length","Stock","Tableau","getOffset","i","Waste","Board","stock","handlers","clickStock","waste","clickWaste","foundation","stacks","clickFoundation","tableau","clickTableau","game","causeEntropy","lvl","level","randomInt","min","max","random","log","equals","other","otherCard","copy","orig","copyAll","cards","DeckSize","Suits","heart","color","club","diamond","spade","Deck","keys","Object","deckSize","key","flat","shuffleArray","array","j","getCurrentAccepted","currentFoundation","acceptedCards","accepts","currentAccepted","add","push","usedCards","pop","remove","getTop","getPreviousUsed","countCards","f","parseInt","reduce","a","b","suit","slice","reverse","origStack","Game","popPreviousState","id","isRequested","previousStates","popPrevious","previous","memorable","modelEquals","pow","multiplicator","modified","target","currentMove","rateMove","every","stackEquals","stacksEqual","debug","move","sourceIsTableau","substr","targetIsTableau","sourceIsFoundation","targetIsFoundation","Hand","currentCard","hasMoreThanOneCard","isFromCurrentSource","splice","isOnTop","element","getStack","range","indexOf","popWithFollowing","uncover","concat","setCardProperties","TableauGenerator","generateStacks","deck","pointer","oldpointer","ids","template","forEach","generateStack","tryPutDown","canAdd","popTop","recycle","Facade","getInitialState","Service","stateholder","dispatchPutDown","_setState","_dispatchPutDown","dispatchPickup","_dispatchPickup","_blink","selector","startBlink","registerBlink","setTimeout","toggleBlink","Model","pushPreviousState","_card","src","putDown","registerMove","tryDetectEnd","pickUp","registerPickup","s","moveToWaste","recycleWaste","registerRecycle","canPutDown","tryUncover","registerUncover","currentState","shuffle","handler","App","getHandlers","subscribe","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.15110c5b.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeElapsed: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            this.setState((state) => {\r\n                //@todo padleft or string format : 00:01\r\n                let msec = (this.props.end || Date.now()) - this.props.started;\r\n                const hh = Math.floor(msec / 1000 / 60 / 60);\r\n                msec -= hh * 1000 * 60 * 60;\r\n                const mm = Math.floor(msec / 1000 / 60);\r\n                msec -= mm * 1000 * 60;\r\n                const ss = Math.floor(msec / 1000);\r\n                msec -= ss * 1000;\r\n                state.timeElapsed = hh ? hh + \":\" + mm + \":\" + ss : mm + \":\" + ss;\r\n                return { ...state };\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return <span className={this.props.className}>Time Elapsed: {this.state.timeElapsed}</span>;\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Undo extends Component {\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            const evtobj = window.event ? event : e;\r\n            if (evtobj.keyCode == 90 && evtobj.ctrlKey) this.props.undo();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.props.undo}>undo (penalty:-{this.props.undoLabel()})</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Clock from \"./Clock\";\r\nimport React from \"react\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-grid-container\">\r\n                <span>Points: {props.model.points}</span>\r\n                <Clock className=\"clock\" started={props.model.started} end={props.model.end} />\r\n                <span>Is Ended: {props.model.isEnded ? \"Y\" : \"N\"}</span>\r\n                <div><button onClick={props.reset}>reset</button></div>\r\n                <div><button onClick={props.beat}>beat on table</button></div>\r\n                <Undo undo={props.undo} undoLabel={props.undoLabel} />\r\n                <span className=\"report\">\r\n                    Report Issues <a href=\"https://github.com/ckonig/solitaire/issues\">here</a>.\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Footer;\r\n","import { Component } from \"react\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    componentDidUpdate() {\r\n        if (this.props.model.blinkFor) {\r\n            this.props.model.unblink();\r\n        }\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    //@todo 3d flip https://3dtransforms.desandro.com/card-flip\r\n    //run css animation first like this:\r\n    //https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n    //then trigger re-render through state change in parent\r\n    const model = props.model;\r\n    let className = \"card card-base suit-\" + model.type.icon;\r\n    className += props.isSelected ? \" card-selected\" : \"\";\r\n    className += props.blink ? \" blink\" : \"\";\r\n    const shadowOffset = props.shadowOffset || 0;\r\n    const style = {\r\n        zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n        top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n        boxShadow: shadowOffset+'px -1px 2px 2px black',\r\n        ...props.model.entropyStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"stack-base\">\r\n            <div style={style} className={className} onClick={() => props.onClick({ ...model })}>\r\n                {model.isHidden ? (\r\n                    <div className=\"card-back quarot\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Card;\r\n","import { Component } from \"react\";\r\n\r\nexport default class TouchAwareComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isTouch = this.is_touch_device();\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = (query) => window.matchMedia(query).matches;\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    shouldShowHand(source) {\r\n        return this.isTouch && this.props.hand.isHoldingCard() && this.props.hand.source === source;\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport TouchAwareComponent from \"./TouchAwareComponent\";\r\n\r\nexport default class MouseHand extends TouchAwareComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.isTouch) {\r\n            document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n\r\n            if (this.props.putBack) {\r\n                document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (!this.isTouch) {\r\n            document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n    }\r\n\r\n    onMouseMove(e) {\r\n        if (!this.isTouch && this.props.hand && this.props.parent == this.props.hand.source) {\r\n            const node = this.myRef.current;\r\n            const x = e.clientX,\r\n                y = e.clientY;\r\n            node.style.top = y + 25 + \"px\";\r\n            node.style.left = x + 25 + \"px\";\r\n            node.style.position = \"absolute\";\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && !this.isTouch && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {!this.isTouch &&\r\n                    this.props.hand &&\r\n                    this.props.parent == this.props.hand.source &&\r\n                    this.props.stack &&\r\n                    this.props.stack.map((card, index) => (\r\n                        <Card\r\n                            model={card}\r\n                            key={index}\r\n                            onClick={() => {\r\n                                console.error(\"clicked card in mouse hand\");\r\n                            }}\r\n                            offsetTop={index * 20}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base socket-empty\";\r\n    if (props.blink) {\r\n        classname += \" blink\";\r\n    }\r\n    return (\r\n        <div className={classname} onClick={() => props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport TouchAwareComponent from \"./TouchAwareComponent\";\r\n\r\nexport default class TouchHand extends TouchAwareComponent {\r\n    render() {\r\n        if (!this.isTouch || !this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card\r\n                            model={card}\r\n                            key={index}\r\n                            offsetTop={this.props.offset + index * 20}\r\n                            zIndex={1000 + index * 20}\r\n                            isSelected={true}\r\n                            onClick={(c) => this.props.onClick(c)}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick()}>\r\n                    <div className={\"align-center foundation-base suit-\" + props.model.icon}>{props.model.icon}</div>\r\n                </StackBase>\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} shadowOffset={(props.index)*2} blink={props.model.blinkFor} entropy={6} onClick={props.onClick} />\r\n                ))}\r\n                <TouchHand\r\n                    parent={\"foundation-\" + props.index}\r\n                    hand={props.hand}\r\n                    onClick={() => props.onClick(props.model.stack[props.model.stack.length - 1])}\r\n                />\r\n                <MouseHand\r\n                    parent={\"foundation-\" + props.index}\r\n                    hand={props.hand}\r\n                    stack={props.hand.stack}\r\n                    putBack={() => props.onClick(props.model.stack[props.model.stack.length - 1], props.model.stack.length - 1)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} blink={props.model.blinkFor} shadowOffset={-6} source=\"main\" entropy={6} onClick={props.onClick} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={() => props.onClick(null, \"tableau-\" + props.index)} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        entropy={4}\r\n                        shadowOffset={(4 - 7 + props.index)*2}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n                <TouchHand\r\n                    parent={\"tableau-\" + props.index}\r\n                    hand={props.hand}\r\n                    offset={getOffset(props.model.stack.length)}\r\n                    onClick={() => props.onClick(props.model.stack[props.model.stack.length - 1])}\r\n                />\r\n                <MouseHand\r\n                    parent={\"tableau-\" + props.index}\r\n                    hand={props.hand}\r\n                    stack={props.hand.stack}\r\n                    putBack={() => props.onClick(props.model.stack[props.model.stack.length - 1], props.model.stack.length - 1)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card model={card} key={index} blink={props.model.blinkFor} onClick={(c) => props.onClick(c)} entropy={6} />\r\n                ))}\r\n                <TouchHand parent=\"waste\" hand={props.hand} onClick={(c) => props.onClick(c, \"waste\")} />\r\n                <MouseHand\r\n                    parent={\"waste\"}\r\n                    hand={props.hand}\r\n                    stack={props.hand.stack}\r\n                    putBack={() => props.onClick(props.model.stack[props.model.stack.length - 1], props.model.stack.length - 1)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Footer from \"./Footer\";\r\nimport Foundation from \"./Foundation\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"layout-grid-container\">\r\n                <Stock model={props.model.stock} onClick={props.handlers.clickStock} />\r\n                <Waste model={props.model.waste} hand={props.model.hand} onClick={props.handlers.clickWaste} />\r\n                <div className=\"spacer\">&nbsp;</div>\r\n                {props.model.foundation.stacks.map((foundation, index) => (\r\n                    <Foundation\r\n                        key={index}\r\n                        index={index}\r\n                        model={foundation}\r\n                        hand={props.model.hand}\r\n                        onClick={(c) => props.handlers.clickFoundation(c, index)}\r\n                    />\r\n                ))}\r\n                {props.model.tableau.stacks.map((stack, index) => (\r\n                    <Tableau\r\n                        key={index}\r\n                        index={index}\r\n                        model={stack}\r\n                        hand={props.model.hand}\r\n                        onClick={(card) => props.handlers.clickTableau(card, index)}\r\n                    />\r\n                ))}\r\n                <Footer\r\n                    reset={props.handlers.reset}\r\n                    undoLabel={props.handlers.undoLabel}\r\n                    undo={props.handlers.undo}\r\n                    beat={props.handlers.beat}\r\n                    model={props.model.game}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.causeEntropy(3);\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        //@todo this is awesome but move it to model\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n            //shift\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n           //rotate\r\n            console.log(\"rotating\");\r\n            this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n            console.log(this.entropyStyle);\r\n        \r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))]).flat();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor() {\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    //@todo same (similar) in tableau\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0]\r\n        card.causeEntropy(3);\r\n        card.source = \"foundation-\" + index;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => {\r\n        return [...this.stacks[index].usedCards].pop();\r\n    };\r\n\r\n    countCards = () => {\r\n        this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation();\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Game {\r\n    constructor() {\r\n        this.points = 0;\r\n        this.started = Date.now();\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove(target, source) {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n\r\n        this.points += this.rateMove(currentMove);\r\n        return true;\r\n    }\r\n\r\n    stackEquals(a, b) {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    }\r\n\r\n    stacksEqual(a, b) {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    }\r\n\r\n    modelEquals(a, b) {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    }\r\n\r\n    pushPreviousState(state) {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    }\r\n\r\n    registerPickup() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        if (previous && previous.game) {\r\n            previous.game.points = Math.min(previous.game.points, this.points) - Math.pow(2, this.multiplicator);\r\n            previous.game.multiplicator = this.multiplicator + 1;\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        if (this.points > 0) {\r\n            if (this.points < 100) {\r\n                this.points = 0;\r\n            } else {\r\n                this.points -= 100;\r\n            }\r\n        }\r\n        console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n    }\r\n\r\n    registerUncover() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n        return true;\r\n    }\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    rateMove(move) {\r\n        const sourceIsTableau = move.source.substr(0, 7) == \"tableau\";\r\n        const targetIsTableau = move.target.substr(0, 7) == \"tableau\";\r\n        const sourceIsFoundation = move.source.substr(0, 10) == \"foundation\";\r\n        const targetIsFoundation = move.target.substr(0, 10) == \"foundation\";\r\n        if (sourceIsTableau) {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (targetIsFoundation) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (sourceIsFoundation) {\r\n            if (targetIsTableau) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game();\r\n        copy.points = orig.points;\r\n        copy.started = orig.started;\r\n        copy.modified = orig.modified;\r\n        copy.multiplicator = orig.multiplicator;\r\n        copy.memorable = orig.memorable;\r\n        copy.previousStates = [...orig.previousStates];\r\n        return copy;\r\n    };\r\n}\r\n","export default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n    }\r\n\r\n    pickUp(stack, source) {\r\n        if (stack) {\r\n            this.stack = stack;\r\n            this.source = source;\r\n            console.log('picked up', this.stack)\r\n        }\r\n\r\n        return stack;\r\n    }\r\n\r\n    putDown() {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    }\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    static copy = () => {\r\n        const copy = new Hand();\r\n        return copy;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack) {\r\n        this.stack = [...stack];\r\n    }\r\n\r\n    recycle(waste) {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map((element) => {\r\n                element.causeEntropy(3);\r\n                element.isHidden = true;\r\n                return element;\r\n            });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([]);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    constructor(cards) {\r\n        this.stacks = !cards ? [] : new TableauGenerator().generateStacks(cards);\r\n    }\r\n\r\n    getStack = (index) => {\r\n        return this.stacks[index];\r\n    };\r\n\r\n    accepts = (index, current) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face == \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color != top.type.color;\r\n    };\r\n\r\n    popWithFollowing = (card, i) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                return this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index, card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        this.getTop(index) && this.getTop(index).causeEntropy(3);\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n\r\n        //this.stacks[index].stack.push(cards.map((c) => this.setCardProperties(c, index))); //@todo investigate why this doesn't work\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card, index) => {\r\n        card.source = \"tableau-\" + index;\r\n        card.causeEntropy(4);\r\n        return card;\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Tableau([]);\r\n        copy.stacks = orig.stacks.map(stack => ({stack: Card.copyAll(stack.stack)}));\r\n        return copy;\r\n    }\r\n}\r\n\r\nclass TableauGenerator {\r\n    generateStacks = (deck) => {\r\n        this.deck = deck;\r\n        this.pointer = 0;\r\n        this.oldpointer = this.pointer;\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => this.template(id));\r\n        ids.reverse().forEach((id) => {\r\n            this.generateStack(id);\r\n        });\r\n        return this.stacks;\r\n    };\r\n\r\n    template = (id) => ({\r\n        stack: [],\r\n        id,\r\n    });\r\n\r\n    generateStack = (id) => {\r\n        this.pointer += 6 - id + 1;\r\n        this.stacks[id].stack = this.deck\r\n            .slice(this.oldpointer, this.pointer)\r\n            .map((c) => ({\r\n                ...c,\r\n                isHidden: true,\r\n                source: \"tableau-\" + id,\r\n            }))\r\n            .reverse();\r\n        if (this.stacks[id].stack[this.stacks[id].stack.length - 1]) {\r\n            this.stacks[id].stack[this.stacks[id].stack.length - 1].isHidden = false;\r\n        }\r\n        this.oldpointer = this.pointer;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor() {\r\n        this.stack = [];\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(3);\r\n        return card;\r\n    };\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    }\r\n}\r\n","import Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Facade {\r\n    static getInitialState = (deck) => {\r\n        const state = {\r\n            stock: new Stock([...deck.cards.slice(28)]),\r\n            waste: new Waste(),\r\n            foundation: new Foundation(),\r\n            tableau: new Tableau([...deck.cards.slice(0, 28)]),\r\n            hand: new Hand(),\r\n            game: new Game(),\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n        };\r\n    };\r\n}\r\n","import Model from \"../Model/Facade\";\r\n\r\nexport default class Service {\r\n    constructor(stateholder) {\r\n        this._setState = (a, b) =>\r\n            stateholder.setState((state) => {\r\n                state.game.modified = false;\r\n                const previous = Model.copy(state);\r\n                a(state);\r\n                if (state.game.modified) {\r\n                    state.game.pushPreviousState(previous);\r\n                    return { ...state };\r\n                }\r\n\r\n                // @todo enable undoing via browser back gesture/button\r\n                return null;\r\n            }, b);\r\n    }\r\n\r\n    dispatchPutDown = (card, index) => {\r\n        this._setState(\r\n            (state) => {\r\n                if (state.hand.isHoldingCard()) {\r\n                    this._dispatchPutDown(card, state, index);\r\n                }\r\n            },\r\n            null,\r\n            true\r\n        );\r\n    };\r\n\r\n    dispatchPickup = (card, index) => {\r\n        this._setState((state) => {\r\n            if (!state.hand.isHoldingCard()) {\r\n                this._dispatchPickup(card, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    _blink = (selector, state) => this.startBlink(selector, 10, state);\r\n\r\n    startBlink = (selector, blinkFor, state) => {\r\n        selector(state).blinkFor = blinkFor;\r\n        state.game.registerBlink();\r\n        selector(state).unblink = () => setTimeout(() => this.toggleBlink(selector, 0), 100);\r\n    };\r\n\r\n    toggleBlink = (selector, blinkFor) =>\r\n        this._setState((state) => {\r\n            selector(state).blinkFor = blinkFor;\r\n            state.game.registerBlink();\r\n        });\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Foundation extends Service {\r\n    _dispatchPutDown = (_card, state, index) => {\r\n        if (!state.hand.hasMoreThanOneCard() && state.foundation.accepts(index, state.hand.currentCard())) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (_card, state, index) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryDetectEnd(state) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n\r\n    blink = (index, state) => this._blink((s) => s.foundation.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Stock extends Service {\r\n    _dispatchPutDown = (card, state) => this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, state) => (card ? this.moveToWaste(card, state) : this.recycleWaste(card, state));\r\n\r\n    moveToWaste = (card, state) =>\r\n        state.stock.isOnTop(card) && state.waste.add(state.stock.stack.pop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    recycleWaste = (_card, state) =>\r\n        !state.stock.getTop() && !!state.waste.getTop() && state.stock.recycle(state.waste.recycle()) && state.game.registerRecycle(state);\r\n\r\n    blink = (_card, state) => this._blink((s) => s.stock, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Tableau extends Service {\r\n    _dispatchPutDown = (card, state, index) => {\r\n        if (this.canPutDown(card, state, index)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    canPutDown = (card, state, index) =>\r\n        (card && card.isHidden && state.hand.isFromCurrentSource(card)) ||\r\n        state.tableau.accepts(index, state.hand.currentCard()) ||\r\n        (!card && state.hand.source == \"tableau-\" + index);\r\n\r\n    _dispatchPickup = (card, state, index) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card, index, state) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover(card, state);\r\n\r\n    blink = (index, state) => this._blink((s) => s.tableau.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Waste extends Service {\r\n    _dispatchPutDown = (card, state) =>\r\n        (state.hand.source == \"waste\" &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, state) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\") && state.game.registerPickup()) || this.blink(card, state);\r\n\r\n    blink = (card, state) => this._blink((s) => s.waste, state);\r\n}\r\n","import Deck from \"../Model/Deck/Deck\";\r\nimport Foundation from \"./Foundation\";\r\nimport Model from \"../Model/Facade\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Facade {\r\n    constructor() {\r\n        this.deck = new Deck();\r\n        this.deck.shuffle();\r\n    }\r\n\r\n    getInitialState = () => Model.getInitialState(this.deck);\r\n\r\n    getHandlers(stateholder, state) {\r\n        let handler = \"dispatchPickup\";\r\n        if (state && state.hand && state.hand.isHoldingCard()) {\r\n            handler = \"dispatchPutDown\";\r\n        }\r\n\r\n        return {\r\n            clickTableau: new Tableau(stateholder)[handler],\r\n            clickFoundation: new Foundation(stateholder)[handler],\r\n            clickStock: new Stock(stateholder)[handler],\r\n            clickWaste: new Waste(stateholder)[handler],\r\n            undo: () => this.undo(state.game.previousStates.length - 1, stateholder, state),\r\n            reset: () => this.reset(stateholder),\r\n            beat: () => this.beat(stateholder),\r\n            undoLabel: () => Math.pow(2, stateholder.state.game.multiplicator),\r\n        };\r\n    }\r\n\r\n    beat = (stateholder) => {\r\n        stateholder.setState((state) => Model.copy(state));\r\n    }\r\n\r\n    reset = (stateholder) =>\r\n        stateholder.setState((state) => (state.game.previousStates ? state.game.previousStates[0] : { ...this.getInitialState() }));\r\n\r\n    undo = (id, stateholder, currentState) => stateholder.setState((state) => state.game.popPreviousState(id, currentState) || null);\r\n}\r\n","import \"./App.css\";\r\n\r\nimport Board from \"./View/Board\";\r\nimport { Component } from \"react\";\r\nimport Game from \"./Service/Facade\";\r\nimport React from \"react\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.game = new Game();\r\n        this.state = this.game.getInitialState(this);\r\n    }\r\n\r\n    render() {\r\n        const handlers = this.game.getHandlers(this, this.state);\r\n        return <Board subscribe={this.subscribe} model={this.state} game={this.game} handlers={handlers} />;\r\n    }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}