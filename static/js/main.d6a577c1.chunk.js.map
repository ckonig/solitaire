{"version":3,"sources":["View/EndDisplay.js","View/BlinkingComponent.js","View/Card.js","View/MouseHand.js","View/TouchHand.js","View/Hand.js","View/StackBase.js","View/Foundation.js","View/Clock.js","View/Undo.js","View/Header.js","View/Menu.js","View/Stock.js","View/Tableau.js","View/Waste.js","View/Board.js","Model/Deck/Card.js","Model/Deck/Suits.js","Model/Deck/DeckSize.js","Model/Game/Foundation.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.js","Model/Game/Waste.js","Model/Facade.js","Service/Blinker.js","Service/BaseService.js","Service/Tableau.js","Service/Waste.js","Service/Suggestions.js","Service/Dealer.js","Model/Deck/Deck.js","Service/Foundation.js","Service/Game.js","Service/Settings.js","Service/Stock.js","Service/Facade.js","Service/GameState.js","View/Launcher.js","View/StartScreen.js","App.js","index.js"],"names":["EndDisplay","props","game","isEnded","className","points","getElapsed","onClick","restart","BlinkingComponent","this","model","blinkFor","unblink","Component","Card","e","ele","target","includes","offsetParent","rect","getBoundingClientRect","position","click","x","clientX","y","clientY","element","type","icon","isSelected","blink","isSuggested","suggestion","style","zIndex","offsetTop","top","entropyStyle","shadowOffsetX","offsetY","shadowOffsetY","offsetLeft","_style","_div","children","isHidden","face","MouseHand","onMouseMove","state","positionFixed","setState","updateDisplay","myRef","React","createRef","bind","onKeyDown","document","addEventListener","putBack","removeEventListener","node","current","hand","parent","source","left","window","event","keyCode","getOffsetTop","index","ref","stack","map","card","TouchHand","c","Hand","p","length","settings","mouseMode","StackBase","classname","visible","suggested","Foundation","stackindex","Stacks","stacks","foundation","Clock","timeElapsed","interval","setInterval","started","clearInterval","Undo","evtobj","ctrlKey","undo","disabled","previousStates","title","undoLabel","Header","launchSettings","recyclingMode","passes","Array","from","keys","join","end","suggestionMode","suggestOnce","reset","newGame","beat","toggleMenu","showMenu","Menu","onChange","setSuggestionMode","value","suggestionModes","setMouseMode","mouseModes","setBaseEntropy","baseEntropy","entropyLevels","entropyLevel","setInteractionEntropy","interactionEntropy","rel","href","Stock","Tableau","getOffset","i","tableau","Waste","drawMode","isHoldingCard","additionalOffset","Board","componentDidMount","handlers","deal","stock","clickStock","waste","clickWaste","clickFoundation","clickTableau","causeEntropy","lvl","level","random","Math","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","Suits","heart","color","club","diamond","spade","DeckSize","getStacks","getCurrentAccepted","currentFoundation","acceptedCards","wouldAccept","hasMoreThanOneCard","accepts","currentCard","currentAccepted","add","push","usedCards","pop","remove","getTop","getPreviousUsed","countCards","f","parseInt","reduce","a","b","setEntropy","forEach","Object","key","suit","slice","reverse","origStack","Game","popPreviousState","id","isRequested","popPrevious","previous","memorable","modelEquals","pow","multiplicator","padleft","msec","Date","now","hh","floor","mm","ss","modified","recyclings","currentMove","rateMove","every","stackEquals","stacksEqual","console","debug","stockIsEmpty","move","isTableau","obj","substr","isFoundation","isFromCurrentSource","splice","Settings","isTouch","is_touch_device","prefixes","split","DocumentTouch","query","matchMedia","matches","error","isOnTop","popTop","dealt","dealingAt","isDealt","newCard","isFirst","getStack","canPutDown","range","indexOf","getCard","j","popWithFollowing","result","stackEntropy","uncover","entropy","next","concat","setCardProperties","offset","tryPutDown","canAdd","addAll","recycle","Facade","getInitialState","deck","Blinker","gamestate","startBlink","selector","registerBlink","setTimeout","stopBlink","_setState","Service","dispatchPutDown","_dispatchPutDown","dispatchPickup","_dispatchPickup","_blink","blinker","handler","src","putDown","registerMove","tryUncover","pickUp","registerPickup","registerUncover","s","Suggestions","evaluateOptions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","substring","foundAny","wasteState","cardIndex","tableauState","options","disableSuggestion","Dealer","dealWithTimeouts","suggestor","Deck","deckSize","flat","shuffleArray","array","_card","tryDetectEnd","stateholder","currentState","sm","menu","moveToWaste","recycleWaste","registerWasteMove","canRecycle","registerRecycle","Model","shuffle","getHandlers","getHandler","GameState","pushPreviousState","Launcher","render","StartScreen","start","App","initialized","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6a577c1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst EndDisplay = (props) => {\r\n    //@todo make this an optional part of the menu\r\n    return !props.game.isEnded ? null : (\r\n        <div className=\"endscreen align-center\">\r\n            <h1>🥳</h1>\r\n            <div>Points: {props.game.points}</div>\r\n            <div>Time: {props.game.getElapsed()}</div>\r\n            <button onClick={props.restart}>new game</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndDisplay;\r\n","import { Component } from \"react\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    componentDidUpdate() {\r\n        if (this.props.model.blinkFor) {\r\n            this.props.model.unblink();\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onClick = (e) => {\r\n        let ele = e.target;\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        //@todo use scroll difference instead\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            click: {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n\r\n        this.props.onClick({ ...this.props.model }, position);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        //@todo 3d flip https://3dtransforms.desandro.com/card-flip\r\n        //run css animation first like this:\r\n        //https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n        //then trigger re-render through state change in parent\r\n        const model = props.model;\r\n        let className = props.className + \" card card-base suit-\" + model.type.icon;\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack\r\n        className += (props.isSuggested || props.model.suggestion) ? \" card-suggested\": \"\";\r\n        const style = {\r\n            zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };        \r\n        if (!props.isSelected && !(props.isSuggested || props.model.suggestion) && !props.blink && (props.shadowOffsetX || (!props.shadowOffsetX && props.shadowOffsetX === 0))) {\r\n            const offsetY = props.shadowOffsetY || \"-1\";\r\n            style[\"boxShadow\"] = props.shadowOffsetX + \"px \" + offsetY + \"px 4px 4px rgba(0, 0, 0, 0.75)\";\r\n        }\r\n\r\n        if (props.offsetLeft) {\r\n          style[\"left\"] =  (props.offsetLeft * 4) + \"vw\";\r\n        }\r\n\r\n        const _style = {};\r\n\r\n        if (!this.props.onClick) {\r\n            style[\"pointerEvents\"] = \"none\";\r\n            _style[\"pointerEvents\"] = \"none\";\r\n        }\r\n\r\n        const _div = (props) => (\r\n            <div style={_style} className={props.className}>\r\n                {props.children}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <_div className=\"stack-base\">\r\n                <div style={style} className={className} onClick={this.onClick ? this.onClick : null}>\r\n                    {model.isHidden ? (\r\n                        <div className=\"card-back quarot\">&nbsp;</div>\r\n                    ) : (\r\n                        <div className=\"card-grid-container\">\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-left\">{model.face}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div className=\"mainface\">\r\n                                <div className=\"align-center\">{model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                            <div>&nbsp;</div>\r\n                            <div>\r\n                                <div className=\"align-right\">{model.face}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"align-center\">{model.type.icon}</div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </_div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        if (this.props.putBack) {\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack();\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card model={card} key={index} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends Component {\r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.props.hand &&\r\n                this.props.hand.stack &&\r\n                this.props.hand.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        shadowOffsetX={this.props.shadowOffsetX}\r\n                        shadowOffsetY={this.props.shadowOffsetY}\r\n                        offsetTop={this.props.offsetTop + index * 24}\r\n                        offsetLeft={this.props.offsetLeft}\r\n                        zIndex={1000 + index * 20}\r\n                        isSelected={true}\r\n                        onClick={(c) => this.props.onClick(c)}\r\n                    />\r\n                )),\r\n        ];\r\n    }\r\n}\r\n","import MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    if (!props.model || props.parent !== props.model.source) {\r\n        return null;\r\n    }\r\n    const putBack = (c, p) => props.onClick(props.stack[props.stack.length - 1], p, props.stack.length - 1);\r\n    if (props.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parent} hand={props.model} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (props.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <TouchHand\r\n                parent={props.parent}\r\n                hand={props.model}\r\n                shadowOffsetX={props.shadowOffsetX}\r\n                shadowOffsetY={props.shadowOffsetY}\r\n                offsetTop={props.offsetTop}\r\n                offsetLeft={props.offsetLeft}\r\n                onClick={putBack}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base\";\r\n\r\n    if (props.visible) {\r\n        if (props.blink) {\r\n            classname += \" socket-blink\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n    if  (props.suggested) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n    return (\r\n        <div className={classname} onClick={()=> props.onClick()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    static Stacks = (props) =>\r\n        props.model.stacks.map((foundation, index) => (\r\n            <Foundation\r\n                hand={props.hand}\r\n                key={index}\r\n                model={foundation}\r\n                stackindex={index}\r\n                settings={props.settings}\r\n                onClick={(c, p) => props.onClick(c, p, index)}\r\n            />\r\n        ));\r\n    render() {\r\n        const props = this.props;\r\n        const model = this.props.model;\r\n        const stackindex = this.props.stackindex;\r\n        const settings = this.props.settings;\r\n        return (\r\n            <div key={stackindex}>\r\n                <StackBase\r\n                    suggested={model.suggestion && !model.stack.length}\r\n                    blink={model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, stackindex)}\r\n                    visible={!model.stack.length}\r\n                >\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        shadowOffsetX={stackindex * 2}\r\n                        shadowOffsetY={-3}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                        onClick={(c, p) => props.onClick(c, p, stackindex)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={settings}\r\n                    parent={\"foundation-\" + stackindex}\r\n                    shadowOffsetX={stackindex * 2}\r\n                    shadowOffsetY={-3}\r\n                    onClick={(c, p) => props.onClick(model.stack[model.stack.length - 1], p, stackindex)}\r\n                    model={props.hand}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Component } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeElapsed: false,\r\n        };\r\n        this.interval = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            if (this.props.started) {\r\n                this.setState((state) => {\r\n                    state.timeElapsed = this.props.game.getElapsed();\r\n                    return { ...state };\r\n                });\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.started &&\r\n            this.state.timeElapsed && (\r\n                <div className={this.props.className}>\r\n                    <div className=\"icon-container\">🕒</div>\r\n                    {this.state.timeElapsed}\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Undo extends Component {\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            const evtobj = window.event ? event : e;\r\n            if (evtobj.keyCode == 90 && evtobj.ctrlKey) this.props.undo();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <button disabled={!this.props.model.previousStates.length} title={\"Undo (Penalty:\"+this.props.undoLabel()+\")\"} onClick={this.props.undo}>⏪</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Clock from \"./Clock\";\r\nimport React from \"react\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = (props) => {\r\n    const getHearts = () => {\r\n        if (props.model.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n        if (props.model.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            return props.model.passes > 0 ? \"❤️\" : \"💔\";\r\n        }\r\n\r\n        if (props.model.passes < 0) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            Array.from(new Array(props.model.passes).keys())\r\n                .map(() => \"❤️\")\r\n                .join(\"\") +\r\n            Array.from(new Array(3 - props.model.passes).keys())\r\n                .map(() => \"💔\")\r\n                .join(\"\")\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-title\">\r\n                <div className=\"heart-container\">{getHearts()}</div>\r\n                <div className=\"icon-container\">🏆</div> {props.model.points}\r\n            </div>\r\n            <Clock game={props.model} className=\"header-clock\" started={props.model.started} end={props.model.end} />\r\n            <div className=\"header-buttons\">\r\n                <div>\r\n                    <button disabled={props.settings.suggestionMode !== \"none\"} title={\"Hint\"} onClick={() => props.suggestOnce()}>\r\n                        💡\r\n                    </button>\r\n                </div>\r\n                <Undo undo={props.undo} undoLabel={props.undoLabel} model={props.model} />\r\n\r\n                <div>\r\n                    <button disabled={!props.model.previousStates.length} title=\"Reset\" onClick={props.reset}>\r\n                        ♻️\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button title=\"New Game\" onClick={props.newGame}>\r\n                        🚮\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button title=\"Punch on table\" onClick={props.beat}>\r\n                        👊\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button title=\"Settings\" onClick={() => props.toggleMenu(props.settings.showMenu)}>\r\n                        ⚙️\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Menu extends Component {\r\n    render() {\r\n        //@todo if game not yet started, allow configuration of dealing behavior (preselect enable on desktop, disable on mobile)\r\n        const props = this.props;\r\n        if (!props.settings.showMenu) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"title\">Settings</div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Suggestions</div>\r\n                    <div className=\"row\">\r\n                        <span className=\"label\">\r\n                            <div className=\"description\">How much help - if any - should the game offer by displaying suggestions?</div>\r\n                        </span>\r\n                        <select\r\n                            className=\"input\"\r\n                            onChange={(e) => props.setSuggestionMode(e.target.value)}\r\n                            value={props.settings.suggestionMode}\r\n                        >\r\n                            {props.settings.suggestionModes.map((suggestionMode) => (\r\n                                <option key={suggestionMode} value={suggestionMode}>\r\n                                    {suggestionMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Active Card</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">\r\n                            <div className=\"description\">Should the selected card follow the cursor or remain on the stack?</div>\r\n                        </div>\r\n\r\n                        <select className=\"input\" onChange={(e) => props.setMouseMode(e.target.value)} value={props.settings.mouseMode}>\r\n                            {props.settings.mouseModes.map((mouseMode) => (\r\n                                <option key={mouseMode} value={mouseMode}>\r\n                                    {mouseMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Base Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">\r\n                            <div className=\"description\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                        </div>\r\n                        <select className=\"input\" onChange={(e) => props.setBaseEntropy(e.target.value)} value={props.settings.baseEntropy}>\r\n                            {props.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Interaction Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">\r\n                            <div className=\"description\">How much chaos will each interaction add to a stack on the board?</div>\r\n                        </div>\r\n\r\n                        <select\r\n                            className=\"input\"\r\n                            onChange={(e) => props.setInteractionEntropy(e.target.value)}\r\n                            value={props.settings.interactionEntropy}\r\n                        >\r\n                            {props.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/ckonig/solitaire/issues\">\r\n                    Report Issues here\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <StackBase blink={props.model.blinkFor} onClick={props.onClick} suggested={props.model.suggestion && !props.model.stack.length} visible={!props.model.stack.length}  />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        offsetTop={index/2*-1}\r\n                        blink={props.model.blinkFor}\r\n                        shadowOffsetX={-6}\r\n                        shadowOffsetY={-3}\r\n                        isSuggested={props.model.suggestion && index == props.model.stack.length-1}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    static Stacks = (props) =>\r\n        props.model.stacks.map((tableau, index) => (\r\n            <Tableau\r\n                settings={props.settings}\r\n                key={index}\r\n                index={index}\r\n                model={tableau}\r\n                hand={props.hand}\r\n                onClick={(card, p) => props.onClick(card, p, index)}\r\n            />\r\n        ));\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null, \"tableau-\" + props.index)}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        shadowOffsetX={(4 - 7 + props.index) * 2}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={props.onClick}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={props.settings}\r\n                    parent={\"tableau-\" + props.index}\r\n                    onClick={props.onClick}\r\n                    model={props.hand}\r\n                    stack={props.model.stack}\r\n                    shadowOffsetX={(4 - 7 + props.index) * 2}\r\n                    offsetTop={getOffset(props.model.stack.length)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    render() {\r\n        const props = this.props;\r\n\r\n        const getOffset = (index) => {\r\n            if (props.settings.launchSettings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length =\r\n                props.model.settings.mouseMode == \"remain-on-stack\" && props.hand.isHoldingCard() && props.hand.source == \"waste\"\r\n                    ? props.model.stack.length + 1\r\n                    : props.model.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    blink={props.model.blinkFor}\r\n                    onClick={() => props.onClick(null, null)}\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        model={card}\r\n                        shadowOffsetX={-4}\r\n                        shadowOffsetY={-3}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        key={index}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && index == props.model.stack.length - 1}\r\n                        onClick={(c, p) => props.onClick(c, p)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    settings={props.model.settings}\r\n                    shadowOffsetX={-4}\r\n                    shadowOffsetY={-3}\r\n                    offsetTop={(props.model.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(props.model.stack.length)}\r\n                    parent=\"waste\"\r\n                    onClick={props.onClick}\r\n                    model={props.hand}\r\n                    stack={props.model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import EndDisplay from \"./EndDisplay\";\r\nimport Foundation from \"./Foundation\";\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Board extends React.Component {\r\n    componentDidMount = () => this.props.handlers.deal();\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"layout-grid-container\">\r\n                    <Header\r\n                        settings={props.model.settings}\r\n                        undoLabel={props.handlers.undoLabel}\r\n                        toggleMenu={props.handlers.toggleMenu}\r\n                        reset={props.handlers.reset}\r\n                        newGame={props.handlers.restart}\r\n                        undo={props.handlers.undo}\r\n                        beat={props.handlers.beat}\r\n                        model={props.model.game}\r\n                        suggestOnce={props.handlers.suggestOnce}\r\n                    />\r\n                    <div className=\"game-view\">\r\n                        <div className=\"board-grid-container\">\r\n                            <Stock model={props.model.stock} onClick={props.handlers.clickStock} />\r\n                            <Waste\r\n                                model={props.model.waste}\r\n                                hand={props.model.hand}\r\n                                onClick={props.handlers.clickWaste}\r\n                                settings={props.model.settings}\r\n                            />\r\n                            <div className=\"spacer\">&nbsp;</div>\r\n                            <Foundation.Stacks\r\n                                settings={props.model.settings}\r\n                                model={props.model.foundation}\r\n                                hand={props.model.hand}\r\n                                onClick={props.handlers.clickFoundation}\r\n                            />\r\n                            <Tableau.Stacks\r\n                                settings={props.model.settings}\r\n                                model={props.model.tableau}\r\n                                hand={props.model.hand}\r\n                                onClick={props.handlers.clickTableau}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <Menu\r\n                        settings={props.model.settings}\r\n                        undoLabel={props.handlers.undoLabel}\r\n                        setMouseMode={props.handlers.setMouseMode}\r\n                        setBaseEntropy={props.handlers.setBaseEntropy}\r\n                        setInteractionEntropy={props.handlers.setInteractionEntropy}\r\n                        setSuggestionMode={props.handlers.setSuggestionMode}\r\n                        model={props.model.game}\r\n                    />\r\n                    <EndDisplay game={props.model.game} restart={props.handlers.restart} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.offsetTop = 0;\r\n        this.causeEntropy(1);\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 2);\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 2);\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","import Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        const template = () => ({\r\n            stack: [],\r\n            acceptedCards: [...getFoundationOrder()],\r\n            usedCards: [],\r\n            icon: null,\r\n            color: null,\r\n        });\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit) => ({ ...template(), ...suit }));\r\n        this.stacks = [...stacks];\r\n    }\r\n\r\n    getStacks = () => {\r\n        return this.stacks;\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => !hand.hasMoreThanOneCard() && this.accepts(index, hand.currentCard());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = \"foundation-\" + index;\r\n        card.suggestion = false;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => {\r\n        return [...this.stacks[index].usedCards].pop();\r\n    };\r\n\r\n    countCards = () => {\r\n        return this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    getTop(index) {\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation(orig.settings);\r\n        copy.stacks = orig.stacks.map((origStack) => ({\r\n            stack: Card.copyAll(origStack.stack),\r\n            acceptedCards: [...origStack.acceptedCards],\r\n            usedCards: [...origStack.usedCards],\r\n            icon: origStack.icon,\r\n            color: origStack.color,\r\n        }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Game {\r\n    constructor(settings) {\r\n        //@todo this class has too many responsibilities\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.started = false;\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n        this.multiplicator = 1;\r\n        this.recyclings = 0;\r\n        this.passes = -1;\r\n        if (this.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            this.passes = 1;\r\n        }\r\n        if (this.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            this.passes = 3;\r\n        }\r\n    }\r\n\r\n    //@todo can this be a property of stock instead?\r\n    canRecycle() {\r\n        return (\r\n            this.settings.launchSettings.recyclingMode == \"infinite\" ||\r\n            (this.settings.launchSettings.recyclingMode == \"3-pass\" && this.recyclings < 2)\r\n        );\r\n    }\r\n\r\n    registerMove(target, source) {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n\r\n        this.points += this.rateMove(currentMove);\r\n        return true;\r\n    }\r\n\r\n    stackEquals(a, b) {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    }\r\n\r\n    stacksEqual(a, b) {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    }\r\n\r\n    modelEquals(a, b) {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    }\r\n\r\n    pushPreviousState(state) {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    }\r\n\r\n    registerPickup() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        if (previous && previous.game) {\r\n            previous.game.points = Math.min(previous.game.points, this.points) - Math.pow(2, this.multiplicator);\r\n            previous.game.multiplicator = this.multiplicator + 1;\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        this.recyclings++;\r\n        //@todo move point calculation to rating class\r\n        if (this.settings.launchSettings.drawMode == \"single\" && this.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    }\r\n\r\n    registerWasteMove(stockIsEmpty) {\r\n        if (stockIsEmpty) {\r\n            this.passes--;\r\n            console.debug(\"register waste move passing through\", this.passes);\r\n            console.debug(\"settings are \", this.settings.launchSettings.recyclingMode);\r\n        } else {\r\n            console.debug(\"ignore waste move\");\r\n        }\r\n    }\r\n\r\n    registerUncover() {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        //@todo move point calculation to rating class\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n        return true;\r\n    }\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n        return true;\r\n    }\r\n\r\n    rateMove(move) {\r\n        //@todo move point calculation to rating class\r\n        const isTableau = (obj) => obj.substr(0, 7) == \"tableau\";\r\n        const isFoundation = (obj) => obj.substr(0, 10) == \"foundation\";\r\n        if (isTableau(move.source)) {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (isFoundation(move.source)) {\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.started = orig.started;\r\n        copy.modified = orig.modified;\r\n        copy.multiplicator = orig.multiplicator;\r\n        copy.memorable = orig.memorable;\r\n        copy.previousStates = [...orig.previousStates];\r\n        copy.passes = orig.passes;\r\n        copy.recyclings = orig.recyclings;\r\n        return copy;\r\n    };\r\n\r\n    getElapsed = () => {\r\n        const padleft = (i) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = (this.end || Date.now()) - this.started;\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor() {\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp(stack, source, position) {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    }\r\n\r\n    putDown() {\r\n        this.source = null;\r\n        return this.stack.splice(0, this.stack.length);\r\n    }\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand();\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","export default class Settings {\r\n    constructor(launchSettings) {\r\n        this.launchSettings = launchSettings;\r\n        const isTouch = this.is_touch_device();\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = isTouch ? \"remain-on-stack\" : \"follow-cursor\";\r\n\r\n        this.entropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\n        this.baseEntropy = isTouch ? 1 : 2;\r\n        this.interactionEntropy = isTouch ? 1 : 2;\r\n\r\n        this.suggestionModes = [\"none\", \"scored\", \"regular\", \"full\"];\r\n        this.suggestionMode = \"regular\";\r\n    }\r\n\r\n    is_touch_device() {\r\n        try {\r\n            const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n            const mq = (query) => window.matchMedia(query).matches;\r\n\r\n            if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n                return true;\r\n            }\r\n\r\n            return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n        } catch (e) {\r\n            console.error(\"(Touch detect failed)\", e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings(orig.launchSettings);\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Stock {\r\n    constructor(stack, settings) {\r\n        this.settings = settings;\r\n        this.stack = stack;\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    recycle(waste) {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map((element) => {\r\n                element.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n                element.isHidden = true;\r\n                return element;\r\n            });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    popTop = () => {\r\n        if (this.settings.launchSettings.drawMode == \"single\") {\r\n            return [this.stack.pop()];\r\n        }\r\n        if (this.settings.launchSettings.drawMode == \"triple\") {\r\n            return this.stack.splice(this.stack.length-3);\r\n        }\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        return copy;\r\n    }\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach(element => element.causeEntropy(Math.min(lvl,1)));\r\n        return this;\r\n    }\r\n\r\n    deal(tableau) {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = this.stack.pop();\r\n                newCard.source = \"tableau-\" + i;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                stack.push(newCard);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Tableau {\r\n    constructor(settings) {\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => ({\r\n            stack: [],\r\n            id,\r\n        }));\r\n        this.settings = settings;\r\n    }\r\n\r\n    getStack = (index) => {\r\n        return this.stacks[index];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => this.canPutDown(this.getTop(index), hand, index);\r\n\r\n    canPutDown = (card, hand, index) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.source == \"tableau-\" + index);\r\n\r\n    accepts = (index, current) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index, card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card, i) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    uncover = (index, card) => {\r\n        const top = this.getTop(index);\r\n        if (top.isHidden && card && card.equals(this.getTop(index))) {\r\n            top.isHidden = false;\r\n            this.stackEntropy(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card, index) => {\r\n        card.source = \"tableau-\" + index;\r\n        return card;\r\n    };\r\n\r\n    getTop(index, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        return this.stacks[index].stack[this.stacks[index].stack.length - 1 - offset];\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Tableau([], orig.settings);\r\n        copy.stacks = orig.stacks.map((stack) => ({ stack: Card.copyAll(stack.stack) }));\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Waste {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.stack = [];\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = \"waste\";\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        return card;\r\n    };\r\n\r\n    wouldAccept = (hand) => hand.source == \"waste\" && this.canAdd(hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.stack.pop();\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    getTop = () => this.stack[this.stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste(orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Facade {\r\n    static getInitialState = (deck, launchSettings) => {\r\n        const settings = new Settings(launchSettings);\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings),\r\n            waste: new Waste(settings),\r\n            foundation: new Foundation(settings),\r\n            tableau: new Tableau(settings),\r\n            hand: new Hand(),\r\n            game: new Game(settings),\r\n            settings: settings,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n        };\r\n    };\r\n\r\n    static setEntropy = (state, lvl) => {\r\n        return {\r\n            stock: state.stock.setEntropy(lvl),\r\n            waste: state.waste.setEntropy(lvl),\r\n            foundation: state.foundation.setEntropy(lvl),\r\n            tableau: state.tableau.setEntropy(lvl),\r\n            hand: state.hand,\r\n            game: state.game,\r\n            settings: state.settings,\r\n        };\r\n    };\r\n}\r\n","export default class Blinker {\r\n    constructor(gamestate) {\r\n        this.gamestate = gamestate;\r\n    }\r\n\r\n    startBlink = (selector, state) => {\r\n        selector(state).blinkFor = 10;\r\n        state.game.registerBlink();\r\n        selector(state).unblink = () => setTimeout(() => this.stopBlink(selector), 100);\r\n    };\r\n\r\n    stopBlink = (selector) =>\r\n        this.gamestate._setState((state) => {\r\n            selector(state).blinkFor = 0;\r\n            state.game.registerBlink();\r\n        });\r\n}\r\n","import Blinker from \"./Blinker\";\r\n\r\nexport default class Service {\r\n    constructor(gamestate) {\r\n        this.gamestate = gamestate;\r\n        this.blinker = new Blinker(gamestate);\r\n    }\r\n\r\n    getHandler(hand) {\r\n        let handler = \"dispatchPickup\";\r\n        if (hand && hand.isHoldingCard()) {\r\n            handler = \"dispatchPutDown\";\r\n        }\r\n        return this[handler];\r\n    }\r\n\r\n    dispatchPutDown = (card, position, index) => {\r\n        this.gamestate._setState((state) => {\r\n            if (state.hand.isHoldingCard()) {\r\n                this._dispatchPutDown(card, position, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    dispatchPickup = (card, position, index) => {\r\n        this.gamestate._setState((state) => {\r\n            if (!state.hand.isHoldingCard()) {\r\n                this._dispatchPickup(card, position, state, index);\r\n            }\r\n        });\r\n    };\r\n\r\n    _blink = (selector, state) => this.blinker.startBlink(selector, state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Tableau extends Service {\r\n    _dispatchPutDown = (card, position, state, index) => {\r\n        if (state.tableau.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (card, position, state, index) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card, index, state) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n\r\n    blink = (index, state) => this._blink((s) => s.tableau.stacks[index], state);\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Waste extends Service {\r\n    _dispatchPutDown = (card, position, state) =>\r\n        (state.waste.wouldAccept(state.hand) &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state);\r\n\r\n    _dispatchPickup = (card, position, state) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state);\r\n\r\n    blink = (state) => this._blink((s) => s.waste, state);\r\n}\r\n","import Facade from \"../Model/Facade\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Suggestions {\r\n    constructor() {\r\n        this.tableau = new Tableau(null);\r\n        this.waste = new Waste(null);\r\n    }\r\n\r\n    evaluateOptions = (state) => {\r\n        this.disableAllSuggestions(state);\r\n\r\n        if (state.settings.suggestionMode !== \"none\") {\r\n            const foundUncoverOptions = this.getUncoverOptions(state);\r\n\r\n            if (!foundUncoverOptions) {\r\n                const foundAcceptedPutdown = this.getPutdownSuggestions(state);\r\n\r\n                if (!foundAcceptedPutdown && !state.hand.isHoldingCard()) {\r\n                    const foundAny = this.getPickupOptions(state);\r\n\r\n                    if (!foundAny || state.settings.suggestionMode == \"full\") {\r\n                        //@todo only highlight if it's not empty or there are recyclings left\r\n                        state.stock.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state, onlyUseful) => {\r\n        const accepted = [];\r\n        if (state.settings.suggestionMode !== \"none\" && state.hand.isHoldingCard() && state.waste.wouldAccept(state.hand)) {\r\n            if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"waste\") {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.settings.suggestionMode !== \"none\" && state.hand.isHoldingCard() && state.foundation.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"foundation-\" + index) {\r\n                    const move = { target: \"foundation-\" + index, source: state.hand.source };\r\n                    if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.settings.suggestionMode != \"none\" && state.hand.isHoldingCard() && state.tableau.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode === \"full\" || state.hand.source !== \"tableau-\" + index) {\r\n                    if (\r\n                        !onlyUseful ||\r\n                        state.settings.suggestionMode === \"full\" ||\r\n                        //filter out moves of King from empty slot to empty slot\r\n                        (!(\r\n                            state.hand.currentCard().face == \"K\" &&\r\n                            stack.stack.length == 0 &&\r\n                            state.hand.source.substring(0, 8) == \"tableau-\" &&\r\n                            state.tableau.stacks[state.hand.source.substring(8)].stack.length == 0\r\n                        ) &&\r\n                            //// filter out moves between stacks if same (non-hidden) parent card\r\n                            !(\r\n                                stack.stack.length > 0 &&\r\n                                state.hand.source.substring(0, 8) == \"tableau-\" &&\r\n                                state.tableau.stacks[state.hand.source.substring(8)].stack.length > 0 &&\r\n                                stack.stack[stack.stack.length - 1].face ==\r\n                                    state.tableau.stacks[state.hand.source.substring(8)].stack[\r\n                                        state.tableau.stacks[state.hand.source.substring(8)].stack.length - 1\r\n                                    ].face &&\r\n                                !state.tableau.getTop(state.hand.source.substring(8)).isHidden\r\n                            ))\r\n                    ) {\r\n                        const move = { target: \"tableau-\" + index, source: state.hand.source };\r\n                        if (state.settings.suggestionMode !== \"scored\" || state.game.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state) => {\r\n        let foundAny = false;\r\n        const wasteState = Facade.copy(state);\r\n        this.waste._dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.modified) {\r\n            const foundWasteSuggestions = this.getPutdownSuggestions(wasteState, true);\r\n            if (foundWasteSuggestions > (state.settings.suggestionMode == \"full\" ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) => {\r\n            tableau.stack.forEach((card, cardIndex) => {\r\n                if (!card.isHidden) {\r\n                    const tableauState = Facade.copy(state);\r\n                    this.tableau._dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.modified) {\r\n                        const foundTableauSuggestions = this.getPutdownSuggestions(tableauState, true);\r\n                        if (foundTableauSuggestions > (state.settings.suggestionMode == \"full\" ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state) => {\r\n        const options = [];\r\n        if (!state.hand.isHoldingCard()) {\r\n            state.tableau.stacks.forEach((stack, stackindex) => {\r\n                const top = state.tableau.getTop(stackindex);\r\n                if (top && top.isHidden) {\r\n                    top.suggestion = true;\r\n                    options.push(\"tableau-\" + stackindex);\r\n                }\r\n            });\r\n        }\r\n\r\n        return options.length;\r\n    };\r\n\r\n    disableAllSuggestions = (state) => {\r\n        const disableSuggestion = (obj) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import Suggestions from \"./Suggestions\";\r\n\r\nexport default class Dealer {\r\n    constructor(gamestate, state) {\r\n        this.gamestate = gamestate;\r\n        this.state = state;\r\n        this.suggestor = new Suggestions();\r\n    }\r\n\r\n    deal = (dealt) => {\r\n        //@todo based on settings, deal all-in-one or with delays\r\n        this.dealWithTimeouts(dealt);\r\n    };\r\n\r\n    dealWithTimeouts = (dealt) => {\r\n        //@todo move timeout to react component, gracefully handle unmount \r\n        setTimeout(() => {\r\n            if (this.state && this.state.stock && !this.state.stock.isDealt) {\r\n                this.gamestate.setState((state) => {\r\n                    if (dealt != state.stock.dealt) {\r\n                        return null;\r\n                    }\r\n\r\n                    state.stock.deal(state.tableau);\r\n                    if (state.stock.isDealt) {\r\n                        //@todo move to game?\r\n                        state.game.started = Date.now();\r\n                    }\r\n\r\n                    if (state.stock.isDealt) {\r\n                        this.suggestor.evaluateOptions(state);\r\n                    } else {\r\n                        this.deal(state.stock.dealt);\r\n                    }\r\n\r\n                    return state;\r\n                });\r\n            }\r\n        }, 25);\r\n    };\r\n}\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))]).flat().reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Foundation extends Service {\r\n    _dispatchPutDown = (_card, position, state, index) => {\r\n        if (state.foundation.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    _dispatchPickup = (_card, position, state, index) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(index, state);\r\n        }\r\n    };\r\n\r\n    tryDetectEnd(state) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n\r\n    blink = (index, state) => this._blink((s) => s.foundation.stacks[index], state);\r\n}\r\n","export default class Game {\r\n    constructor(getInitialState, suggestor) {\r\n        this.getInitialState = getInitialState;\r\n        this.suggestor = suggestor;\r\n    }\r\n\r\n    //@todo ask for confirmation before resetting\r\n    reset = (stateholder) =>\r\n        stateholder.setState((state) => (state.game.previousStates ? state.game.previousStates[0] : { ...this.getInitialState() }));\r\n\r\n    // @todo enable undoing via browser back gesture/button\r\n    undo = (id, stateholder, currentState) =>\r\n        stateholder.setState((state) => {\r\n            const previous = state.game.popPreviousState(id, currentState);\r\n            if (previous) {\r\n                this.suggestor.evaluateOptions(previous);\r\n                return previous;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    getHandlers(stateholder, state) {\r\n        return {\r\n            undo: () => this.undo(state.game.previousStates.length - 1, stateholder, state),\r\n            reset: () => this.reset(stateholder),\r\n            undoLabel: () => Math.pow(2, state.game.multiplicator),\r\n        };\r\n    }\r\n}\r\n","import Facade from \"../Model/Facade\";\r\n\r\nexport default class Settings {\r\n    constructor(suggestor) {\r\n        this.suggestor = suggestor;\r\n    }\r\n\r\n    beat = (stateholder) => {\r\n        this.setBaseEntropy(stateholder, 4);\r\n    };\r\n\r\n    setBaseEntropy = (stateholder, lvl) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.baseEntropy = lvl;\r\n            return Facade.setEntropy(state, state.settings.baseEntropy);\r\n        });\r\n    };\r\n\r\n    setInteractionEntropy = (stateholder, lvl) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.interactionEntropy = lvl;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setMouseMode = (stateholder, mm) => {\r\n        stateholder.setState((state) => {\r\n            state.settings.mouseMode = mm;\r\n            this.suggestor.evaluateOptions(state);\r\n            return state;\r\n        });\r\n    };\r\n\r\n    setSuggestionMode = (stateholder, sm) => {\r\n        stateholder.setState((state) => {\r\n            if (state.settings.suggestionMode !== sm) {\r\n                state.settings.suggestionMode = sm;\r\n                this.suggestor.evaluateOptions(state);\r\n            }\r\n            return state;\r\n        });\r\n    };\r\n\r\n    suggestOnce = (stateholder) => {\r\n        stateholder.setState((state) => {\r\n            const previous = state.settings.suggestionMode;\r\n            state.settings.suggestionMode = \"regular\";\r\n            this.suggestor.evaluateOptions(state);\r\n            state.settings.suggestionMode = previous;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    toggleMenu = (gamestate, menu) => {\r\n        gamestate.setState((state) => {\r\n            console.debug('toggle')\r\n            if (state.settings.showMenu == menu) {\r\n                console.debug('inverting showmenu')\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n            return state;\r\n        });\r\n    };\r\n\r\n    getHandlers(gamestate) {\r\n        return {\r\n            beat: () => this.beat(gamestate),\r\n            setBaseEntropy: (lvl) => this.setBaseEntropy(gamestate, lvl),\r\n            setInteractionEntropy: (lvl) => this.setInteractionEntropy(gamestate, lvl),\r\n            setMouseMode: (mm) => this.setMouseMode(gamestate, mm),\r\n            setSuggestionMode: (sm) => this.setSuggestionMode(gamestate, sm),\r\n            suggestOnce: () => this.suggestOnce(gamestate),\r\n            toggleMenu: (menu) => this.toggleMenu(gamestate, menu),\r\n        };\r\n    }\r\n}\r\n","import Service from \"./BaseService\";\r\n\r\nexport default class Stock extends Service {\r\n    _dispatchPutDown = (card, position, state) => this.blink(card, state);\r\n\r\n    _dispatchPickup = (card, position, state) => (card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state));\r\n\r\n    //@todo check if recycling heart got broken (when stock remains empty) - maintain passes instead of remaining recyclings\r\n    moveToWaste = (card, state) =>\r\n        state.stock.isOnTop(card) &&\r\n        state.waste.addAll(state.stock.popTop()) &&\r\n        state.game.registerMove(\"waste\", \"stock\") &&\r\n        state.game.registerWasteMove(state.stock.stack.length == 0);\r\n\r\n    recycleWaste = (_card, state) =>\r\n        !state.stock.getTop() &&\r\n        !!state.waste.getTop() &&\r\n        state.game.canRecycle() &&\r\n        state.stock.recycle(state.waste.recycle()) &&\r\n        state.game.registerRecycle(state);\r\n\r\n    blink = (_card, state) => this._blink((s) => s.stock, state);\r\n}\r\n","import Dealer from \"./Dealer\";\r\nimport Deck from \"../Model/Deck/Deck\";\r\nimport Foundation from \"./Foundation\";\r\nimport Game from \"./Game\";\r\nimport Model from \"../Model/Facade\";\r\nimport Settings from \"./Settings\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Facade {\r\n    constructor(launchSettings) {\r\n        this.suggestor = new Suggestions();\r\n        this.deck = new Deck();\r\n        this.deck.shuffle();\r\n        this.launchSettings = launchSettings;\r\n    }\r\n\r\n    getInitialState = () => Model.getInitialState(this.deck, this.launchSettings);\r\n\r\n    getHandlers(gamestate, state) {\r\n        return {\r\n            ...new Game(this.getInitialState, this.suggestor).getHandlers(gamestate, state),\r\n            ...new Settings(this.suggestor).getHandlers(gamestate, state),\r\n            clickTableau: new Tableau(gamestate).getHandler(state.hand),\r\n            clickFoundation: new Foundation(gamestate).getHandler(state.hand),\r\n            clickStock: new Stock(gamestate).getHandler(state.hand),\r\n            clickWaste: new Waste(gamestate).getHandler(state.hand),\r\n            deal: () => new Dealer(gamestate, state).deal(state.stock.dealt),\r\n        };\r\n    }\r\n}\r\n","import Model from \"../Model/Facade\";\r\nimport Suggestions from \"./Suggestions\";\r\n\r\nexport default class GameState {\r\n    constructor(stateholder) {\r\n        this.stateholder = stateholder;\r\n        this.suggestor = new Suggestions();\r\n    }\r\n\r\n    //@todo deprecate uncontrolled usage here\r\n    setState = (a, b) => this.stateholder.setState(a, b);\r\n\r\n    _setState = (a, b) =>\r\n        this.stateholder.setState((state) => {\r\n            state.game.modified = false;\r\n            const previous = Model.copy(state);\r\n            a(state);\r\n            if (state.game.modified && state.stock.isDealt) {\r\n                //@todo  use localstorage for previous state, reduce react state for performance\r\n                state.game.pushPreviousState(previous);\r\n                this.suggestor.evaluateOptions(state);\r\n                return { ...state };\r\n            }\r\n\r\n            return null;\r\n        }, b);\r\n}\r\n","import Board from \"./Board\";\r\nimport Game from \"../Service/Facade\";\r\nimport GameState from \"../Service/GameState\";\r\nimport React from \"react\";\r\n\r\nexport default class Launcher extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.gamestate = new GameState(this);\r\n        this.game = new Game(props.settings);\r\n        this.state = this.game.getInitialState();\r\n    }\r\n\r\n    getHandlers = () => {\r\n        const handlers = this.game.getHandlers(this.gamestate, this.state);\r\n        handlers.restart = this.props.restart;\r\n        return handlers;\r\n    }\r\n\r\n    render = () => <Board model={this.state} game={this.game} handlers={this.getHandlers()} />;\r\n}\r\n","import React from \"react\";\r\n\r\nconst StartScreen = (props) => {\r\n    //@todo make this an optional part of the menu\r\n    //@todo add selectors for draw mode & recycling options\r\n    //@todo add selector for timed game\r\n    //@todo add and implement custom start button\r\n    return !props || !props.start ? null : (\r\n        <div>\r\n            <div className=\"quickstart\">\r\n                <div>\r\n                    <div className=\"title\">Quickstart</div>\r\n                    <div className=\"left\">\r\n                        <button onClick={() => props.start({ drawMode: \"single\", recyclingMode: \"infinite\" })}>\r\n                            🐭\r\n                            <div>Turn 1 card at once.</div>\r\n                            <div>No limit on passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"single\", recyclingMode: \"3-pass\" })}>\r\n                            🐹\r\n                            <div>Turn 1 card at once.</div>\r\n                            <div>Three passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"single\", recyclingMode: \"1-pass\" })}>\r\n                            🐰\r\n                            <div>Turn 1 card at once.</div>\r\n                            <div>Only a single pass</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <button onClick={() => props.start({ drawMode: \"triple\", recyclingMode: \"infinite\" })}>\r\n                            🐨\r\n                            <div>Turn 3 cards at once.</div>\r\n                            <div>No limit on passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"triple\", recyclingMode: \"3-pass\" })}>\r\n                            🐼\r\n                            <div>Turn 3 cards at once.</div>\r\n                            <div>Three passes</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                        <button onClick={() => props.start({ drawMode: \"triple\", recyclingMode: \"1-pass\" })}>\r\n                            🐻\r\n                            <div>Turn 3 cards at once.</div>\r\n                            <div>Only a single pass</div>\r\n                            <div>through the deck.</div>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartScreen;\r\n","import \"./App.css\";\r\n\r\nimport Launcher from \"./View/Launcher\";\r\nimport React from \"react\";\r\nimport StartScreen from \"./View/StartScreen\";\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { initialized: false };\r\n    }\r\n\r\n    start = (settings) => {\r\n        this.setState({\r\n            ...settings,\r\n            initialized: true,\r\n        });\r\n    };\r\n\r\n    restart = () => {\r\n        this.setState({ initialized: false });\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.initialized) {\r\n            return <StartScreen start={this.start} />;\r\n        }\r\n        return <Launcher settings={this.state} restart={this.restart} />;\r\n    }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}