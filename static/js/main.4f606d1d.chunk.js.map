{"version":3,"sources":["View/Context.ts","View/Game/Dealer.js","View/UI/EndScreen.js","View/Game/BlinkingComponent.js","View/Game/Card.js","View/Game/MouseHand.js","View/Game/TouchHand.js","View/Game/Hand.js","View/Game/StackBase.js","View/Game/Foundation.js","View/Game/layouts/PS4.js","View/Game/GamePad.js","View/UI/Header/Clock.js","View/UI/Header/EndGame.js","View/UI/Header/Hearts.js","View/UI/Header/Hint.js","View/UI/Header/Points.js","View/UI/RestartGame.js","View/UI/Header/ToggleMenu.js","View/UI/Header/Undo.js","View/UI/Header/Header.js","View/UI/Menu.js","View/Game/Navigator.js","View/Game/Stock.js","View/Game/Tableau.js","View/Game/Waste.js","View/Game/Board.js","Business/Dealer.ts","Business/Dispatcher.ts","Business/Blinker.ts","Business/Foundation.ts","Model/Deck/Card.js","Model/Deck/DeckSize.js","Model/Deck/Suits.js","Model/Deck/Deck.js","Model/Game/Focus.js","Model/Game/BasicStack.js","Model/Game/Foundation.js","Model/Game/Rating.js","Model/Game/TimeMachine.js","Model/Game/Game.js","Model/Game/Hand.js","Model/Game/Settings/SuggestionModes.ts","Model/Game/Settings.js","Model/Game/Stock.js","Model/Game/Tableau.ts","Model/Game/Waste.js","Model/Model.ts","Business/Navigator.ts","Business/Stock.ts","Business/Tableau.ts","Business/Waste.ts","Business/Suggestions.ts","Business/BusinessModel.ts","View/Game/BoardWrap.tsx","View/UI/StartScreen/DifficultyOptions.ts","View/UI/StartScreen/Context.ts","View/UI/StartScreen/Difficulty.tsx","View/UI/StartScreen/QuickStart.tsx","View/UI/StartScreen/RatingOptions.ts","View/UI/StartScreen/Rating.tsx","View/UI/StartScreen/TouchDetector.js","View/UI/StartScreen/StartScreen.tsx","App.tsx","index.tsx"],"names":["defaultValue","state","replaceContext","updateContext","updateGameContext","restart","GlobalContext","React","createContext","Provider","Dealer","useContext","timeouts","settings","launchSettings","isTouch","dealer","isDealt","dealAll","deal","dealt","push","setTimeout","dealOne","useEffect","forEach","timeout","clearTimeout","EndScreen","game","isEnded","className","getElapsed","rating","points","getTimePenalty","started","end","Date","now","getBonusPoints","getTotal","onClick","BlinkingComponent","selector","this","context","blinkFor","unblink","Component","contextType","Card","props","inputEl","useRef","isFocused","focus","hasCard","model","current","e","preventDefault","isKeyBoard","clientX","clientY","ele","target","includes","offsetParent","rect","getBoundingClientRect","position","click","x","ownerDocument","defaultView","pageXOffset","y","pageYOffset","element","label","isHidden","type","icon","face","style","pointerEvents","onFocus","ctx","navigator","update","source","onBlur","unsetCard","zIndex","offsetTop","top","entropyStyle","offsetLeft","left","getCardStyle","ref","hasSuggestion","isSuggested","suggestion","isSelected","blink","canClick","getClassName","disabled","tabIndex","aria-label","MouseHand","onMouseMove","positionFixed","setState","updateDisplay","myRef","createRef","bind","onKeyDown","document","addEventListener","putBack","removeEventListener","node","hand","parent","window","event","keyCode","isKeyboard","getOffsetTop","index","stack","map","card","TouchHand","c","p","Hand","length","mouseMode","StackBase","classname","hasStack","visible","suggested","unsetStack","children","Foundation","s","foundation","stacks","Stacks","i","buttons","axis","buttonAxis","GamePad","before","currentIndex","z","buttonHandler","console","log","moveLeft","moveRight","moveUp","moveDown","activeElement","connectHandler","debug","disconnectHandler","layout","PS4","gamepadIndex","onButtonDown","onConnect","onDisconnect","Clock","useState","elapsed","setElapsed","interval","setInterval","clearInterval","EndGame","title","Hearts","recyclingMode","passes","createString","Array","from","keys","join","stock","getHearts","Hint","isVisible","suggestionMode","supportsHints","isTemporary","isDisabled","suggestOnce","enableHint","listenForH","Points","RestartGame","timemachine","previousStates","ToggleMenu","menu","showMenu","Undo","undo","_state","previous","popPreviousState","penalize","ctrlZ","evtobj","ctrlKey","Math","pow","multiplicator","Header","Menu","onChange","sm","value","setSuggestionMode","key","hintPenalty","suggestionModes","mm","mouseModes","lvl","setEntropy","baseEntropy","entropyLevels","entropyLevel","interactionEntropy","Navigator","navListener","Stock","Tableau","tableau","getOffset","Waste","waste","drawMode","isHoldingCard","isFromWaste","additionalOffset","Board","dealingAt","callback","newCard","popOne","isFirst","Dispatcher","clickHandler","getHandler","dispatchPutDown","dispatchPickup","Blinker","startBlink","registerBlink","stopBlink","wouldAccept","src","add","putDown","registerMove","tryDetectEnd","_card","getTop","getPreviousUsed","pickUp","remove","registerPickup","countCards","causeEntropy","level","random","randomInt","min","max","equals","other","otherCard","copy","orig","copyAll","cards","DeckSize","Suits","heart","color","club","diamond","spade","Deck","Object","deckSize","flat","reverse","shuffleArray","array","j","floor","Focus","validSettings","keyboard","setCard","setStack","BasicStack","getClickable","filter","getCurrentAccepted","currentFoundation","acceptedCards","hasMoreThanOneCard","accepts","currentCard","currentAccepted","usedCards","pop","f","parseInt","reduce","a","b","template","slice","suit","origStack","Rating","currentMove","rateMove","registerRecycle","registerUncover","undoPenalty","penalty","registerHint","done","start","secondsToFinish","trunc","round","on","missPenalty","move","isTableau","obj","substr","isFoundation","TimeMachine","memorable","modified","pushPreviousState","modelEquals","id","isRequested","popPrevious","stackEquals","every","stacksEqual","Game","disableHint","padleft","msec","hh","ss","result","splice","isHoldingKing","isFromCurrentSource","isFromFoundation","isFromTableau","isFromAnyTableau","substring","getTableauIndex","SuggestionMode","next","SuggestionModes","NONE","SCORED","REGULAR","FULL","ONCE","TWICE","raw","get","all","allSuggestionModes","mode","default","getHintMode","Settings","hintMode","setClickability","recycle","setCardProperties","recyclings","isOnTop","popTop","TableauStack","getStack","canPutDown","range","indexOf","getCard","popWithFollowing","stackEntropy","canUncover","uncover","entropy","concat","offset","tryPutDown","canAdd","passthrough","addAll","_a","_b","_c","Model","getInitialState","deck","shuffle","rows","getZindex","elem","targets","pos","row","finishNav","valid","direction","undefined","toggleRow","clickable","pickLast","last","_position","moveToWaste","recycleWaste","canRecycle","tryUncover","Suggestions","evaluateOptions","disableAllSuggestions","getUncoverOptions","getPutdownSuggestions","getPickupOptions","onlyUseful","accepted","isMoveOfKingBetweenEmptySlots","isMoveBetweenSimilarParentCards","isNotLoop","foundAny","wasteState","BusinessModel","cardIndex","tableauState","filtered","_stack","disableSuggestion","suggestor","withSuggestions","withHandlers","BoardWrap","modifier","render","DifficultyOptions","lines","StartScreenContext","difficultySettings","ratingPreset","ratingSettings","Difficulty","updateDifficulty","getButtonClass","option","line","QuickStart","RatingPresets","timedMode","matchPreset","filterd","preset","s1","s2","setContext","toggle","setToggle","customizeRating","r","String","href","rel","TouchDetector","prefixes","split","DocumentTouch","query","matchMedia","matches","error","StartScreen","App","appState","setAppState","initialized","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f606d1d.chunk.js","sourcesContent":["import { StateReplaceFunction, StateUpdateFunction } from \"../Common\";\r\n\r\nimport BusinessModel from \"../Business/BusinessModel\";\r\nimport React from \"react\";\r\n\r\ninterface IGlobalContext {\r\n    state: BusinessModel | null;\r\n    replaceContext: StateReplaceFunction;\r\n    updateContext: StateUpdateFunction;\r\n    updateGameContext: StateUpdateFunction;\r\n    restart: () => void;\r\n}\r\n\r\nconst defaultValue = {\r\n    state: null,\r\n    replaceContext: () => {},\r\n    updateContext: () => {},\r\n    updateGameContext: () => {},\r\n    restart: () => {},\r\n};\r\n\r\nconst GlobalContext = React.createContext<IGlobalContext>(defaultValue);\r\n\r\nexport const Provider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Dealer = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const timeouts = [];\r\n    //@todo implement launch setting UI for quick dealing\r\n    if (state.settings.launchSettings.isTouch) {\r\n        if (state && state.dealer && !state.dealer.isDealt) {\r\n            replaceContext(state.dealer.dealAll(state));\r\n        }\r\n    } else {\r\n        const deal = (dealt) => {\r\n            timeouts.push(\r\n                setTimeout(() => {\r\n                    if (state && state.dealer && !state.dealer.isDealt) {\r\n                        replaceContext(state.dealer.dealOne(dealt, deal));\r\n                    }\r\n                }, 35)\r\n            );\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            deal(state.dealer.dealt);\r\n            return () => timeouts.forEach((timeout) => clearTimeout(timeout));\r\n        }, []);\r\n    }\r\n    return null;\r\n};\r\nexport default Dealer;\r\n","import \"../Style/Screens.scss\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndScreen = () => {\r\n    const { state, restart } = React.useContext(GlobalContext);\r\n    //@todo show launch settings (draw mode, recycling mode)\r\n    return !state.game.isEnded ? null : (\r\n        <div className=\"ui center endscreen\">\r\n            <div className=\"title\">🥳</div>\r\n            <div className=\"content\">\r\n                <div>Time: {state.game.getElapsed()}</div>\r\n                <div>Points: {state.game.rating.points}</div>\r\n                <div>Time Penalty: {state.game.rating.getTimePenalty(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Bonus Points: {state.game.rating.getBonusPoints(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>Total Points: {state.game.rating.getTotal(state.game.started, state.game.end || Date.now())}</div>\r\n                <div>\r\n                    <button onClick={restart}>\r\n                        🗑️<div>New Game</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndScreen;\r\n","import { Component } from \"react\";\r\nimport GlobalContext from \"../Context\";\r\n\r\nexport default class BlinkingComponent extends Component {\r\n    constructor(selector) {\r\n        super();\r\n        this.timeout = null;\r\n        this.selector = selector;\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    componentDidUpdate() {\r\n        if (this.selector(this.context.state).blinkFor) {\r\n            this.timeout = setTimeout(\r\n                () =>\r\n                    this.context.updateGameContext((state) => {\r\n                        this.selector(state).unblink(state);\r\n                    }),\r\n                200\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    const inputEl = React.useRef(null);\r\n    const isFocused = state.focus.hasCard(props.model);\r\n    React.useEffect(() => {\r\n        if (isFocused) {\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    }, [isFocused]);\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        const isKeyBoard = e.clientX == 0 && e.clientY == 0;\r\n        let ele = e.target;\r\n\r\n        while (ele && !ele.className.includes(\"card-base\")) {\r\n            ele = ele.offsetParent;\r\n        }\r\n\r\n        const rect = ele.getBoundingClientRect();\r\n        const position = {\r\n            isKeyBoard,\r\n            click: {\r\n                x: e.clientX - ele.ownerDocument.defaultView.pageXOffset,\r\n                y: e.clientY - ele.ownerDocument.defaultView.pageYOffset,\r\n            },\r\n            element: {\r\n                x: rect.x,\r\n                y: rect.y,\r\n            },\r\n        };\r\n\r\n        props.onClick && props.onClick({ ...props.model }, position);\r\n    };\r\n\r\n    const getClassName = () => {\r\n        const hasSuggestion = props.isSuggested || props.model.suggestion;\r\n        let className = `card card-base suit-${props.model.type.icon}`;\r\n        className += !props.isSelected && !hasSuggestion ? ` card-stack-${props.model.source}` : \"\";\r\n        className += props.isSelected ? \" card-selected\" : \"\";\r\n        className += props.blink ? \" blink\" : \"\";\r\n        className += props.canClick ? \" clickable\" : \"\";\r\n        //@todo onhover, trigger highlight of suggested target card/stack (preview what happens if picked up)\r\n        className += hasSuggestion ? \" card-suggested\" : \"\";\r\n        className += isFocused ? \" card-focused\" : \"\";\r\n\r\n        return className;\r\n    };\r\n\r\n    const getCardStyle = () => {\r\n        const style = {\r\n            zIndex: props.zIndex ? props.zIndex : !!props.offsetTop + 2,\r\n            top: props.offsetTop ? props.offsetTop / 10 + \"vw\" : 0,\r\n            ...props.model.entropyStyle,\r\n        };\r\n\r\n        //move to left on waste (triple draw)\r\n        if (props.offsetLeft) {\r\n            style.left = props.offsetLeft * 4 + \"vw\";\r\n        }\r\n\r\n        if (!props.onClick) {\r\n            style.pointerEvents = \"none\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    const getStackbaseStyle = () => {\r\n        if (!props.onClick) {\r\n            return { pointerEvents: \"none\" };\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    const label = props.model.isHidden ? \"hidden card\" : props.model.type.icon + props.model.face + \" card\";\r\n\r\n    // @todo 3d flip https://3dtransforms.desandro.com/card-flip on unhide\r\n    // https://medium.com/hackernoon/5-ways-to-animate-a-reactjs-app-in-2019-56eb9af6e3bf\r\n\r\n    return (\r\n        <div style={getStackbaseStyle()} className=\"stack-base\">\r\n            <button\r\n                onFocus={() => {\r\n                    updateContext((ctx) => {\r\n                        ctx.navigator.update(props.model.source, props.model);\r\n                    });\r\n                }}\r\n                onBlur={() => {\r\n                    updateContext((ctx) => ctx.focus.unsetCard(props.model));\r\n                }}\r\n                style={getCardStyle()}\r\n                ref={inputEl}\r\n                className={getClassName()}\r\n                onClick={onClick ? onClick : null}\r\n                disabled={!props.model.canClick}\r\n                tabIndex={props.model.canClick ? 0 : -1}\r\n                aria-label={label}\r\n            >\r\n                {props.model.isHidden ? (\r\n                    <div className=\"card-back\">&nbsp;</div>\r\n                ) : (\r\n                    <div className=\"card-grid-container\">\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-left\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div className=\"mainface\">\r\n                            <div className=\"align-center\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                        <div>&nbsp;</div>\r\n                        <div>\r\n                            <div className=\"align-right\">{props.model.face}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"align-center\">{props.model.type.icon}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class MouseHand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            positionFixed: true,\r\n        };\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove, false);\r\n        if (this.props.putBack) {\r\n            document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n        }\r\n        this.setState(() => ({\r\n            positionFixed: true,\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false);\r\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.positionFixed) {\r\n            this.setState((state) => {\r\n                state.positionFixed = false;\r\n                return { ...state };\r\n            });\r\n        }\r\n        this.updateDisplay(e);\r\n    };\r\n\r\n    updateDisplay(e) {\r\n        if (!this.state.positionFixed) {\r\n            const node = this.myRef.current;\r\n            if (this.props.hand && this.props.parent == this.props.hand.source) {\r\n                if (e) {\r\n                    const x = e.clientX - this.props.hand.position.click.x + this.props.hand.position.element.x,\r\n                        y = e.clientY - this.props.hand.position.click.y + this.props.hand.position.element.y;\r\n                    node.style.top = y + \"px\";\r\n                    node.style.left = x + \"px\";\r\n                    node.style.position = \"absolute\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 27 && this.props.hand && this.props.parent == this.props.hand.source) this.props.putBack(null, {isKeyboard: false});\r\n    }\r\n\r\n    render() {\r\n        const getOffsetTop = (index) => {\r\n            if (this.state.positionFixed) {\r\n                return this.props.offsetTop + index * 24;\r\n            }\r\n            return index * 24;\r\n        };\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div ref={this.myRef}>\r\n                {this.props.hand &&\r\n                    this.props.hand.stack &&\r\n                    this.props.hand.stack.map((card, index) => (\r\n                        <Card canClick={true} key={index} model={card} offsetTop={getOffsetTop(index)} zIndex={1000 + index * 20} isSelected={true} />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n\r\nexport default class TouchHand extends React.Component {\r\n    //@todo merge with mousehand\r\n    render() {\r\n        if (!this.props.hand || this.props.parent !== this.props.hand.source) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.props.hand &&\r\n                this.props.hand.stack &&\r\n                this.props.hand.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        canClick={true}\r\n                        offsetTop={this.props.offsetTop + index * 24}\r\n                        offsetLeft={this.props.offsetLeft}\r\n                        zIndex={1000 + index * 20}\r\n                        isSelected={true}\r\n                        onClick={(c,p) => this.props.onClick(c,p)}\r\n                    />\r\n                )),\r\n        ];\r\n    }\r\n}\r\n","import GlobalContext from \"../Context\";\r\nimport MouseHand from \"./MouseHand\";\r\nimport React from \"react\";\r\nimport TouchHand from \"./TouchHand\";\r\n\r\nconst Hand = (props) => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    if (!state.hand || props.parent !== state.hand.source) {\r\n        return null;\r\n    }\r\n    const putBack = (c, p) => props.onClick(props.stack[props.stack.length - 1], p, props.stack.length - 1);\r\n    if (state.settings.mouseMode == \"follow-cursor\") {\r\n        return <MouseHand parent={props.parent} hand={state.hand} offsetTop={props.offsetTop} putBack={putBack} />;\r\n    }\r\n    if (state.settings.mouseMode == \"remain-on-stack\") {\r\n        return (\r\n            <TouchHand\r\n                parent={props.parent}\r\n                hand={state.hand}\r\n                offsetTop={props.offsetTop}\r\n                offsetLeft={props.offsetLeft}\r\n                onClick={putBack}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Hand;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst StackBase = (props) => {\r\n    let classname = \"card-base socket\";\r\n    const inputEl = React.useRef(null);\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    React.useEffect(() => {\r\n        if (state.focus.hasStack(props.parent)) {\r\n            inputEl && inputEl.current && inputEl.current.focus();\r\n        }\r\n    });\r\n    if (props.visible) {\r\n        if (props.blink) {\r\n            classname += \" socket-blink\";\r\n        } else if (state.focus.hasStack(props.parent)) {\r\n            classname += \" socket-focused\";\r\n        } else {\r\n            classname += \" socket-empty\";\r\n        }\r\n    } else {\r\n        classname += \" socket-full\";\r\n    }\r\n\r\n    if (props.suggested) {\r\n        classname += \" socket-suggested\";\r\n    }\r\n\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        const isKeyBoard = e.clientX == 0 && e.clientY == 0;\r\n        props.onClick(null, { isKeyBoard });\r\n    };\r\n\r\n    return (\r\n        <button\r\n            onFocus={() => {\r\n                updateContext((ctx) => {\r\n                    ctx.navigator.update(props.parent);\r\n                });\r\n            }}\r\n            onBlur={() => {\r\n                updateContext((ctx) => ctx.focus.unsetStack(props.parent));\r\n            }}\r\n            ref={inputEl}\r\n            className={classname}\r\n            onClick={onClick}\r\n            disabled={!props.visible}\r\n            tabIndex={props.visible ? 0 : -1}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\nexport default StackBase;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Foundation extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.foundation.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state, updateGameContext } = React.useContext(GlobalContext);\r\n        const onClick = (c, p, i) => updateGameContext(state.foundation.onClick(c, p, i));\r\n        return state.foundation.stacks.map((foundation, index) => (\r\n            <Foundation key={index} model={foundation} index={index} onClick={onClick} />\r\n        ));\r\n    };\r\n\r\n    render() {\r\n        const model = this.props.model;\r\n        return (\r\n            <div key={this.props.index}>\r\n                <StackBase\r\n                    parent={model.source}\r\n                    suggested={model.suggestion && !model.stack.length}\r\n                    blink={model.blinkFor}\r\n                    onClick={(c,p) => this.props.onClick(null, p, this.props.index)}\r\n                    visible={!model.stack.length}\r\n                >\r\n                    <div className={\"align-center foundation-base suit-\" + model.icon}>{model.icon}</div>\r\n                </StackBase>\r\n                {model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={model.blinkFor}\r\n                        isSuggested={model.suggestion && model.stack.length - 1 == index}\r\n                        onClick={(c, p) => this.props.onClick(c, p, this.props.index)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parent={model.source}\r\n                    onClick={(c, p) => this.props.onClick(model.stack[model.stack.length - 1], p, this.props.index)}\r\n                    stack={model.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default {\r\n    buttons: [\r\n        \"A\",\r\n        \"B\",\r\n        \"X\",\r\n        \"Y\",\r\n        \"LB\",\r\n        \"RB\",\r\n        \"LT\",\r\n        \"RT\",\r\n        \"Back\",\r\n        \"Start\",\r\n        \"LS\",\r\n        \"RS\",\r\n        \"DPadUp\",\r\n        \"DPadDown\",\r\n        \"DPadLeft\",\r\n        \"DPadRight\",\r\n        \"Back\",\r\n        \"Start\",\r\n        // \"PS\",\r\n        // \"Home\",\r\n    ],\r\n    axis: [\"LeftStickX\", \"-LeftStickY\", \"RightStickX\", \"-RightStickY\"],\r\n    buttonAxis: [null, null, null, null, null, null, \"LeftTrigger\", \"RightTrigger\"],\r\n};","import GlobalContext from \"../Context\";\r\nimport PS4 from \"./layouts/PS4\";\r\nimport React from \"react\";\r\nimport ReactGamePad from \"react-gamepad\";\r\n\r\nconst GamePad = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    const before = { x: state.navigator.currentIndex.x, y: state.navigator.currentIndex.y, z: state.navigator.currentIndex.z };\r\n    const buttonHandler = (e) => {\r\n        console.log(e);\r\n        if (e == \"DPadLeft\") {\r\n            updateContext((ctx) => {\r\n                ctx.settings.mouseMode = \"remain-on-stack\";\r\n                ctx.focus.isKeyBoard(true);\r\n                ctx.navigator.moveLeft(before);\r\n            });\r\n        }\r\n        if (e == \"DPadRight\") {\r\n            updateContext((ctx) => {\r\n                ctx.settings.mouseMode = \"remain-on-stack\";\r\n                ctx.focus.isKeyBoard(true);\r\n                ctx.navigator.moveRight(before);\r\n            });\r\n        }\r\n        if (e == \"DPadUp\") {\r\n            updateContext((ctx) => {\r\n                ctx.settings.mouseMode = \"remain-on-stack\";\r\n                ctx.focus.isKeyBoard(true);\r\n                ctx.navigator.moveUp(before);\r\n            });\r\n        }\r\n        if (e == \"DPadDown\") {\r\n            updateContext((ctx) => {\r\n                ctx.settings.mouseMode = \"remain-on-stack\";\r\n                ctx.focus.isKeyBoard(true);\r\n                ctx.navigator.moveDown(before);\r\n            });\r\n        }\r\n        if (e == \"A\") {\r\n            document.activeElement.click();\r\n        }\r\n    };\r\n    const connectHandler = (e) => {\r\n        console.debug(\"connected\", e);\r\n    };\r\n    const disconnectHandler = (e) => {\r\n        console.debug(\"disconnected\", e);\r\n    };\r\n\r\n    //@todo pick ID of gamepad dynamically\r\n    //allow switching PS4 and XBOX layouts\r\n    //also support splitscreen battle mode\r\n    return (\r\n        <>\r\n            <ReactGamePad\r\n                layout={PS4}\r\n                gamepadIndex={0}\r\n                onButtonDown={buttonHandler}\r\n                onConnect={connectHandler}\r\n                onDisconnect={disconnectHandler}\r\n            >\r\n                <span></span>\r\n            </ReactGamePad>\r\n            <ReactGamePad\r\n                layout={PS4}\r\n                gamepadIndex={1}\r\n                onButtonDown={buttonHandler}\r\n                onConnect={connectHandler}\r\n                onDisconnect={disconnectHandler}\r\n            >\r\n                <span></span>\r\n            </ReactGamePad>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GamePad;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Clock = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const [elapsed, setElapsed] = React.useState(0);\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (state.game.started) {\r\n                setElapsed(state.game.getElapsed());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return !state.game.started || !elapsed ? null : (\r\n        <div className=\"header-clock\">\r\n            <div className=\"icon-container\">🕒</div>\r\n            {elapsed}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst EndGame = () => {\r\n    const { restart } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"End Game\" onClick={restart}>\r\n                🗑️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default EndGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hearts = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n    const getHearts = () => {\r\n        if (state.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            return \"🖤\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            return state.game.passes > 0 ? \"❤️\" : \"💔\";\r\n        }\r\n\r\n        if (state.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            const createString = (length, icon) =>\r\n                Array.from(new Array(length).keys())\r\n                    .map(() => icon)\r\n                    .join(\"\");\r\n\r\n            return createString(state.stock.passes, \"❤️\") + createString(3 - state.stock.passes, \"💔\");\r\n        }\r\n        return null;\r\n    };\r\n    return <div className=\"heart-container\">{getHearts()}</div>;\r\n};\r\nexport default Hearts;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Hint = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    \r\n    //@todo update\r\n    \r\n    const isVisible = (state) => state.settings.suggestionMode.supportsHints || state.settings.suggestionMode.isTemporary;\r\n    const isDisabled = (state) => state.settings.suggestionMode.isTemporary;\r\n\r\n    const suggestOnce = () => {\r\n        updateContext((state) => {\r\n            if (isVisible(state) && !isDisabled(state)) {\r\n                state.settings.enableHint();\r\n            }\r\n        });\r\n    };\r\n\r\n    const listenForH = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 72) {\r\n            suggestOnce();\r\n        }\r\n    };\r\n\r\n    if (isVisible(state) && !isDisabled(state)) {\r\n        React.useEffect(() => {\r\n            document.addEventListener(\"keydown\", listenForH);\r\n            return () => document.removeEventListener(\"keydown\", listenForH);\r\n        }, []);\r\n    }\r\n\r\n    return !isVisible(state) ? null : (\r\n        <div>\r\n            <button title=\"Hint\" onClick={() => suggestOnce()} disabled={isDisabled(state)}>\r\n                💡\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Hint;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Points = () => {\r\n    const { state } = React.useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"icon-container\">🏆</div> {state.game.rating.points}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Points;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst RestartGame = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n\r\n    const reset = () =>\r\n        replaceContext((state) => (state.game.timemachine.previousStates ? state.game.timemachine.previousStates[0] : null));\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Restart\" disabled={!state.game.timemachine.previousStates.length} onClick={reset}>\r\n                ♻️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestartGame;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst ToggleMenu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button title=\"Settings\" onClick={() => toggleMenu(state.settings.showMenu)}>\r\n                ⚙️\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleMenu;\r\n","import GlobalContext from \"../../Context\";\r\nimport React from \"react\";\r\n\r\nconst Undo = () => {\r\n    const { state, replaceContext } = React.useContext(GlobalContext);\r\n    const undo = () =>\r\n        replaceContext((_state) => {\r\n            const previous = _state.game.timemachine.popPreviousState(state.game.timemachine.previousStates.length - 1, state);\r\n            if (previous) {\r\n                previous.game.rating.penalize(_state.game.rating);\r\n                return previous;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    const ctrlZ = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 90 && evtobj.ctrlKey) {\r\n            undo();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", ctrlZ);\r\n        return () => document.removeEventListener(\"keydown\", ctrlZ);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                disabled={!state.game.timemachine.previousStates.length}\r\n                title={\"Undo (Penalty:\" + Math.pow(2, state.game.rating.multiplicator) + \")\"}\r\n                onClick={undo}\r\n            >\r\n                ⏪\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Undo;\r\n","import \"../../Style/Header.css\";\r\n\r\nimport Clock from \"./Clock\";\r\nimport EndGame from \"./EndGame\";\r\nimport Hearts from \"./Hearts\";\r\nimport Hint from \"./Hint\";\r\nimport Points from \"./Points\";\r\nimport React from \"react\";\r\nimport RestartGame from \"../RestartGame\";\r\nimport ToggleMenu from \"./ToggleMenu\";\r\nimport Undo from \"./Undo\";\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <div className=\"header-title\">\r\n            <Hearts />\r\n            <Points />\r\n        </div>\r\n        <Clock />\r\n        <div className=\"header-buttons\">\r\n            <Hint />\r\n            <Undo />\r\n            <RestartGame />\r\n            <EndGame />\r\n            <ToggleMenu />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import \"../Style/Menu.css\";\r\n\r\nimport GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Menu = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n\r\n    //@todo persist game settings in local storage too and use for initialization\r\n    const setSuggestionMode = (sm) => updateContext((state) => state.settings.setSuggestionMode(sm));\r\n    const setBaseEntropy = (lvl) => updateContext((state) => state.setEntropy(lvl));\r\n    const setInteractionEntropy = (lvl) => updateContext((state) => (state.settings.interactionEntropy = lvl));\r\n    const setMouseMode = (mm) => updateContext((state) => (state.settings.mouseMode = mm));\r\n\r\n    //@todo review duplication with ToggleMenu Component from Header\r\n    const toggleMenu = (menu) => {\r\n        updateContext((state) => {\r\n            if (state.settings.showMenu == menu) {\r\n                state.settings.showMenu = !state.settings.showMenu;\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!state.settings.showMenu) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui right menu\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => toggleMenu(state.settings.showMenu)}>🗙</button>\r\n            </div>\r\n            <div className=\"title\">Settings</div>\r\n            <div className=\"content\">\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Suggestions</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much help - if any - should the game offer by displaying suggestions?</div>\r\n                        <select\r\n                            onChange={(e) => setSuggestionMode(e.target.value)}\r\n                            value={state.settings.suggestionMode.key}\r\n                            disabled={state.settings.launchSettings.hintPenalty}\r\n                        >\r\n                            {state.settings.suggestionModes.map((suggestionMode) => (\r\n                                <option key={suggestionMode.key} value={suggestionMode.key}>\r\n                                    {suggestionMode.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Active Card</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">Should the selected card follow the cursor or remain on the stack?</div>\r\n                        <select onChange={(e) => setMouseMode(e.target.value)} value={state.settings.mouseMode}>\r\n                            {state.settings.mouseModes.map((mouseMode) => (\r\n                                <option key={mouseMode} value={mouseMode}>\r\n                                    {mouseMode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Base Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will the stacks on the board contain by themselves?</div>\r\n                        <select onChange={(e) => setBaseEntropy(e.target.value)} value={state.settings.baseEntropy}>\r\n                            {state.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"title\">Interaction Entropy</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"label\">How much chaos will each interaction add to a stack on the board?</div>\r\n                        <select onChange={(e) => setInteractionEntropy(e.target.value)} value={state.settings.interactionEntropy}>\r\n                            {state.settings.entropyLevels.map((entropyLevel, index) => (\r\n                                <option key={entropyLevel} value={index}>\r\n                                    {entropyLevel}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Menu;\r\n","import GlobalContext from \"../Context\";\r\nimport React from \"react\";\r\n\r\nconst Navigator = () => {\r\n    const { state, updateContext } = React.useContext(GlobalContext);\r\n    const before = { x: state.navigator.currentIndex.x, y: state.navigator.currentIndex.y, z: state.navigator.currentIndex.z };\r\n    const navListener = (e) => {\r\n        const evtobj = window.event ? event : e;\r\n        if (evtobj.keyCode == 37) {\r\n            updateContext((ctx) => {\r\n                ctx.settings.mouseMode = \"remain-on-stack\";\r\n                ctx.focus.isKeyBoard(true);\r\n                ctx.navigator.moveLeft(before);\r\n            });\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 39) {\r\n            updateContext((ctx) => {\r\n                ctx.settings.mouseMode = \"remain-on-stack\";\r\n                ctx.focus.isKeyBoard(true);\r\n                ctx.navigator.moveRight(before);\r\n            });\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 38) {\r\n            updateContext((ctx) => {\r\n                ctx.settings.mouseMode = \"remain-on-stack\";\r\n                ctx.focus.isKeyBoard(true);\r\n                ctx.navigator.moveUp(before);\r\n            });\r\n            e.preventDefault();\r\n        }\r\n        if (evtobj.keyCode == 40) {\r\n            updateContext((ctx) => {\r\n                ctx.settings.mouseMode = \"remain-on-stack\";\r\n                ctx.focus.isKeyBoard(true);\r\n                ctx.navigator.moveDown(before);\r\n            });\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", navListener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", navListener);\r\n        };\r\n    }, [before]);\r\n    return null;\r\n};\r\n\r\nexport default Navigator;\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Stock extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.stock);\r\n    }\r\n\r\n    render() {\r\n        const { state, updateGameContext } = this.context;\r\n        const onClick = (c, p, i) => updateGameContext(state.stock.onClick(c, p, i));\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    parent={state.stock.source}\r\n                    blink={state.stock.blinkFor}\r\n                    onClick={onClick}\r\n                    suggested={state.stock.suggestion && !state.stock.stack.length}\r\n                    visible={!state.stock.stack.length}\r\n                />\r\n                {state.stock.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        blink={state.stock.blinkFor}\r\n                        isSuggested={state.stock.suggestion && index == state.stock.stack.length - 1}\r\n                        onClick={onClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport GlobalContext from \"../Context\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Tableau extends BlinkingComponent {\r\n    constructor(props) {\r\n        super((s) => s.tableau.stacks[props.index]);\r\n    }\r\n\r\n    static Stacks = () => {\r\n        const { state, updateGameContext } = React.useContext(GlobalContext);\r\n        const onClick = (c, p, i) => updateGameContext(state.tableau.onClick(c, p, i));\r\n        return state.tableau.stacks.map((tableau, index) => (\r\n            <Tableau key={index} index={index} model={tableau} parent={state.tableau} onClick={onClick} />\r\n        ));\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        let offset = 0;\r\n        const getOffset = (index) => {\r\n            for (let i = 0; i <= index; i++) {\r\n                if (props.model.stack[i] && !props.model.stack[i].isHidden) {\r\n                    offset = i * 12 + (index - i) * 24;\r\n                    return offset;\r\n                }\r\n            }\r\n            offset = index * 12;\r\n            return offset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    parent={props.model.source}\r\n                    suggested={props.model.suggestion && !props.model.stack.length}\r\n                    blink={props.model.blinkFor}\r\n                    onClick={(c,p) => props.onClick(null, p, props.index)}\r\n                    visible={!props.model.stack.length}\r\n                />\r\n                {props.model.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        blink={props.model.blinkFor}\r\n                        isSuggested={props.model.suggestion && props.model.stack.length - 1 == index}\r\n                        offsetTop={getOffset(index)}\r\n                        onClick={(card, p) => props.onClick(card, p, props.index)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    parent={\"tableau-\" + props.index}\r\n                    onClick={(card, p) => props.onClick(card, p, props.index)}\r\n                    stack={props.model.stack}\r\n                    offsetTop={getOffset(props.model.stack.length)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import BlinkingComponent from \"./BlinkingComponent\";\r\nimport Card from \"./Card\";\r\nimport Hand from \"./Hand\";\r\nimport React from \"react\";\r\nimport StackBase from \"./StackBase\";\r\n\r\nexport default class Waste extends BlinkingComponent {\r\n    constructor() {\r\n        super((s) => s.waste);\r\n    }\r\n\r\n    render() {\r\n        const { state, updateGameContext } = this.context;\r\n        const onClick = (c, p, i) => updateGameContext(state.waste.onClick(c, p, i));\r\n        const getOffset = (index) => {\r\n            if (state.settings.launchSettings.drawMode == \"single\") {\r\n                return 0;\r\n            }\r\n            const length =\r\n                state.waste.settings.mouseMode == \"remain-on-stack\" && state.hand.isHoldingCard() && state.hand.isFromWaste()\r\n                    ? state.waste.stack.length + 1\r\n                    : state.waste.stack.length;\r\n            let additionalOffset = 2;\r\n            if (length == 2) {\r\n                additionalOffset = 1;\r\n            }\r\n\r\n            if (length == 1) {\r\n                additionalOffset = 0;\r\n            }\r\n\r\n            return ((index - length - 2) % 3) + additionalOffset;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <StackBase\r\n                    parent={state.waste.source}\r\n                    blink={state.waste.blinkFor}\r\n                    onClick={(c,p) => onClick(null, p)}\r\n                    suggested={state.waste.suggestion && !state.waste.stack.length}\r\n                    visible={!state.waste.stack.length}\r\n                />\r\n                {state.waste.stack.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        model={card}\r\n                        offsetTop={(index / 2) * -1}\r\n                        offsetLeft={getOffset(index)}\r\n                        blink={state.waste.blinkFor}\r\n                        isSuggested={state.waste.suggestion && index == state.waste.stack.length - 1}\r\n                        onClick={(c, p) => onClick(c, p)}\r\n                    />\r\n                ))}\r\n                <Hand\r\n                    offsetTop={(state.waste.stack.length / 2) * -1}\r\n                    offsetLeft={getOffset(state.waste.stack.length)}\r\n                    parent=\"waste\"\r\n                    onClick={onClick}\r\n                    stack={state.waste.stack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"../Style/Board.scss\";\r\n\r\nimport Dealer from \"./Dealer\";\r\nimport EndScreen from \"../UI/EndScreen\";\r\nimport Foundation from \"./Foundation\";\r\nimport GamePad from \"./GamePad\";\r\nimport Header from \"../UI/Header/Header\";\r\nimport Menu from \"../UI/Menu\";\r\nimport Navigator from \"./Navigator\";\r\nimport React from \"react\";\r\nimport Stock from \"./Stock\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nconst Board = () => (\r\n    <>\r\n        <div className=\"layout-grid-container\">\r\n            <Header />\r\n            <div className=\"board-grid-container\">\r\n                <Stock />\r\n                <Waste />\r\n                <div className=\"spacer\">&nbsp;</div>\r\n                <Foundation.Stacks />\r\n                <Tableau.Stacks />\r\n            </div>\r\n        </div>\r\n        <Menu />\r\n        <EndScreen />\r\n        <Dealer />\r\n        <Navigator />\r\n        <GamePad />\r\n    </>\r\n);\r\n\r\nexport default Board;\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Tableau from \"../Model/Game/Tableau\";\r\n\r\nexport default class Dealer {\r\n    dealt: number;\r\n    dealingAt: number;\r\n    isDealt: boolean;\r\n\r\n    constructor() {\r\n        this.dealt = 0;\r\n        this.dealingAt = 0;\r\n        this.isDealt = false;\r\n    }\r\n\r\n    dealOne = (dealt: number, callback: any) => (state: BusinessModel) => {\r\n        if (dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n\r\n        state.dealer.deal(state.stock, state.tableau);\r\n        if (state.dealer.isDealt) {\r\n            state.game.started = Date.now();\r\n        }\r\n\r\n        if (!state.dealer.isDealt) {\r\n            callback(state.dealer.dealt);\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    dealAll = () => (state: BusinessModel) => {\r\n        if (this.dealt != state.dealer.dealt) {\r\n            return null;\r\n        }\r\n        while (!state.dealer.isDealt) {\r\n            state.dealer.deal(state.stock, state.tableau);\r\n        }\r\n        state.game.started = Date.now();\r\n        return state;\r\n    };\r\n\r\n    deal = (stock: Stock, tableau: Tableau) => {\r\n        for (let i = this.dealingAt; i < tableau.stacks.length; i++) {\r\n            const stack = tableau.stacks[i].stack;\r\n            if (stack.length <= tableau.stacks.length - i - 1) {\r\n                const newCard = stock.popOne();\r\n                newCard.source = tableau.stacks[i].source;\r\n                if (stack.length == tableau.stacks.length - 1 - i) {\r\n                    newCard.isHidden = false;\r\n                }\r\n                tableau.deal(newCard, i);\r\n                this.dealt++;\r\n                this.dealingAt++;\r\n                if (this.dealingAt == tableau.stacks.length) {\r\n                    this.dealingAt = 0;\r\n                }\r\n                this.isDealt = false;\r\n                return;\r\n            } else {\r\n                const isFirst = this.dealingAt == 0;\r\n                this.dealingAt = 0;\r\n                this.isDealt = isFirst;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.isDealt = true;\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Hand from \"../Model/Game/Hand\";\r\n\r\nexport default class Dispatcher {\r\n    clickHandler: ClickHandler;\r\n\r\n    constructor(clickHandler: ClickHandler) {\r\n        this.clickHandler = clickHandler;\r\n    }\r\n\r\n    getHandler = (hand: Hand) => {\r\n        if (hand && hand.isHoldingCard()) {\r\n            return this.dispatchPutDown;\r\n        } else {\r\n            return this.dispatchPickup;\r\n        }\r\n    };\r\n\r\n    dispatchPutDown = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (state.hand.isHoldingCard()) {\r\n            state.focus.isKeyBoard(position.isKeyBoard);\r\n            this.clickHandler.dispatchPutDown(card, position, state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, index: number) => (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            state.focus.isKeyBoard(position.isKeyBoard);\r\n            this.clickHandler.dispatchPickup(card, position, state, index);\r\n        }\r\n    };\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport Stock from \"../Model/Game/Stock\";\r\nimport Waste from \"../Model/Game/Waste\";\r\n\r\nexport type BlinkSelector = (state: BusinessModel) => Waste | Stock | any;\r\n\r\nexport interface IBlinker {\r\n    startBlink: (selector: BlinkSelector, state: BusinessModel) => void;\r\n}\r\n\r\nexport default class Blinker implements IBlinker {\r\n    startBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        if (selector(state).blinkFor < 10) {\r\n            selector(state).blinkFor = 10;\r\n            state.game.registerBlink(true);\r\n            selector(state).unblink = (s: BusinessModel) => this.stopBlink(selector, s);\r\n        }\r\n    };\r\n\r\n    stopBlink = (selector: BlinkSelector, state: BusinessModel) => {\r\n        selector(state).blinkFor = 0;\r\n        state.game.registerBlink(false);\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Foundation implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.foundation.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.foundation.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.foundation.add(index, state.hand.putDown()) && state.game.registerMove(\"foundation-\" + index, src);\r\n            this.tryDetectEnd(state);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (_card: Card, position: any, state: BusinessModel, index: number) => {\r\n        const card = state.foundation.getTop(index);\r\n        if (card && state.foundation.getPreviousUsed(index) === card.face) {\r\n            state.hand.pickUp([state.foundation.remove(index, card)], card.source, position) && state.game.registerPickup();\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    //@todo move this to a generic place, also detect failure\r\n    tryDetectEnd(state: BusinessModel) {\r\n        const nrofCards = state.foundation.countCards();\r\n        if (nrofCards === 52) {\r\n            state.game.isEnded = true;\r\n            state.game.end = Date.now();\r\n        }\r\n    }\r\n}\r\n","export default class Card {\r\n    constructor(face, type, isHidden) {\r\n        this.face = face;\r\n        this.type = type;\r\n        this.isHidden = isHidden;\r\n        this.entropyStyle = {};\r\n        this.source = \"\";\r\n        this.suggestion = false;\r\n    }\r\n\r\n    causeEntropy = (lvl) => {\r\n        const level = lvl * 2;\r\n        const random = () => Math.random() < 0.5;\r\n        const randomInt = (min, max) => Math.random() * (max - min) + min;\r\n        //shift\r\n        if (random()) {\r\n            if (random()) {\r\n                this.entropyStyle[\"left\"] = randomInt(0, level / 20) + \"vw\";\r\n            } else {\r\n                this.entropyStyle[\"right\"] = randomInt(0, level / 20) + \"vw\";\r\n            }\r\n        }\r\n        //rotate\r\n        this.entropyStyle[\"transform\"] = \"rotate(\" + randomInt(level * -1, level) + \"deg)\";\r\n    };\r\n\r\n    equals = (other) => {\r\n        return Card.equals(this, other);\r\n    };\r\n\r\n    static equals(card, otherCard) {\r\n        return (!card && !otherCard) || (card && otherCard && otherCard.face == card.face && otherCard.type.icon == card.type.icon);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Card(orig.face, orig.type, orig.isHidden);\r\n        copy.source = orig.source;\r\n        copy.entropyStyle = { ...orig.entropyStyle };\r\n        copy.canClick = orig.canClick;\r\n        return copy;\r\n    };\r\n\r\n    static copyAll = (cards) => cards.map((card) => Card.copy(card));\r\n}\r\n","export const DeckSize = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\r\n\r\nexport const getFoundationOrder = () => {\r\n    return [\"A\", ...DeckSize.slice(0, DeckSize.length - 1)].reverse();\r\n};\r\n\r\nexport const getTableauOrder = () => {\r\n    return [...DeckSize];\r\n};\r\n","const Suits = {\r\n    heart: {\r\n        icon: \"♥\",\r\n        color: \"red\",\r\n    },\r\n    club: {\r\n        icon: \"♣\",\r\n        color: \"black\",\r\n    },\r\n    diamond: {\r\n        icon: \"♦\",\r\n        color: \"red\",\r\n    },\r\n    spade: {\r\n        icon: \"♠\",\r\n        color: \"black\",\r\n    },\r\n};\r\n\r\nexport default Suits;\r\n","import Card from \"./Card\";\r\nimport { DeckSize } from \"./DeckSize\";\r\nimport Suits from \"./Suits\";\r\n\r\nexport default class Deck {\r\n    constructor() {\r\n        const keys = Object.keys(Suits);\r\n        this.cards = DeckSize.map((deckSize) => [...keys.map((key) => new Card(deckSize, Suits[key], true))])\r\n            .flat()\r\n            .reverse();\r\n    }\r\n\r\n    shuffle() {\r\n        this.shuffleArray(this.cards);\r\n        return this;\r\n    }\r\n\r\n    // credits: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Focus {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.card = null;\r\n        this.stack = null;\r\n        this.keyboard = false;\r\n    }\r\n\r\n    validSettings = () => this.settings.mouseMode !== \"follow-cursor\";\r\n\r\n    isKeyBoard = (isKeyboard) => {\r\n        this.keyboard = isKeyboard;\r\n    }\r\n\r\n    setCard = (card) => {\r\n        this.card = card;\r\n        this.stack = null;\r\n    };\r\n\r\n    unsetCard = (card) => {\r\n        if (this.card && card && Card.equals(this.card, card)) {\r\n            this.card = null;\r\n        }\r\n    };\r\n\r\n    unsetStack = (stack) => {\r\n        if (this.stack && stack && this.stack == stack) {\r\n            this.stack = null;\r\n        }\r\n    }\r\n\r\n    setStack = (stack) => {\r\n        this.card = null;\r\n        this.stack = stack;\r\n    };\r\n\r\n    hasCard = (card) => this.keyboard && this.validSettings() && this.card && card && Card.equals(this.card, card);\r\n\r\n    hasStack = (stack) => this.keyboard && this.validSettings() && this.stack && stack && this.stack == stack;\r\n}\r\n","export default class BasicStack {\r\n    constructor(source) {\r\n        this.source = source;\r\n    }\r\n    stack = [];\r\n    getTop = () => this.stack && this.stack.length && this.stack[this.stack.length - 1];\r\n    suggestion = false;\r\n    getClickable =  () => this.stack.filter(card => card.canClick);\r\n}\r\n","import BasicStack from \"./BasicStack\";\r\nimport Card from \"../Deck/Card\";\r\nimport Suits from \"../Deck/Suits\";\r\nimport { getFoundationOrder } from \"../Deck/DeckSize\";\r\n\r\nexport default class Foundation {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        const template = (index) => {\r\n            const s = new BasicStack(\"foundation-\" + index);\r\n            s.stack = [];\r\n            s.acceptedCards = [...getFoundationOrder()];\r\n            s.usedCards = [];\r\n            s.icon = null;\r\n            s.color = null;\r\n            s.blinkFor = 0;\r\n            return s;\r\n        };\r\n        const stacks = Object.keys(Suits)\r\n            .map((key) => Suits[key])\r\n            .map((suit, index) => ({ ...template(index), ...suit }));\r\n        this.stacks = [...stacks];\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (a, b, c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        this.suggestion = false;\r\n    }\r\n\r\n    getCurrentAccepted = (index) => {\r\n        const currentFoundation = this.stacks[index].acceptedCards;\r\n        return currentFoundation[currentFoundation.length - 1];\r\n    };\r\n\r\n    wouldAccept = (index, hand) => !hand.hasMoreThanOneCard() && this.accepts(index, hand.currentCard());\r\n\r\n    accepts = (index, card) => {\r\n        const currentAccepted = this.getCurrentAccepted(index);\r\n        return this.stacks[index].icon == card.type.icon && currentAccepted == card.face;\r\n    };\r\n\r\n    add = (index, cards) => {\r\n        const card = cards[0];\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 3));\r\n        card.source = this.stacks[index].source;\r\n        card.suggestion = false;\r\n        this.stacks[index].stack.push(card);\r\n        return this.stacks[index].usedCards.push(this.stacks[index].acceptedCards.pop());\r\n    };\r\n\r\n    remove = (index, card) => {\r\n        this.stacks[index].acceptedCards.push(this.stacks[index].usedCards.pop());\r\n        return card && card.equals(this.getTop(index)) && this.stacks[index].stack.pop();\r\n    };\r\n\r\n    getPreviousUsed = (index) => [...this.stacks[index].usedCards].pop();\r\n\r\n    countCards = () => this.stacks.map((f) => parseInt(f.stack.length)).reduce((a, b) => a + b, 0);\r\n\r\n    getTop = (index) => this.stacks[index].stack[this.stacks[index].stack.length - 1];\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Foundation(orig.settings);\r\n        copy.stacks = orig.stacks.map((origStack) => {\r\n            const s = new BasicStack(origStack.source);\r\n            s.stack = Card.copyAll(origStack.stack);\r\n            s.acceptedCards = [...origStack.acceptedCards];\r\n            s.usedCards = [...origStack.usedCards];\r\n            s.icon = origStack.icon;\r\n            s.color = origStack.color;\r\n            return s;\r\n        });\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(3, lvl))));\r\n        return this;\r\n    };\r\n}\r\n","export default class Rating {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.points = 0;\r\n        this.multiplicator = 1;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        const currentMove = {\r\n            source: source,\r\n            target: target,\r\n        };\r\n        this.points += this.rateMove(currentMove);\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        if (this.settings.launchSettings.drawMode == \"single\" && this.settings.launchSettings.recyclingMode == \"infinite\") {\r\n            if (this.points > 0) {\r\n                if (this.points < 100) {\r\n                    this.points = 0;\r\n                } else {\r\n                    this.points -= 100;\r\n                }\r\n            }\r\n            console.debug(\"RATING: subtract (max) 100 points for RECYCLE\");\r\n        }\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.points += 5;\r\n        console.debug(\"RATING: add 5 points for UNCOVER\");\r\n    };\r\n\r\n    registerBlink(on) {\r\n        if (on && this.settings.launchSettings.missPenalty) {\r\n            this.points -= 10;\r\n            console.debug(\"RATING: subtract 10 points for invalid action\");\r\n        }\r\n    }\r\n\r\n    penalize = (other) => {\r\n        if (this.settings.launchSettings.undoPenalty) {\r\n            const penalty = Math.pow(2, other.multiplicator);\r\n            console.debug(`RATING: applying penalty of ${penalty} points for UNDO`);\r\n            this.points = Math.min(this.points, other.points) - penalty;\r\n            this.multiplicator = other.multiplicator + 1;\r\n        }\r\n    };\r\n\r\n    registerHint = (done) => {\r\n        if (done && this.settings.launchSettings.hintPenalty) {\r\n            this.points -= 10;\r\n            console.debug(`RATING: applying penalty of 10 points for HINT`);\r\n        }\r\n    };\r\n\r\n    rateMove(move) {\r\n        const isTableau = (obj) => obj.substr(0, 7) == \"tableau\";\r\n        const isFoundation = (obj) => obj.substr(0, 10) == \"foundation\";\r\n        if (isTableau(move.source)) {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE tableau -> foundation\");\r\n                return 10;\r\n            }\r\n        } else if (move.source == \"waste\") {\r\n            if (isFoundation(move.target)) {\r\n                console.debug(\"RATING: add 10 points for MOVE waste -> foundation\");\r\n                return 10;\r\n            }\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: add 5 points for MOVE waste -> tableau\");\r\n                return 5;\r\n            }\r\n        } else if (isFoundation(move.source)) {\r\n            if (isTableau(move.target)) {\r\n                console.debug(\"RATING: subtract 15 points for MOVE foundation -> tableau\");\r\n                return -15;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getTimePenalty = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        return Math.trunc(secondsToFinish / 5) * -2;\r\n    };\r\n\r\n    getBonusPoints = (start, end) => {\r\n        const secondsToFinish = (end - start) / 1000;\r\n        if (secondsToFinish < 30) {\r\n            return 0;\r\n        }\r\n        return Math.round((20000 / secondsToFinish) * 35);\r\n    };\r\n\r\n    getTotal = (start, end) => {\r\n        return this.points + this.getBonusPoints(start, end) - this.getTimePenalty(start, end);\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Rating(orig.settings);\r\n        copy.points = orig.points;\r\n        copy.multiplicator = orig.multiplicator;\r\n        return copy;\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class TimeMachine {\r\n    constructor() {\r\n        this.previousStates = [];\r\n        this.memorable = true;\r\n        this.modified = false;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n\r\n        if (source == target) {\r\n            this.memorable = false;\r\n        }\r\n    };\r\n\r\n    pushPreviousState = (state) => {\r\n        const previous = this.previousStates[this.previousStates.length - 1];\r\n        if (!previous || !this.modelEquals(state, previous)) {\r\n            this.previousStates.push(state);\r\n        }\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    };\r\n\r\n    popPreviousState = (id, current) => {\r\n        const isRequested = this.previousStates.length - 1 == id;\r\n        const popPrevious = () => isRequested && this.previousStates && this.previousStates.pop();\r\n        let previous = popPrevious();\r\n        while (previous && (!previous.game.timemachine.memorable || this.modelEquals(previous, current)) && this.previousStates.length) {\r\n            previous = popPrevious();\r\n        }\r\n        return previous;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.memorable = true;\r\n        this.modified = true;\r\n        return true;\r\n    };\r\n\r\n    registerBlink() {\r\n        this.modified = true;\r\n        this.memorable = false;\r\n    }\r\n\r\n    stackEquals = (a, b) => {\r\n        return a.stack.every((card, i) => Card.equals(card, b.stack[i]) && card.isHidden == b.stack[i].isHidden);\r\n    };\r\n\r\n    stacksEqual = (a, b) => {\r\n        return a.stacks.every((stack, i) => this.stackEquals(stack, b.stacks[i]));\r\n    };\r\n\r\n    modelEquals = (a, b) => {\r\n        return (\r\n            this.stackEquals(a.stock, b.stock) &&\r\n            this.stackEquals(a.waste, b.waste) &&\r\n            this.stacksEqual(a.tableau, b.tableau) &&\r\n            this.stacksEqual(a.foundation, b.foundation)\r\n        );\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new TimeMachine();\r\n        copy.previousStates = [...orig.previousStates];\r\n        copy.memorable = orig.memorable;\r\n        copy.modified = orig.modified;\r\n        return copy;\r\n    };\r\n}\r\n","import Rating from \"./Rating\";\r\nimport TimeMachine from \"./TimeMachine\";\r\n\r\nexport default class Game{\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.rating = new Rating(settings);\r\n        this.timemachine = new TimeMachine();\r\n        this.started = 0;\r\n        this.isEnded = false;\r\n        this.end = 0;\r\n    }\r\n\r\n    registerMove = (target, source) => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerMove(target, source);\r\n        this.timemachine.registerMove(target, source);\r\n        return true;\r\n    };\r\n\r\n    registerPickup = () => {\r\n        this.timemachine.registerPickup();\r\n        return true;\r\n    };\r\n\r\n    registerRecycle = () => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerRecycle();\r\n        this.timemachine.registerRecycle();\r\n        return true;\r\n    };\r\n\r\n    registerUncover = () => {\r\n        this.rating.registerHint(this.settings.disableHint());\r\n        this.rating.registerUncover();\r\n        this.timemachine.registerUncover();\r\n        return true;\r\n    };\r\n\r\n    registerBlink(on) {\r\n        this.rating.registerBlink(on);\r\n        this.timemachine.registerBlink(on);\r\n        return true;\r\n    }\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Game(orig.settings);\r\n        copy.started = orig.started;\r\n        copy.timemachine = TimeMachine.copy(orig.timemachine);\r\n        copy.rating = Rating.copy(orig.rating);\r\n        return copy;\r\n    };\r\n\r\n    getElapsed = () => {\r\n        const padleft = (i) => ((i + \"\").length == 1 ? \"0\" + i : i);\r\n        let msec = (this.end || Date.now()) - this.started;\r\n        const hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        const mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        const ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        return hh ? hh + \":\" + padleft(mm) + \":\" + padleft(ss) : padleft(mm) + \":\" + padleft(ss);\r\n    };\r\n}\r\n","import Card from \"../Deck/Card\";\r\n\r\nexport default class Hand {\r\n    constructor(focus) {\r\n        this.focus = focus;\r\n        this.stack = [];\r\n        this.source = null;\r\n        this.position = null;\r\n    }\r\n\r\n    pickUp = (stack, source, position) => {\r\n        if (stack && stack[0]) {\r\n            this.stack = stack.map((c) => {\r\n                c.suggestion = false;\r\n                return c;\r\n            });\r\n            this.source = source;\r\n            this.position = position;\r\n        }\r\n\r\n        return stack;\r\n    };\r\n\r\n    putDown = () => {\r\n        this.source = null;\r\n        const result = this.stack.splice(0, this.stack.length);\r\n        if (result.length) {\r\n            this.focus.setCard(result[result.length-1]);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    isHoldingCard = () => !!this.stack.length;\r\n\r\n    isHoldingKing = () => this.isHoldingCard() && this.currentCard().face == 'K';\r\n\r\n    currentCard = () => this.isHoldingCard() && this.stack[0];\r\n\r\n    hasMoreThanOneCard = () => this.stack.length > 1;\r\n\r\n    isFromCurrentSource = (card) => this.source && card.source == this.source;\r\n\r\n    isFromWaste = () => this.source && this.source == \"waste\";\r\n\r\n    isFromFoundation = (index) => this.source && this.source == `foundation-${index}`\r\n\r\n    isFromTableau = (index) => this.source && this.source == `tableau-${index}`\r\n\r\n    isFromAnyTableau = () => this.source && this.source.substring(0,8) == \"tableau-\";\r\n\r\n    getTableauIndex = () => this.source && this.source.substring(8);\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Hand(orig.focus);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.source = orig.source;\r\n        copy.position = orig.position;\r\n        return copy;\r\n    };\r\n}\r\n","class SuggestionMode {\r\n    key: string;\r\n    label: string;\r\n    isTemporary: boolean;\r\n    supportsHints: boolean;\r\n    next: string | undefined;\r\n    constructor(key: string, obj: ISuggestionMode) {\r\n        this.key = key;\r\n        this.label = obj.label;\r\n        this.isTemporary = !!obj.isTemporary;\r\n        this.supportsHints = !!obj.supportsHints;\r\n        this.next = obj.next;\r\n    }\r\n}\r\n\r\ntype ISuggestionMode = {\r\n    label: string;\r\n    isTemporary?: boolean;\r\n    supportsHints?: boolean;\r\n    next?: string;\r\n};\r\n\r\nexport default class SuggestionModes {\r\n    static NONE: string = \"NONE\";\r\n    static SCORED: string = \"SCORED\";\r\n    static REGULAR: string = \"REGULAR\";\r\n    static FULL: string = \"FULL\";\r\n    static ONCE: string = \"ONCE\";\r\n    static TWICE: string = \"TWICE\";\r\n    static raw: { [id: string]: ISuggestionMode } = {\r\n        NONE: {\r\n            label: \"None\",\r\n            supportsHints: true,\r\n        },\r\n        SCORED: {\r\n            label: \"Scored\",\r\n        },\r\n        REGULAR: {\r\n            label: \"Regular\",\r\n        },\r\n        FULL: {\r\n            label: \"Full\",\r\n        },\r\n        ONCE: {\r\n            label: \"Single Action\",\r\n            isTemporary: true,\r\n            next: \"NONE\",\r\n        },\r\n    };\r\n    static get = (key: string) => new SuggestionMode(key, SuggestionModes.raw[key]);\r\n    static all = () => Object.keys(SuggestionModes.raw).map(SuggestionModes.get);\r\n    static allSuggestionModes = () => SuggestionModes.all().filter((mode) => !mode.isTemporary);\r\n    static default = () => SuggestionModes.get(SuggestionModes.REGULAR);\r\n    static getHintMode = () => SuggestionModes.get(SuggestionModes.ONCE);\r\n}\r\n","import SuggestionModes from \"./Settings/SuggestionModes\";\r\n\r\nexport default class Settings {\r\n    constructor(launchSettings) {\r\n        this.launchSettings = launchSettings;\r\n        const isTouch = launchSettings.isTouch;\r\n        this.mouseModes = [\"follow-cursor\", \"remain-on-stack\"];\r\n        this.mouseMode = isTouch ? \"remain-on-stack\" : \"follow-cursor\";\r\n\r\n        this.entropyLevels = [\"none\", \"low\", \"regular\", \"high\", \"extreme\"];\r\n        this.baseEntropy = isTouch ? 1 : 2;\r\n        this.interactionEntropy = isTouch ? 1 : 2;\r\n\r\n        this.suggestionModes = SuggestionModes.allSuggestionModes();\r\n        this.suggestionMode = SuggestionModes.default();\r\n    }\r\n\r\n    setSuggestionMode = (sm) => {\r\n        if (this.suggestionMode.key !== sm) {\r\n            this.suggestionMode = SuggestionModes.get(sm);\r\n        }\r\n    };\r\n\r\n    enableHint = () => {\r\n        this.suggestionMode = SuggestionModes.getHintMode();\r\n    };\r\n\r\n    disableHint = () => {\r\n        if (this.suggestionMode.isTemporary && this.suggestionMode.next) {\r\n            this.suggestionMode = SuggestionModes.get(this.suggestionMode.next);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Settings(orig.launchSettings);\r\n        copy.suggestionMode = orig.suggestionMode;\r\n        copy.mouseMode = orig.mouseMode;\r\n        copy.baseEntropy = orig.baseEntropy;\r\n        copy.interactionEntropy = orig.interactionEntropy;\r\n        copy.hintMode = orig.hintMode;\r\n        return copy;\r\n    };\r\n}\r\n","import BasicStack from \"./BasicStack\";\r\nimport Card from \"../Deck/Card\";\r\n\r\nexport default class Stock extends BasicStack {\r\n    constructor(stack, settings, focus) {\r\n        super(\"stock\");\r\n        this.settings = settings;\r\n        this.focus = focus;\r\n        this.stack = stack.map(this.setCardProperties);\r\n        this.setClickability();\r\n        this.recyclings = 0;\r\n        this.passes = -1;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (a, b, c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n        if (this.settings.launchSettings.recyclingMode == \"1-pass\") {\r\n            this.passes = 1;\r\n        }\r\n        if (this.settings.launchSettings.recyclingMode == \"3-pass\") {\r\n            this.passes = 3;\r\n        }\r\n    }\r\n\r\n    setClickability = () => {\r\n        if (this.getTop()) {\r\n            this.getTop().canClick = true;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    popOne = () => {\r\n        const result = this.stack.pop();\r\n        this.setClickability();\r\n        return result;\r\n    }\r\n\r\n    canRecycle() {\r\n        return (\r\n            this.settings.launchSettings.recyclingMode == \"infinite\" ||\r\n            (this.settings.launchSettings.recyclingMode == \"3-pass\" && this.recyclings < 2)\r\n        );\r\n    }\r\n\r\n    recycle = (waste) => {\r\n        if (waste.length) {\r\n            this.stack = waste.reverse().map(this.setCardProperties);\r\n            this.setClickability();\r\n            this.recyclings++;\r\n            this.focus.setCard(this.getTop());\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setCardProperties = (card) => {\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        card.isHidden = true;\r\n        card.source = this.source;\r\n        card.canClick = false;\r\n        return card;\r\n    };\r\n\r\n    isOnTop = (card) => card && card.equals(this.getTop());\r\n\r\n    popTop = () => {\r\n        let result = [];\r\n        if (this.settings.launchSettings.drawMode == \"single\") {\r\n            result = [this.stack.pop()];\r\n        }\r\n        if (this.settings.launchSettings.drawMode == \"triple\") {\r\n            result = this.stack.splice(this.stack.length - 3);\r\n        }\r\n        if (this.stack.length == 0) {\r\n            this.passes--;\r\n        }\r\n        if (this.stack.length) {\r\n            this.focus.setCard(this.getTop());\r\n        } else {\r\n            this.focus.setStack(\"stock\");\r\n        }\r\n\r\n        this.setClickability();\r\n\r\n        return result;\r\n    };\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Stock([], orig.settings, orig.focus);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        copy.dealt = orig.dealt;\r\n        copy.dealingAt = orig.dealingAt;\r\n        copy.isDealt = orig.isDealt;\r\n        copy.passes = orig.passes;\r\n        copy.recyclings = orig.recyclings;\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import BasicStack from \"./BasicStack\";\r\nimport Card from \"../Deck/Card\";\r\nimport Focus from \"./Focus\";\r\nimport Hand from \"./Hand\";\r\nimport Settings from \"./Settings\";\r\nimport { getTableauOrder } from \"../Deck/DeckSize\";\r\n\r\nclass TableauStack extends BasicStack {\r\n    blinkFor = 0;\r\n    id = 0;\r\n}\r\nexport default class Tableau {\r\n    stacks: TableauStack[];\r\n    settings: Settings;\r\n    onClick: (a: any, b: any, c: any) => void;\r\n    focus: Focus;\r\n\r\n    constructor(settings: Settings, focus: Focus) {\r\n        this.focus = focus;\r\n        const ids = [0, 1, 2, 3, 4, 5, 6];\r\n        this.stacks = ids.map((id) => {\r\n            const s = new TableauStack(\"tableau-\" + id);\r\n            s.stack = [];\r\n            s.blinkFor = 0;\r\n            s.id = id;\r\n            return s;\r\n        });\r\n        this.settings = settings;\r\n        this.onClick = () => {};\r\n    }\r\n\r\n    getStack = (index: number) => this.stacks[index];\r\n\r\n    wouldAccept = (index: number, hand: Hand) => this.canPutDown(this.getTop(index), hand, index);\r\n\r\n    canPutDown = (card: Card, hand: Hand, index: number) =>\r\n        (card && card.isHidden && hand.isFromCurrentSource(card)) ||\r\n        this.accepts(index, hand.currentCard()) ||\r\n        (!card && hand.isFromTableau(index));\r\n\r\n    accepts = (index: number, current: Card) => {\r\n        const top = this.getTop(index);\r\n        if (!top) {\r\n            return current && current.face === \"K\";\r\n        }\r\n        if (top.isHidden) {\r\n            return false;\r\n        }\r\n        const range = [...getTableauOrder()];\r\n        const currentIndex = range.indexOf(current.face);\r\n        const topIndex = range.indexOf(top.face);\r\n        return currentIndex + 1 == topIndex && current.type.color !== top.type.color && top.face !== \"A\";\r\n    };\r\n\r\n    getCard = (index: number, card: Card) => {\r\n        for (let j = 0; j < this.stacks[index].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[index].stack[j]) && card.isHidden === this.stacks[index].stack[j].isHidden) {\r\n                return this.stacks[index].stack[j];\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    popWithFollowing = (card: Card, i: number) => {\r\n        for (let j = 0; j < this.stacks[i].stack.length; j++) {\r\n            if (card && card.equals(this.stacks[i].stack[j])) {\r\n                const result = this.stacks[i].stack.splice(j, this.stacks[i].stack.length);\r\n                this.stackEntropy(i);\r\n                this.setClickability(i);\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    deal = (card: Card, index: number) => {\r\n        this.stacks[index].stack.push(card);\r\n        this.setClickability(index);\r\n    }\r\n\r\n    canUncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        return top.isHidden && card && card.equals(this.getTop(index));\r\n    };\r\n\r\n    uncover = (index: number, card: Card) => {\r\n        const top = this.getTop(index);\r\n        if (this.canUncover(index, card)) {\r\n            top.isHidden = false;\r\n            this.focus.setCard(top);\r\n            this.stackEntropy(index);\r\n            this.setClickability(index);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    stackEntropy = (index: number) => {\r\n        let entropy = this.settings.interactionEntropy;\r\n        let next = 1;\r\n        let top = this.getTop(index);\r\n        while (entropy && entropy != 0 && top) {\r\n            top.causeEntropy(entropy);\r\n            entropy--;\r\n            top = this.getTop(index, next);\r\n            next++;\r\n        }\r\n    };\r\n\r\n    setClickability = (index: number) => {\r\n        const stack = this.stacks[index];\r\n        stack.stack.forEach((card) => {\r\n            card.canClick = !card.isHidden || this.canUncover(index, card);\r\n        });\r\n    };\r\n\r\n    add = (index: number, cards: Card[]) => {\r\n        this.stacks[index].stack = this.stacks[index].stack.concat(cards.map((c) => this.setCardProperties(c, index)));\r\n        this.stackEntropy(index);\r\n        this.setClickability(index);\r\n        return cards;\r\n    };\r\n\r\n    setCardProperties = (card: Card, index: number) => {\r\n        card.source = this.stacks[index].source;\r\n        return card;\r\n    };\r\n\r\n    getTop = (index: number, offset?: number) => this.stacks[index].stack[this.stacks[index].stack.length - 1 - (offset || 0)];\r\n\r\n    static copy = (orig: Tableau) => {\r\n        const copy = new Tableau(orig.settings, orig.focus);\r\n        copy.stacks = orig.stacks.map((stack, index) => {\r\n            const s = new TableauStack(stack.source);\r\n            s.id = index;\r\n            s.stack = Card.copyAll(stack.stack);\r\n            return s;\r\n        });\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.stacks.forEach((stack) => stack.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 4))));\r\n        return this;\r\n    };\r\n}\r\n","import BasicStack from \"./BasicStack\";\r\nimport Card from \"../Deck/Card\";\r\n\r\nexport default class Waste extends BasicStack {\r\n    constructor(settings) {\r\n        super(\"waste\");\r\n        this.settings = settings;\r\n        // eslint-disable-next-line no-unused-vars\r\n        this.onClick = (_a, _b, _c) => {};\r\n        this.blinkFor = 0;\r\n        this.unblink = () => {};\r\n    }\r\n\r\n    tryPutDown = (card) => this.canAdd(card) && (this.add(card) || true);\r\n\r\n    add = (card) => card && this.stack.push(this.setCardProperties(card));\r\n\r\n    setClickability = (passthrough) => {\r\n        this.stack.forEach(card => { card.canClick = false;})\r\n        this.getTop() && (this.getTop().canClick = true);\r\n        return passthrough;\r\n    };\r\n\r\n    addAll = (cards) => cards && cards.length && cards.map(this.add) && this.setClickability(1);\r\n\r\n    setCardProperties = (card) => {\r\n        card.source = this.source;\r\n        card.isHidden = false;\r\n        card.causeEntropy(Math.min(this.settings.interactionEntropy, 1));\r\n        card.canClick = false;\r\n        return card;\r\n    };\r\n\r\n    wouldAccept = (hand) => hand.isFromWaste() && this.canAdd(hand.currentCard());\r\n\r\n    canAdd = (card) => card && (!this.getTop() || !card.equals(this.getTop()));\r\n\r\n    popTop = (card) => card && card.equals(this.getTop()) && this.setClickability(this.stack.pop());\r\n\r\n    recycle = () => this.stack.splice(0, this.stack.length);\r\n\r\n    static copy = (orig) => {\r\n        const copy = new Waste(orig.settings);\r\n        copy.stack = Card.copyAll(orig.stack);\r\n        return copy;\r\n    };\r\n\r\n    setEntropy = (lvl) => {\r\n        this.stack.forEach((element) => element.causeEntropy(Math.min(lvl, 1)));\r\n        return this;\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport Focus from \"./Game/Focus\";\r\nimport Foundation from \"./Game/Foundation\";\r\nimport Game from \"./Game/Game\";\r\nimport Hand from \"./Game/Hand\";\r\nimport Settings from \"./Game/Settings\";\r\nimport Stock from \"./Game/Stock\";\r\nimport Tableau from \"./Game/Tableau\";\r\nimport Waste from \"./Game/Waste\";\r\n\r\nexport default class Model {\r\n    stock: Stock;\r\n    waste: Waste;\r\n    foundation: Foundation;\r\n    tableau: Tableau;\r\n    hand: Hand;\r\n    game: Game;\r\n    settings: Settings;\r\n    focus: Focus;\r\n\r\n    constructor(obj: any) {\r\n        this.stock = obj.stock;\r\n        this.waste = obj.waste;\r\n        this.foundation = obj.foundation;\r\n        this.tableau = obj.tableau;\r\n        this.hand = obj.hand;\r\n        this.game = obj.game;\r\n        this.settings = obj.settings;\r\n        this.focus = obj.focus;\r\n    }\r\n\r\n    static getInitialState = (launchSettings: AppState) => {\r\n        const deck = new Deck().shuffle();\r\n        const settings = new Settings(launchSettings);\r\n        const focus = new Focus(settings);\r\n        const state = {\r\n            stock: new Stock([...deck.cards], settings, focus),\r\n            waste: new Waste(settings),\r\n            foundation: new Foundation(settings),\r\n            tableau: new Tableau(settings, focus),\r\n            hand: new Hand(focus),\r\n            game: new Game(settings),\r\n            settings: settings,\r\n            focus: focus,\r\n        };\r\n        return state;\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return {\r\n            stock: Stock.copy(state.stock),\r\n            waste: Waste.copy(state.waste),\r\n            foundation: Foundation.copy(state.foundation),\r\n            tableau: Tableau.copy(state.tableau),\r\n            hand: Hand.copy(state.hand),\r\n            game: Game.copy(state.game),\r\n            settings: Settings.copy(state.settings),\r\n            focus: state.focus,\r\n        };\r\n    };\r\n}\r\n","import Card from \"../Model/Deck/Card\";\r\nimport { IStack } from \"../Model/Game/IStack\";\r\nimport Model from \"../Model/Model\";\r\n\r\ninterface NavIndex {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\nexport default class Navigator {\r\n    model: any;\r\n    currentIndex: NavIndex;\r\n    rows: IStack[][];\r\n    constructor(model: Model) {\r\n        this.model = model;\r\n        this.currentIndex = { x: 0, y: 0, z: 0 };\r\n        this.rows = [[this.model.stock, this.model.waste, undefined, ...this.model.foundation.stacks], [...this.model.tableau.stacks]];\r\n    }\r\n\r\n    getZindex = (elem: IStack, card: Card) => {\r\n        const targets = elem.getClickable();\r\n        for (let i = 0; i < targets.length; i++) {\r\n            if (Card.equals(card, targets[i])) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    update = (pos: string, card: Card) => {\r\n        for (let i = 0; i < this.rows.length; i++) {\r\n            const row = this.rows[i];\r\n            for (let j = 0; j < row.length; j++) {\r\n                const elem = row[j];\r\n                if (elem && elem.source == pos) {\r\n                    const zIndex = this.getZindex(elem, card);\r\n                    this.currentIndex = { x: j, y: i, z: zIndex };\r\n                    this.finishNav();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    valid = (pos: NavIndex) => pos.x === this.currentIndex.x && pos.y === this.currentIndex.y && pos.z === this.currentIndex.z;\r\n\r\n    moveLeft = (pos: NavIndex) =>\r\n        this.move(pos, () => {\r\n            this.currentIndex.x--;\r\n            if (this.currentIndex.x == -1) {\r\n                this.currentIndex.x = 6;\r\n            }\r\n        });\r\n\r\n    moveRight = (pos: NavIndex) =>\r\n        this.move(pos, () => {\r\n            this.currentIndex.x++;\r\n            if (this.currentIndex.x == 7) {\r\n                this.currentIndex.x = 0;\r\n            }\r\n        });\r\n\r\n    move = (pos: NavIndex, direction: () => void) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        direction();\r\n        if (this.current() == undefined) {\r\n            this.move(this.currentIndex, direction);\r\n        } else {\r\n            this.currentIndex.z = this.current().getClickable().length-1;\r\n            this.finishNav();\r\n        }\r\n    };\r\n\r\n    moveUp = (pos: NavIndex) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        const clickable = this.current().getClickable();\r\n        if (clickable.length && this.currentIndex.z > 0) {\r\n            this.currentIndex.z--;\r\n            this.finishNav();\r\n        } else {\r\n            this.toggleRow(true);\r\n        }\r\n    };\r\n\r\n    moveDown = (pos: NavIndex) => {\r\n        if (!this.valid(pos)) {\r\n            return;\r\n        }\r\n        const clickable = this.current().getClickable();\r\n        if (clickable.length && this.currentIndex.z < clickable.length - 1) {\r\n            this.currentIndex.z++;\r\n            this.finishNav();\r\n        } else {\r\n            this.toggleRow(false);\r\n        }\r\n    };\r\n\r\n    toggleRow = (pickLast : boolean) => {\r\n        if (this.currentIndex.y == 0) {\r\n            this.currentIndex.y = 1;\r\n        } else {\r\n            this.currentIndex.y = 0;\r\n        }\r\n        const last = this.current() ? this.current().getClickable().length - 1 : 0;\r\n        this.currentIndex.z = pickLast ? last : 0;\r\n        if (this.current() == undefined) {\r\n            this.moveLeft(this.currentIndex);\r\n        } else {\r\n            this.finishNav();\r\n        }\r\n    };\r\n\r\n    finishNav = () => {\r\n        const clickable = this.current().getClickable();\r\n        if (clickable && clickable[this.currentIndex.z]) {\r\n            this.model.focus.setCard(clickable[this.currentIndex.z]);\r\n        } else {\r\n            this.model.focus.setStack(this.current().source);\r\n        }\r\n    };\r\n\r\n    current = () => {\r\n        return this.rows[this.currentIndex.y][this.currentIndex.x];\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Stock implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.stock, state);\r\n\r\n    dispatchPutDown = (_card: Card, _position: any, state: BusinessModel) => this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, _position: any, state: BusinessModel) =>\r\n        card != null ? this.moveToWaste(card, state) : this.recycleWaste(card, state);\r\n\r\n    moveToWaste = (card: Card, state: BusinessModel) =>\r\n        state.stock.isOnTop(card) && state.waste.addAll(state.stock.popTop()) && state.game.registerMove(\"waste\", \"stock\");\r\n\r\n    recycleWaste = (_card: Card, state: BusinessModel) => {\r\n        if (!state.stock.getTop()) {\r\n            return (\r\n                (!!state.waste.getTop() &&\r\n                    state.stock.canRecycle() &&\r\n                    state.stock.recycle(state.waste.recycle()) &&\r\n                    state.game.registerRecycle()) ||\r\n                this.blink(state, 0)\r\n            );\r\n        }\r\n    };\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Tableau implements ClickHandler {\r\n    blink: BlinkFunction = (state, index) => new Blinker().startBlink((s: BusinessModel) => s.tableau.stacks[index], state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (state.tableau.wouldAccept(index, state.hand)) {\r\n            const src = state.hand.source;\r\n            state.tableau.add(index, state.hand.putDown()) && state.game.registerMove(\"tableau-\" + index, src);\r\n        } else {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel, index: number) => {\r\n        if (card && !this.tryUncover(card, index, state) && !card.isHidden) {\r\n            state.hand.pickUp(state.tableau.popWithFollowing(card, index), card.source, position) && state.game.registerPickup();\r\n        } else if (!card) {\r\n            this.blink(state, index);\r\n        }\r\n    };\r\n\r\n    tryUncover = (card: Card, index: number, state: BusinessModel) =>\r\n        !state.hand.isHoldingCard() && card.isHidden && state.tableau.uncover(index, card) && state.game.registerUncover();\r\n}\r\n","import { BlinkFunction, ClickHandler } from \"../Common\";\r\n\r\nimport Blinker from \"./Blinker\";\r\nimport BusinessModel from \"./BusinessModel\";\r\nimport Card from \"../Model/Deck/Card\";\r\n\r\nexport default class Waste implements ClickHandler {\r\n    blink: BlinkFunction = (state: BusinessModel) => new Blinker().startBlink((s: BusinessModel) => s.waste, state);\r\n\r\n    dispatchPutDown = (card: Card, position: any, state: BusinessModel) =>\r\n        (state.waste.wouldAccept(state.hand) &&\r\n            state.waste.tryPutDown(state.hand.currentCard()) &&\r\n            state.hand.putDown() &&\r\n            state.game.registerMove(\"waste\", \"waste\")) ||\r\n        this.blink(state, 0);\r\n\r\n    dispatchPickup = (card: Card, position: any, state: BusinessModel) =>\r\n        (card && state.hand.pickUp([state.waste.popTop(card)], \"waste\", position) && state.game.registerPickup()) || this.blink(state, 0);\r\n}\r\n","import BusinessModel from \"./BusinessModel\";\r\nimport SuggestionModes from \"../Model/Game/Settings/SuggestionModes\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class Suggestions {\r\n    tableau: Tableau;\r\n    waste: Waste;\r\n\r\n    constructor() {\r\n        this.tableau = new Tableau();\r\n        this.waste = new Waste();\r\n    }\r\n\r\n    evaluateOptions = (state: BusinessModel) => {\r\n        this.disableAllSuggestions(state);\r\n        if (\r\n            state.settings.suggestionMode.key !== SuggestionModes.NONE &&\r\n            !this.getUncoverOptions(state) &&\r\n            !this.getPutdownSuggestions(state) &&\r\n            !state.hand.isHoldingCard() &&\r\n            (!this.getPickupOptions(state) || state.settings.suggestionMode.key == SuggestionModes.FULL) &&\r\n            (state.stock.getTop() || state.stock.canRecycle()) &&\r\n            state.settings.suggestionMode.key !== SuggestionModes.SCORED\r\n        ) {\r\n            state.stock.suggestion = true;\r\n        }\r\n    };\r\n\r\n    getPutdownSuggestions = (state: BusinessModel, onlyUseful?: boolean) => {\r\n        if (!state.hand.isHoldingCard() || state.settings.suggestionMode.key == SuggestionModes.NONE) {\r\n            return 0;\r\n        }\r\n\r\n        const accepted = [];\r\n        if (state.waste.wouldAccept(state.hand)) {\r\n            if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromWaste()) {\r\n                const move = { target: \"waste\", source: state.hand.source };\r\n                if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                    accepted.push(move);\r\n                    state.waste.suggestion = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        state.foundation.stacks.forEach((stack, index) => {\r\n            if (state.foundation.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromFoundation(index)) {\r\n                    const move = { target: stack.source, source: state.hand.source };\r\n                    if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                        accepted.push(move);\r\n                        stack.suggestion = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        state.tableau.stacks.forEach((stack, index) => {\r\n            if (state.tableau.wouldAccept(index, state.hand)) {\r\n                if (state.settings.suggestionMode.key === SuggestionModes.FULL || !state.hand.isFromTableau(index)) {\r\n                    const isMoveOfKingBetweenEmptySlots =\r\n                        state.hand.isHoldingKing() &&\r\n                        stack.stack.length == 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length == 0;\r\n\r\n                    const isMoveBetweenSimilarParentCards =\r\n                        stack.stack.length > 0 &&\r\n                        state.hand.isFromAnyTableau() &&\r\n                        state.tableau.stacks[state.hand.getTableauIndex()].stack.length > 0 &&\r\n                        stack.stack[stack.stack.length - 1].face ==\r\n                            state.tableau.stacks[state.hand.getTableauIndex()].stack[\r\n                                state.tableau.stacks[state.hand.getTableauIndex()].stack.length - 1\r\n                            ].face &&\r\n                        !state.tableau.getTop(state.hand.getTableauIndex()).isHidden;\r\n\r\n                    const isNotLoop = !isMoveOfKingBetweenEmptySlots && !isMoveBetweenSimilarParentCards;\r\n\r\n                    if (!onlyUseful || state.settings.suggestionMode.key === SuggestionModes.FULL || isNotLoop) {\r\n                        const move = { target: stack.source, source: state.hand.source };\r\n                        if (state.settings.suggestionMode.key !== SuggestionModes.SCORED || state.game.rating.rateMove(move) > 0) {\r\n                            accepted.push(move);\r\n                            stack.suggestion = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return accepted.length;\r\n    };\r\n\r\n    getPickupOptions = (state: BusinessModel) => {\r\n        let foundAny = false;\r\n        const wasteState = BusinessModel.copy(state);\r\n        this.waste.dispatchPickup(wasteState.waste.getTop(), null, wasteState);\r\n        if (wasteState.game.timemachine.modified) {\r\n            if (this.getPutdownSuggestions(wasteState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                state.waste.suggestion = true;\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        state.tableau.stacks.forEach((tableau, index) =>\r\n            tableau.stack\r\n                .map((card, cardIndex) => ({ cardIndex, card }))\r\n                .filter(({ card }) => !card.isHidden)\r\n                .forEach(({ card, cardIndex }) => {\r\n                    const tableauState = BusinessModel.copy(state);\r\n                    this.tableau.dispatchPickup(card, null, tableauState, index);\r\n                    if (tableauState.game.timemachine.modified) {\r\n                        if (this.getPutdownSuggestions(tableauState, true) > (state.settings.suggestionMode.key == SuggestionModes.FULL ? 1 : 0)) {\r\n                            tableau.stack[cardIndex].suggestion = true;\r\n                            foundAny = true;\r\n                        }\r\n                    }\r\n                })\r\n        );\r\n        return foundAny;\r\n    };\r\n\r\n    getUncoverOptions = (state: BusinessModel) => {\r\n        if (!state.hand.isHoldingCard()) {\r\n            const filtered = state.tableau.stacks\r\n                .map((_stack, index) => index)\r\n                .filter((index) => state.tableau.getTop(index) && state.tableau.getTop(index).isHidden);\r\n            filtered.forEach((index) => {\r\n                state.tableau.getTop(index).suggestion = true;\r\n            });\r\n            return filtered.length;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    disableAllSuggestions = (state: BusinessModel) => {\r\n        const disableSuggestion = (obj: any) => {\r\n            obj.suggestion = false;\r\n            obj.stack && obj.stack.forEach(disableSuggestion);\r\n            obj.stacks && obj.stacks.forEach(disableSuggestion);\r\n        };\r\n\r\n        disableSuggestion(state.waste);\r\n        disableSuggestion(state.stock);\r\n        disableSuggestion(state.tableau);\r\n        disableSuggestion(state.foundation);\r\n    };\r\n}\r\n","import { AppState } from \"../Common\";\r\nimport { ClickHandler } from \"../Common\";\r\nimport Dealer from \"./Dealer\";\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Foundation from \"./Foundation\";\r\nimport Model from \"../Model/Model\";\r\nimport Navigator from \"./Navigator\";\r\nimport Stock from \"./Stock\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport Tableau from \"./Tableau\";\r\nimport Waste from \"./Waste\";\r\n\r\nexport default class BusinessModel extends Model {\r\n    suggestor: Suggestions;\r\n    dealer: Dealer;\r\n    navigator: Navigator | undefined;\r\n\r\n    constructor(obj: any) {\r\n        super(obj);\r\n        this.suggestor = new Suggestions();\r\n        this.dealer = new Dealer();\r\n        this.navigator = new Navigator(this);\r\n    }\r\n\r\n    withSuggestions = () => {\r\n        this.suggestor.evaluateOptions(this)\r\n        return this;\r\n    }\r\n\r\n    setEntropy = (lvl: number) => {\r\n        this.settings.baseEntropy = lvl;\r\n        this.stock.setEntropy(lvl);\r\n        this.waste.setEntropy(lvl);\r\n        this.foundation.setEntropy(lvl);\r\n        this.tableau.setEntropy(lvl);\r\n    };\r\n\r\n    withHandlers = () => {\r\n        const getHandler = (clickHandler: ClickHandler) => new Dispatcher(clickHandler).getHandler(this.hand);\r\n        this.stock.onClick = getHandler(new Stock());\r\n        this.waste.onClick = getHandler(new Waste());\r\n        this.foundation.onClick = getHandler(new Foundation());\r\n        this.tableau.onClick = getHandler(new Tableau());\r\n        return this;\r\n    };\r\n\r\n    static getInitialState = (launchSettings: AppState) => {\r\n        return new BusinessModel(Model.getInitialState(launchSettings));\r\n    };\r\n\r\n    static copy = (state: Model) => {\r\n        return new BusinessModel(Model.copy(state));\r\n    };\r\n}\r\n","import { AppState, StateReplacer, StateUpdater } from \"../../Common\";\r\n\r\nimport Board from \"./Board\";\r\nimport BusinessModel from \"../../Business/BusinessModel\";\r\nimport { Provider } from \"../Context\";\r\nimport React from \"react\";\r\n\r\ninterface BoardWrapProps {\r\n    settings: AppState;\r\n    restart: () => void;\r\n}\r\n\r\nexport default class BoardWrap extends React.Component<BoardWrapProps, BusinessModel> {\r\n    constructor(props: BoardWrapProps) {\r\n        super(props);\r\n        this.state = BusinessModel.getInitialState(props.settings);\r\n    }\r\n\r\n    replaceContext = (modifier: StateReplacer) => this.setState(modifier);\r\n\r\n    updateContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            modifier(state);\r\n            return state;\r\n        });\r\n\r\n    updateGameContext = (modifier: StateUpdater) =>\r\n        this.replaceContext((state) => {\r\n            state.game.timemachine.modified = false;\r\n            const previous = BusinessModel.copy(state);\r\n            modifier(state);\r\n            if (state.game.timemachine.modified) {\r\n                state.game.timemachine.pushPreviousState(previous);\r\n                return state;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n    render = () => {\r\n        const context = {\r\n            state: this.state.withHandlers().withSuggestions(),\r\n            replaceContext: this.replaceContext,\r\n            updateContext: this.updateContext,\r\n            updateGameContext: this.updateGameContext,\r\n            restart: this.props.restart,\r\n        };\r\n        return (\r\n            <Provider value={context}>\r\n                <Board />\r\n            </Provider>\r\n        );\r\n    };\r\n}\r\n","const DifficultyOptions = [\r\n    {\r\n        id: 0,\r\n        settings: { drawMode: \"single\", recyclingMode: \"infinite\" },\r\n        icon: \"🐭\",\r\n        lines: [\"Turn 1 card at once.\", \"No limit on passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 1,\r\n        settings: { drawMode: \"single\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐹\",\r\n        lines: [\"Turn 1 card at once.\", \"Three passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 2,\r\n        settings: { drawMode: \"single\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐰\",\r\n        lines: [\"Turn 1 card at once.\", \"Only a single pass\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 3,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"infinite\" },\r\n        icon: \"🐨\",\r\n        lines: [\"Turn 3 cards at once\", \"No limit on passes\", \"through the deck\"],\r\n    },\r\n    {\r\n        id: 4,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"3-pass\" },\r\n        icon: \"🐼\",\r\n        lines: [\"Turn 3 cards at once.\", \"Three passes\", \"through the deck.\"],\r\n    },\r\n    {\r\n        id: 5,\r\n        settings: { drawMode: \"triple\", recyclingMode: \"1-pass\" },\r\n        icon: \"🐻\",\r\n        lines: [\"Turn 3 cards at once.\", \"Only a single pass\", \"through the deck.\"],\r\n    },\r\n];\r\n\r\nexport default DifficultyOptions;\r\n","import React from \"react\";\r\nimport { StartScreenState } from \"../../../Common\";\r\n\r\nexport interface IStartScreenContext {\r\n    state: StartScreenState;\r\n    setState: (s: StartScreenState) => void;\r\n}\r\n\r\nconst StartScreenContext = React.createContext<IStartScreenContext>({\r\n    state: {\r\n        difficultySettings: 0,\r\n        ratingPreset: 0,\r\n        ratingSettings: {},\r\n        isTouch: false,\r\n    },\r\n    setState: () => {},\r\n});\r\n\r\nexport const Provider = StartScreenContext.Provider;\r\nexport default StartScreenContext;\r\n","import DifficultyOptions from \"./DifficultyOptions\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst Difficulty = () => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    const updateDifficulty = (settings: number) => setState({ ...state, difficultySettings: settings });\r\n    const getButtonClass = (index: number) => (state.difficultySettings == index ? `active active-${index}` : `inactive-${index}`);\r\n    return (\r\n        <div className=\"ui center quickstart\">\r\n            <div className=\"title\">Difficulty</div>\r\n            <div className=\"content\">\r\n                <div className=\"left\">\r\n                    {DifficultyOptions.slice(0, 3).map((option) => (\r\n                        <button key={option.id} className={getButtonClass(option.id)} onClick={() => updateDifficulty(option.id)}>\r\n                            {option.icon}\r\n                            {option.lines.map((line, i) => (\r\n                                <div key={i}>{line}</div>\r\n                            ))}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {DifficultyOptions.slice(3).map((option) => (\r\n                        <button key={option.id} className={getButtonClass(option.id)} onClick={() => updateDifficulty(option.id)}>\r\n                            {option.icon}\r\n                            {option.lines.map((line, i) => (\r\n                                <div key={i}>{line}</div>\r\n                            ))}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Difficulty;\r\n","import React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst QuickStart = (props: { start: () => void }) => {\r\n    const { state, setState } = React.useContext(StartScreenContext);\r\n    return (\r\n        <div className=\"ui right quickstart\">\r\n            <div className=\"title\">Quickstart</div>\r\n            <div className=\"content center\">\r\n                <div>\r\n                    <button\r\n                        disabled={!state.isTouch}\r\n                        className={!state.isTouch ? \"active active-0\" : `inactive-0`}\r\n                        onClick={() => setState({ ...state, isTouch: false })}\r\n                    >\r\n                        🖥️\r\n                        <div>{!state.isTouch ? \"Optimized\" : \"Optimize\"} for Desktop</div>\r\n                        <div>with Mouse Support</div>\r\n                    </button>\r\n                    <button\r\n                        disabled={state.isTouch}\r\n                        className={state.isTouch ? \"active active-0\" : \"inactive-0\"}\r\n                        onClick={() => setState({ ...state, isTouch: true })}\r\n                    >\r\n                        📱\r\n                        <div>{state.isTouch ? \"Optimized\" : \"Optimize\"} for Mobile</div>\r\n                        <div>with Touch Support</div>\r\n                    </button>\r\n                    <button className=\"blinking\" onClick={props.start}>\r\n                        🎲\r\n                        <div>Start</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default QuickStart;\r\n","export default class RatingPresets {\r\n    static all = [\r\n        {\r\n            id: 0,\r\n            icon: \"🌴\",\r\n            label: \"Chill\",\r\n            settings: {\r\n                timedMode: false,\r\n                missPenalty: false,\r\n                undoPenalty: false,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 1,\r\n            icon: \"⚖️\",\r\n            label: \"Regular\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: false,\r\n                undoPenalty: true,\r\n                hintPenalty: false,\r\n            },\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: \"🏆\",\r\n            label: \"Competitive\",\r\n            settings: {\r\n                timedMode: true,\r\n                missPenalty: true,\r\n                undoPenalty: true,\r\n                hintPenalty: true,\r\n            },\r\n        },\r\n    ];\r\n    static matchPreset = (settings: any) => {\r\n        const filterd = RatingPresets.all.filter((preset) => RatingPresets.equals(preset.settings, settings));\r\n        if (filterd.length > 0) {\r\n            return filterd[0].id;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    static equals = (s1: any, s2: any) =>\r\n        s1.timedMode === s2.timedMode &&\r\n        s1.missPenalty === s2.missPenalty &&\r\n        s1.undoPenalty === s2.undoPenalty &&\r\n        s1.hintPenalty === s2.hintPenalty;\r\n}\r\n","import RatingPresets from \"./RatingOptions\";\r\nimport { RatingSettings } from \"../../../Common\";\r\nimport React from \"react\";\r\nimport StartScreenContext from \"./Context\";\r\n\r\nconst Rating = () => {\r\n    const ctx = React.useContext(StartScreenContext);\r\n    const context = ctx.state;\r\n    const setContext = ctx.setState;\r\n    const [toggle, setToggle] = React.useState<boolean>(false);\r\n\r\n    const applyPreset = (id: number) => setContext({ ...context, ratingSettings: { ...RatingPresets.all[id].settings }, ratingPreset: id });\r\n    const getButtonClass = (index: number) => (context.ratingPreset == index ? `active active-${index}` : `inactive-${index}`);\r\n\r\n    const customizeRating = (modifier: (context: RatingSettings) => void) => {\r\n        const next = { ...context };\r\n        modifier(next.ratingSettings);\r\n        next.ratingPreset = RatingPresets.matchPreset(next.ratingSettings);\r\n        setContext(next);\r\n    };\r\n    const setMissPenalty = (value: string) => customizeRating((r) => (r.missPenalty = value == \"true\"));\r\n    const setTimeRating = (value: string) => customizeRating((r) => (r.timedMode = value == \"true\"));\r\n    const setUndoPenalty = (value: string) => customizeRating((r) => (r.undoPenalty = value == \"true\"));\r\n    const setHintPenalty = (value: string) => customizeRating((r) => (r.hintPenalty = value == \"true\"));\r\n\r\n    return (\r\n        <div className=\"ui left quickstart\">\r\n            <div className=\"closer\">\r\n                <button onClick={() => setToggle(!toggle)}>{toggle ? \"🗙\" : \"☰\"}</button>\r\n            </div>\r\n            <div className=\"title\">{toggle ? \"Customize Rating\" : \"Rating\"}</div>\r\n            {toggle ? (\r\n                <div className=\"content\">\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Undo Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">\r\n                                Should there be a penalty for the UNDO operation? This penalty increases exponentially.\r\n                            </div>\r\n                            <select onChange={(e) => setUndoPenalty(e.target.value)} value={String(!!context.ratingSettings.undoPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Time Rating</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">\r\n                                Should the performance be part of the final rating, according to the rules described{\" \"}\r\n                                <a href=\"https://en.wikipedia.org/wiki/Klondike_(solitaire)#Scoring\" rel=\"noreferrer\" target=\"_blank\">\r\n                                    here\r\n                                </a>\r\n                                ?\r\n                            </div>\r\n                            <select onChange={(e) => setTimeRating(e.target.value)} value={String(!!context.ratingSettings.timedMode)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Hint Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should there be a penalty for the HINT operation? This penalty does not increase.</div>\r\n                            <select onChange={(e) => setHintPenalty(e.target.value)} value={String(!!context.ratingSettings.hintPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"title\">Miss Penalty</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Should there be a penalty for attempting to perform invalid actions?</div>\r\n                            <select onChange={(e) => setMissPenalty(e.target.value)} value={String(!!context.ratingSettings.missPenalty)}>\r\n                                <option value={\"true\"}>yes</option>\r\n                                <option value={\"false\"}>no</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"content center\">\r\n                    <div>\r\n                        {RatingPresets.all.map((preset) => (\r\n                            <button className={getButtonClass(preset.id)} key={preset.id} onClick={() => applyPreset(preset.id)}>\r\n                                {preset.icon}\r\n                                <div>{preset.label}</div>\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","const TouchDetector = ()  => {\r\n    try {\r\n        const prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\r\n\r\n        const mq = (query) => window.matchMedia(query).matches;\r\n\r\n        if (\"ontouchstart\" in window || (typeof window.DocumentTouch !== \"undefined\" && document instanceof window.DocumentTouch)) {\r\n            return true;\r\n        }\r\n\r\n        return mq([\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\"));\r\n    } catch (e) {\r\n        console.error(\"(Touch detect failed)\", e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default TouchDetector;","import \"../../Style/Screens.scss\";\r\nimport \"../../Style/Menu.css\";\r\n\r\nimport { AppState, StartScreenState } from \"../../../Common\";\r\n\r\nimport Difficulty from \"./Difficulty\";\r\nimport DifficultyOptions from \"./DifficultyOptions\";\r\nimport { Provider } from \"./Context\";\r\nimport QuickStart from \"./QuickStart\";\r\nimport Rating from \"./Rating\";\r\nimport RatingPresets from \"./RatingOptions\";\r\nimport React from \"react\";\r\nimport TouchDetector from \"./TouchDetector\";\r\n\r\ninterface StartScreenProps {\r\n    start: (settings: AppState) => void;\r\n}\r\n\r\nconst StartScreen = (props: StartScreenProps) => {\r\n    const start = () => {\r\n        const settings = {\r\n            ...DifficultyOptions[state.difficultySettings].settings,\r\n            ...state.ratingSettings,\r\n            isTouch: state.isTouch,\r\n        };\r\n        props.start(settings);\r\n    };\r\n    const [state, setState] = React.useState<StartScreenState>({\r\n        ratingSettings: { ...RatingPresets.all[1].settings },\r\n        difficultySettings: 1,\r\n        ratingPreset: 1,\r\n        isTouch: TouchDetector(),\r\n    });\r\n    return !props || !props.start ? null : (\r\n        <Provider value={{ state, setState }}>\r\n            <div>\r\n                <Rating />\r\n                <Difficulty />\r\n                <QuickStart start={start} />\r\n            </div>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default StartScreen;\r\n","import \"./View/Style/App.css\";\r\nimport \"./View/Style/UI.css\";\r\n\r\nimport { AppState } from \"./Common\";\r\nimport BoardWrap from \"./View/Game/BoardWrap\";\r\nimport React from \"react\";\r\nimport StartScreen from \"./View/UI/StartScreen/StartScreen\";\r\n\r\nconst App = () => {\r\n    const [appState, setAppState] = React.useState<AppState>({});\r\n    //@todo add parent for keyboard navigation\r\n    const start = (settings: AppState) =>\r\n        setAppState({\r\n            ...settings,\r\n            initialized: true,\r\n        });\r\n    const restart = () => setAppState({});\r\n    return !appState.initialized ? <StartScreen start={start} /> : <BoardWrap settings={appState} restart={restart} />;\r\n};\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}